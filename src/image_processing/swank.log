[---Sent---] 5.28
(:emacs-rex (swank:connection-info) nil t 1)

[-Received-] 5.5
(:indentation-update (("dothread-keeping-clj" . 1) ("dothread-keeping" . 1) ("dothread" . 0) ("binding-map" . 1) ("with-pretty-writer" . 1) ("with-pprint-dispatch" . 1) ("with-connection" . 1) ("with-timeout" . 1) ("with-bindings" . 0) ("with-data" . 1) ("with-emacs-package" . 0) ("dothread-swank" . 0) ("with-package-tracking" . 0) ("doseq" . 1) ("letfn" . 1) ("cond" . 0) ("with-open" . 1) ("sync" . 1) ("let" . 1) ("dotimes" . 1) ("with-in-str" . 1) ("loop" . 1) ("with-out-str" . 0) ("when-not" . 1) ("with-loading-context" . 0) ("future" . 0) ("when-first" . 1) ("comment" . 0) ("condp" . 2) ("with-local-vars" . 1) ("with-bindings" . 1) ("when-let" . 1) ("while" . 1) ("case" . 1) ("locking" . 1) ("delay" . 0) ("io!" . 0) ("lazy-seq" . 0) ("when" . 1) ("binding" . 1) ("defslimefn" . defun) ("returning" . 1) ("continuously" . 0) ("failing-gracefully" . 0)))
[-Received-] 5.51
(:return (:ok (:pid "4610" :style :spawn :lisp-implementation (:type "Clojure" :name "clojure" :version "1.2.0-beta1") :package (:name "user" :prompt "user") :version "20100404")) 1)
[Actionlist] 5.51
1: finished :connection-info 
params: [':pid', '"4610"', ':style', ':spawn', ':lisp-implementation', [':type', '"Clojure"', ':name', '"clojure"', ':version', '"1.2.0-beta1"'], ':package', [':name', '"user"', ':prompt', '"user"'], ':version', '"20100404"']
 Package:user Prompt:user
[---Sent---] 5.57
(:emacs-rex (swank:create-repl nil) "user" t 2)

[-Received-] 5.58
(:return (:ok ("user" "user")) 2)
[Actionlist] 5.58
2: finished :create-repl 
params: ['"user"', '"user"']
[---Sent---] 5.58
(:emacs-rex (swank:swank-require 'swank-fuzzy) nil t 3)

[---Sent---] 5.59
(:emacs-rex (swank:listener-eval "(use '[clojure.repl :only (source apropos)])
(use '[clojure.java.javadoc :only (javadoc)])
(use '[clojure.pprint :only (pp pprint)])
") "user" :repl-thread 4)

[-Received-] 5.6
(:return (:ok nil) 3)
[Actionlist] 5.6
3: finished :swank-require 
4: pending  :listener-eval 
params: nil
[-Received-] 5.66
(:write-string "nil
" :repl-result)
[-Received-] 5.66
(:return (:ok nil) 4)
[Actionlist] 5.66
4: finished :listener-eval 
params: nil
[---Sent---] 6.83
(:emacs-rex (swank:operator-arglist ":arglists" "image-processing.core") "image-processing.core" t 5)

[-Received-] 6.84
(:return (:ok "([map])") 5)
[Actionlist] 6.84
5: finished :operator-arglist 
params: "([map])"
[---Sent---] 6.84
(:emacs-rex (swank:describe-function ":arglists") "image-processing.core" t 6)

[-Received-] 6.84
(:return (:ok "Unknown symbol :arglists") 6)
[Actionlist] 6.84
6: finished :describe-function 
params: "Unknown symbol :arglists"
[---Sent---] 7.38
(:emacs-rex (swank:operator-arglist "img" "image-processing.core") "image-processing.core" t 7)

[-Received-] 7.39
(:return (:ok nil) 7)
[Actionlist] 7.39
7: finished :operator-arglist 
params: nil
[---Sent---] 9.11
(:emacs-rex (swank:operator-arglist "for" "image-processing.core") "image-processing.core" t 8)

[-Received-] 9.12
(:return (:ok "([seq-exprs body-expr])") 8)
[Actionlist] 9.12
8: finished :operator-arglist 
params: "([seq-exprs body-expr])"
[---Sent---] 9.29
(:emacs-rex (swank:operator-arglist "for" "image-processing.core") "image-processing.core" t 9)

[-Received-] 9.3
(:return (:ok "([seq-exprs body-expr])") 9)
[Actionlist] 9.3
9: finished :operator-arglist 
params: "([seq-exprs body-expr])"
[---Sent---] 9.33
(:emacs-rex (swank:operator-arglist "for" "image-processing.core") "image-processing.core" t 10)

[-Received-] 9.36
(:return (:ok "([seq-exprs body-expr])") 10)
[Actionlist] 9.36
10: finished :operator-arglist 
params: "([seq-exprs body-expr])"
[---Sent---] 9.4
(:emacs-rex (swank:operator-arglist "range" "image-processing.core") "image-processing.core" t 11)

[-Received-] 9.41
(:return (:ok "([] [end] [start end] [start end step])") 11)
[Actionlist] 9.41
11: finished :operator-arglist 
params: "([] [end] [start end] [start end step])"
[---Sent---] 9.45
(:emacs-rex (swank:operator-arglist "range" "image-processing.core") "image-processing.core" t 12)

[-Received-] 9.45
(:return (:ok "([] [end] [start end] [start end step])") 12)
[Actionlist] 9.45
12: finished :operator-arglist 
params: "([] [end] [start end] [start end step])"
[---Sent---] 9.47
(:emacs-rex (swank:operator-arglist "range" "image-processing.core") "image-processing.core" t 13)

[-Received-] 9.48
(:return (:ok "([] [end] [start end] [start end step])") 13)
[Actionlist] 9.48
13: finished :operator-arglist 
params: "([] [end] [start end] [start end step])"
[---Sent---] 9.58
(:emacs-rex (swank:listener-eval "(for [x (range 2 4 1)])
") "image-processing.core" :repl-thread 14)

[-Received-] 9.59
(:debug 2 1 ("Wrong number of args (3) passed to: core$for" "  [Thrown class java.lang.IllegalArgumentException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "clojure.lang.AFn.throwArity(AFn.java:439)" (:restartable nil)) (1 "clojure.lang.AFn.invoke(AFn.java:47)" (:restartable nil)) (2 "clojure.lang.Var.invoke(Var.java:373)" (:restartable nil)) (3 "clojure.lang.AFn.applyToHelper(AFn.java:169)" (:restartable nil)) (4 "clojure.lang.Var.applyTo(Var.java:482)" (:restartable nil)) (5 "clojure.lang.Compiler.macroexpand1(Compiler.java:5281)" (:restartable nil)) (6 "clojure.lang.Compiler.macroexpand(Compiler.java:5336)" (:restartable nil)) (7 "clojure.lang.Compiler.eval(Compiler.java:5404)" (:restartable nil)) (8 "clojure.lang.Compiler.eval(Compiler.java:5386)" (:restartable nil)) (9 "clojure.core$eval.invoke(core.clj:2382)" (:restartable nil))) (nil))
[-Received-] 9.61
(:debug-activate 2 1 nil)
[---Sent---] 9.68
(:emacs-rex (swank:throw-to-toplevel) nil 2 15)

[-Received-] 9.68
(:return (:abort) 15)
[Actionlist] 9.68
14: pending  :listener-eval 
15: finished :throw-to-toplevel 
[-Received-] 9.68
(:debug-return 2 1 nil)
[-Received-] 9.68
(:return (:abort) 14)
[Actionlist] 9.69
14: finished :listener-eval 
15: finished :throw-to-toplevel 
[---Sent---] 9.97
(:emacs-rex (swank:operator-arglist "for" "user") "user" t 16)

[-Received-] 9.99
(:return (:ok "([seq-exprs body-expr])") 16)
[Actionlist] 9.99
16: finished :operator-arglist 
params: "([seq-exprs body-expr])"
[---Sent---] 10.05
(:emacs-rex (swank:operator-arglist "range" "user") "user" t 17)

[-Received-] 10.06
(:return (:ok "([] [end] [start end] [start end step])") 17)
[Actionlist] 10.06
17: finished :operator-arglist 
params: "([] [end] [start end] [start end step])"
[---Sent---] 10.09
(:emacs-rex (swank:operator-arglist "range" "user") "user" t 18)

[-Received-] 10.11
(:return (:ok "([] [end] [start end] [start end step])") 18)
[Actionlist] 10.11
18: finished :operator-arglist 
params: "([] [end] [start end] [start end step])"
[---Sent---] 10.13
(:emacs-rex (swank:operator-arglist "range" "user") "user" t 19)

[-Received-] 10.14
(:return (:ok "([] [end] [start end] [start end step])") 19)
[Actionlist] 10.14
19: finished :operator-arglist 
params: "([] [end] [start end] [start end step])"
[---Sent---] 10.23
(:emacs-rex (swank:operator-arglist "for" "user") "user" t 20)

[-Received-] 10.23
(:return (:ok "([seq-exprs body-expr])") 20)
[Actionlist] 10.23
20: finished :operator-arglist 
params: "([seq-exprs body-expr])"
[---Sent---] 10.31
(:emacs-rex (swank:listener-eval "(for [x (range 2 4 1) y (range 10 20 5)] [x y])
") "user" :repl-thread 21)

[-Received-] 10.4
(:write-string "([2 10] [2 15] [3 10] [3 15])
" :repl-result)
[-Received-] 10.4
(:return (:ok nil) 21)
[Actionlist] 10.4
21: finished :listener-eval 
params: nil
[---Sent---] 10.7
(:emacs-rex (swank:operator-arglist "for" "image-processing.core") "image-processing.core" t 22)

[-Received-] 10.7
(:return (:ok "([seq-exprs body-expr])") 22)
[Actionlist] 10.71
22: finished :operator-arglist 
params: "([seq-exprs body-expr])"
[---Sent---] 10.89
(:emacs-rex (swank:operator-arglist "range" "image-processing.core") "image-processing.core" t 23)

[-Received-] 10.9
(:return (:ok "([] [end] [start end] [start end step])") 23)
[Actionlist] 10.9
23: finished :operator-arglist 
params: "([] [end] [start end] [start end step])"
[---Sent---] 11.19
(:emacs-rex (swank:fuzzy-completions ".getHei" "image-processing.core" :limit 200 :time-limit-in-msec 2000) nil t 24)

[-Received-] 11.25
(:return (:ok ((nil) nil)) 24)
[Actionlist] 11.25
24: finished :fuzzy-completions 
params: [['nil'], 'nil']
[---Sent---] 11.6
(:emacs-rex (swank:operator-arglist "getHeight" "image-processing.core") "image-processing.core" t 25)

[-Received-] 11.61
(:return (:ok nil) 25)
[Actionlist] 11.61
25: finished :operator-arglist 
params: nil
[---Sent---] 11.92
(:emacs-rex (swank:operator-arglist "x" "image-processing.core") "image-processing.core" t 26)

[-Received-] 11.94
(:return (:ok nil) 26)
[Actionlist] 11.94
26: finished :operator-arglist 
params: nil
[---Sent---] 12.11
(:emacs-rex (swank:operator-arglist "range" "image-processing.core") "image-processing.core" t 27)

[-Received-] 12.13
(:return (:ok "([] [end] [start end] [start end step])") 27)
[Actionlist] 12.13
27: finished :operator-arglist 
params: "([] [end] [start end] [start end step])"
[---Sent---] 12.41
(:emacs-rex (swank:operator-arglist "getWidth" "image-processing.core") "image-processing.core" t 28)

[-Received-] 12.44
(:return (:ok nil) 28)
[Actionlist] 12.44
28: finished :operator-arglist 
params: nil
[---Sent---] 12.74
(:emacs-rex (swank:operator-arglist "x" "image-processing.core") "image-processing.core" t 29)

[-Received-] 12.76
(:return (:ok nil) 29)
[Actionlist] 12.76
29: finished :operator-arglist 
params: nil
[---Sent---] 12.94
(:emacs-rex (swank:operator-arglist "Get" "image-processing.core") "image-processing.core" t 30)

[-Received-] 12.95
(:return (:ok nil) 30)
[Actionlist] 12.95
30: finished :operator-arglist 
params: nil
[---Sent---] 13.1
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 31)

[-Received-] 13.13
(:return (:ok nil) 31)
[Actionlist] 13.13
31: finished :operator-arglist 
params: nil
[---Sent---] 13.15
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 32)

[-Received-] 13.18
(:return (:ok nil) 32)
[Actionlist] 13.18
32: finished :operator-arglist 
params: nil
[---Sent---] 13.27
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 33)

[-Received-] 13.29
(:return (:ok nil) 33)
[Actionlist] 13.29
33: finished :operator-arglist 
params: nil
[---Sent---] 13.35
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 34)

[-Received-] 13.37
(:return (:ok nil) 34)
[Actionlist] 13.37
34: finished :operator-arglist 
params: nil
[---Sent---] 13.47
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 35)

[-Received-] 13.49
(:return (:ok nil) 35)
[Actionlist] 13.49
35: finished :operator-arglist 
params: nil
[---Sent---] 13.53
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 36)

[-Received-] 13.54
(:return (:ok nil) 36)
[Actionlist] 13.54
36: finished :operator-arglist 
params: nil
[---Sent---] 13.67
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 37)

[-Received-] 13.68
(:return (:ok nil) 37)
[Actionlist] 13.68
37: finished :operator-arglist 
params: nil
[---Sent---] 13.72
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 38)

[-Received-] 13.72
(:return (:ok nil) 38)
[Actionlist] 13.72
38: finished :operator-arglist 
params: nil
[---Sent---] 13.76
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 39)

[-Received-] 13.78
(:return (:ok nil) 39)
[Actionlist] 13.78
39: finished :operator-arglist 
params: nil
[---Sent---] 13.99
(:emacs-rex (swank:listener-eval "(defn get-img-coords
  \"Returns a sequence of all coordinates of the image.\"
  #^{:arglists [img]}
  [img]
  (for [y (range (.getHeight img))
        x (range (.getWidth img))]
       [x y]))
") "image-processing.core" :repl-thread 40)

[-Received-] 14.01
(:write-string "#'user/get-img-coords
" :repl-result)
[-Received-] 14.01
(:return (:ok nil) 40)
[Actionlist] 14.01
40: finished :listener-eval 
params: nil
[---Sent---] 14.16
(:emacs-rex (swank:operator-arglist "doc" "user") "user" t 41)

[-Received-] 14.16
(:return (:ok "([name])") 41)
[Actionlist] 14.16
41: finished :operator-arglist 
params: "([name])"
[---Sent---] 14.22
(:emacs-rex (swank:fuzzy-completions "get" "user" :limit 200 :time-limit-in-msec 2000) nil t 42)

[-Received-] 14.29
(:return (:ok ((("get" "39.39" ((0 "get")) "-f------") ("get-in" "31.88" ((0 "get")) "-f------") ("get-method" "30.63" ((0 "get")) "-f------") ("get-validator" "30.29" ((0 "get")) "-f------") ("get-img-coords" "30.22" ((0 "get")) "-f------") ("get-proxy-class" "30.15" ((0 "get")) "-f------") ("get-thread-bindings" "29.97" ((0 "get")) "-f------") ("var-get" "26.24" ((4 "get")) "-f------") ("gen-interface" "21.61" ((0 "ge") (6 "t")) "-f---m--") ("aget" "14.05" ((1 "get")) "-f------") ("agent" "12.38" ((1 "ge") (4 "t")) "-f------") ("*agent*" "11.05" ((2 "ge") (5 "t")) "b-------") ("restart-agent" "9.96" ((9 "ge") (12 "t")) "-f------") ("with-loading-context" "8.56" ((11 "g") (17 "e") (19 "t")) "-f---m--") ("merge-with" "5.30" ((3 "ge") (8 "t")) "-f------") ("agent-error" "5.16" ((1 "ge") (4 "t")) "-f------") ("agent-errors" "5.05" ((1 "ge") (4 "t")) "-f------") ("shutdown-agents" "4.82" ((10 "ge") (13 "t")) "-f------") ("clear-agent-errors" "4.68" ((7 "ge") (10 "t")) "-f------") ("leiningen.util.injected/" "4.53" ((6 "ge") (11 "t")) "b------p") ("IllegalStateException/" "3.53" ((4 "g") (11 "e") (17 "t")) "b-------") ("IllegalAccessException/" "3.50" ((4 "g") (10 "e") (18 "t")) "b-------") ("IllegalArgumentException/" "3.45" ((4 "g") (12 "e") (14 "t")) "b-------") ("NegativeArraySizeException/" "3.42" ((2 "g") (7 "e") (22 "t")) "b-------") ("IllegalThreadStateException/" "3.40" ((4 "g") (10 "e") (14 "t")) "b-------") ("IllegalMonitorStateException/" "3.38" ((4 "g") (18 "e") (24 "t")) "b-------") ("StringIndexOutOfBoundsException/" "3.34" ((5 "g") (9 "e") (13 "t")) "b-------") ("Thread$UncaughtExceptionHandler/" "3.34" ((12 "g") (15 "e") (20 "t")) "b-------")) nil)) 42)
[Actionlist] 14.3
42: finished :fuzzy-completions 
params: [[['"get"', '"39.39"', [['0', '"get"']], '"-f------"'], ['"get-in"', '"31.88"', [['0', '"get"']], '"-f------"'], ['"get-method"', '"30.63"', [['0', '"get"']], '"-f------"'], ['"get-validator"', '"30.29"', [['0', '"get"']], '"-f------"'], ['"get-img-coords"', '"30.22"', [['0', '"get"']], '"-f------"'], ['"get-proxy-class"', '"30.15"', [['0', '"get"']], '"-f------"'], ['"get-thread-bindings"', '"29.97"', [['0', '"get"']], '"-f------"'], ['"var-get"', '"26.24"', [['4', '"get"']], '"-f------"'], ['"gen-interface"', '"21.61"', [['0', '"ge"'], ['6', '"t"']], '"-f---m--"'], ['"aget"', '"14.05"', [['1', '"get"']], '"-f------"'], ['"agent"', '"12.38"', [['1', '"ge"'], ['4', '"t"']], '"-f------"'], ['"*agent*"', '"11.05"', [['2', '"ge"'], ['5', '"t"']], '"b-------"'], ['"restart-agent"', '"9.96"', [['9', '"ge"'], ['12', '"t"']], '"-f------"'], ['"with-loading-context"', '"8.56"', [['11', '"g"'], ['17', '"e"'], ['19', '"t"']], '"-f---m--"'], ['"merge-with"', '"5.30"', [['3', '"ge"'], ['8', '"t"']], '"-f------"'], ['"agent-error"', '"5.16"', [['1', '"ge"'], ['4', '"t"']], '"-f------"'], ['"agent-errors"', '"5.05"', [['1', '"ge"'], ['4', '"t"']], '"-f------"'], ['"shutdown-agents"', '"4.82"', [['10', '"ge"'], ['13', '"t"']], '"-f------"'], ['"clear-agent-errors"', '"4.68"', [['7', '"ge"'], ['10', '"t"']], '"-f------"'], ['"leiningen.util.injected/"', '"4.53"', [['6', '"ge"'], ['11', '"t"']], '"b------p"'], ['"IllegalStateException/"', '"3.53"', [['4', '"g"'], ['11', '"e"'], ['17', '"t"']], '"b-------"'], ['"IllegalAccessException/"', '"3.50"', [['4', '"g"'], ['10', '"e"'], ['18', '"t"']], '"b-------"'], ['"IllegalArgumentException/"', '"3.45"', [['4', '"g"'], ['12', '"e"'], ['14', '"t"']], '"b-------"'], ['"NegativeArraySizeException/"', '"3.42"', [['2', '"g"'], ['7', '"e"'], ['22', '"t"']], '"b-------"'], ['"IllegalThreadStateException/"', '"3.40"', [['4', '"g"'], ['10', '"e"'], ['14', '"t"']], '"b-------"'], ['"IllegalMonitorStateException/"', '"3.38"', [['4', '"g"'], ['18', '"e"'], ['24', '"t"']], '"b-------"'], ['"StringIndexOutOfBoundsException/"', '"3.34"', [['5', '"g"'], ['9', '"e"'], ['13', '"t"']], '"b-------"'], ['"Thread$UncaughtExceptionHandler/"', '"3.34"', [['12', '"g"'], ['15', '"e"'], ['20', '"t"']], '"b-------"']], 'nil']
[---Sent---] 14.38
(:emacs-rex (swank:fuzzy-completions "-im" "user" :limit 200 :time-limit-in-msec 2000) nil t 43)

[-Received-] 14.49
(:return (:ok ((("ns-imports" "18.49" ((2 "-im")) "-f------") ("get-img-coords" "18.07" ((3 "-im")) "-f------") ("find-protocol-impl" "17.87" ((13 "-im")) "-f------") ("swank.clj-contrib.macroexpand/" "10.37" ((9 "-") (15 "i") (18 "m")) "b------p") ("print-simple" "5.05" ((5 "-") (7 "im")) "-f------")) nil)) 43)
[Actionlist] 14.49
43: finished :fuzzy-completions 
params: [[['"ns-imports"', '"18.49"', [['2', '"-im"']], '"-f------"'], ['"get-img-coords"', '"18.07"', [['3', '"-im"']], '"-f------"'], ['"find-protocol-impl"', '"17.87"', [['13', '"-im"']], '"-f------"'], ['"swank.clj-contrib.macroexpand/"', '"10.37"', [['9', '"-"'], ['15', '"i"'], ['18', '"m"']], '"b------p"'], ['"print-simple"', '"5.05"', [['5', '"-"'], ['7', '"im"']], '"-f------"']], 'nil']
[---Sent---] 14.54
(:emacs-rex (swank:operator-arglist "doc" "user") "user" t 44)

[-Received-] 14.54
(:return (:ok "([name])") 44)
[Actionlist] 14.54
44: finished :operator-arglist 
params: "([name])"
[---Sent---] 14.64
(:emacs-rex (swank:fuzzy-completions "get-im" "user" :limit 200 :time-limit-in-msec 2000) nil t 45)

[-Received-] 14.71
(:return (:ok ((("get-img-coords" "62.44" ((0 "get-im")) "-f------")) nil)) 45)
[Actionlist] 14.72
45: finished :fuzzy-completions 
params: [[['"get-img-coords"', '"62.44"', [['0', '"get-im"']], '"-f------"']], 'nil']
[---Sent---] 14.76
(:emacs-rex (swank:listener-eval "(doc get-img-coords)
") "user" :repl-thread 46)

[-Received-] 14.79
(:write-string "-------------------------
")
[-Received-] 14.79
(:write-string "user/get-img-coords
")
[-Received-] 14.79
(:write-string "([img])
")
[-Received-] 14.79
(:write-string "  Returns a sequence of all coordinates of the image.
")
[-Received-] 14.79
(:write-string "nil
" :repl-result)
[-Received-] 14.79
(:return (:ok nil) 46)
[Actionlist] 14.79
46: finished :listener-eval 
params: nil
[---Sent---] 15.24
(:emacs-rex (swank:operator-arglist "reduce" "image-processing.core") "image-processing.core" t 47)

[-Received-] 15.24
(:return (:ok "([f coll] [f val coll])") 47)
[Actionlist] 15.24
47: finished :operator-arglist 
params: "([f coll] [f val coll])"
[---Sent---] 15.96
(:emacs-rex (swank:fuzzy-completions "get-img-coo" "image-processing.core" :limit 200 :time-limit-in-msec 2000) nil t 48)

[-Received-] 16.0
(:return (:ok ((("get-img-coords" "149.21" ((0 "get-img-coo")) "-f------")) nil)) 48)
[Actionlist] 16.0
48: finished :fuzzy-completions 
params: [[['"get-img-coords"', '"149.21"', [['0', '"get-img-coo"']], '"-f------"']], 'nil']
[---Sent---] 16.03
(:emacs-rex (swank:operator-arglist "get-img-coords" "image-processing.core") "image-processing.core" t 49)

[-Received-] 16.04
(:return (:ok "([img])") 49)
[Actionlist] 16.04
49: finished :operator-arglist 
params: "([img])"
[---Sent---] 16.81
(:emacs-rex (swank:operator-arglist "#^" "image-processing.core") "image-processing.core" t 50)

[-Received-] 16.83
(:return (:ok nil) 50)
[Actionlist] 16.83
50: finished :operator-arglist 
params: nil
[---Sent---] 17.18
(:emacs-rex (swank:operator-arglist "doc" "image-processing.core") "image-processing.core" t 51)

[-Received-] 17.2
(:return (:ok "([name])") 51)
[Actionlist] 17.2
51: finished :operator-arglist 
params: "([name])"
[---Sent---] 17.31
(:emacs-rex (swank:listener-eval "(doc mean)
") "image-processing.core" :repl-thread 52)

[-Received-] 17.34
(:debug 2 1 ("Unable to resolve var: mean in this context" "  [Thrown class java.lang.Exception]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "clojure.lang.Compiler$TheVarExpr$Parser.parse(Compiler.java:560)" (:restartable nil)) (1 "clojure.lang.Compiler.analyzeSeq(Compiler.java:5364)" (:restartable nil)) (2 "clojure.lang.Compiler.analyze(Compiler.java:5185)" (:restartable nil)) (3 "clojure.lang.Compiler.analyze(Compiler.java:5146)" (:restartable nil)) (4 "clojure.lang.Compiler$InvokeExpr.parse(Compiler.java:3052)" (:restartable nil)) (5 "clojure.lang.Compiler.analyzeSeq(Compiler.java:5366)" (:restartable nil)) (6 "clojure.lang.Compiler.analyze(Compiler.java:5185)" (:restartable nil)) (7 "clojure.lang.Compiler.analyze(Compiler.java:5146)" (:restartable nil)) (8 "clojure.lang.Compiler$BodyExpr$Parser.parse(Compiler.java:4665)" (:restartable nil)) (9 "clojure.lang.Compiler$FnMethod.parse(Compiler.java:4323)" (:restartable nil))) (nil))
[-Received-] 17.34
(:debug-activate 2 1 nil)
[---Sent---] 17.46
(:emacs-rex (swank:throw-to-toplevel) nil 2 53)

[-Received-] 17.47
(:return (:abort) 53)
[Actionlist] 17.47
52: pending  :listener-eval 
53: finished :throw-to-toplevel 
[-Received-] 17.47
(:debug-return 2 1 nil)
[-Received-] 17.47
(:return (:abort) 52)
[Actionlist] 17.47
52: finished :listener-eval 
53: finished :throw-to-toplevel 
[---Sent---] 17.79
(:emacs-rex (swank:listener-eval "(ns image-processing.core
    (:import
      (java.lang Math)
      (javax.imageio ImageIO)
      (java.io File)
      (java.awt.image BufferedImage))
    (:use (incanter core charts stats)))
") "image-processing.core" :repl-thread 54)

[-Received-] 17.79
(:write-string "nil
" :repl-result)
[-Received-] 17.85
(:new-package "image-processing.core" "image-processing.core")
[-Received-] 17.85
(:indentation-update (("with-bindings" . 0)))
[-Received-] 17.85
(:return (:ok nil) 54)
[Actionlist] 17.85
54: finished :listener-eval 
params: nil
[---Sent---] 18.0
(:emacs-rex (swank:listener-eval "(doc mean)
") "image-processing.core" :repl-thread 55)

[-Received-] 18.03
(:write-string "-------------------------
")
[-Received-] 18.03
(:write-string "incanter.stats/mean
")
[-Received-] 18.03
(:write-string "([x])
")
[-Received-] 18.03
(:write-string "  
  Returns the mean of the data, x.

  Examples:
    (mean (sample-normal 100))

  References:
    http://incanter.org/docs/parallelcolt/api/cern/jet/stat/tdouble/DoubleDescriptive.html
    http://en.wikipedia.org/wiki/Mean


")
[-Received-] 18.03
(:write-string "nil
" :repl-result)
[-Received-] 18.03
(:return (:ok nil) 55)
[Actionlist] 18.03
55: finished :listener-eval 
params: nil
[---Sent---] 19.7
(:emacs-rex (swank:operator-arglist "conj" "image-processing.core") "image-processing.core" t 56)

[-Received-] 19.7
(:return (:ok "([coll x] [coll x & xs])") 56)
[Actionlist] 19.7
56: finished :operator-arglist 
params: "([coll x] [coll x & xs])"
[---Sent---] 19.83
(:emacs-rex (swank:operator-arglist "conj" "image-processing.core") "image-processing.core" t 57)

[-Received-] 19.83
(:return (:ok "([coll x] [coll x & xs])") 57)
[Actionlist] 19.83
57: finished :operator-arglist 
params: "([coll x] [coll x & xs])"
[---Sent---] 20.07
(:emacs-rex (swank:operator-arglist "mean" "image-processing.core") "image-processing.core" t 58)

[-Received-] 20.08
(:return (:ok "([x])") 58)
[Actionlist] 20.08
58: finished :operator-arglist 
params: "([x])"
[---Sent---] 20.39
(:emacs-rex (swank:operator-arglist "get-argb" "image-processing.core") "image-processing.core" t 59)

[-Received-] 20.41
(:return (:ok nil) 59)
[Actionlist] 20.41
59: finished :operator-arglist 
params: nil
[---Sent---] 20.51
(:emacs-rex (swank:operator-arglist "get-argb" "image-processing.core") "image-processing.core" t 60)

[-Received-] 20.51
(:return (:ok nil) 60)
[Actionlist] 20.51
60: finished :operator-arglist 
params: nil
[---Sent---] 20.97
(:emacs-rex (swank:operator-arglist "rest" "image-processing.core") "image-processing.core" t 61)

[-Received-] 20.97
(:return (:ok "([coll])") 61)
[Actionlist] 20.97
61: finished :operator-arglist 
params: "([coll])"
[---Sent---] 21.0
(:emacs-rex (swank:operator-arglist "rest" "image-processing.core") "image-processing.core" t 62)

[-Received-] 21.0
(:return (:ok "([coll])") 62)
[Actionlist] 21.0
62: finished :operator-arglist 
params: "([coll])"
[---Sent---] 21.04
(:emacs-rex (swank:operator-arglist "rest" "image-processing.core") "image-processing.core" t 63)

[-Received-] 21.04
(:return (:ok "([coll])") 63)
[Actionlist] 21.04
63: finished :operator-arglist 
params: "([coll])"
[---Sent---] 21.1
(:emacs-rex (swank:listener-eval "(rest [1 2 3]) 
") "image-processing.core" :repl-thread 64)

[-Received-] 21.1
(:write-string "(2 3)
" :repl-result)
[-Received-] 21.16
(:return (:ok nil) 64)
[Actionlist] 21.16
64: finished :listener-eval 
params: nil
[---Sent---] 21.39
(:emacs-rex (swank:listener-eval "(mean (rest [1 2 3])) 
") "image-processing.core" :repl-thread 65)

[-Received-] 21.43
(:write-string "2.5
" :repl-result)
[-Received-] 21.43
(:return (:ok nil) 65)
[Actionlist] 21.43
65: finished :listener-eval 
params: nil
[---Sent---] 22.13
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 66)

[-Received-] 22.13
(:return (:ok nil) 66)
[Actionlist] 22.13
66: finished :operator-arglist 
params: nil
[---Sent---] 22.16
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 67)

[-Received-] 22.17
(:return (:ok nil) 67)
[Actionlist] 22.17
67: finished :operator-arglist 
params: nil
[---Sent---] 22.24
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 68)

[-Received-] 22.24
(:return (:ok nil) 68)
[Actionlist] 22.24
68: finished :operator-arglist 
params: nil
[---Sent---] 22.29
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 69)

[-Received-] 22.3
(:return (:ok nil) 69)
[Actionlist] 22.3
69: finished :operator-arglist 
params: nil
[---Sent---] 22.39
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 70)

[-Received-] 22.39
(:return (:ok nil) 70)
[Actionlist] 22.39
70: finished :operator-arglist 
params: nil
[---Sent---] 22.43
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 71)

[-Received-] 22.44
(:return (:ok nil) 71)
[Actionlist] 22.44
71: finished :operator-arglist 
params: nil
[---Sent---] 22.55
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 72)

[-Received-] 22.55
(:return (:ok nil) 72)
[Actionlist] 22.55
72: finished :operator-arglist 
params: nil
[---Sent---] 22.62
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 73)

[-Received-] 22.63
(:return (:ok nil) 73)
[Actionlist] 22.63
73: finished :operator-arglist 
params: nil
[---Sent---] 22.66
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 74)

[-Received-] 22.67
(:return (:ok nil) 74)
[Actionlist] 22.67
74: finished :operator-arglist 
params: nil
[---Sent---] 22.7
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 75)

[-Received-] 22.7
(:return (:ok nil) 75)
[Actionlist] 22.71
75: finished :operator-arglist 
params: nil
[---Sent---] 22.76
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 76)

[-Received-] 22.76
(:return (:ok nil) 76)
[Actionlist] 22.76
76: finished :operator-arglist 
params: nil
[---Sent---] 22.85
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 77)

[-Received-] 22.85
(:return (:ok nil) 77)
[Actionlist] 22.85
77: finished :operator-arglist 
params: nil
[---Sent---] 23.69
(:emacs-rex (swank:operator-arglist "img" "image-processing.core") "image-processing.core" t 78)

[-Received-] 23.71
(:return (:ok nil) 78)
[Actionlist] 23.71
78: finished :operator-arglist 
params: nil
[---Sent---] 24.23
(:emacs-rex (swank:operator-arglist "reduce" "image-processing.core") "image-processing.core" t 79)

[-Received-] 24.23
(:return (:ok "([f coll] [f val coll])") 79)
[Actionlist] 24.23
79: finished :operator-arglist 
params: "([f coll] [f val coll])"
[---Sent---] 25.61
(:emacs-rex (swank:fuzzy-completions "get-gray" "image-processing.core" :limit 200 :time-limit-in-msec 2000) nil t 80)

[-Received-] 25.62
(:return (:ok ((nil) nil)) 80)
[Actionlist] 25.62
80: finished :fuzzy-completions 
params: [['nil'], 'nil']
[---Sent---] 25.87
(:emacs-rex (swank:operator-arglist "get-grayscale-values" "image-processing.core") "image-processing.core" t 81)

[-Received-] 25.87
(:return (:ok nil) 81)
[Actionlist] 25.87
81: finished :operator-arglist 
params: nil
[---Sent---] 26.28
(:emacs-rex (swank:operator-arglist "def" "image-processing.core") "image-processing.core" t 82)

[-Received-] 26.3
(:return (:ok nil) 82)
[Actionlist] 26.3
82: finished :operator-arglist 
params: nil
[---Sent---] 26.32
(:emacs-rex (swank:operator-arglist "def" "image-processing.core") "image-processing.core" t 83)

[-Received-] 26.33
(:return (:ok nil) 83)
[Actionlist] 26.33
83: finished :operator-arglist 
params: nil
[---Sent---] 26.39
(:emacs-rex (swank:operator-arglist "cons" "image-processing.core") "image-processing.core" t 84)

[-Received-] 26.39
(:return (:ok "([x seq])") 84)
[Actionlist] 26.39
84: finished :operator-arglist 
params: "([x seq])"
[---Sent---] 26.42
(:emacs-rex (swank:operator-arglist "cons" "image-processing.core") "image-processing.core" t 85)

[-Received-] 26.42
(:return (:ok "([x seq])") 85)
[Actionlist] 26.42
85: finished :operator-arglist 
params: "([x seq])"
[---Sent---] 26.51
(:emacs-rex (swank:operator-arglist "range" "image-processing.core") "image-processing.core" t 86)

[-Received-] 26.52
(:return (:ok "([] [end] [start end] [start end step])") 86)
[Actionlist] 26.52
86: finished :operator-arglist 
params: "([] [end] [start end] [start end step])"
[---Sent---] 26.56
(:emacs-rex (swank:operator-arglist "range" "image-processing.core") "image-processing.core" t 87)

[-Received-] 26.56
(:return (:ok "([] [end] [start end] [start end step])") 87)
[Actionlist] 26.56
87: finished :operator-arglist 
params: "([] [end] [start end] [start end step])"
[---Sent---] 26.71
(:emacs-rex (swank:listener-eval "(def x (cons 1 (range 2 1000000)))
") "image-processing.core" :repl-thread 88)

[-Received-] 26.71
(:write-string "#'image-processing.core/x
" :repl-result)
[-Received-] 26.71
(:return (:ok nil) 88)
[Actionlist] 26.71
88: finished :listener-eval 
params: nil
[---Sent---] 26.85
(:emacs-rex (swank:operator-arglist "take" "image-processing.core") "image-processing.core" t 89)

[-Received-] 26.85
(:return (:ok "([n coll])") 89)
[Actionlist] 26.85
89: finished :operator-arglist 
params: "([n coll])"
[---Sent---] 26.91
(:emacs-rex (swank:operator-arglist "take" "image-processing.core") "image-processing.core" t 90)

[-Received-] 26.91
(:return (:ok "([n coll])") 90)
[Actionlist] 26.91
90: finished :operator-arglist 
params: "([n coll])"
[---Sent---] 26.97
(:emacs-rex (swank:listener-eval "(take 10 x)
") "image-processing.core" :repl-thread 91)

[-Received-] 27.01
(:write-string "(1 2 3 4 5 6 7 8 9 10)
" :repl-result)
[-Received-] 27.01
(:return (:ok nil) 91)
[Actionlist] 27.01
91: finished :listener-eval 
params: nil
[---Sent---] 27.18
(:emacs-rex (swank:listener-eval "(take 100 x)
") "image-processing.core" :repl-thread 92)

[-Received-] 27.21
(:write-string "(1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100)
" :repl-result)
[-Received-] 27.21
(:return (:ok nil) 92)
[Actionlist] 27.21
92: finished :listener-eval 
params: nil
[---Sent---] 27.38
(:emacs-rex (swank:operator-arglist "type" "image-processing.core") "image-processing.core" t 93)

[-Received-] 27.39
(:return (:ok "([x])") 93)
[Actionlist] 27.39
93: finished :operator-arglist 
params: "([x])"
[---Sent---] 27.46
(:emacs-rex (swank:listener-eval "(type x) 
") "image-processing.core" :repl-thread 94)

[-Received-] 27.47
(:write-string "clojure.lang.Cons
" :repl-result)
[-Received-] 27.47
(:return (:ok nil) 94)
[Actionlist] 27.47
94: finished :listener-eval 
params: nil
[---Sent---] 27.9
(:emacs-rex (swank:listener-eval "(def x (range 2 1000000))
") "image-processing.core" :repl-thread 95)

[-Received-] 27.9
(:write-string "#'image-processing.core/x
" :repl-result)
[-Received-] 27.98
(:return (:ok nil) 95)
[Actionlist] 27.98
95: finished :listener-eval 
params: nil
[---Sent---] 28.2
(:emacs-rex (swank:listener-eval "(type x)
") "image-processing.core" :repl-thread 96)

[-Received-] 28.2
(:write-string "clojure.lang.LazySeq
" :repl-result)
[-Received-] 28.2
(:return (:ok nil) 96)
[Actionlist] 28.2
96: finished :listener-eval 
params: nil
[---Sent---] 28.68
(:emacs-rex (swank:operator-arglist "conj" "image-processing.core") "image-processing.core" t 97)

[-Received-] 28.68
(:return (:ok "([coll x] [coll x & xs])") 97)
[Actionlist] 28.68
97: finished :operator-arglist 
params: "([coll x] [coll x & xs])"
[---Sent---] 28.85
(:emacs-rex (swank:listener-eval "(def x (conj (range 2 1000000) 1))
") "image-processing.core" :repl-thread 98)

[-Received-] 28.85
(:write-string "#'image-processing.core/x
" :repl-result)
[-Received-] 28.92
(:return (:ok nil) 98)
[Actionlist] 28.92
98: finished :listener-eval 
params: nil
[---Sent---] 29.09
(:emacs-rex (swank:listener-eval "(type x)
") "image-processing.core" :repl-thread 99)

[-Received-] 29.09
(:write-string "clojure.lang.Cons
" :repl-result)
[-Received-] 29.17
(:return (:ok nil) 99)
[Actionlist] 29.17
99: finished :listener-eval 
params: nil
[---Sent---] 29.32
(:emacs-rex (swank:operator-arglist "take" "image-processing.core") "image-processing.core" t 100)

[-Received-] 29.33
(:return (:ok "([n coll])") 100)
[Actionlist] 29.33
100: finished :operator-arglist 
params: "([n coll])"
[---Sent---] 29.41
(:emacs-rex (swank:operator-arglist "take" "image-processing.core") "image-processing.core" t 101)

[-Received-] 29.41
(:return (:ok "([n coll])") 101)
[Actionlist] 29.41
101: finished :operator-arglist 
params: "([n coll])"
[---Sent---] 29.49
(:emacs-rex (swank:listener-eval "(take 10 x) 
") "image-processing.core" :repl-thread 102)

[-Received-] 29.54
(:write-string "(1 2 3 4 5 6 7 8 9 10)
" :repl-result)
[-Received-] 29.54
(:return (:ok nil) 102)
[Actionlist] 29.54
102: finished :listener-eval 
params: nil
[---Sent---] 29.81
(:emacs-rex (swank:listener-eval "t () 
") "image-processing.core" :repl-thread 103)

[-Received-] 29.81
(:debug 2 1 ("Unable to resolve symbol: t in this context" "  [Thrown class java.lang.Exception]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "clojure.lang.Compiler.resolveIn(Compiler.java:5672)" (:restartable nil)) (1 "clojure.lang.Compiler.resolve(Compiler.java:5616)" (:restartable nil)) (2 "clojure.lang.Compiler.analyzeSymbol(Compiler.java:5579)" (:restartable nil)) (3 "clojure.lang.Compiler.analyze(Compiler.java:5167)" (:restartable nil)) (4 "clojure.lang.Compiler.analyze(Compiler.java:5146)" (:restartable nil)) (5 "clojure.lang.Compiler.eval(Compiler.java:5423)" (:restartable nil)) (6 "clojure.lang.Compiler.eval(Compiler.java:5386)" (:restartable nil)) (7 "clojure.core$eval.invoke(core.clj:2382)" (:restartable nil)) (8 "swank.commands.basic$eval_region.invoke(basic.clj:47)" (:restartable nil)) (9 "swank.commands.basic$eval_region.invoke(basic.clj:37)" (:restartable nil))) (nil))
[-Received-] 29.82
(:debug-activate 2 1 nil)
[---Sent---] 29.91
(:emacs-rex (swank:throw-to-toplevel) nil 2 104)

[-Received-] 29.91
(:return (:abort) 104)
[Actionlist] 29.91
103: pending  :listener-eval 
104: finished :throw-to-toplevel 
[-Received-] 29.91
(:debug-return 2 1 nil)
[-Received-] 29.91
(:return (:abort) 103)
[Actionlist] 29.91
103: finished :listener-eval 
104: finished :throw-to-toplevel 
[---Sent---] 30.14
(:emacs-rex (swank:operator-arglist "nth" "image-processing.core") "image-processing.core" t 105)

[-Received-] 30.14
(:return (:ok "([coll index] [coll index not-found])") 105)
[Actionlist] 30.14
105: finished :operator-arglist 
params: "([coll index] [coll index not-found])"
[---Sent---] 30.26
(:emacs-rex (swank:operator-arglist "nth" "image-processing.core") "image-processing.core" t 106)

[-Received-] 30.26
(:return (:ok "([coll index] [coll index not-found])") 106)
[Actionlist] 30.27
106: finished :operator-arglist 
params: "([coll index] [coll index not-found])"
[---Sent---] 30.35
(:emacs-rex (swank:listener-eval "(nth 9999 x)
") "image-processing.core" :repl-thread 107)

[-Received-] 30.41
(:debug 2 1 ("clojure.lang.Cons cannot be cast to java.lang.Number" "  [Thrown class java.lang.ClassCastException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "image_processing.core$eval5139.invoke(NO_SOURCE_FILE:1)" (:restartable nil)) (1 "clojure.lang.Compiler.eval(Compiler.java:5419)" (:restartable nil)) (2 "clojure.lang.Compiler.eval(Compiler.java:5386)" (:restartable nil)) (3 "clojure.core$eval.invoke(core.clj:2382)" (:restartable nil)) (4 "swank.commands.basic$eval_region.invoke(basic.clj:47)" (:restartable nil)) (5 "swank.commands.basic$eval_region.invoke(basic.clj:37)" (:restartable nil)) (6 "swank.commands.basic$eval835$listener_eval__836.invoke(basic.clj:71)" (:restartable nil)) (7 "clojure.lang.Var.invoke(Var.java:365)" (:restartable nil)) (8 "image_processing.core$eval5137.invoke(NO_SOURCE_FILE)" (:restartable nil)) (9 "clojure.lang.Compiler.eval(Compiler.java:5419)" (:restartable nil))) (nil))
[-Received-] 30.42
(:debug-activate 2 1 nil)
[---Sent---] 30.51
(:emacs-rex (swank:throw-to-toplevel) nil 2 108)

[-Received-] 30.52
(:return (:abort) 108)
[Actionlist] 30.52
107: pending  :listener-eval 
108: finished :throw-to-toplevel 
[-Received-] 30.52
(:debug-return 2 1 nil)
[-Received-] 30.52
(:return (:abort) 107)
[Actionlist] 30.52
107: finished :listener-eval 
108: finished :throw-to-toplevel 
[---Sent---] 30.78
(:emacs-rex (swank:operator-arglist "nth" "image-processing.core") "image-processing.core" t 109)

[-Received-] 30.78
(:return (:ok "([coll index] [coll index not-found])") 109)
[Actionlist] 30.78
109: finished :operator-arglist 
params: "([coll index] [coll index not-found])"
[---Sent---] 30.9
(:emacs-rex (swank:listener-eval "(nth x 9999)
") "image-processing.core" :repl-thread 110)

[-Received-] 30.93
(:write-string "10000
" :repl-result)
[-Received-] 30.93
(:return (:ok nil) 110)
[Actionlist] 30.94
110: finished :listener-eval 
params: nil
[---Sent---] 31.58
(:emacs-rex (swank:listener-eval "(def x (concat (range 2 1000000) 1))
") "image-processing.core" :repl-thread 111)

[-Received-] 31.59
(:write-string "#'image-processing.core/x
" :repl-result)
[-Received-] 31.59
(:return (:ok nil) 111)
[Actionlist] 31.59
111: finished :listener-eval 
params: nil
[---Sent---] 31.9
(:emacs-rex (swank:listener-eval "(type x)
") "image-processing.core" :repl-thread 112)

[-Received-] 31.9
(:write-string "clojure.lang.LazySeq
" :repl-result)
[-Received-] 31.9
(:return (:ok nil) 112)
[Actionlist] 31.9
112: finished :listener-eval 
params: nil
[---Sent---] 32.16
(:emacs-rex (swank:listener-eval "(nth x 9999)
") "image-processing.core" :repl-thread 113)

[-Received-] 32.16
(:write-string "10001
" :repl-result)
[-Received-] 32.24
(:return (:ok nil) 113)
[Actionlist] 32.24
113: finished :listener-eval 
params: nil
[---Sent---] 32.47
(:emacs-rex (swank:listener-eval "(nth x 1)
") "image-processing.core" :repl-thread 114)

[-Received-] 32.52
(:write-string "3
" :repl-result)
[-Received-] 32.52
(:return (:ok nil) 114)
[Actionlist] 32.52
114: finished :listener-eval 
params: nil
[---Sent---] 32.75
(:emacs-rex (swank:listener-eval "(type x)
") "image-processing.core" :repl-thread 115)

[-Received-] 32.79
(:write-string "clojure.lang.LazySeq
" :repl-result)
[-Received-] 32.79
(:return (:ok nil) 115)
[Actionlist] 32.79
115: finished :listener-eval 
params: nil
[---Sent---] 33.26
(:emacs-rex (swank:operator-arglist "img" "image-processing.core") "image-processing.core" t 116)

[-Received-] 33.26
(:return (:ok nil) 116)
[Actionlist] 33.27
116: finished :operator-arglist 
params: nil
[---Sent---] 33.61
(:emacs-rex (swank:operator-arglist "%1" "image-processing.core") "image-processing.core" t 117)

[-Received-] 33.65
(:return (:ok nil) 117)
[Actionlist] 33.65
117: finished :operator-arglist 
params: nil
[---Sent---] 33.69
(:emacs-rex (swank:operator-arglist "concat" "image-processing.core") "image-processing.core" t 118)

[-Received-] 33.71
(:return (:ok "([] [x] [x y] [x y & zs])") 118)
[Actionlist] 33.71
118: finished :operator-arglist 
params: "([] [x] [x y] [x y & zs])"
[---Sent---] 33.78
(:emacs-rex (swank:operator-arglist "1" "image-processing.core") "image-processing.core" t 119)

[-Received-] 33.79
(:return (:ok nil) 119)
[Actionlist] 33.79
119: finished :operator-arglist 
params: nil
[---Sent---] 33.92
(:emacs-rex (swank:operator-arglist "3" "image-processing.core") "image-processing.core" t 120)

[-Received-] 33.93
(:return (:ok nil) 120)
[Actionlist] 33.93
120: finished :operator-arglist 
params: nil
[---Sent---] 33.99
(:emacs-rex (swank:listener-eval "(concat '(1 2) '(3 4))
") "image-processing.core" :repl-thread 121)

[-Received-] 33.99
(:write-string "(1 2 3 4)
" :repl-result)
[-Received-] 34.07
(:return (:ok nil) 121)
[Actionlist] 34.07
121: finished :listener-eval 
params: nil
[---Sent---] 34.24
(:emacs-rex (swank:operator-arglist "def" "image-processing.core") "image-processing.core" t 122)

[-Received-] 34.24
(:return (:ok nil) 122)
[Actionlist] 34.24
122: finished :operator-arglist 
params: nil
[---Sent---] 34.36
(:emacs-rex (swank:listener-eval "(def x (concat '(1 2) '(3 4))) 
") "image-processing.core" :repl-thread 123)

[-Received-] 34.36
(:write-string "#'image-processing.core/x
" :repl-result)
[-Received-] 34.44
(:return (:ok nil) 123)
[Actionlist] 34.44
123: finished :listener-eval 
params: nil
[---Sent---] 34.66
(:emacs-rex (swank:listener-eval "(type x)
") "image-processing.core" :repl-thread 124)

[-Received-] 34.66
(:write-string "clojure.lang.LazySeq
" :repl-result)
[-Received-] 34.75
(:return (:ok nil) 124)
[Actionlist] 34.75
124: finished :listener-eval 
params: nil
[---Sent---] 34.86
(:emacs-rex (swank:listener-eval "x 
") "image-processing.core" :repl-thread 125)

[-Received-] 34.86
(:write-string "(1 2 3 4)
" :repl-result)
[-Received-] 34.86
(:return (:ok nil) 125)
[Actionlist] 34.86
125: finished :listener-eval 
params: nil
[---Sent---] 35.22
(:emacs-rex (swank:operator-arglist "concat" "image-processing.core") "image-processing.core" t 126)

[-Received-] 35.23
(:return (:ok "([] [x] [x y] [x y & zs])") 126)
[Actionlist] 35.23
126: finished :operator-arglist 
params: "([] [x] [x y] [x y & zs])"
[---Sent---] 35.36
(:emacs-rex (swank:listener-eval "(concat [] 1)
") "image-processing.core" :repl-thread 127)

[-Received-] 35.41
(:debug 2 1 ("Don't know how to create ISeq from: java.lang.Integer" "  [Thrown class java.lang.IllegalArgumentException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "clojure.lang.RT.seqFrom(RT.java:471)" (:restartable nil)) (1 "clojure.lang.RT.seq(RT.java:452)" (:restartable nil)) (2 "clojure.lang.LazySeq.seq(LazySeq.java:65)" (:restartable nil)) (3 "clojure.lang.RT.seq(RT.java:450)" (:restartable nil)) (4 "clojure.core$seq.invoke(core.clj:122)" (:restartable nil)) (5 "clojure.core$print_sequential.invoke(core_print.clj:44)" (:restartable nil)) (6 "clojure.core$fn__4838.invoke(core_print.clj:138)" (:restartable nil)) (7 "clojure.lang.MultiFn.invoke(MultiFn.java:167)" (:restartable nil)) (8 "clojure.core$pr_on.invoke(core.clj:2812)" (:restartable nil)) (9 "clojure.core$pr.invoke(core.clj:2824)" (:restartable nil))) (nil))
[-Received-] 35.41
(:debug-activate 2 1 nil)
[---Sent---] 35.51
(:emacs-rex (swank:throw-to-toplevel) nil 2 128)

[-Received-] 35.51
(:return (:abort) 128)
[Actionlist] 35.51
127: pending  :listener-eval 
128: finished :throw-to-toplevel 
[-Received-] 35.61
(:debug-return 2 1 nil)
[-Received-] 35.61
(:return (:abort) 127)
[Actionlist] 35.61
127: finished :listener-eval 
[---Sent---] 36.74
(:emacs-rex (swank:listener-eval "(def x (conj (range 2 100000000000000) 1))
") "image-processing.core" :repl-thread 129)

[-Received-] 36.79
(:write-string "#'image-processing.core/x
" :repl-result)
[-Received-] 36.79
(:return (:ok nil) 129)
[Actionlist] 36.79
129: finished :listener-eval 
params: nil
[---Sent---] 36.95
(:emacs-rex (swank:operator-arglist "nth" "image-processing.core") "image-processing.core" t 130)

[-Received-] 36.96
(:return (:ok "([coll index] [coll index not-found])") 130)
[Actionlist] 36.96
130: finished :operator-arglist 
params: "([coll index] [coll index not-found])"
[---Sent---] 37.0
(:emacs-rex (swank:operator-arglist "nth" "image-processing.core") "image-processing.core" t 131)

[-Received-] 37.01
(:return (:ok "([coll index] [coll index not-found])") 131)
[Actionlist] 37.01
131: finished :operator-arglist 
params: "([coll index] [coll index not-found])"
[---Sent---] 37.19
(:emacs-rex (swank:listener-eval "(nth x 10000000) 
") "image-processing.core" :repl-thread 132)

[-Received-] 37.42
(:write-string "10000001
" :repl-result)
[-Received-] 37.42
(:return (:ok nil) 132)
[Actionlist] 37.42
132: finished :listener-eval 
params: nil
[---Sent---] 37.79
(:emacs-rex (swank:operator-arglist "[" "image-processing.core") "image-processing.core" t 133)

[-Received-] 37.91
(:return (:ok nil) 133)
[Actionlist] 37.91
133: finished :operator-arglist 
params: nil
[---Sent---] 37.97
(:emacs-rex (swank:operator-arglist "mean" "image-processing.core") "image-processing.core" t 134)

[-Received-] 37.97
(:return (:ok "([x])") 134)
[Actionlist] 37.97
134: finished :operator-arglist 
params: "([x])"
[---Sent---] 37.97
(:emacs-rex (swank:describe-function "mean") "image-processing.core" t 135)

[-Received-] 37.97
(:return (:ok "-------------------------
incanter.stats/mean
([x])
  
  Returns the mean of the data, x.

  Examples:
    (mean (sample-normal 100))

  References:
    http://incanter.org/docs/parallelcolt/api/cern/jet/stat/tdouble/DoubleDescriptive.html
    http://en.wikipedia.org/wiki/Mean


") 135)
[Actionlist] 37.97
135: finished :describe-function 
params: "-------------------------
incanter.stats/mean
([x])
  
  Returns the mean of the data, x.

  Examples:
    (mean (sample-normal 100))

  References:
    http://incanter.org/docs/parallelcolt/api/cern/jet/stat/tdouble/DoubleDescriptive.html
    http://en.wikipedia.org/wiki/Mean


"
[---Sent---] 38.25
(:emacs-rex (swank:operator-arglist "conj" "image-processing.core") "image-processing.core" t 136)

[-Received-] 38.25
(:return (:ok "([coll x] [coll x & xs])") 136)
[Actionlist] 38.25
136: finished :operator-arglist 
params: "([coll x] [coll x & xs])"
[---Sent---] 38.34
(:emacs-rex (swank:operator-arglist "conj" "image-processing.core") "image-processing.core" t 137)

[-Received-] 38.34
(:return (:ok "([coll x] [coll x & xs])") 137)
[Actionlist] 38.34
137: finished :operator-arglist 
params: "([coll x] [coll x & xs])"
[---Sent---] 38.51
(:emacs-rex (swank:operator-arglist "if" "image-processing.core") "image-processing.core" t 138)

[-Received-] 38.52
(:return (:ok nil) 138)
[Actionlist] 38.52
138: finished :operator-arglist 
params: nil
[---Sent---] 38.65
(:emacs-rex (swank:operator-arglist "<" "image-processing.core") "image-processing.core" t 139)

[-Received-] 38.65
(:return (:ok "([x] [x y] [x y & more])") 139)
[Actionlist] 38.66
139: finished :operator-arglist 
params: "([x] [x y] [x y & more])"
[---Sent---] 38.75
(:emacs-rex (swank:operator-arglist "<" "image-processing.core") "image-processing.core" t 140)

[-Received-] 38.75
(:return (:ok "([x] [x y] [x y & more])") 140)
[Actionlist] 38.75
140: finished :operator-arglist 
params: "([x] [x y] [x y & more])"
[---Sent---] 39.2
(:emacs-rex (swank:operator-arglist "doc" "image-processing.core") "image-processing.core" t 141)

[-Received-] 39.2
(:return (:ok "([name])") 141)
[Actionlist] 39.2
141: finished :operator-arglist 
params: "([name])"
[---Sent---] 39.31
(:emacs-rex (swank:listener-eval "(doc int)
") "image-processing.core" :repl-thread 142)

[-Received-] 39.31
(:write-string "-------------------------
")
[-Received-] 39.31
(:write-string "clojure.core/int
")
[-Received-] 39.31
(:write-string "([x])
")
[-Received-] 39.31
(:write-string "  Coerce to int
")
[-Received-] 39.31
(:write-string "nil
" :repl-result)
[-Received-] 39.31
(:return (:ok nil) 142)
[Actionlist] 39.31
142: finished :listener-eval 
params: nil
[---Sent---] 39.89
(:emacs-rex (swank:operator-arglist "if" "image-processing.core") "image-processing.core" t 143)

[-Received-] 39.89
(:return (:ok nil) 143)
[Actionlist] 39.89
143: finished :operator-arglist 
params: nil
[---Sent---] 40.43
(:emacs-rex (swank:operator-arglist "java.lang.Integer" "image-processing.core") "image-processing.core" t 144)

[-Received-] 40.44
(:return (:ok nil) 144)
[Actionlist] 40.44
144: finished :operator-arglist 
params: nil
[---Sent---] 40.74
(:emacs-rex (swank:listener-eval "(def x (conj [1] (range 2 100000000000000)))
") "image-processing.core" :repl-thread 145)

[-Received-] 40.74
(:write-string "#'image-processing.core/x
" :repl-result)
[-Received-] 40.74
(:return (:ok nil) 145)
[Actionlist] 40.74
145: finished :listener-eval 
params: nil
[---Sent---] 40.93
(:emacs-rex (swank:operator-arglist "type" "image-processing.core") "image-processing.core" t 146)

[-Received-] 40.93
(:return (:ok "([x])") 146)
[Actionlist] 40.93
146: finished :operator-arglist 
params: "([x])"
[---Sent---] 41.0
(:emacs-rex (swank:listener-eval "(type x)
") "image-processing.core" :repl-thread 147)

[-Received-] 41.0
(:write-string "clojure.lang.PersistentVector
" :repl-result)
[-Received-] 41.09
(:return (:ok nil) 147)
[Actionlist] 41.09
147: finished :listener-eval 
params: nil
[---Sent---] 41.31
(:emacs-rex (swank:listener-eval "(nth x 10000000)
") "image-processing.core" :repl-thread 148)

[-Received-] 41.37
(:debug 2 1 ("No message." "  [Thrown class java.lang.IndexOutOfBoundsException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "clojure.lang.PersistentVector.arrayFor(PersistentVector.java:106)" (:restartable nil)) (1 "clojure.lang.PersistentVector.nth(PersistentVector.java:110)" (:restartable nil)) (2 "clojure.lang.RT.nth(RT.java:721)" (:restartable nil)) (3 "image_processing.core$eval5249.invoke(NO_SOURCE_FILE:1)" (:restartable nil)) (4 "clojure.lang.Compiler.eval(Compiler.java:5419)" (:restartable nil)) (5 "clojure.lang.Compiler.eval(Compiler.java:5386)" (:restartable nil)) (6 "clojure.core$eval.invoke(core.clj:2382)" (:restartable nil)) (7 "swank.commands.basic$eval_region.invoke(basic.clj:47)" (:restartable nil)) (8 "swank.commands.basic$eval_region.invoke(basic.clj:37)" (:restartable nil)) (9 "swank.commands.basic$eval835$listener_eval__836.invoke(basic.clj:71)" (:restartable nil))) (nil))
[-Received-] 41.37
(:debug-activate 2 1 nil)
[---Sent---] 41.49
(:emacs-rex (swank:throw-to-toplevel) nil 2 149)

[-Received-] 41.49
(:return (:abort) 149)
[Actionlist] 41.5
148: pending  :listener-eval 
149: finished :throw-to-toplevel 
[-Received-] 41.5
(:debug-return 2 1 nil)
[-Received-] 41.5
(:return (:abort) 148)
[Actionlist] 41.5
148: finished :listener-eval 
149: finished :throw-to-toplevel 
[---Sent---] 41.65
(:emacs-rex (swank:operator-arglist "x" "image-processing.core") "image-processing.core" t 150)

[-Received-] 41.65
(:return (:ok nil) 150)
[Actionlist] 41.65
150: finished :operator-arglist 
params: nil
[---Sent---] 41.82
(:emacs-rex (swank:listener-eval "(x 1000000)
") "image-processing.core" :repl-thread 151)

[-Received-] 41.82
(:debug 2 1 ("No message." "  [Thrown class java.lang.IndexOutOfBoundsException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "clojure.lang.PersistentVector.arrayFor(PersistentVector.java:106)" (:restartable nil)) (1 "clojure.lang.PersistentVector.nth(PersistentVector.java:110)" (:restartable nil)) (2 "clojure.lang.APersistentVector.invoke(APersistentVector.java:249)" (:restartable nil)) (3 "image_processing.core$eval5257.invoke(NO_SOURCE_FILE:1)" (:restartable nil)) (4 "clojure.lang.Compiler.eval(Compiler.java:5419)" (:restartable nil)) (5 "clojure.lang.Compiler.eval(Compiler.java:5386)" (:restartable nil)) (6 "clojure.core$eval.invoke(core.clj:2382)" (:restartable nil)) (7 "swank.commands.basic$eval_region.invoke(basic.clj:47)" (:restartable nil)) (8 "swank.commands.basic$eval_region.invoke(basic.clj:37)" (:restartable nil)) (9 "swank.commands.basic$eval835$listener_eval__836.invoke(basic.clj:71)" (:restartable nil))) (nil))
[-Received-] 41.83
(:debug-activate 2 1 nil)
[---Sent---] 41.94
(:emacs-rex (swank:throw-to-toplevel) nil 2 152)

[-Received-] 41.94
(:return (:abort) 152)
[Actionlist] 41.94
151: pending  :listener-eval 
152: finished :throw-to-toplevel 
[-Received-] 41.94
(:debug-return 2 1 nil)
[-Received-] 41.94
(:return (:abort) 151)
[Actionlist] 41.94
151: finished :listener-eval 
152: finished :throw-to-toplevel 
[---Sent---] 42.09
(:emacs-rex (swank:operator-arglist "x" "image-processing.core") "image-processing.core" t 153)

[-Received-] 42.09
(:return (:ok nil) 153)
[Actionlist] 42.09
153: finished :operator-arglist 
params: nil
[---Sent---] 42.15
(:emacs-rex (swank:listener-eval "(x 1)
") "image-processing.core" :repl-thread 154)

[---Sent---] 42.28
(:emacs-interrupt :repl-thread)
[-Received-] 42.28
(:debug 2 1 ("No message." "  [Thrown class java.lang.ThreadDeath]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "java.lang.Thread.stop(Thread.java:813)" (:restartable nil)) (1 "swank.core$dispatch_event$fn__536.invoke(core.clj:378)" (:restartable nil)) (2 "clojure.lang.AFn.call(AFn.java:18)" (:restartable nil)) (3 "clojure.lang.LockingTransaction.run(LockingTransaction.java:263)" (:restartable nil)) (4 "clojure.lang.LockingTransaction.runInTransaction(LockingTransaction.java:231)" (:restartable nil)) (5 "swank.core$dispatch_event.invoke(core.clj:374)" (:restartable nil)) (6 "swank.core$control_loop.invoke(core.clj:390)" (:restartable nil)) (7 "swank.swank$connection_serve$fn__1540$fn__1541.invoke(swank.clj:31)" (:restartable nil)) (8 "clojure.lang.AFn.applyToHelper(AFn.java:159)" (:restartable nil)) (9 "clojure.lang.AFn.applyTo(AFn.java:151)" (:restartable nil))) (nil))
[-Received-] 42.29
(:debug-activate 2 1 nil)
[---Sent---] 42.4
(:emacs-rex (swank:throw-to-toplevel) nil 2 155)

[-Received-] 42.4
(:return (:abort) 155)
[Actionlist] 42.4
154: pending  :listener-eval 
155: finished :throw-to-toplevel 
[-Received-] 42.4
(:debug-return 2 1 nil)
[-Received-] 42.4
(:return (:abort) 154)
[Actionlist] 42.4
154: finished :listener-eval 
155: finished :throw-to-toplevel 
[---Sent---] 42.6
(:emacs-rex (swank:operator-arglist "def" "image-processing.core") "image-processing.core" t 156)

[-Received-] 42.6
(:return (:ok nil) 156)
[Actionlist] 42.6
156: finished :operator-arglist 
params: nil
[---Sent---] 42.63
(:emacs-rex (swank:operator-arglist "def" "image-processing.core") "image-processing.core" t 157)

[-Received-] 42.64
(:return (:ok nil) 157)
[Actionlist] 42.64
157: finished :operator-arglist 
params: nil
[---Sent---] 42.75
(:emacs-rex (swank:operator-arglist "reduce" "image-processing.core") "image-processing.core" t 158)

[-Received-] 42.76
(:return (:ok "([f coll] [f val coll])") 158)
[Actionlist] 42.76
158: finished :operator-arglist 
params: "([f coll] [f val coll])"
[---Sent---] 42.9
(:emacs-rex (swank:operator-arglist "conj" "image-processing.core") "image-processing.core" t 159)

[-Received-] 42.9
(:return (:ok "([coll x] [coll x & xs])") 159)
[Actionlist] 42.9
159: finished :operator-arglist 
params: "([coll x] [coll x & xs])"
[---Sent---] 42.95
(:emacs-rex (swank:operator-arglist "conj" "image-processing.core") "image-processing.core" t 160)

[-Received-] 42.95
(:return (:ok "([coll x] [coll x & xs])") 160)
[Actionlist] 42.95
160: finished :operator-arglist 
params: "([coll x] [coll x & xs])"
[---Sent---] 43.21
(:emacs-rex (swank:operator-arglist "range" "image-processing.core") "image-processing.core" t 161)

[-Received-] 43.21
(:return (:ok "([] [end] [start end] [start end step])") 161)
[Actionlist] 43.21
161: finished :operator-arglist 
params: "([] [end] [start end] [start end step])"
[---Sent---] 43.25
(:emacs-rex (swank:operator-arglist "range" "image-processing.core") "image-processing.core" t 162)

[-Received-] 43.25
(:return (:ok "([] [end] [start end] [start end step])") 162)
[Actionlist] 43.25
162: finished :operator-arglist 
params: "([] [end] [start end] [start end step])"
[---Sent---] 43.59
(:emacs-rex (swank:listener-eval "(def x (reduce #(conj %1 %2) [1] (range 2 10000000000000000000)))
") "image-processing.core" :repl-thread 163)

[---Sent---] 43.72
(:emacs-interrupt :repl-thread)
[-Received-] 43.72
(:debug 2 1 ("No message." "  [Thrown class java.lang.ThreadDeath]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "java.lang.Thread.stop(Thread.java:813)" (:restartable nil)) (1 "swank.core$dispatch_event$fn__536.invoke(core.clj:378)" (:restartable nil)) (2 "clojure.lang.AFn.call(AFn.java:18)" (:restartable nil)) (3 "clojure.lang.LockingTransaction.run(LockingTransaction.java:263)" (:restartable nil)) (4 "clojure.lang.LockingTransaction.runInTransaction(LockingTransaction.java:231)" (:restartable nil)) (5 "swank.core$dispatch_event.invoke(core.clj:374)" (:restartable nil)) (6 "swank.core$control_loop.invoke(core.clj:390)" (:restartable nil)) (7 "swank.swank$connection_serve$fn__1540$fn__1541.invoke(swank.clj:31)" (:restartable nil)) (8 "clojure.lang.AFn.applyToHelper(AFn.java:159)" (:restartable nil)) (9 "clojure.lang.AFn.applyTo(AFn.java:151)" (:restartable nil))) (nil))
[-Received-] 43.73
(:debug-activate 2 1 nil)
[---Sent---] 43.83
(:emacs-rex (swank:throw-to-toplevel) nil 2 164)

[-Received-] 43.83
(:return (:abort) 164)
[Actionlist] 43.83
163: pending  :listener-eval 
164: finished :throw-to-toplevel 
[-Received-] 43.83
(:debug-return 2 1 nil)
[-Received-] 43.83
(:return (:abort) 163)
[Actionlist] 43.83
163: finished :listener-eval 
164: finished :throw-to-toplevel 
[---Sent---] 44.13
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 165)

[-Received-] 44.14
(:return (:ok nil) 165)
[Actionlist] 44.14
165: finished :operator-arglist 
params: nil
[---Sent---] 44.22
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 166)

[-Received-] 44.22
(:return (:ok nil) 166)
[Actionlist] 44.22
166: finished :operator-arglist 
params: nil
[---Sent---] 44.45
(:emacs-rex (swank:operator-arglist "map" "image-processing.core") "image-processing.core" t 167)

[-Received-] 44.45
(:return (:ok "([f coll] [f c1 c2] [f c1 c2 c3] [f c1 c2 c3 & colls])") 167)
[Actionlist] 44.45
167: finished :operator-arglist 
params: "([f coll] [f c1 c2] [f c1 c2 c3] [f c1 c2 c3 & colls])"
[---Sent---] 46.46
(:emacs-rex (swank:operator-arglist "map" "image-processing.core") "image-processing.core" t 168)

[-Received-] 46.46
(:return (:ok "([f coll] [f c1 c2] [f c1 c2 c3] [f c1 c2 c3 & colls])") 168)
[Actionlist] 46.46
168: finished :operator-arglist 
params: "([f coll] [f c1 c2] [f c1 c2 c3] [f c1 c2 c3 & colls])"
[---Sent---] 46.76
(:emacs-rex (swank:operator-arglist "map" "image-processing.core") "image-processing.core" t 169)

[-Received-] 46.76
(:return (:ok "([f coll] [f c1 c2] [f c1 c2 c3] [f c1 c2 c3 & colls])") 169)
[Actionlist] 46.76
169: finished :operator-arglist 
params: "([f coll] [f c1 c2] [f c1 c2 c3] [f c1 c2 c3 & colls])"
[---Sent---] 47.46
(:emacs-rex (swank:listener-eval "(ns image-processing.core
    (:import
      (java.lang Math)
      (javax.imageio ImageIO)
      (java.io File)
      (java.awt.image BufferedImage))
    (:use (incanter core charts stats)))


(defn intcolor-to-argb
  \"Convert the 32 bits color to ARGB. It returns a vector [A R G B].\"
  [color]
  [(bit-and (bit-shift-right color 24) 0xff)
   (bit-and (bit-shift-right color 16) 0xff)
   (bit-and (bit-shift-right color 8) 0xff)
   (bit-and color 0xff)])


(defn get-argb
  \"Get the [a r g b] color of a pixel [x y] of IMG.\"
  [img coord]
  (let [[x y] coord]
    (intcolor-to-argb (.getRGB img x y))))


(defn set-argb
  \"Set the ARGB color of a pixel COORD of the image IMG.\"
  ^#{:arglists [img coord argb-color]}
  [img coord argb-color]
  (let [[x y] coord
        [a r g b] argb-color
        int-color (bit-or (bit-shift-left a 24)
                          (bit-or (bit-shift-left r 16)
                                  (bit-or (bit-shift-left g 8) b)))]
    (.setRGB img x y int-color)))


(defn euclidian-argb-distance
  \"Euclidian distance between two [r g b] colors.\"
  [color1 color2]
  (sqrt (sum-of-squares (map #(- %1 %2) color1 color2))))


(defn get-img-coords
  \"Returns a sequence of all coordinates of the image.\"
  #^{:arglists [img]}
  [img]
  (for [y (range (.getHeight img))
        x (range (.getWidth img))]
       [x y]))


(defn get-grayscale-values
  \"Returns a lazy sequence with the grayscale value of the image's pixels.\"
  #^{:arglists [img]}
  [img]
  (map #(int (mean (rest (get-argb img %)))) (get-img-coords img)))


(defn get-binarized-values
  \"Doc\"
  #^{:arglists [img threshold]}
  [img threshold]
  (map #(if (< % threshold) 0 %) (get-grayscale-values img)))

;(defn vertical-histogram
;  \"Doc\"
;  #^{:arglists [img]}
;  [img]
;  )

;(def img-path \"/home/boechat/Dropbox/Documents/Coding/Hough_transform/straight_lines.png\")
;(def buffered-image (ImageIO/read (File. img-path)))
") "image-processing.core" :repl-thread 170)

[-Received-] 47.51
(:debug 2 1 ("java.lang.IllegalArgumentException: Metadata must be Symbol,Keyword,String or Map" "  [Thrown class clojure.lang.LispReader$ReaderException]" nil) (("QUIT" "Quit to the SLIME top level") ("CAUSE1" "Invoke debugger on cause  Metadata must be Symbol,Keyword,String or Map [Thrown class java.lang.IllegalArgumentException]")) ((0 "clojure.lang.LispReader.read(LispReader.java:180)" (:restartable nil)) (1 "clojure.core$read.invoke(core.clj:2884)" (:restartable nil)) (2 "clojure.core$read.invoke(core.clj:2882)" (:restartable nil)) (3 "swank.commands.basic$eval_region.invoke(basic.clj:46)" (:restartable nil)) (4 "swank.commands.basic$eval_region.invoke(basic.clj:37)" (:restartable nil)) (5 "swank.commands.basic$eval835$listener_eval__836.invoke(basic.clj:71)" (:restartable nil)) (6 "clojure.lang.Var.invoke(Var.java:365)" (:restartable nil)) (7 "image_processing.core$eval5303.invoke(NO_SOURCE_FILE)" (:restartable nil)) (8 "clojure.lang.Compiler.eval(Compiler.java:5419)" (:restartable nil)) (9 "clojure.lang.Compiler.eval(Compiler.java:5386)" (:restartable nil))) (nil))
[-Received-] 47.51
(:debug-activate 2 1 nil)
[---Sent---] 48.91
(:emacs-rex (swank:throw-to-toplevel) nil 2 171)

[-Received-] 48.91
(:return (:abort) 171)
[Actionlist] 48.92
170: pending  :listener-eval 
171: finished :throw-to-toplevel 
[-Received-] 48.92
(:debug-return 2 1 nil)
[-Received-] 48.92
(:return (:abort) 170)
[Actionlist] 48.92
170: finished :listener-eval 
171: finished :throw-to-toplevel 
[---Sent---] 49.07
(:emacs-rex (swank:listener-eval "(defn set-argb
  \"Set the ARGB color of a pixel COORD of the image IMG.\"
  ^#{:arglists [img coord argb-color]}
  [img coord argb-color]
  (let [[x y] coord
        [a r g b] argb-color
        int-color (bit-or (bit-shift-left a 24)
                          (bit-or (bit-shift-left r 16)
                                  (bit-or (bit-shift-left g 8) b)))]
    (.setRGB img x y int-color)))
") "image-processing.core" :repl-thread 172)

[-Received-] 49.07
(:debug 2 1 ("java.lang.IllegalArgumentException: Metadata must be Symbol,Keyword,String or Map" "  [Thrown class clojure.lang.LispReader$ReaderException]" nil) (("QUIT" "Quit to the SLIME top level") ("CAUSE1" "Invoke debugger on cause  Metadata must be Symbol,Keyword,String or Map [Thrown class java.lang.IllegalArgumentException]")) ((0 "clojure.lang.LispReader.read(LispReader.java:180)" (:restartable nil)) (1 "clojure.core$read.invoke(core.clj:2884)" (:restartable nil)) (2 "clojure.core$read.invoke(core.clj:2882)" (:restartable nil)) (3 "swank.commands.basic$eval_region.invoke(basic.clj:43)" (:restartable nil)) (4 "swank.commands.basic$eval_region.invoke(basic.clj:37)" (:restartable nil)) (5 "swank.commands.basic$eval835$listener_eval__836.invoke(basic.clj:71)" (:restartable nil)) (6 "clojure.lang.Var.invoke(Var.java:365)" (:restartable nil)) (7 "image_processing.core$eval5314.invoke(NO_SOURCE_FILE)" (:restartable nil)) (8 "clojure.lang.Compiler.eval(Compiler.java:5419)" (:restartable nil)) (9 "clojure.lang.Compiler.eval(Compiler.java:5386)" (:restartable nil))) (nil))
[-Received-] 49.09
(:debug-activate 2 1 nil)
[---Sent---] 49.64
(:emacs-rex (swank:listener-eval "(ns image-processing.core
    (:import
      (java.lang Math)
      (javax.imageio ImageIO)
      (java.io File)
      (java.awt.image BufferedImage))
    (:use (incanter core charts stats)))


(defn intcolor-to-argb
  \"Convert the 32 bits color to ARGB. It returns a vector [A R G B].\"
  [color]
  [(bit-and (bit-shift-right color 24) 0xff)
   (bit-and (bit-shift-right color 16) 0xff)
   (bit-and (bit-shift-right color 8) 0xff)
   (bit-and color 0xff)])


(defn get-argb
  \"Get the [a r g b] color of a pixel [x y] of IMG.\"
  [img coord]
  (let [[x y] coord]
    (intcolor-to-argb (.getRGB img x y))))


(defn set-argb
  \"Set the ARGB color of a pixel COORD of the image IMG.\"
  #^{:arglists [img coord argb-color]}
  [img coord argb-color]
  (let [[x y] coord
        [a r g b] argb-color
        int-color (bit-or (bit-shift-left a 24)
                          (bit-or (bit-shift-left r 16)
                                  (bit-or (bit-shift-left g 8) b)))]
    (.setRGB img x y int-color)))


(defn euclidian-argb-distance
  \"Euclidian distance between two [r g b] colors.\"
  [color1 color2]
  (sqrt (sum-of-squares (map #(- %1 %2) color1 color2))))


(defn get-img-coords
  \"Returns a sequence of all coordinates of the image.\"
  #^{:arglists [img]}
  [img]
  (for [y (range (.getHeight img))
        x (range (.getWidth img))]
       [x y]))


(defn get-grayscale-values
  \"Returns a lazy sequence with the grayscale value of the image's pixels.\"
  #^{:arglists [img]}
  [img]
  (map #(int (mean (rest (get-argb img %)))) (get-img-coords img)))


(defn get-binarized-values
  \"Doc\"
  #^{:arglists [img threshold]}
  [img threshold]
  (map #(if (< % threshold) 0 %) (get-grayscale-values img)))

;(defn vertical-histogram
;  \"Doc\"
;  #^{:arglists [img]}
;  [img]
;  )

;(def img-path \"/home/boechat/Dropbox/Documents/Coding/Hough_transform/straight_lines.png\")
;(def buffered-image (ImageIO/read (File. img-path)))
") "image-processing.core" :repl-thread 173)

[-Received-] 49.7
(:write-string "#'image-processing.core/get-binarized-values
" :repl-result)
[-Received-] 49.7
(:return (:ok nil) 173)
[Actionlist] 49.7
172: pending  :listener-eval 
173: finished :listener-eval 
params: nil
[-Received-] 49.7
(:debug-activate 2 1 nil)
[---Sent---] 49.76
(:emacs-rex (swank:throw-to-toplevel) nil 2 174)

[-Received-] 49.76
(:return (:abort) 174)
[Actionlist] 49.76
172: pending  :listener-eval 
174: finished :throw-to-toplevel 
[-Received-] 49.76
(:debug-return 2 1 nil)
[-Received-] 49.76
(:return (:abort) 172)
[Actionlist] 49.76
172: finished :listener-eval 
174: finished :throw-to-toplevel 
[---Sent---] 49.92
(:emacs-rex (swank:listener-eval "(ns image-processing.core
    (:import
      (java.lang Math)
      (javax.imageio ImageIO)
      (java.io File)
      (java.awt.image BufferedImage))
    (:use (incanter core charts stats)))


(defn intcolor-to-argb
  \"Convert the 32 bits color to ARGB. It returns a vector [A R G B].\"
  [color]
  [(bit-and (bit-shift-right color 24) 0xff)
   (bit-and (bit-shift-right color 16) 0xff)
   (bit-and (bit-shift-right color 8) 0xff)
   (bit-and color 0xff)])


(defn get-argb
  \"Get the [a r g b] color of a pixel [x y] of IMG.\"
  [img coord]
  (let [[x y] coord]
    (intcolor-to-argb (.getRGB img x y))))


(defn set-argb
  \"Set the ARGB color of a pixel COORD of the image IMG.\"
  #^{:arglists [img coord argb-color]}
  [img coord argb-color]
  (let [[x y] coord
        [a r g b] argb-color
        int-color (bit-or (bit-shift-left a 24)
                          (bit-or (bit-shift-left r 16)
                                  (bit-or (bit-shift-left g 8) b)))]
    (.setRGB img x y int-color)))


(defn euclidian-argb-distance
  \"Euclidian distance between two [r g b] colors.\"
  [color1 color2]
  (sqrt (sum-of-squares (map #(- %1 %2) color1 color2))))


(defn get-img-coords
  \"Returns a sequence of all coordinates of the image.\"
  #^{:arglists [img]}
  [img]
  (for [y (range (.getHeight img))
        x (range (.getWidth img))]
       [x y]))


(defn get-grayscale-values
  \"Returns a lazy sequence with the grayscale value of the image's pixels.\"
  #^{:arglists [img]}
  [img]
  (map #(int (mean (rest (get-argb img %)))) (get-img-coords img)))


(defn get-binarized-values
  \"Doc\"
  #^{:arglists [img threshold]}
  [img threshold]
  (map #(if (< % threshold) 0 %) (get-grayscale-values img)))

;(defn vertical-histogram
;  \"Doc\"
;  #^{:arglists [img]}
;  [img]
;  )

;(def img-path \"/home/boechat/Dropbox/Documents/Coding/Hough_transform/straight_lines.png\")
;(def buffered-image (ImageIO/read (File. img-path)))
") "image-processing.core" :repl-thread 175)

[-Received-] 49.97
(:write-string "#'image-processing.core/get-binarized-values
" :repl-result)
[-Received-] 49.97
(:return (:ok nil) 175)
[Actionlist] 49.97
175: finished :listener-eval 
params: nil
[---Sent---] 50.25
(:emacs-rex (swank:listener-eval "(def img-path \"/home/boechat/Dropbox/Documents/Coding/Hough_transform/straight_lines.png\")
") "image-processing.core" :repl-thread 176)

[-Received-] 50.25
(:write-string "#'image-processing.core/img-path
" :repl-result)
[-Received-] 50.34
(:return (:ok nil) 176)
[Actionlist] 50.34
176: finished :listener-eval 
params: nil
[---Sent---] 50.5
(:emacs-rex (swank:listener-eval "(def buffered-image (ImageIO/read (File. img-path)))
") "image-processing.core" :repl-thread 177)

[-Received-] 50.55
(:write-string "#'image-processing.core/buffered-image
" :repl-result)
[-Received-] 50.55
(:return (:ok nil) 177)
[Actionlist] 50.55
177: finished :listener-eval 
params: nil
[---Sent---] 50.75
(:emacs-rex (swank:operator-arglist "take" "image-processing.core") "image-processing.core" t 178)

[-Received-] 50.75
(:return (:ok "([n coll])") 178)
[Actionlist] 50.75
178: finished :operator-arglist 
params: "([n coll])"
[---Sent---] 50.81
(:emacs-rex (swank:operator-arglist "take" "image-processing.core") "image-processing.core" t 179)

[-Received-] 50.82
(:return (:ok "([n coll])") 179)
[Actionlist] 50.82
179: finished :operator-arglist 
params: "([n coll])"
[---Sent---] 51.03
(:emacs-rex (swank:fuzzy-completions "get-bi" "image-processing.core" :limit 200 :time-limit-in-msec 2000) nil t 180)

[-Received-] 51.03
(:return (:ok ((("get-binarized-values" "62.00" ((0 "get-bi")) "-f------")) nil)) 180)
[Actionlist] 51.03
180: finished :fuzzy-completions 
params: [[['"get-binarized-values"', '"62.00"', [['0', '"get-bi"']], '"-f------"']], 'nil']
[---Sent---] 51.05
(:emacs-rex (swank:operator-arglist "get-binarized-values" "image-processing.core") "image-processing.core" t 181)

[-Received-] 51.05
(:return (:ok "([img threshold])") 181)
[Actionlist] 51.05
181: finished :operator-arglist 
params: "([img threshold])"
[---Sent---] 51.11
(:emacs-rex (swank:fuzzy-completions "bu" "image-processing.core" :limit 200 :time-limit-in-msec 2000) nil t 182)

[-Received-] 51.11
(:return (:ok ((("buffered-image" "20.47" ((0 "bu")) "b-------") ("get-binarized-values" "9.53" ((4 "b") (17 "u")) "-f------") ("clojure.contrib.map-utils/" "9.42" ((14 "b") (20 "u")) "b------p") ("clojure.contrib.macro-utils/" "9.38" ((14 "b") (22 "u")) "b------p") ("swank.commands.contrib.swank-fuzzy/" "2.30" ((21 "b") (30 "u")) "b------p")) nil)) 182)
[Actionlist] 51.11
182: finished :fuzzy-completions 
params: [[['"buffered-image"', '"20.47"', [['0', '"bu"']], '"b-------"'], ['"get-binarized-values"', '"9.53"', [['4', '"b"'], ['17', '"u"']], '"-f------"'], ['"clojure.contrib.map-utils/"', '"9.42"', [['14', '"b"'], ['20', '"u"']], '"b------p"'], ['"clojure.contrib.macro-utils/"', '"9.38"', [['14', '"b"'], ['22', '"u"']], '"b------p"'], ['"swank.commands.contrib.swank-fuzzy/"', '"2.30"', [['21', '"b"'], ['30', '"u"']], '"b------p"']], 'nil']
[---Sent---] 51.13
(:emacs-rex (swank:operator-arglist "get-binarized-values" "image-processing.core") "image-processing.core" t 183)

[-Received-] 51.14
(:return (:ok "([img threshold])") 183)
[Actionlist] 51.14
183: finished :operator-arglist 
params: "([img threshold])"
[---Sent---] 51.24
(:emacs-rex (swank:listener-eval "(take 10 (get-binarized-values buffered-image 80))
") "image-processing.core" :repl-thread 184)

[-Received-] 51.3
(:write-string "(255 255 255 255 255 255 255 255 255 255)
" :repl-result)
[-Received-] 51.3
(:return (:ok nil) 184)
[Actionlist] 51.3
184: finished :listener-eval 
params: nil
[---Sent---] 52.06
(:emacs-rex (swank:listener-eval "(defn get-binarized-values
  \"Doc\"
  #^{:arglists [img threshold]}
  [img threshold]
  (map #(if (< % threshold) 0 255) (get-grayscale-values img)))
") "image-processing.core" :repl-thread 185)

[-Received-] 52.11
(:write-string "#'image-processing.core/get-binarized-values
" :repl-result)
[-Received-] 52.11
(:return (:ok nil) 185)
[Actionlist] 52.11
185: finished :listener-eval 
params: nil
[---Sent---] 52.37
(:emacs-rex (swank:operator-arglist "nth" "image-processing.core") "image-processing.core" t 186)

[-Received-] 52.37
(:return (:ok "([coll index] [coll index not-found])") 186)
[Actionlist] 52.37
186: finished :operator-arglist 
params: "([coll index] [coll index not-found])"
[---Sent---] 52.51
(:emacs-rex (swank:operator-arglist "def" "image-processing.core") "image-processing.core" t 187)

[-Received-] 52.52
(:return (:ok nil) 187)
[Actionlist] 52.52
187: finished :operator-arglist 
params: nil
[---Sent---] 52.55
(:emacs-rex (swank:operator-arglist "def" "image-processing.core") "image-processing.core" t 188)

[-Received-] 52.55
(:return (:ok nil) 188)
[Actionlist] 52.55
188: finished :operator-arglist 
params: nil
[---Sent---] 52.68
(:emacs-rex (swank:fuzzy-completions "get-bi" "image-processing.core" :limit 200 :time-limit-in-msec 2000) nil t 189)

[-Received-] 52.68
(:return (:ok ((("get-binarized-values" "62.00" ((0 "get-bi")) "-f------")) nil)) 189)
[Actionlist] 52.68
189: finished :fuzzy-completions 
params: [[['"get-binarized-values"', '"62.00"', [['0', '"get-bi"']], '"-f------"']], 'nil']
[---Sent---] 52.7
(:emacs-rex (swank:operator-arglist "get-binarized-values" "image-processing.core") "image-processing.core" t 190)

[-Received-] 52.7
(:return (:ok "([img threshold])") 190)
[Actionlist] 52.7
190: finished :operator-arglist 
params: "([img threshold])"
[---Sent---] 52.76
(:emacs-rex (swank:fuzzy-completions "bu" "image-processing.core" :limit 200 :time-limit-in-msec 2000) nil t 191)

[-Received-] 52.76
(:return (:ok ((("buffered-image" "20.47" ((0 "bu")) "b-------") ("get-binarized-values" "9.53" ((4 "b") (17 "u")) "-f------") ("clojure.contrib.map-utils/" "9.42" ((14 "b") (20 "u")) "b------p") ("clojure.contrib.macro-utils/" "9.38" ((14 "b") (22 "u")) "b------p") ("swank.commands.contrib.swank-fuzzy/" "2.30" ((21 "b") (30 "u")) "b------p")) nil)) 191)
[Actionlist] 52.76
191: finished :fuzzy-completions 
params: [[['"buffered-image"', '"20.47"', [['0', '"bu"']], '"b-------"'], ['"get-binarized-values"', '"9.53"', [['4', '"b"'], ['17', '"u"']], '"-f------"'], ['"clojure.contrib.map-utils/"', '"9.42"', [['14', '"b"'], ['20', '"u"']], '"b------p"'], ['"clojure.contrib.macro-utils/"', '"9.38"', [['14', '"b"'], ['22', '"u"']], '"b------p"'], ['"swank.commands.contrib.swank-fuzzy/"', '"2.30"', [['21', '"b"'], ['30', '"u"']], '"b------p"']], 'nil']
[---Sent---] 52.82
(:emacs-rex (swank:operator-arglist "get-binarized-values" "image-processing.core") "image-processing.core" t 192)

[-Received-] 52.82
(:return (:ok "([img threshold])") 192)
[Actionlist] 52.82
192: finished :operator-arglist 
params: "([img threshold])"
[---Sent---] 52.92
(:emacs-rex (swank:listener-eval "(def x (get-binarized-values buffered-image 80))
") "image-processing.core" :repl-thread 193)

[-Received-] 52.93
(:write-string "#'image-processing.core/x
" :repl-result)
[-Received-] 53.02
(:return (:ok nil) 193)
[Actionlist] 53.02
193: finished :listener-eval 
params: nil
[---Sent---] 53.16
(:emacs-rex (swank:operator-arglist "type" "image-processing.core") "image-processing.core" t 194)

[-Received-] 53.17
(:return (:ok "([x])") 194)
[Actionlist] 53.17
194: finished :operator-arglist 
params: "([x])"
[---Sent---] 53.24
(:emacs-rex (swank:listener-eval "(type x) 
") "image-processing.core" :repl-thread 195)

[-Received-] 53.24
(:write-string "clojure.lang.LazySeq
" :repl-result)
[-Received-] 53.34
(:return (:ok nil) 195)
[Actionlist] 53.34
195: finished :listener-eval 
params: nil
[---Sent---] 53.49
(:emacs-rex (swank:operator-arglist "nth" "image-processing.core") "image-processing.core" t 196)

[-Received-] 53.49
(:return (:ok "([coll index] [coll index not-found])") 196)
[Actionlist] 53.49
196: finished :operator-arglist 
params: "([coll index] [coll index not-found])"
[---Sent---] 53.53
(:emacs-rex (swank:operator-arglist "nth" "image-processing.core") "image-processing.core" t 197)

[-Received-] 53.53
(:return (:ok "([coll index] [coll index not-found])") 197)
[Actionlist] 53.53
197: finished :operator-arglist 
params: "([coll index] [coll index not-found])"
[---Sent---] 53.64
(:emacs-rex (swank:listener-eval "(nth x 200) 
") "image-processing.core" :repl-thread 198)

[-Received-] 53.7
(:write-string "255
" :repl-result)
[-Received-] 53.7
(:return (:ok nil) 198)
[Actionlist] 53.7
198: finished :listener-eval 
params: nil
[---Sent---] 53.96
(:emacs-rex (swank:operator-arglist "Return" "image-processing.core") "image-processing.core" t 199)

[-Received-] 53.96
(:return (:ok nil) 199)
[Actionlist] 53.96
199: finished :operator-arglist 
params: nil
[---Sent---] 53.99
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 200)

[-Received-] 53.99
(:return (:ok nil) 200)
[Actionlist] 53.99
200: finished :operator-arglist 
params: nil
[---Sent---] 54.02
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 201)

[-Received-] 54.02
(:return (:ok nil) 201)
[Actionlist] 54.02
201: finished :operator-arglist 
params: nil
[---Sent---] 54.08
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 202)

[-Received-] 54.08
(:return (:ok nil) 202)
[Actionlist] 54.08
202: finished :operator-arglist 
params: nil
[---Sent---] 54.18
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 203)

[-Received-] 54.18
(:return (:ok nil) 203)
[Actionlist] 54.18
203: finished :operator-arglist 
params: nil
[---Sent---] 54.35
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 204)

[-Received-] 54.35
(:return (:ok nil) 204)
[Actionlist] 54.35
204: finished :operator-arglist 
params: nil
[---Sent---] 54.47
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 205)

[-Received-] 54.47
(:return (:ok nil) 205)
[Actionlist] 54.47
205: finished :operator-arglist 
params: nil
[---Sent---] 54.52
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 206)

[-Received-] 54.52
(:return (:ok nil) 206)
[Actionlist] 54.52
206: finished :operator-arglist 
params: nil
[---Sent---] 54.64
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 207)

[-Received-] 54.64
(:return (:ok nil) 207)
[Actionlist] 54.64
207: finished :operator-arglist 
params: nil
[---Sent---] 54.71
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 208)

[-Received-] 54.71
(:return (:ok nil) 208)
[Actionlist] 54.71
208: finished :operator-arglist 
params: nil
[---Sent---] 54.74
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 209)

[-Received-] 54.74
(:return (:ok nil) 209)
[Actionlist] 54.74
209: finished :operator-arglist 
params: nil
[---Sent---] 54.8
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 210)

[-Received-] 54.8
(:return (:ok nil) 210)
[Actionlist] 54.8
210: finished :operator-arglist 
params: nil
[---Sent---] 54.89
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 211)

[-Received-] 54.89
(:return (:ok nil) 211)
[Actionlist] 54.89
211: finished :operator-arglist 
params: nil
[---Sent---] 55.2
(:emacs-rex (swank:operator-arglist "If" "image-processing.core") "image-processing.core" t 212)

[-Received-] 55.21
(:return (:ok nil) 212)
[Actionlist] 55.21
212: finished :operator-arglist 
params: nil
[---Sent---] 55.27
(:emacs-rex (swank:operator-arglist "If" "image-processing.core") "image-processing.core" t 213)

[-Received-] 55.28
(:return (:ok nil) 213)
[Actionlist] 55.29
213: finished :operator-arglist 
params: nil
[---Sent---] 55.31
(:emacs-rex (swank:operator-arglist "If" "image-processing.core") "image-processing.core" t 214)

[-Received-] 55.31
(:return (:ok nil) 214)
[Actionlist] 55.31
214: finished :operator-arglist 
params: nil
[---Sent---] 55.44
(:emacs-rex (swank:operator-arglist "If" "image-processing.core") "image-processing.core" t 215)

[-Received-] 55.44
(:return (:ok nil) 215)
[Actionlist] 55.44
215: finished :operator-arglist 
params: nil
[---Sent---] 55.51
(:emacs-rex (swank:operator-arglist "If" "image-processing.core") "image-processing.core" t 216)

[-Received-] 55.51
(:return (:ok nil) 216)
[Actionlist] 55.51
216: finished :operator-arglist 
params: nil
[---Sent---] 55.54
(:emacs-rex (swank:operator-arglist "If" "image-processing.core") "image-processing.core" t 217)

[-Received-] 55.54
(:return (:ok nil) 217)
[Actionlist] 55.54
217: finished :operator-arglist 
params: nil
[---Sent---] 55.64
(:emacs-rex (swank:operator-arglist "If" "image-processing.core") "image-processing.core" t 218)

[-Received-] 55.65
(:return (:ok nil) 218)
[Actionlist] 55.65
218: finished :operator-arglist 
params: nil
[---Sent---] 55.71
(:emacs-rex (swank:operator-arglist "If" "image-processing.core") "image-processing.core" t 219)

[-Received-] 55.71
(:return (:ok nil) 219)
[Actionlist] 55.71
219: finished :operator-arglist 
params: nil
[---Sent---] 56.29
(:emacs-rex (swank:operator-arglist "If" "image-processing.core") "image-processing.core" t 220)

[-Received-] 56.29
(:return (:ok nil) 220)
[Actionlist] 56.29
220: finished :operator-arglist 
params: nil
[---Sent---] 56.8
(:emacs-rex (swank:operator-arglist "euclidian-argb-distance" "image-processing.core") "image-processing.core" t 221)

[-Received-] 56.81
(:return (:ok "([color1 color2])") 221)
[Actionlist] 56.81
221: finished :operator-arglist 
params: "([color1 color2])"
[---Sent---] 56.81
(:emacs-rex (swank:describe-function "euclidian-argb-distance") "image-processing.core" t 222)

[-Received-] 56.81
(:return (:ok "-------------------------
image-processing.core/euclidian-argb-distance
([color1 color2])
  Euclidian distance between two [r g b] colors.
") 222)
[Actionlist] 56.81
222: finished :describe-function 
params: "-------------------------
image-processing.core/euclidian-argb-distance
([color1 color2])
  Euclidian distance between two [r g b] colors.
"
[---Sent---] 56.85
(:emacs-rex (swank:operator-arglist "color2" "image-processing.core") "image-processing.core" t 223)

[-Received-] 56.85
(:return (:ok nil) 223)
[Actionlist] 56.85
223: finished :operator-arglist 
params: nil
[---Sent---] 57.11
(:emacs-rex (swank:operator-arglist "help" "image-processing.core") "image-processing.core" t 224)

[-Received-] 57.11
(:return (:ok nil) 224)
[Actionlist] 57.11
224: finished :operator-arglist 
params: nil
[---Sent---] 57.33
(:emacs-rex (swank:listener-eval "(help histogram)
") "image-processing.core" :repl-thread 225)

[-Received-] 57.33
(:debug 2 1 ("Unable to resolve symbol: help in this context" "  [Thrown class java.lang.Exception]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "clojure.lang.Compiler.resolveIn(Compiler.java:5672)" (:restartable nil)) (1 "clojure.lang.Compiler.resolve(Compiler.java:5616)" (:restartable nil)) (2 "clojure.lang.Compiler.analyzeSymbol(Compiler.java:5579)" (:restartable nil)) (3 "clojure.lang.Compiler.analyze(Compiler.java:5167)" (:restartable nil)) (4 "clojure.lang.Compiler.analyze(Compiler.java:5146)" (:restartable nil)) (5 "clojure.lang.Compiler$InvokeExpr.parse(Compiler.java:3031)" (:restartable nil)) (6 "clojure.lang.Compiler.analyzeSeq(Compiler.java:5366)" (:restartable nil)) (7 "clojure.lang.Compiler.analyze(Compiler.java:5185)" (:restartable nil)) (8 "clojure.lang.Compiler.analyze(Compiler.java:5146)" (:restartable nil)) (9 "clojure.lang.Compiler$BodyExpr$Parser.parse(Compiler.java:4665)" (:restartable nil))) (nil))
[-Received-] 57.34
(:debug-activate 2 1 nil)
[---Sent---] 57.47
(:emacs-rex (swank:throw-to-toplevel) nil 2 226)

[-Received-] 57.47
(:return (:abort) 226)
[Actionlist] 57.47
225: pending  :listener-eval 
226: finished :throw-to-toplevel 
[-Received-] 57.47
(:debug-return 2 1 nil)
[-Received-] 57.47
(:return (:abort) 225)
[Actionlist] 57.47
225: finished :listener-eval 
226: finished :throw-to-toplevel 
[---Sent---] 57.63
(:emacs-rex (swank:operator-arglist "do" "image-processing.core") "image-processing.core" t 227)

[-Received-] 57.63
(:return (:ok nil) 227)
[Actionlist] 57.63
227: finished :operator-arglist 
params: nil
[---Sent---] 57.72
(:emacs-rex (swank:operator-arglist "doc" "image-processing.core") "image-processing.core" t 228)

[-Received-] 57.72
(:return (:ok "([name])") 228)
[Actionlist] 57.72
228: finished :operator-arglist 
params: "([name])"
[---Sent---] 57.92
(:emacs-rex (swank:listener-eval "(doc histogram)
") "image-processing.core" :repl-thread 229)

[-Received-] 57.92
(:write-string "-------------------------
")
[-Received-] 57.92
(:write-string "incanter.charts/histogram
")
[-Received-] 57.92
(:write-string "([x & options])
")
[-Received-] 57.92
(:write-string "Macro
")
[-Received-] 57.92
(:write-string "   Returns a JFreeChart object representing the histogram of the given data.
  Use the 'view' function to display the chart, or the 'save' function
  to write it to a file.

  Options:
    :nbins (default 10) number of bins
    :density (default false) if false, plots frequency, otherwise density
    :title (default 'Histogram') main title
    :x-label (default x expression)
    :y-label (default 'Frequency')
    :legend (default false) prints legend
    :series-label (default x expression)


  See also:
    view, save, add-histogram

  Examples:

    (use '(incanter core charts stats))
    (view (histogram (sample-normal 1000)))

    # plot a density histogram
    (def hist (histogram (sample-normal 1000) :density true))
    (view hist)

    # add a normal density line to the plot
    (def x (range -4 4 0.01))
    (add-lines hist x (pdf-normal x))

    # plot some gamma data
    (def gam-hist (histogram (sample-gamma 1000) :density true :nbins 30))
    (view gam-hist)
    (def x (range 0 8 0.01))
    (add-lines gam-hist x (pdf-gamma x))

    (use 'incanter.datasets)
    (def iris (get-dataset :iris))
    (view (histogram :Sepal.Width :data iris))

    (with-data (get-dataset :iris)
      (view (histogram :Petal.Length)))



  References:
    http://www.jfree.org/jfreechart/api/javadoc/
    http://www.jfree.org/jfreechart/api/javadoc/org/jfree/chart/JFreeChart.html


")
[-Received-] 57.92
(:write-string "nil
" :repl-result)
[-Received-] 57.92
(:return (:ok nil) 229)
[Actionlist] 57.92
229: finished :listener-eval 
params: nil
[---Sent---] 58.05
(:emacs-rex (swank:operator-arglist "x" "image-processing.core") "image-processing.core" t 230)

[-Received-] 58.05
(:return (:ok nil) 230)
[Actionlist] 58.05
230: finished :operator-arglist 
params: nil
[---Sent---] 58.15
(:emacs-rex (swank:operator-arglist "data" "image-processing.core") "image-processing.core" t 231)

[-Received-] 58.16
(:return (:ok nil) 231)
[Actionlist] 58.16
231: finished :operator-arglist 
params: nil
[---Sent---] 58.43
(:emacs-rex (swank:operator-arglist "sample-normal" "image-processing.core") "image-processing.core" t 232)

[-Received-] 58.43
(:return (:ok "([size & options])") 232)
[Actionlist] 58.43
232: finished :operator-arglist 
params: "([size & options])"
[---Sent---] 58.51
(:emacs-rex (swank:listener-eval "(sample-normal 10)
") "image-processing.core" :repl-thread 233)

[-Received-] 58.51
(:write-string "(0.5713058347218896 0.35015908117568323 -1.7571218008507146 0.37041451142898124 0.15402332392391999 -0.2837614482609455 0.2260263503702556 -0.6300595360905874 1.470568655351367 -0.14284039563330522)
" :repl-result)
[-Received-] 58.6
(:return (:ok nil) 233)
[Actionlist] 58.6
233: finished :listener-eval 
params: nil
[---Sent---] 58.93
(:emacs-rex (swank:operator-arglist "view" "image-processing.core") "image-processing.core" t 234)

[-Received-] 58.93
(:return (:ok nil) 234)
[Actionlist] 58.93
234: finished :operator-arglist 
params: nil
[---Sent---] 59.07
(:emacs-rex (swank:operator-arglist "histogram" "image-processing.core") "image-processing.core" t 235)

[-Received-] 59.07
(:return (:ok "([x & options])") 235)
[Actionlist] 59.07
235: finished :operator-arglist 
params: "([x & options])"
[---Sent---] 59.25
(:emacs-rex (swank:operator-arglist "sample-normal" "image-processing.core") "image-processing.core" t 236)

[-Received-] 59.25
(:return (:ok "([size & options])") 236)
[Actionlist] 59.25
236: finished :operator-arglist 
params: "([size & options])"
[---Sent---] 59.33
(:emacs-rex (swank:listener-eval "(view (histogram (sample-normal 10)))
") "image-processing.core" :repl-thread 237)

[-Received-] 59.4
(:write-string "#<ChartFrame org.jfree.chart.ChartFrame[frame0,0,31,500x400,layout=java.awt.BorderLayout,title=Incanter Plot,resizable,normal,defaultCloseOperation=DISPOSE_ON_CLOSE,rootPane=javax.swing.JRootPane[,5,25,490x370,layout=javax.swing.JRootPane$RootLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=16777673,maximumSize=,minimumSize=,preferredSize=],rootPaneCheckingEnabled=true]>
" :repl-result)
[-Received-] 59.4
(:return (:ok nil) 237)
[Actionlist] 59.4
237: finished :listener-eval 
params: nil
[---Sent---] 59.67
(:emacs-rex (swank:operator-arglist "gam-hist" "image-processing.core") "image-processing.core" t 238)

[-Received-] 59.67
(:return (:ok nil) 238)
[Actionlist] 59.68
238: finished :operator-arglist 
params: nil
[---Sent---] 59.69
(:emacs-rex (swank:operator-arglist "gam-hist" "image-processing.core") "image-processing.core" t 239)

[-Received-] 59.7
(:return (:ok nil) 239)
[Actionlist] 59.7
239: finished :operator-arglist 
params: nil
[---Sent---] 60.06
(:emacs-rex (swank:operator-arglist "0" "image-processing.core") "image-processing.core" t 240)

[-Received-] 60.06
(:return (:ok nil) 240)
[Actionlist] 60.06
240: finished :operator-arglist 
params: nil
[---Sent---] 60.26
(:emacs-rex (swank:listener-eval "(sample-normal 10)
") "image-processing.core" :repl-thread 241)

[-Received-] 60.31
(:write-string "(-1.401582304852513 -2.054403109554184 -0.9504787649990896 -0.25169416821931173 -0.3545144970808913 1.6012603240451382 1.3056133361591071 -0.6607494232840501 0.04600335597337085 0.49376519671814967)
" :repl-result)
[-Received-] 60.31
(:return (:ok nil) 241)
[Actionlist] 60.31
241: finished :listener-eval 
params: nil
[---Sent---] 60.59
(:emacs-rex (swank:operator-arglist "def" "image-processing.core") "image-processing.core" t 242)

[-Received-] 60.59
(:return (:ok nil) 242)
[Actionlist] 60.59
242: finished :operator-arglist 
params: nil
[---Sent---] 60.72
(:emacs-rex (swank:listener-eval "(def x (sample-normal 10)) 
") "image-processing.core" :repl-thread 243)

[-Received-] 60.72
(:write-string "#'image-processing.core/x
" :repl-result)
[-Received-] 60.72
(:return (:ok nil) 243)
[Actionlist] 60.72
243: finished :listener-eval 
params: nil
[---Sent---] 60.85
(:emacs-rex (swank:listener-eval "x
") "image-processing.core" :repl-thread 244)

[-Received-] 60.85
(:write-string "(-0.6513795923034033 0.011618472086589421 0.16089610452349085 -0.44442444837223594 1.616113754210819 -1.7705349033285052 1.2345286450529416 0.6682171953371037 -0.43900179395482375 1.770611083219549)
" :repl-result)
[-Received-] 60.85
(:return (:ok nil) 244)
[Actionlist] 60.85
244: finished :listener-eval 
params: nil
[---Sent---] 61.08
(:emacs-rex (swank:operator-arglist "view" "image-processing.core") "image-processing.core" t 245)

[-Received-] 61.08
(:return (:ok nil) 245)
[Actionlist] 61.08
245: finished :operator-arglist 
params: nil
[---Sent---] 61.27
(:emacs-rex (swank:operator-arglist "histogram" "image-processing.core") "image-processing.core" t 246)

[-Received-] 61.27
(:return (:ok "([x & options])") 246)
[Actionlist] 61.27
246: finished :operator-arglist 
params: "([x & options])"
[---Sent---] 67.01
(:emacs-rex (swank:operator-arglist ":arglists" "image-processing.core") "image-processing.core" t 247)

[-Received-] 67.15
(:return (:ok "([map])") 247)
[Actionlist] 67.15
247: finished :operator-arglist 
params: "([map])"
[---Sent---] 67.5
(:emacs-rex (swank:listener-eval "
") "image-processing.core" :repl-thread 248)

[-Received-] 67.53
(:write-string "nil
" :repl-result)
[-Received-] 67.53
(:return (:ok nil) 248)
[Actionlist] 67.53
248: finished :listener-eval 
params: nil
[---Sent---] 75.86
(:emacs-rex (swank:operator-arglist "bit-shift-right" "image-processing.core") "image-processing.core" t 249)

[---Sent---] 90.99
(:emacs-rex (swank:operator-arglist ":use" "image-processing.core") "image-processing.core" t 250)

[---Sent---] 99.92
(:emacs-rex (swank:listener-eval "(ns image-processing.test.image
  (:use [clojure.test])
  (:require [image-processing.image])
  (:import [image_processing.image Image]))

(deftest select-point
  (let [mimg (Image. (vec (range 20)) 4)]
    (is 11 (get-point mimg 3 2))
    (is nil? (get-point mimg 4 2))))
") "user" :repl-thread 255)

[-Received-] 99.96
(:new-package "image-processing.test.image" "image-processing.test.image")
[-Received-] 99.96
(:debug 1 1 ("Unable to resolve symbol: get-point in this context" "  [Thrown class java.lang.RuntimeException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "      Util.java:156 clojure.lang.Util.runtimeException" (:restartable nil)) (1 " Compiler.java:6720 clojure.lang.Compiler.resolveIn" (:restartable nil)) (2 " Compiler.java:6664 clojure.lang.Compiler.resolve" (:restartable nil)) (3 " Compiler.java:6625 clojure.lang.Compiler.analyzeSymbol" (:restartable nil)) (4 " Compiler.java:6198 clojure.lang.Compiler.analyze" (:restartable nil)) (5 " Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil)) (6 " Compiler.java:3452 clojure.lang.Compiler$InvokeExpr.parse" (:restartable nil)) (7 " Compiler.java:6411 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (8 " Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil)) (9 " Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil))) (nil))
[-Received-] 99.96
(:debug-activate 1 1 nil)
[---Sent---] 100.03
(:emacs-rex (swank:throw-to-toplevel) nil 1 256)

[-Received-] 100.03
(:return (:abort) 256)
[Actionlist] 100.03
255: pending  :listener-eval 
256: finished :throw-to-toplevel 
[---Sent---] 100.22
(:emacs-rex (swank:listener-eval "(ns image-processing.image)

(defprotocol Points
  \"This abstracts the ways to access points.\"
  (get-point [this x y] \"Returns the content of a specific point.\"))

(defrecord Image [points width]
  Points
  (get-point [img x y]
    (when (< x width)
      (get points (+ x (* y width))))))

") "image-processing.test.image" :repl-thread 257)

[-Received-] 100.25
(:write-string "image_processing.image.Image
" :repl-result)
[-Received-] 100.25
(:new-package "image-processing.image" "image-processing.image")
[-Received-] 100.26
(:indentation-update (("deftest-" . 1) ("deftest" . 1) ("testing" . 1) ("with-test-out" . 0) ("set-test" . 1) ("with-test" . 1) ("with-bindings" . 1)))
[-Received-] 100.26
(:return (:ok nil) 257)
[Actionlist] 100.26
257: finished :listener-eval 
params: nil
[---Sent---] 100.39
(:emacs-rex (swank:listener-eval "(ns image-processing.test.image
  (:use [clojure.test])
  (:require [image-processing.image])
  (:import [image_processing.image Image]))

(deftest select-point
  (let [mimg (Image. (vec (range 20)) 4)]
    (is 11 (get-point mimg 3 2))
    (is nil? (get-point mimg 4 2))))
") "image-processing.image" :repl-thread 258)

[-Received-] 100.42
(:new-package "image-processing.test.image" "image-processing.test.image")
[-Received-] 100.42
(:debug 1 1 ("Unable to resolve symbol: get-point in this context" "  [Thrown class java.lang.RuntimeException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "      Util.java:156 clojure.lang.Util.runtimeException" (:restartable nil)) (1 " Compiler.java:6720 clojure.lang.Compiler.resolveIn" (:restartable nil)) (2 " Compiler.java:6664 clojure.lang.Compiler.resolve" (:restartable nil)) (3 " Compiler.java:6625 clojure.lang.Compiler.analyzeSymbol" (:restartable nil)) (4 " Compiler.java:6198 clojure.lang.Compiler.analyze" (:restartable nil)) (5 " Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil)) (6 " Compiler.java:3452 clojure.lang.Compiler$InvokeExpr.parse" (:restartable nil)) (7 " Compiler.java:6411 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (8 " Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil)) (9 " Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil))) (nil))
[-Received-] 100.42
(:debug-activate 1 1 nil)
[---Sent---] 100.53
(:emacs-rex (swank:throw-to-toplevel) nil 1 259)

[-Received-] 100.53
(:return (:abort) 259)
[Actionlist] 100.53
258: pending  :listener-eval 
259: finished :throw-to-toplevel 
[---Sent---] 100.81
(:emacs-rex (swank:listener-eval "(ns image-processing.test.image
  (:use [clojure.test])
  (:require [image-processing.image])
  (:import [image_processing.image Image]))
") "image-processing.test.image" :repl-thread 260)

[-Received-] 100.84
(:write-string "image_processing.image.Image
" :repl-result)
[-Received-] 100.84
(:indentation-update (("with-bindings" . 0)))
[-Received-] 100.84
(:return (:ok nil) 260)
[Actionlist] 100.84
260: finished :listener-eval 
params: nil
[---Sent---] 101.0
(:emacs-rex (swank:listener-eval "(deftest select-point
  (let [mimg (Image. (vec (range 20)) 4)]
    (is 11 (get-point mimg 3 2))
    (is nil? (get-point mimg 4 2))))
") "image-processing.test.image" :repl-thread 261)

[-Received-] 101.03
(:debug 1 1 ("Unable to resolve symbol: get-point in this context" "  [Thrown class java.lang.RuntimeException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "      Util.java:156 clojure.lang.Util.runtimeException" (:restartable nil)) (1 " Compiler.java:6720 clojure.lang.Compiler.resolveIn" (:restartable nil)) (2 " Compiler.java:6664 clojure.lang.Compiler.resolve" (:restartable nil)) (3 " Compiler.java:6625 clojure.lang.Compiler.analyzeSymbol" (:restartable nil)) (4 " Compiler.java:6198 clojure.lang.Compiler.analyze" (:restartable nil)) (5 " Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil)) (6 " Compiler.java:3452 clojure.lang.Compiler$InvokeExpr.parse" (:restartable nil)) (7 " Compiler.java:6411 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (8 " Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil)) (9 " Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil))) (nil))
[-Received-] 101.03
(:debug-activate 1 1 nil)
[---Sent---] 102.37
(:emacs-rex (swank:listener-eval "(ns image-processing.image)

(defprotocol Points
  \"This abstracts the ways to access points.\"
  (get-point [this x y] \"Returns the content of a specific point.\"))

(defrecord Image [points width]
  Points
  (get-point [x y]
    (when (< x width)
      (get points (+ x (* y width))))))

") "image-processing.test.image" :repl-thread 262)

[-Received-] 102.4
(:new-package "image-processing.image" "image-processing.image")
[-Received-] 102.41
(:debug 1 2 ("Can't define method not in interfaces: get_point" "  [Thrown class java.lang.IllegalArgumentException]" nil) (("QUIT" "Quit to the SLIME top level") ("ABORT" "ABORT to SLIME level 0")) ((0 "         Compiler.java:7735 clojure.lang.Compiler$NewInstanceMethod.parse" (:restartable nil)) (1 "         Compiler.java:7296 clojure.lang.Compiler$NewInstanceExpr.build" (:restartable nil)) (2 "         Compiler.java:7178 clojure.lang.Compiler$NewInstanceExpr$DeftypeParser.parse" (:restartable nil)) (3 "         Compiler.java:6409 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (4 "         Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil)) (5 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil)) (6 "         Compiler.java:5572 clojure.lang.Compiler$BodyExpr$Parser.parse" (:restartable nil)) (7 "         Compiler.java:5873 clojure.lang.Compiler$LetExpr$Parser.parse" (:restartable nil)) (8 "         Compiler.java:6409 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (9 "         Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil))) (nil))
[-Received-] 102.42
(:debug-activate 1 2 nil)
[---Sent---] 102.58
(:emacs-rex (swank:throw-to-toplevel) nil 1 263)

[-Received-] 102.58
(:return (:abort) 263)
[Actionlist] 102.58
261: pending  :listener-eval 
262: pending  :listener-eval 
263: finished :throw-to-toplevel 
[-Received-] 102.58
(:debug-return 1 2 nil)
[-Received-] 102.58
(:return (:abort) 262)
[Actionlist] 102.58
261: pending  :listener-eval 
262: finished :listener-eval 
263: finished :throw-to-toplevel 
[-Received-] 102.58
(:debug-return 1 1 nil)
[-Received-] 102.58
(:return (:abort) 261)
[Actionlist] 102.58
261: finished :listener-eval 
262: finished :listener-eval 
263: finished :throw-to-toplevel 
[---Sent---] 102.75
(:emacs-rex (swank:listener-eval "(defprotocol Points
  \"This abstracts the ways to access points.\"
  (get-point [this x y] \"Returns the content of a specific point.\"))
") "image-processing.image" :repl-thread 264)

[-Received-] 102.79
(:write-string "Points
" :repl-result)
[-Received-] 102.79
(:indentation-update (("with-bindings" . 1)))
[-Received-] 102.8
(:return (:ok nil) 264)
[Actionlist] 102.8
264: finished :listener-eval 
params: nil
[---Sent---] 102.95
(:emacs-rex (swank:listener-eval "(defprotocol Points
  \"This abstracts the ways to access points.\"
  (get-point [this x y] \"Returns the content of a specific point.\"))
") "image-processing.image" :repl-thread 265)

[-Received-] 103.0
(:write-string "Points
" :repl-result)
[-Received-] 103.0
(:indentation-update (("with-bindings" . 0)))
[-Received-] 103.0
(:return (:ok nil) 265)
[Actionlist] 103.0
265: finished :listener-eval 
params: nil
[---Sent---] 103.38
(:emacs-rex (swank:listener-eval "
") "image-processing.image" :repl-thread 266)

[-Received-] 103.38
(:write-string "nil
" :repl-result)
[-Received-] 103.46
(:indentation-update (("with-bindings" . 1)))
[-Received-] 103.46
(:return (:ok nil) 266)
[Actionlist] 103.46
266: finished :listener-eval 
params: nil
[---Sent---] 103.61
(:emacs-rex (swank:listener-eval "(defrecord Image [points width]
  Points
  (get-point [x y]
    (when (< x width)
      (get points (+ x (* y width))))))
") "image-processing.image" :repl-thread 267)

[-Received-] 103.66
(:debug 1 1 ("Can't define method not in interfaces: get_point" "  [Thrown class java.lang.IllegalArgumentException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "         Compiler.java:7735 clojure.lang.Compiler$NewInstanceMethod.parse" (:restartable nil)) (1 "         Compiler.java:7296 clojure.lang.Compiler$NewInstanceExpr.build" (:restartable nil)) (2 "         Compiler.java:7178 clojure.lang.Compiler$NewInstanceExpr$DeftypeParser.parse" (:restartable nil)) (3 "         Compiler.java:6409 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (4 "         Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil)) (5 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil)) (6 "         Compiler.java:5572 clojure.lang.Compiler$BodyExpr$Parser.parse" (:restartable nil)) (7 "         Compiler.java:5873 clojure.lang.Compiler$LetExpr$Parser.parse" (:restartable nil)) (8 "         Compiler.java:6409 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (9 "         Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil))) (nil))
[-Received-] 103.66
(:debug-activate 1 1 nil)
[---Sent---] 103.83
(:emacs-rex (swank:throw-to-toplevel) nil 1 268)

[-Received-] 103.83
(:return (:abort) 268)
[Actionlist] 103.83
267: pending  :listener-eval 
268: finished :throw-to-toplevel 
[-Received-] 103.83
(:debug-return 1 1 nil)
[-Received-] 103.91
(:return (:abort) 267)
[Actionlist] 103.91
267: finished :listener-eval 
[---Sent---] 104.31
(:emacs-rex (swank:listener-eval "(defrecord Image [points width]
  Points
  (get-point [img x y]
    (when (< x width)
      (get points (+ x (* y width))))))
") "image-processing.image" :repl-thread 269)

[-Received-] 104.36
(:write-string "image_processing.image.Image
" :repl-result)
[-Received-] 104.36
(:indentation-update (("with-bindings" . 0)))
[-Received-] 104.36
(:return (:ok nil) 269)
[Actionlist] 104.37
269: finished :listener-eval 
params: nil
[---Sent---] 104.79
(:emacs-rex (swank:listener-eval "(ns image-processing.test.image
  (:use [clojure.test])
  (:use [image-processing.image])
  (:import [image_processing.image Image]))

(deftest select-point
  (let [mimg (Image. (vec (range 20)) 4)]
    (is 11 (get-point mimg 3 2))
    (is nil? (get-point mimg 4 2))))
") "image-processing.test.image" :repl-thread 271)

[-Received-] 104.84
(:write-string "#'image-processing.test.image/select-point
" :repl-result)
[-Received-] 104.85
(:indentation-update (("with-bindings" . 0)))
[-Received-] 104.85
(:return (:ok nil) 271)
[Actionlist] 104.85
271: finished :listener-eval 
params: nil
[---Sent---] 105.02
(:emacs-rex (swank:operator-arglist "ns" "image-processing.image") "image-processing.image" t 272)

[-Received-] 105.03
(:indentation-update (("with-bindings" . 1)))
[-Received-] 105.03
(:return (:ok "([name docstring? attr-map? references*])") 272)
[Actionlist] 105.03
272: finished :operator-arglist 
params: "([name docstring? attr-map? references*])"
[---Sent---] 105.12
(:emacs-rex (swank:fuzzy-completions "image" "image-processing.image" :limit 200 :time-limit-in-msec 2000) nil t 273)

[-Received-] 105.13
(:indentation-update (("with-bindings" . 0)))
[-Received-] 105.13
(:return (:ok ((("image-processing.image/" "50.44" ((0 "image")) "b------p") ("image-processing.test.image/" "50.32" ((0 "image")) "b------p") ("->Image" "20.00" ((2 "image")) "-f------") ("map->Image" "18.33" ((5 "image")) "-f------")) nil)) 273)
[Actionlist] 105.13
273: finished :fuzzy-completions 
params: [[['"image-processing.image/"', '"50.44"', [['0', '"image"']], '"b------p"'], ['"image-processing.test.image/"', '"50.32"', [['0', '"image"']], '"b------p"'], ['"->Image"', '"20.00"', [['2', '"image"']], '"-f------"'], ['"map->Image"', '"18.33"', [['5', '"image"']], '"-f------"']], 'nil']
[---Sent---] 105.4
(:emacs-rex (swank:listener-eval "(ns image-processing.test)
") "image-processing.image" :repl-thread 274)

[-Received-] 105.41
(:write-string "nil
" :repl-result)
[-Received-] 105.48
(:new-package "image-processing.test" "image-processing.test")
[-Received-] 105.49
(:indentation-update (("with-bindings" . 1)))
[-Received-] 105.49
(:return (:ok nil) 274)
[Actionlist] 105.49
274: finished :listener-eval 
params: nil
[---Sent---] 105.73
(:emacs-rex (swank:listener-eval "(ns image-processing.test.image)
") "image-processing.test" :repl-thread 275)

[-Received-] 105.73
(:write-string "nil
" :repl-result)
[-Received-] 105.73
(:new-package "image-processing.test.image" "image-processing.test.image")
[-Received-] 105.81
(:indentation-update (("with-bindings" . 0)))
[-Received-] 105.81
(:return (:ok nil) 275)
[Actionlist] 105.81
275: finished :listener-eval 
params: nil
[---Sent---] 105.94
(:emacs-rex (swank:operator-arglist "run" "image-processing.test.image") "image-processing.test.image" t 276)

[-Received-] 105.94
(:indentation-update (("with-bindings" . 1)))
[-Received-] 105.94
(:return (:ok nil) 276)
[Actionlist] 105.94
276: finished :operator-arglist 
params: nil
[---Sent---] 106.09
(:emacs-rex (swank:listener-eval "(run-tests) 
") "image-processing.test.image" :repl-thread 277)

[-Received-] 106.1
(:write-string "
Testing image-processing.test.image
" nil)
[-Received-] 106.17
(:write-string "
Ran 1 tests containing 2 assertions.
" nil)
[-Received-] 106.17
(:write-string "0 failures, 0 errors.
" nil)
[-Received-] 106.17
(:write-string "{:type :summary, :pass 2, :test 1, :error 0, :fail 0}
" :repl-result)
[-Received-] 106.17
(:indentation-update (("with-bindings" . 0)))
[-Received-] 106.17
(:return (:ok nil) 277)
[Actionlist] 106.17
277: finished :listener-eval 
params: nil
[---Sent---] 106.37
(:emacs-rex (swank:operator-arglist "image_processing.image" "image-processing.test.image") "image-processing.test.image" t 278)

[-Received-] 106.37
(:indentation-update (("with-bindings" . 1)))
[-Received-] 106.37
(:return (:ok nil) 278)
[Actionlist] 106.37
278: finished :operator-arglist 
params: nil
[---Sent---] 109.43
(:emacs-rex (swank:listener-eval "(-> (frame :title \"Hello\",
           :content \"Hello, Seesaw\",
           :on-close :exit)
    pack!
    show!)
") "image-processing.gui" :repl-thread 287)

[-Received-] 109.43
(:debug 1 1 ("Unable to resolve symbol: show! in this context" "  [Thrown class java.lang.RuntimeException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "              Util.java:156 clojure.lang.Util.runtimeException" (:restartable nil)) (1 "         Compiler.java:6720 clojure.lang.Compiler.resolveIn" (:restartable nil)) (2 "         Compiler.java:6664 clojure.lang.Compiler.resolve" (:restartable nil)) (3 "         Compiler.java:6625 clojure.lang.Compiler.analyzeSymbol" (:restartable nil)) (4 "         Compiler.java:6198 clojure.lang.Compiler.analyze" (:restartable nil)) (5 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil)) (6 "         Compiler.java:3452 clojure.lang.Compiler$InvokeExpr.parse" (:restartable nil)) (7 "         Compiler.java:6411 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (8 "         Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil)) (9 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil))) (nil))
[-Received-] 109.44
(:debug-activate 1 1 nil)
[---Sent---] 109.5
(:emacs-rex (swank:throw-to-toplevel) nil 1 288)

[-Received-] 109.51
(:return (:abort) 288)
[Actionlist] 109.51
287: pending  :listener-eval 
288: finished :throw-to-toplevel 
[-Received-] 109.51
(:debug-return 1 1 nil)
[-Received-] 109.51
(:return (:abort) 287)
[Actionlist] 109.51
287: finished :listener-eval 
288: finished :throw-to-toplevel 
[---Sent---] 109.65
(:emacs-rex (swank:listener-eval "(ns image-processing.gui
    (:use seesaw.core))


(-> (frame :title \"Hello\",
           :content \"Hello, Seesaw\",
           :on-close :exit)
    pack!
    show!)
") "image-processing.test.image" :repl-thread 289)

[-Received-] 109.68
(:new-package "image-processing.gui" "image-processing.gui")
[-Received-] 109.68
(:debug 1 1 ("Could not locate seesaw/core__init.class or seesaw/core.clj on classpath: " "  [Thrown class java.io.FileNotFoundException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "        RT.java:430 clojure.lang.RT.load" (:restartable nil)) (1 "        RT.java:398 clojure.lang.RT.load" (:restartable nil)) (2 "      core.clj:5386 clojure.core/load[fn]" (:restartable nil)) (3 "      core.clj:5385 clojure.core/load" (:restartable nil)) (4 "    RestFn.java:408 clojure.lang.RestFn.invoke" (:restartable nil)) (5 "      core.clj:5200 clojure.core/load-one" (:restartable nil)) (6 "      core.clj:5237 clojure.core/load-lib" (:restartable nil)) (7 "    RestFn.java:142 clojure.lang.RestFn.applyTo" (:restartable nil)) (8 "       core.clj:602 clojure.core/apply" (:restartable nil)) (9 "      core.clj:5271 clojure.core/load-libs" (:restartable nil))) (nil))
[-Received-] 109.68
(:debug-activate 1 1 nil)
[---Sent---] 110.2
(:emacs-rex (swank:throw-to-toplevel) nil 1 290)

[-Received-] 110.2
(:return (:abort) 290)
[Actionlist] 110.2
289: pending  :listener-eval 
290: finished :throw-to-toplevel 
[-Received-] 110.2
(:debug-return 1 1 nil)
[-Received-] 110.2
(:return (:abort) 289)
[Actionlist] 110.2
289: finished :listener-eval 
290: finished :throw-to-toplevel 
[---Sent---] 110.47
(:emacs-rex (swank:listener-eval "(ns image-processing.gui
    (:use seesaw.core))
") "image-processing.gui" :repl-thread 291)

[-Received-] 110.48
(:debug 1 1 ("Could not locate seesaw/core__init.class or seesaw/core.clj on classpath: " "  [Thrown class java.io.FileNotFoundException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "        RT.java:430 clojure.lang.RT.load" (:restartable nil)) (1 "        RT.java:398 clojure.lang.RT.load" (:restartable nil)) (2 "      core.clj:5386 clojure.core/load[fn]" (:restartable nil)) (3 "      core.clj:5385 clojure.core/load" (:restartable nil)) (4 "    RestFn.java:408 clojure.lang.RestFn.invoke" (:restartable nil)) (5 "      core.clj:5200 clojure.core/load-one" (:restartable nil)) (6 "      core.clj:5237 clojure.core/load-lib" (:restartable nil)) (7 "    RestFn.java:142 clojure.lang.RestFn.applyTo" (:restartable nil)) (8 "       core.clj:602 clojure.core/apply" (:restartable nil)) (9 "      core.clj:5271 clojure.core/load-libs" (:restartable nil))) (nil))
[-Received-] 110.48
(:debug-activate 1 1 nil)
[---Sent---] 110.56
(:emacs-rex (swank:throw-to-toplevel) nil 1 292)

[-Received-] 110.56
(:return (:abort) 292)
[Actionlist] 110.56
291: pending  :listener-eval 
292: finished :throw-to-toplevel 
[-Received-] 110.57
(:debug-return 1 1 nil)
[-Received-] 110.57
(:return (:abort) 291)
[Actionlist] 110.57
291: finished :listener-eval 
292: finished :throw-to-toplevel 
[---Sent---] 110.98
(:emacs-rex (swank:listener-eval "(ns image-processing.gui
    (:use seesaw.core))
") "image-processing.gui" :repl-thread 293)

[-Received-] 111.01
(:debug 1 1 ("Could not locate seesaw/core__init.class or seesaw/core.clj on classpath: " "  [Thrown class java.io.FileNotFoundException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "        RT.java:430 clojure.lang.RT.load" (:restartable nil)) (1 "        RT.java:398 clojure.lang.RT.load" (:restartable nil)) (2 "      core.clj:5386 clojure.core/load[fn]" (:restartable nil)) (3 "      core.clj:5385 clojure.core/load" (:restartable nil)) (4 "    RestFn.java:408 clojure.lang.RestFn.invoke" (:restartable nil)) (5 "      core.clj:5200 clojure.core/load-one" (:restartable nil)) (6 "      core.clj:5237 clojure.core/load-lib" (:restartable nil)) (7 "    RestFn.java:142 clojure.lang.RestFn.applyTo" (:restartable nil)) (8 "       core.clj:602 clojure.core/apply" (:restartable nil)) (9 "      core.clj:5271 clojure.core/load-libs" (:restartable nil))) (nil))
[-Received-] 111.01
(:debug-activate 1 1 nil)
[---Sent---] 111.13
(:emacs-rex (swank:throw-to-toplevel) nil 1 294)

[-Received-] 111.13
(:return (:abort) 294)
[Actionlist] 111.13
293: pending  :listener-eval 
294: finished :throw-to-toplevel 
[-Received-] 111.14
(:debug-return 1 1 nil)
[-Received-] 111.14
(:return (:abort) 293)
[Actionlist] 111.14
293: finished :listener-eval 
294: finished :throw-to-toplevel 
[---Sent---] 112.86
(:emacs-rex (swank:operator-arglist ":content" "image-processing.gui") "image-processing.gui" t 300)

[-Received-] 112.86
(:return (:ok "([map])") 300)
[Actionlist] 112.86
300: finished :operator-arglist 
params: "([map])"
[---Sent---] 112.86
(:emacs-rex (swank:describe-function ":content") "image-processing.gui" t 301)

[-Received-] 112.86
(:return (:ok nil) 301)
[Actionlist] 112.86
301: finished :describe-function 
params: nil
[---Sent---] 112.92
(:emacs-rex (swank:operator-arglist "invoke-later" "image-processing.gui") "image-processing.gui" t 302)

[-Received-] 112.93
(:return (:ok nil) 302)
[Actionlist] 112.93
302: finished :operator-arglist 
params: nil
[---Sent---] 113.16
(:emacs-rex (swank:listener-eval "(ns image-processing.gui
    (:use seesaw.core))


;(defn -main [& args]
;  (invoke-later
    (-> (frame :title \"Hello\",
               :content \"Hello, Seesaw\",
               :on-close :exit)
        pack!
        show!)
    ;)) 
") "image-processing.gui" :repl-thread 303)

[-Received-] 113.19
(:debug 1 1 ("Could not locate seesaw/core__init.class or seesaw/core.clj on classpath: " "  [Thrown class java.io.FileNotFoundException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "        RT.java:430 clojure.lang.RT.load" (:restartable nil)) (1 "        RT.java:398 clojure.lang.RT.load" (:restartable nil)) (2 "      core.clj:5386 clojure.core/load[fn]" (:restartable nil)) (3 "      core.clj:5385 clojure.core/load" (:restartable nil)) (4 "    RestFn.java:408 clojure.lang.RestFn.invoke" (:restartable nil)) (5 "      core.clj:5200 clojure.core/load-one" (:restartable nil)) (6 "      core.clj:5237 clojure.core/load-lib" (:restartable nil)) (7 "    RestFn.java:142 clojure.lang.RestFn.applyTo" (:restartable nil)) (8 "       core.clj:602 clojure.core/apply" (:restartable nil)) (9 "      core.clj:5271 clojure.core/load-libs" (:restartable nil))) (nil))
[-Received-] 113.19
(:debug-activate 1 1 nil)
[---Sent---] 113.35
(:emacs-rex (swank:throw-to-toplevel) nil 1 304)

[-Received-] 113.35
(:return (:abort) 304)
[Actionlist] 113.36
303: pending  :listener-eval 
304: finished :throw-to-toplevel 
[-Received-] 113.36
(:debug-return 1 1 nil)
[-Received-] 113.36
(:return (:abort) 303)
[Actionlist] 113.36
303: finished :listener-eval 
304: finished :throw-to-toplevel 
[---Sent---] 113.53
(:emacs-rex (swank:listener-eval "(ns image-processing.gui
    (:use seesaw.core))
") "image-processing.gui" :repl-thread 305)

[-Received-] 113.56
(:debug 1 1 ("Could not locate seesaw/core__init.class or seesaw/core.clj on classpath: " "  [Thrown class java.io.FileNotFoundException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "        RT.java:430 clojure.lang.RT.load" (:restartable nil)) (1 "        RT.java:398 clojure.lang.RT.load" (:restartable nil)) (2 "      core.clj:5386 clojure.core/load[fn]" (:restartable nil)) (3 "      core.clj:5385 clojure.core/load" (:restartable nil)) (4 "    RestFn.java:408 clojure.lang.RestFn.invoke" (:restartable nil)) (5 "      core.clj:5200 clojure.core/load-one" (:restartable nil)) (6 "      core.clj:5237 clojure.core/load-lib" (:restartable nil)) (7 "    RestFn.java:142 clojure.lang.RestFn.applyTo" (:restartable nil)) (8 "       core.clj:602 clojure.core/apply" (:restartable nil)) (9 "      core.clj:5271 clojure.core/load-libs" (:restartable nil))) (nil))
[-Received-] 113.56
(:debug-activate 1 1 nil)
[---Sent---] 113.91
(:emacs-rex (swank:throw-to-toplevel) nil 1 306)

[-Received-] 113.91
(:return (:abort) 306)
[Actionlist] 113.91
305: pending  :listener-eval 
306: finished :throw-to-toplevel 
[-Received-] 113.91
(:debug-return 1 1 nil)
[-Received-] 113.91
(:return (:abort) 305)
[Actionlist] 113.91
305: finished :listener-eval 
306: finished :throw-to-toplevel 
[---Sent---] 114.57
(:emacs-rex (swank:operator-arglist "image-processing" "image-processing.gui") "image-processing.gui" t 307)

[-Received-] 114.58
(:return (:ok nil) 307)
[Actionlist] 114.58
307: finished :operator-arglist 
params: nil
[---Sent---] 118.25
(:emacs-rex (swank:connection-info) nil t 310)

[-Received-] 118.3
(:indentation-update (("dothread-keeping-clj" . 1) ("dothread-keeping" . 1) ("dothread" . 0) ("binding-map" . 1) ("print-length-loop" . 1) ("with-pretty-writer" . 1) ("with-pprint-dispatch" . 1) ("with-connection" . 1) ("with-bindings" . 0) ("with-emacs-package" . 0) ("dothread-swank" . 0) ("with-read-line-support" . 0) ("with-package-tracking" . 0) ("doseq" . 1) ("letfn" . 1) ("cond" . 0) ("with-open" . 1) ("sync" . 1) ("let" . 1) ("dotimes" . 1) ("with-in-str" . 1) ("loop" . 1) ("with-out-str" . 0) ("when-not" . 1) ("with-loading-context" . 0) ("future" . 0) ("with-redefs" . 1) ("when-first" . 1) ("comment" . 0) ("condp" . 2) ("with-local-vars" . 1) ("with-bindings" . 1) ("when-let" . 1) ("while" . 1) ("case" . 1) ("locking" . 1) ("delay" . 0) ("io!" . 0) ("lazy-seq" . 0) ("when" . 1) ("binding" . 1) ("defslimefn" . defun) ("returning" . 1) ("continuously" . 0) ("failing-gracefully" . 0)))
[-Received-] 118.31
(:return (:ok (:pid "931" :style :spawn :lisp-implementation (:type "Clojure" :name "clojure" :version "1.3.0") :package (:name "user" :prompt "user") :version "20100404")) 310)
[Actionlist] 118.32
310: finished :connection-info 
params: [':pid', '"931"', ':style', ':spawn', ':lisp-implementation', [':type', '"Clojure"', ':name', '"clojure"', ':version', '"1.3.0"'], ':package', [':name', '"user"', ':prompt', '"user"'], ':version', '"20100404"']
 Package:user Prompt:user
[---Sent---] 118.36
(:emacs-rex (swank:create-repl nil) "image-processing.gui" t 311)

[-Received-] 118.37
(:indentation-update (("with-bindings" . 0)))
[-Received-] 118.38
(:return (:ok ("user" "user")) 311)
[Actionlist] 118.38
311: finished :create-repl 
params: ['"user"', '"user"']
[---Sent---] 118.38
(:emacs-rex (swank:swank-require 'swank-fuzzy) nil t 312)

[---Sent---] 118.42
(:emacs-rex (swank:listener-eval "(use '[clojure.repl :only (source apropos dir pst doc find-doc)])
(use '[clojure.java.javadoc :only (javadoc)])
(use '[clojure.pprint :only (pp pprint)])
") "image-processing.gui" :repl-thread 313)

[---Sent---] 118.46
(:emacs-rex (swank:listener-eval "(ns image-processing.gui
    (:use seesaw.core))
") "user" :repl-thread 314)

[-Received-] 118.52
(:write-string "nil
" :repl-result)
[-Received-] 118.52
(:indentation-update (("with-timeout" . 1) ("with-bindings" . 1)))
[-Received-] 118.52
(:return (:ok nil) 313)
[Actionlist] 118.53
312: pending  :swank-require 
313: finished :listener-eval 
314: pending  :listener-eval 
params: nil
[-Received-] 118.61
(:indentation-update (("with-bindings" . 0)))
[-Received-] 118.61
(:return (:ok nil) 312)
[Actionlist] 118.61
312: finished :swank-require 
314: pending  :listener-eval 
params: nil
[---Sent---] 118.73
(:emacs-rex (swank:operator-arglist "[" "image-processing.gui") "image-processing.gui" t 315)

[-Received-] 118.75
(:indentation-update (("with-bindings" . 1)))
[-Received-] 118.76
(:return (:ok nil) 315)
[Actionlist] 118.76
314: pending  :listener-eval 
315: finished :operator-arglist 
params: nil
[---Sent---] 118.9
(:emacs-rex (swank:operator-arglist ":title" "image-processing.gui") "image-processing.gui" t 316)

[-Received-] 118.94
(:indentation-update (("with-bindings" . 0) ("invoke-now" . 0) ("invoke-soon" . 0) ("signaller" . 1) ("invoke-later" . 0)))
[-Received-] 118.94
(:return (:ok "([map])") 316)
[Actionlist] 118.94
314: pending  :listener-eval 
316: finished :operator-arglist 
params: "([map])"
[---Sent---] 118.94
(:emacs-rex (swank:describe-function ":title") "image-processing.gui" t 317)

[-Received-] 118.97
(:indentation-update (("with-bindings" . 1)))
[-Received-] 118.97
(:return (:ok nil) 317)
[Actionlist] 118.97
314: pending  :listener-eval 
317: finished :describe-function 
params: nil
[---Sent---] 118.98
(:emacs-rex (swank:operator-arglist ":title" "image-processing.gui") "image-processing.gui" t 318)

[-Received-] 119.0
(:indentation-update (("with-bindings" . 0)))
[-Received-] 119.0
(:return (:ok "([map])") 318)
[Actionlist] 119.0
314: pending  :listener-eval 
318: finished :operator-arglist 
params: "([map])"
[---Sent---] 119.0
(:emacs-rex (swank:describe-function ":title") "image-processing.gui" t 319)

[-Received-] 119.05
(:indentation-update (("with-bindings" . 1)))
[-Received-] 119.06
(:return (:ok nil) 319)
[Actionlist] 119.06
314: pending  :listener-eval 
319: finished :describe-function 
params: nil
[---Sent---] 119.06
(:emacs-rex (swank:operator-arglist ":title" "image-processing.gui") "image-processing.gui" t 320)

[-Received-] 119.09
(:indentation-update (("with-bindings" . 0)))
[-Received-] 119.09
(:return (:ok "([map])") 320)
[Actionlist] 119.09
314: pending  :listener-eval 
320: finished :operator-arglist 
params: "([map])"
[---Sent---] 119.09
(:emacs-rex (swank:describe-function ":title") "image-processing.gui" t 321)

[-Received-] 119.13
(:indentation-update (("with-bindings" . 1)))
[-Received-] 119.13
(:return (:ok nil) 321)
[Actionlist] 119.13
314: pending  :listener-eval 
321: finished :describe-function 
params: nil
[---Sent---] 119.14
(:emacs-rex (swank:operator-arglist ":title" "image-processing.gui") "image-processing.gui" t 322)

[-Received-] 119.17
(:indentation-update (("with-bindings" . 0)))
[-Received-] 119.18
(:return (:ok "([map])") 322)
[Actionlist] 119.18
314: pending  :listener-eval 
322: finished :operator-arglist 
params: "([map])"
[---Sent---] 119.18
(:emacs-rex (swank:describe-function ":title") "image-processing.gui" t 323)

[-Received-] 119.21
(:indentation-update (("with-bindings" . 1)))
[-Received-] 119.21
(:return (:ok nil) 323)
[Actionlist] 119.21
314: pending  :listener-eval 
323: finished :describe-function 
params: nil
[---Sent---] 119.22
(:emacs-rex (swank:operator-arglist ":title" "image-processing.gui") "image-processing.gui" t 324)

[-Received-] 119.24
(:indentation-update (("with-bindings" . 0)))
[-Received-] 119.25
(:return (:ok "([map])") 324)
[Actionlist] 119.25
314: pending  :listener-eval 
324: finished :operator-arglist 
params: "([map])"
[---Sent---] 119.25
(:emacs-rex (swank:describe-function ":title") "image-processing.gui" t 325)

[-Received-] 119.26
(:indentation-update (("with-bindings" . 1)))
[-Received-] 119.26
(:return (:ok nil) 325)
[Actionlist] 119.27
314: pending  :listener-eval 
325: finished :describe-function 
params: nil
[---Sent---] 119.27
(:emacs-rex (swank:operator-arglist ":title" "image-processing.gui") "image-processing.gui" t 326)

[-Received-] 119.28
(:indentation-update (("with-bindings" . 0)))
[-Received-] 119.28
(:return (:ok "([map])") 326)
[Actionlist] 119.28
314: pending  :listener-eval 
326: finished :operator-arglist 
params: "([map])"
[---Sent---] 119.29
(:emacs-rex (swank:describe-function ":title") "image-processing.gui" t 327)

[-Received-] 119.29
(:indentation-update (("with-bindings" . 1)))
[-Received-] 119.29
(:return (:ok nil) 327)
[Actionlist] 119.3
314: pending  :listener-eval 
327: finished :describe-function 
params: nil
[---Sent---] 119.3
(:emacs-rex (swank:operator-arglist ":title" "image-processing.gui") "image-processing.gui" t 328)

[-Received-] 119.3
(:indentation-update (("with-bindings" . 0)))
[-Received-] 119.32
(:return (:ok "([map])") 328)
[Actionlist] 119.32
314: pending  :listener-eval 
328: finished :operator-arglist 
params: "([map])"
[---Sent---] 119.32
(:emacs-rex (swank:describe-function ":title") "image-processing.gui" t 329)

[-Received-] 119.33
(:indentation-update (("with-bindings" . 1)))
[-Received-] 119.33
(:return (:ok nil) 329)
[Actionlist] 119.33
314: pending  :listener-eval 
329: finished :describe-function 
params: nil
[---Sent---] 119.33
(:emacs-rex (swank:operator-arglist ":title" "image-processing.gui") "image-processing.gui" t 330)

[-Received-] 119.35
(:indentation-update (("with-bindings" . 0)))
[-Received-] 119.35
(:return (:ok "([map])") 330)
[Actionlist] 119.35
314: pending  :listener-eval 
330: finished :operator-arglist 
params: "([map])"
[---Sent---] 119.35
(:emacs-rex (swank:describe-function ":title") "image-processing.gui" t 331)

[-Received-] 119.37
(:indentation-update (("with-bindings" . 1)))
[-Received-] 119.37
(:return (:ok nil) 331)
[Actionlist] 119.37
314: pending  :listener-eval 
331: finished :describe-function 
params: nil
[---Sent---] 119.37
(:emacs-rex (swank:operator-arglist ":title" "image-processing.gui") "image-processing.gui" t 332)

[-Received-] 119.37
(:return (:ok "([map])") 332)
[Actionlist] 119.38
314: pending  :listener-eval 
332: finished :operator-arglist 
params: "([map])"
[---Sent---] 119.38
(:emacs-rex (swank:describe-function ":title") "image-processing.gui" t 333)

[-Received-] 119.38
(:return (:ok nil) 333)
[Actionlist] 119.38
314: pending  :listener-eval 
333: finished :describe-function 
params: nil
[---Sent---] 119.38
(:emacs-rex (swank:operator-arglist ":title" "image-processing.gui") "image-processing.gui" t 334)

[-Received-] 119.4
(:return (:ok "([map])") 334)
[Actionlist] 119.4
314: pending  :listener-eval 
334: finished :operator-arglist 
params: "([map])"
[---Sent---] 119.4
(:emacs-rex (swank:describe-function ":title") "image-processing.gui" t 335)

[-Received-] 119.4
(:return (:ok nil) 335)
[Actionlist] 119.4
314: pending  :listener-eval 
335: finished :describe-function 
params: nil
[-Received-] 119.66
(:write-string "nil
" :repl-result)
[-Received-] 119.66
(:new-package "image-processing.gui" "image-processing.gui")
[-Received-] 119.66
(:indentation-update (("with-bindings" . 0) ("with-widgets" . 1)))
[-Received-] 119.66
(:return (:ok nil) 314)
[Actionlist] 119.66
314: finished :listener-eval 
params: nil
[---Sent---] 119.82
(:emacs-rex (swank:listener-eval "(-> (frame :title \"Hello\",
               :content \"Hello, Seesaw\",
               :on-close :exit)
        pack!
        show!)
") "image-processing.gui" :repl-thread 336)

[-Received-] 119.87
(:write-string "#<JFrame$Tag$a79ba523 seesaw.core.proxy$javax.swing.JFrame$Tag$a79ba523[frame0,0,31,107x41,invalid,layout=java.awt.BorderLayout,title=Hello,resizable,normal,defaultCloseOperation=EXIT_ON_CLOSE,rootPane=javax.swing.JRootPane[,3,23,101x15,layout=javax.swing.JRootPane$RootLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=16777673,maximumSize=,minimumSize=,preferredSize=],rootPaneCheckingEnabled=true]>
" :repl-result)
[-Received-] 119.87
(:indentation-update (("with-bindings" . 1)))
[-Received-] 119.87
(:return (:ok nil) 336)
[Actionlist] 119.87
336: finished :listener-eval 
params: nil
[---Sent---] 122.95
(:emacs-rex (swank:operator-arglist "select-point" "image-processing.gui") "image-processing.gui" t 337)

[---Sent---] 129.29
(:emacs-rex (swank:operator-arglist "defn" "image-processing.gui") "image-processing.gui" t 338)

[---Sent---] 133.94
(:emacs-rex (swank:connection-info) nil t 339)

[-Received-] 133.99
(:indentation-update (("dothread-keeping-clj" . 1) ("dothread-keeping" . 1) ("dothread" . 0) ("binding-map" . 1) ("print-length-loop" . 1) ("with-pretty-writer" . 1) ("with-pprint-dispatch" . 1) ("with-connection" . 1) ("with-bindings" . 0) ("with-emacs-package" . 0) ("dothread-swank" . 0) ("with-read-line-support" . 0) ("with-package-tracking" . 0) ("doseq" . 1) ("letfn" . 1) ("cond" . 0) ("with-open" . 1) ("sync" . 1) ("let" . 1) ("dotimes" . 1) ("with-in-str" . 1) ("loop" . 1) ("with-out-str" . 0) ("when-not" . 1) ("with-loading-context" . 0) ("future" . 0) ("with-redefs" . 1) ("when-first" . 1) ("comment" . 0) ("condp" . 2) ("with-local-vars" . 1) ("with-bindings" . 1) ("when-let" . 1) ("while" . 1) ("case" . 1) ("locking" . 1) ("delay" . 0) ("io!" . 0) ("lazy-seq" . 0) ("when" . 1) ("binding" . 1) ("defslimefn" . defun) ("returning" . 1) ("continuously" . 0) ("failing-gracefully" . 0)))
[-Received-] 134.0
(:return (:ok (:pid "1377" :style :spawn :lisp-implementation (:type "Clojure" :name "clojure" :version "1.3.0") :package (:name "user" :prompt "user") :version "20100404")) 339)
[Actionlist] 134.0
339: finished :connection-info 
params: [':pid', '"1377"', ':style', ':spawn', ':lisp-implementation', [':type', '"Clojure"', ':name', '"clojure"', ':version', '"1.3.0"'], ':package', [':name', '"user"', ':prompt', '"user"'], ':version', '"20100404"']
 Package:user Prompt:user
[---Sent---] 134.03
(:emacs-rex (swank:create-repl nil) "image-processing.gui" t 340)

[-Received-] 134.05
(:indentation-update (("with-bindings" . 0)))
[-Received-] 134.05
(:return (:ok ("user" "user")) 340)
[Actionlist] 134.05
340: finished :create-repl 
params: ['"user"', '"user"']
[---Sent---] 134.05
(:emacs-rex (swank:swank-require 'swank-fuzzy) nil t 341)

[---Sent---] 134.09
(:emacs-rex (swank:listener-eval "(use '[clojure.repl :only (source apropos dir pst doc find-doc)])
(use '[clojure.java.javadoc :only (javadoc)])
(use '[clojure.pprint :only (pp pprint)])
") "image-processing.gui" :repl-thread 342)

[---Sent---] 134.14
(:emacs-rex (swank:listener-eval "(show-options (vertical-panel))
") "user" :repl-thread 343)

[-Received-] 134.19
(:write-string "nil
" :repl-result)
[-Received-] 134.28
(:indentation-update (("with-timeout" . 1) ("with-bindings" . 1)))
[-Received-] 134.28
(:return (:ok nil) 342)
[Actionlist] 134.28
341: pending  :swank-require 
342: finished :listener-eval 
343: pending  :listener-eval 
params: nil
[-Received-] 134.28
(:indentation-update (("with-timeout" . 1) ("with-bindings" . 1)))
[-Received-] 134.31
(:return (:ok nil) 341)
[Actionlist] 134.31
341: finished :swank-require 
343: pending  :listener-eval 
params: nil
[-Received-] 134.31
(:debug 1 1 ("Unable to resolve symbol: show-options in this context" "  [Thrown class java.lang.RuntimeException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "              Util.java:156 clojure.lang.Util.runtimeException" (:restartable nil)) (1 "         Compiler.java:6720 clojure.lang.Compiler.resolveIn" (:restartable nil)) (2 "         Compiler.java:6664 clojure.lang.Compiler.resolve" (:restartable nil)) (3 "         Compiler.java:6625 clojure.lang.Compiler.analyzeSymbol" (:restartable nil)) (4 "         Compiler.java:6198 clojure.lang.Compiler.analyze" (:restartable nil)) (5 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil)) (6 "         Compiler.java:3452 clojure.lang.Compiler$InvokeExpr.parse" (:restartable nil)) (7 "         Compiler.java:6411 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (8 "         Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil)) (9 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil))) (nil))
[-Received-] 134.32
(:debug-activate 1 1 nil)
[---Sent---] 134.45
(:emacs-rex (swank:throw-to-toplevel) nil 1 344)

[-Received-] 134.45
(:return (:abort) 344)
[Actionlist] 134.45
343: pending  :listener-eval 
344: finished :throw-to-toplevel 
[-Received-] 134.55
(:debug-return 1 1 nil)
[-Received-] 134.55
(:return (:abort) 343)
[Actionlist] 134.55
343: finished :listener-eval 
[---Sent---] 134.73
(:emacs-rex (swank:listener-eval "(ns image-processing.gui
    (:use seesaw.core))
") "image-processing.gui" :repl-thread 345)

[-Received-] 135.06
(:write-string "nil
" :repl-result)
[-Received-] 135.06
(:new-package "image-processing.gui" "image-processing.gui")
[-Received-] 135.06
(:indentation-update (("with-bindings" . 0) ("with-widgets" . 1) ("invoke-now" . 0) ("invoke-soon" . 0) ("signaller" . 1) ("invoke-later" . 0)))
[-Received-] 135.06
(:return (:ok nil) 345)
[Actionlist] 135.06
345: finished :listener-eval 
params: nil
[---Sent---] 135.45
(:emacs-rex (swank:listener-eval "(show-options (vertical-panel))
") "image-processing.gui" :repl-thread 346)

[-Received-] 135.51
(:debug 1 1 ("Unable to resolve symbol: show-options in this context" "  [Thrown class java.lang.RuntimeException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "              Util.java:156 clojure.lang.Util.runtimeException" (:restartable nil)) (1 "         Compiler.java:6720 clojure.lang.Compiler.resolveIn" (:restartable nil)) (2 "         Compiler.java:6664 clojure.lang.Compiler.resolve" (:restartable nil)) (3 "         Compiler.java:6625 clojure.lang.Compiler.analyzeSymbol" (:restartable nil)) (4 "         Compiler.java:6198 clojure.lang.Compiler.analyze" (:restartable nil)) (5 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil)) (6 "         Compiler.java:3452 clojure.lang.Compiler$InvokeExpr.parse" (:restartable nil)) (7 "         Compiler.java:6411 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (8 "         Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil)) (9 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil))) (nil))
[-Received-] 135.51
(:debug-activate 1 1 nil)
[---Sent---] 135.63
(:emacs-rex (swank:throw-to-toplevel) nil 1 347)

[-Received-] 135.63
(:return (:abort) 347)
[Actionlist] 135.63
346: pending  :listener-eval 
347: finished :throw-to-toplevel 
[-Received-] 135.63
(:debug-return 1 1 nil)
[-Received-] 135.63
(:return (:abort) 346)
[Actionlist] 135.63
346: finished :listener-eval 
347: finished :throw-to-toplevel 
[---Sent---] 135.88
(:emacs-rex (swank:listener-eval "(show-options vertical-panel)
") "image-processing.gui" :repl-thread 348)

[-Received-] 135.93
(:debug 1 1 ("Unable to resolve symbol: show-options in this context" "  [Thrown class java.lang.RuntimeException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "              Util.java:156 clojure.lang.Util.runtimeException" (:restartable nil)) (1 "         Compiler.java:6720 clojure.lang.Compiler.resolveIn" (:restartable nil)) (2 "         Compiler.java:6664 clojure.lang.Compiler.resolve" (:restartable nil)) (3 "         Compiler.java:6625 clojure.lang.Compiler.analyzeSymbol" (:restartable nil)) (4 "         Compiler.java:6198 clojure.lang.Compiler.analyze" (:restartable nil)) (5 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil)) (6 "         Compiler.java:3452 clojure.lang.Compiler$InvokeExpr.parse" (:restartable nil)) (7 "         Compiler.java:6411 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (8 "         Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil)) (9 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil))) (nil))
[-Received-] 135.94
(:debug-activate 1 1 nil)
[---Sent---] 136.05
(:emacs-rex (swank:throw-to-toplevel) nil 1 349)

[-Received-] 136.06
(:return (:abort) 349)
[Actionlist] 136.06
348: pending  :listener-eval 
349: finished :throw-to-toplevel 
[-Received-] 136.15
(:debug-return 1 1 nil)
[-Received-] 136.15
(:return (:abort) 348)
[Actionlist] 136.15
348: finished :listener-eval 
[---Sent---] 136.44
(:emacs-rex (swank:operator-arglist "use" "image-processing.gui") "image-processing.gui" t 350)

[-Received-] 136.47
(:indentation-update (("with-bindings" . 1)))
[-Received-] 136.47
(:return (:ok "([& args])") 350)
[Actionlist] 136.47
350: finished :operator-arglist 
params: "([& args])"
[---Sent---] 136.71
(:emacs-rex (swank:listener-eval "(use 'seesaw.dev)
") "image-processing.gui" :repl-thread 351)

[-Received-] 136.76
(:write-string "nil
" :repl-result)
[-Received-] 136.76
(:indentation-update (("with-bindings" . 0)))
[-Received-] 136.76
(:return (:ok nil) 351)
[Actionlist] 136.76
351: finished :listener-eval 
params: nil
[---Sent---] 136.92
(:emacs-rex (swank:listener-eval "(show-options vertical-panel)
") "image-processing.gui" :repl-thread 352)

[-Received-] 136.97
(:debug 1 1 ("No implementation of method: :get-option-maps* of protocol: #'seesaw.options/OptionProvider found for class: seesaw.core$vertical_panel" "  [Thrown class java.lang.IllegalArgumentException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "  core_deftype.clj:495 clojure.core/-cache-protocol-fn" (:restartable nil)) (1 "        options.clj:17 seesaw.options/eval2412[fn]" (:restartable nil)) (2 "        options.clj:21 seesaw.options/get-option-map" (:restartable nil)) (3 "           dev.clj:103 seesaw.dev/show-options" (:restartable nil)) (4 "      NO_SOURCE_FILE:1 image-processing.gui/eval7412" (:restartable nil)) (5 "    Compiler.java:6465 clojure.lang.Compiler.eval" (:restartable nil)) (6 "    Compiler.java:6431 clojure.lang.Compiler.eval" (:restartable nil)) (7 "         core.clj:2795 clojure.core/eval" (:restartable nil)) (8 "          core.clj:534 swank.core/eval825[fn]" (:restartable nil)) (9 "      MultiFn.java:163 clojure.lang.MultiFn.invoke" (:restartable nil))) (nil))
[-Received-] 136.98
(:debug-activate 1 1 nil)
[-Received-] 136.98
(:write-string "seesaw.core$vertical_panel
                    Option  Notes/Examples
--------------------------  --------------
" nil)
[---Sent---] 137.13
(:emacs-rex (swank:throw-to-toplevel) nil 1 353)

[-Received-] 137.13
(:return (:abort) 353)
[Actionlist] 137.13
352: pending  :listener-eval 
353: finished :throw-to-toplevel 
[-Received-] 137.13
(:debug-return 1 1 nil)
[-Received-] 137.13
(:return (:abort) 352)
[Actionlist] 137.13
352: finished :listener-eval 
353: finished :throw-to-toplevel 
[---Sent---] 137.35
(:emacs-rex (swank:listener-eval "(show-options (vertical-panel))
") "image-processing.gui" :repl-thread 354)

[-Received-] 137.4
(:write-string "nil
" :repl-result)
[-Received-] 137.4
(:return (:ok nil) 354)
[Actionlist] 137.4
354: finished :listener-eval 
params: nil
[-Received-] 137.4
(:write-string "seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523
                    Option  Notes/Examples
--------------------------  --------------
               :background  :aliceblue
                            \"#f00\"
                            \"#FF0000\"
                            (seesaw.color/color 255 0 0 0 224)
                   :border  5
                            \"Border Title\"
                            [5 \"Compound\" 10]
                            See (seesaw.border/*)
                   :bounds  :preferred
                            [x y w h]
                            Use :* to leave component unchanged:
                            [x :* :* h]
                    :class  :class-name
                            #{:multiple :class-names}
                   :cursor  See (seesaw.cursor/cursor)
            :drag-enabled?  boolean
                 :enabled?  boolean
               :focusable?  boolean
                     :font  ARIAL-BOLD-18
                            :monospaced
                            :serif
                            :sans-serif
                            See (seesaw.font/font)
               :foreground  :aliceblue
                            \"#f00\"
                            \"#FF0000\"
                            (seesaw.color/color 255 0 0 0 224)
                     :icon  See (seesaw.icon/icon)
                       :id  A keyword id for the widget
                    :items  A sequence of widgets to add.
                   :layout  A layout manager.
                   :listen  vector of args for (seesaw.core/listen)
                 :location  See (seesaw.core/move! :to)
       :location-on-screen  java.awt.Point location in global screen coords
             :maximum-size  [640 :by 480]
                            java.awt.Dimension
             :minimum-size  [640 :by 480]
                            java.awt.Dimension
                  :opaque?  boolean
                    :paint  See (seesaw.core/canvas)
                    :popup  javax.swing.JPopupMenu
                            (fn [e]) that returns a seq of menu items
                            See (seesaw.core/popup)
           :preferred-size  [640 :by 480]
                            java.awt.Dimension
                     :size  [640 :by 480]
                            java.awt.Dimension
                     :text  A string
                            Anything accepted by (clojure.core/slurp)
                      :tip  A tooltip string
         :transfer-handler  See (seesaw.dnd/to-transfer-handler)
                :user-data  Anything.
                            Associate arbitrary user-data with a widget.
                            See (seesaw.core/user-data)
                 :visible?  boolean
" nil)
[---Sent---] 137.55
(:emacs-rex (swank:operator-arglist "tooltip" "image-processing.gui") "image-processing.gui" t 355)

[-Received-] 137.55
(:return (:ok nil) 355)
[Actionlist] 137.55
355: finished :operator-arglist 
params: nil
[---Sent---] 137.76
(:emacs-rex (swank:operator-arglist ")" "image-processing.gui") "image-processing.gui" t 356)

[-Received-] 137.76
(:return (:ok nil) 356)
[Actionlist] 137.76
356: finished :operator-arglist 
params: nil
[---Sent---] 137.77
(:emacs-rex (swank:operator-arglist ")" "image-processing.gui") "image-processing.gui" t 357)

[-Received-] 137.78
(:return (:ok nil) 357)
[Actionlist] 137.78
357: finished :operator-arglist 
params: nil
[---Sent---] 138.2
(:emacs-rex (swank:operator-arglist ":require" "image-processing.gui") "image-processing.gui" t 358)

[-Received-] 138.2
(:return (:ok "([map])") 358)
[Actionlist] 138.2
358: finished :operator-arglist 
params: "([map])"
[---Sent---] 138.45
(:emacs-rex (swank:operator-arglist "let" "image-processing.gui") "image-processing.gui" t 359)

[-Received-] 138.45
(:return (:ok "([bindings & body])") 359)
[Actionlist] 138.46
359: finished :operator-arglist 
params: "([bindings & body])"
[---Sent---] 138.65
(:emacs-rex (swank:operator-arglist "))" "image-processing.gui") "image-processing.gui" t 360)

[-Received-] 138.65
(:return (:ok nil) 360)
[Actionlist] 138.65
360: finished :operator-arglist 
params: nil
[---Sent---] 138.74
(:emacs-rex (swank:operator-arglist "let" "image-processing.gui") "image-processing.gui" t 361)

[-Received-] 138.74
(:return (:ok "([bindings & body])") 361)
[Actionlist] 138.74
361: finished :operator-arglist 
params: "([bindings & body])"
[---Sent---] 138.8
(:emacs-rex (swank:operator-arglist "map" "image-processing.gui") "image-processing.gui" t 362)

[-Received-] 138.81
(:return (:ok "([f coll] [f c1 c2] [f c1 c2 c3] [f c1 c2 c3 & colls])") 362)
[Actionlist] 138.81
362: finished :operator-arglist 
params: "([f coll] [f c1 c2] [f c1 c2 c3] [f c1 c2 c3 & colls])"
[---Sent---] 139.03
(:emacs-rex (swank:fuzzy-completions "cloju" "image-processing.gui" :limit 200 :time-limit-in-msec 2000) nil t 363)

[-Received-] 139.03
(:return (:ok ((("clojure.set/" "51.31" ((0 "cloju")) "b------p") ("clojure.zip/" "51.31" ((0 "cloju")) "b------p") ("clojure.core/" "51.14" ((0 "cloju")) "b------p") ("clojure.main/" "51.14" ((0 "cloju")) "b------p") ("clojure.repl/" "51.14" ((0 "cloju")) "b------p") ("clojure.walk/" "51.14" ((0 "cloju")) "b------p") ("clojure.pprint/" "50.89" ((0 "cloju")) "b------p") ("clojure.string/" "50.89" ((0 "cloju")) "b------p") ("clojure.java.io/" "50.79" ((0 "cloju")) "b------p") ("clojure.java.shell/" "50.60" ((0 "cloju")) "b------p") ("clojure.contrib.def/" "50.55" ((0 "cloju")) "b------p") ("clojure.java.browse/" "50.55" ((0 "cloju")) "b------p") ("clojure.java.javadoc/" "50.51" ((0 "cloju")) "b------p") ("clojure.core.protocols/" "50.44" ((0 "cloju")) "b------p") ("clojure.contrib.macro-utils/" "50.32" ((0 "cloju")) "b------p") ("swank.util.clojure/" "43.18" ((11 "cloju")) "b------p")) nil)) 363)
[Actionlist] 139.04
363: finished :fuzzy-completions 
params: [[['"clojure.set/"', '"51.31"', [['0', '"cloju"']], '"b------p"'], ['"clojure.zip/"', '"51.31"', [['0', '"cloju"']], '"b------p"'], ['"clojure.core/"', '"51.14"', [['0', '"cloju"']], '"b------p"'], ['"clojure.main/"', '"51.14"', [['0', '"cloju"']], '"b------p"'], ['"clojure.repl/"', '"51.14"', [['0', '"cloju"']], '"b------p"'], ['"clojure.walk/"', '"51.14"', [['0', '"cloju"']], '"b------p"'], ['"clojure.pprint/"', '"50.89"', [['0', '"cloju"']], '"b------p"'], ['"clojure.string/"', '"50.89"', [['0', '"cloju"']], '"b------p"'], ['"clojure.java.io/"', '"50.79"', [['0', '"cloju"']], '"b------p"'], ['"clojure.java.shell/"', '"50.60"', [['0', '"cloju"']], '"b------p"'], ['"clojure.contrib.def/"', '"50.55"', [['0', '"cloju"']], '"b------p"'], ['"clojure.java.browse/"', '"50.55"', [['0', '"cloju"']], '"b------p"'], ['"clojure.java.javadoc/"', '"50.51"', [['0', '"cloju"']], '"b------p"'], ['"clojure.core.protocols/"', '"50.44"', [['0', '"cloju"']], '"b------p"'], ['"clojure.contrib.macro-utils/"', '"50.32"', [['0', '"cloju"']], '"b------p"'], ['"swank.util.clojure/"', '"43.18"', [['11', '"cloju"']], '"b------p"']], 'nil']
[---Sent---] 139.32
(:emacs-rex (swank:operator-arglist "map" "image-processing.gui") "image-processing.gui" t 364)

[-Received-] 139.33
(:return (:ok "([f coll] [f c1 c2] [f c1 c2 c3] [f c1 c2 c3 & colls])") 364)
[Actionlist] 139.33
364: finished :operator-arglist 
params: "([f coll] [f c1 c2] [f c1 c2 c3] [f c1 c2 c3 & colls])"
[---Sent---] 139.8
(:emacs-rex (swank:operator-arglist "imgs-url" "image-processing.gui") "image-processing.gui" t 365)

[-Received-] 139.8
(:return (:ok nil) 365)
[Actionlist] 139.8
365: finished :operator-arglist 
params: nil
[---Sent---] 140.06
(:emacs-rex (swank:operator-arglist "vertical-panel" "image-processing.gui") "image-processing.gui" t 366)

[-Received-] 140.06
(:return (:ok "([& opts])") 366)
[Actionlist] 140.06
366: finished :operator-arglist 
params: "([& opts])"
[---Sent---] 140.14
(:emacs-rex (swank:operator-arglist "vertical-panel" "image-processing.gui") "image-processing.gui" t 367)

[-Received-] 140.15
(:return (:ok "([& opts])") 367)
[Actionlist] 140.15
367: finished :operator-arglist 
params: "([& opts])"
[---Sent---] 140.22
(:emacs-rex (swank:operator-arglist "vec" "image-processing.gui") "image-processing.gui" t 368)

[-Received-] 140.22
(:return (:ok "([coll])") 368)
[Actionlist] 140.22
368: finished :operator-arglist 
params: "([coll])"
[---Sent---] 140.45
(:emacs-rex (swank:fuzzy-completions "sho" "image-processing.gui" :limit 200 :time-limit-in-msec 2000) nil t 369)

[-Received-] 140.46
(:return (:ok ((("swank.core.hooks/" "26.71" ((0 "s") (11 "ho")) "b------p") ("swank.util.hooks/" "26.71" ((0 "s") (11 "ho")) "b------p")) nil)) 369)
[Actionlist] 140.46
369: finished :fuzzy-completions 
params: [[['"swank.core.hooks/"', '"26.71"', [['0', '"s"'], ['11', '"ho"']], '"b------p"'], ['"swank.util.hooks/"', '"26.71"', [['0', '"s"'], ['11', '"ho"']], '"b------p"']], 'nil']
[---Sent---] 140.52
(:emacs-rex (swank:fuzzy-completions "sw" "image-processing.gui" :limit 200 :time-limit-in-msec 2000) nil t 370)

[-Received-] 140.53
(:return (:ok ((("swank.rpc/" "20.95" ((0 "sw")) "b------p") ("swank.core/" "20.81" ((0 "sw")) "b------p") ("swank.util/" "20.81" ((0 "sw")) "b------p") ("swank.swank/" "20.70" ((0 "sw")) "b------p") ("swank.util.io/" "20.53" ((0 "sw")) "b------p") ("swank.commands/" "20.47" ((0 "sw")) "b------p") ("swank.util.sys/" "20.47" ((0 "sw")) "b------p") ("swank.util.java/" "20.41" ((0 "sw")) "b------p") ("swank.core.hooks/" "20.37" ((0 "sw")) "b------p") ("swank.util.hooks/" "20.37" ((0 "sw")) "b------p") ("swank.core.server/" "20.33" ((0 "sw")) "b------p") ("swank.util.string/" "20.33" ((0 "sw")) "b------p") ("swank.util.clojure/" "20.29" ((0 "sw")) "b------p") ("swank.core.protocol/" "20.26" ((0 "sw")) "b------p") ("swank.commands.basic/" "20.23" ((0 "sw")) "b------p") ("swank.core.threadmap/" "20.23" ((0 "sw")) "b------p") ("swank.commands.indent/" "20.20" ((0 "sw")) "b------p") ("swank.core.connection/" "20.20" ((0 "sw")) "b------p") ("swank.commands.contrib/" "20.18" ((0 "sw")) "b------p") ("swank.util.net.sockets/" "20.18" ((0 "sw")) "b------p") ("swank.util.class-browse/" "20.15" ((0 "sw")) "b------p") ("swank.clj-contrib.pprint/" "20.13" ((0 "sw")) "b------p") ("swank.commands.inspector/" "20.13" ((0 "sw")) "b------p") ("swank.commands.completion/" "20.12" ((0 "sw")) "b------p") ("swank.util.concurrent.mbox/" "20.10" ((0 "sw")) "b------p") ("swank.core.debugger-backends/" "20.07" ((0 "sw")) "b------p") ("swank.util.concurrent.thread/" "20.07" ((0 "sw")) "b------p") ("swank.clj-contrib.macroexpand/" "20.06" ((0 "sw")) "b------p") ("swank.util.clj-stacktrace-compat/" "20.02" ((0 "sw")) "b------p") ("swank.commands.contrib.swank-fuzzy/" "20.00" ((0 "sw")) "b------p") ("seesaw.to-widget/" "18.67" ((0 "s") (10 "w")) "b------p") ("seesaw.make-widget/" "18.59" ((0 "s") (12 "w")) "b------p") ("seesaw.widget-options/" "18.50" ((0 "s") (7 "w")) "b------p") ("seesaw.dev/" "12.11" ((0 "s") (5 "w")) "b------p") ("seesaw.dnd/" "12.11" ((0 "s") (5 "w")) "b------p") ("seesaw.core/" "12.00" ((0 "s") (5 "w")) "b------p") ("seesaw.font/" "12.00" ((0 "s") (5 "w")) "b------p") ("seesaw.icon/" "12.00" ((0 "s") (5 "w")) "b------p") ("seesaw.meta/" "12.00" ((0 "s") (5 "w")) "b------p") ("seesaw.util/" "12.00" ((0 "s") (5 "w")) "b------p") ("seesaw.cells/" "11.91" ((0 "s") (5 "w")) "b------p") ("seesaw.color/" "11.91" ((0 "s") (5 "w")) "b------p") ("seesaw.event/" "11.91" ((0 "s") (5 "w")) "b------p") ("seesaw.table/" "11.91" ((0 "s") (5 "w")) "b------p") ("seesaw.timer/" "11.91" ((0 "s") (5 "w")) "b------p") ("seesaw.value/" "11.91" ((0 "s") (5 "w")) "b------p") ("seesaw.action/" "11.83" ((0 "s") (5 "w")) "b------p") ("seesaw.border/" "11.83" ((0 "s") (5 "w")) "b------p") ("seesaw.config/" "11.83" ((0 "s") (5 "w")) "b------p") ("seesaw.cursor/" "11.83" ((0 "s") (5 "w")) "b------p") ("seesaw.invoke/" "11.83" ((0 "s") (5 "w")) "b------p") ("seesaw.layout/" "11.83" ((0 "s") (5 "w")) "b------p") ("seesaw.scroll/" "11.83" ((0 "s") (5 "w")) "b------p") ("seesaw.options/" "11.77" ((0 "s") (5 "w")) "b------p") ("seesaw.graphics/" "11.71" ((0 "s") (5 "w")) "b------p") ("seesaw.selector/" "11.71" ((0 "s") (5 "w")) "b------p") ("seesaw.keystroke/" "11.67" ((0 "s") (5 "w")) "b------p") ("seesaw.selection/" "11.67" ((0 "s") (5 "w")) "b------p")) nil)) 370)
[Actionlist] 140.54
370: finished :fuzzy-completions 
params: [[['"swank.rpc/"', '"20.95"', [['0', '"sw"']], '"b------p"'], ['"swank.core/"', '"20.81"', [['0', '"sw"']], '"b------p"'], ['"swank.util/"', '"20.81"', [['0', '"sw"']], '"b------p"'], ['"swank.swank/"', '"20.70"', [['0', '"sw"']], '"b------p"'], ['"swank.util.io/"', '"20.53"', [['0', '"sw"']], '"b------p"'], ['"swank.commands/"', '"20.47"', [['0', '"sw"']], '"b------p"'], ['"swank.util.sys/"', '"20.47"', [['0', '"sw"']], '"b------p"'], ['"swank.util.java/"', '"20.41"', [['0', '"sw"']], '"b------p"'], ['"swank.core.hooks/"', '"20.37"', [['0', '"sw"']], '"b------p"'], ['"swank.util.hooks/"', '"20.37"', [['0', '"sw"']], '"b------p"'], ['"swank.core.server/"', '"20.33"', [['0', '"sw"']], '"b------p"'], ['"swank.util.string/"', '"20.33"', [['0', '"sw"']], '"b------p"'], ['"swank.util.clojure/"', '"20.29"', [['0', '"sw"']], '"b------p"'], ['"swank.core.protocol/"', '"20.26"', [['0', '"sw"']], '"b------p"'], ['"swank.commands.basic/"', '"20.23"', [['0', '"sw"']], '"b------p"'], ['"swank.core.threadmap/"', '"20.23"', [['0', '"sw"']], '"b------p"'], ['"swank.commands.indent/"', '"20.20"', [['0', '"sw"']], '"b------p"'], ['"swank.core.connection/"', '"20.20"', [['0', '"sw"']], '"b------p"'], ['"swank.commands.contrib/"', '"20.18"', [['0', '"sw"']], '"b------p"'], ['"swank.util.net.sockets/"', '"20.18"', [['0', '"sw"']], '"b------p"'], ['"swank.util.class-browse/"', '"20.15"', [['0', '"sw"']], '"b------p"'], ['"swank.clj-contrib.pprint/"', '"20.13"', [['0', '"sw"']], '"b------p"'], ['"swank.commands.inspector/"', '"20.13"', [['0', '"sw"']], '"b------p"'], ['"swank.commands.completion/"', '"20.12"', [['0', '"sw"']], '"b------p"'], ['"swank.util.concurrent.mbox/"', '"20.10"', [['0', '"sw"']], '"b------p"'], ['"swank.core.debugger-backends/"', '"20.07"', [['0', '"sw"']], '"b------p"'], ['"swank.util.concurrent.thread/"', '"20.07"', [['0', '"sw"']], '"b------p"'], ['"swank.clj-contrib.macroexpand/"', '"20.06"', [['0', '"sw"']], '"b------p"'], ['"swank.util.clj-stacktrace-compat/"', '"20.02"', [['0', '"sw"']], '"b------p"'], ['"swank.commands.contrib.swank-fuzzy/"', '"20.00"', [['0', '"sw"']], '"b------p"'], ['"seesaw.to-widget/"', '"18.67"', [['0', '"s"'], ['10', '"w"']], '"b------p"'], ['"seesaw.make-widget/"', '"18.59"', [['0', '"s"'], ['12', '"w"']], '"b------p"'], ['"seesaw.widget-options/"', '"18.50"', [['0', '"s"'], ['7', '"w"']], '"b------p"'], ['"seesaw.dev/"', '"12.11"', [['0', '"s"'], ['5', '"w"']], '"b------p"'], ['"seesaw.dnd/"', '"12.11"', [['0', '"s"'], ['5', '"w"']], '"b------p"'], ['"seesaw.core/"', '"12.00"', [['0', '"s"'], ['5', '"w"']], '"b------p"'], ['"seesaw.font/"', '"12.00"', [['0', '"s"'], ['5', '"w"']], '"b------p"'], ['"seesaw.icon/"', '"12.00"', [['0', '"s"'], ['5', '"w"']], '"b------p"'], ['"seesaw.meta/"', '"12.00"', [['0', '"s"'], ['5', '"w"']], '"b------p"'], ['"seesaw.util/"', '"12.00"', [['0', '"s"'], ['5', '"w"']], '"b------p"'], ['"seesaw.cells/"', '"11.91"', [['0', '"s"'], ['5', '"w"']], '"b------p"'], ['"seesaw.color/"', '"11.91"', [['0', '"s"'], ['5', '"w"']], '"b------p"'], ['"seesaw.event/"', '"11.91"', [['0', '"s"'], ['5', '"w"']], '"b------p"'], ['"seesaw.table/"', '"11.91"', [['0', '"s"'], ['5', '"w"']], '"b------p"'], ['"seesaw.timer/"', '"11.91"', [['0', '"s"'], ['5', '"w"']], '"b------p"'], ['"seesaw.value/"', '"11.91"', [['0', '"s"'], ['5', '"w"']], '"b------p"'], ['"seesaw.action/"', '"11.83"', [['0', '"s"'], ['5', '"w"']], '"b------p"'], ['"seesaw.border/"', '"11.83"', [['0', '"s"'], ['5', '"w"']], '"b------p"'], ['"seesaw.config/"', '"11.83"', [['0', '"s"'], ['5', '"w"']], '"b------p"'], ['"seesaw.cursor/"', '"11.83"', [['0', '"s"'], ['5', '"w"']], '"b------p"'], ['"seesaw.invoke/"', '"11.83"', [['0', '"s"'], ['5', '"w"']], '"b------p"'], ['"seesaw.layout/"', '"11.83"', [['0', '"s"'], ['5', '"w"']], '"b------p"'], ['"seesaw.scroll/"', '"11.83"', [['0', '"s"'], ['5', '"w"']], '"b------p"'], ['"seesaw.options/"', '"11.77"', [['0', '"s"'], ['5', '"w"']], '"b------p"'], ['"seesaw.graphics/"', '"11.71"', [['0', '"s"'], ['5', '"w"']], '"b------p"'], ['"seesaw.selector/"', '"11.71"', [['0', '"s"'], ['5', '"w"']], '"b------p"'], ['"seesaw.keystroke/"', '"11.67"', [['0', '"s"'], ['5', '"w"']], '"b------p"'], ['"seesaw.selection/"', '"11.67"', [['0', '"s"'], ['5', '"w"']], '"b------p"']], 'nil']
[---Sent---] 140.66
(:emacs-rex (swank:operator-arglist "show-images" "image-processing.gui") "image-processing.gui" t 371)

[-Received-] 140.67
(:return (:ok nil) 371)
[Actionlist] 140.67
371: finished :operator-arglist 
params: nil
[---Sent---] 141.27
(:emacs-rex (swank:operator-arglist "def" "image-processing.gui") "image-processing.gui" t 372)

[-Received-] 141.27
(:return (:ok nil) 372)
[Actionlist] 141.27
372: finished :operator-arglist 
params: nil
[---Sent---] 141.3
(:emacs-rex (swank:operator-arglist "def" "image-processing.gui") "image-processing.gui" t 373)

[-Received-] 141.3
(:return (:ok nil) 373)
[Actionlist] 141.3
373: finished :operator-arglist 
params: nil
[---Sent---] 141.41
(:emacs-rex (swank:fuzzy-completions "/home/boe" "image-processing.gui" :limit 200 :time-limit-in-msec 2000) nil t 374)

[-Received-] 141.41
(:return (:ok ((nil) nil)) 374)
[Actionlist] 141.41
374: finished :fuzzy-completions 
params: [['nil'], 'nil']
[---Sent---] 141.7
(:emacs-rex (swank:fuzzy-completions "/home/boechat/Docu" "image-processing.gui" :limit 200 :time-limit-in-msec 2000) nil t 375)

[-Received-] 141.7
(:return (:ok ((nil) nil)) 375)
[Actionlist] 141.7
375: finished :fuzzy-completions 
params: [['nil'], 'nil']
[---Sent---] 143.37
(:emacs-rex (swank:operator-arglist "is" "image-processing.gui") "image-processing.gui" t 376)

[-Received-] 143.38
(:return (:ok nil) 376)
[Actionlist] 143.38
376: finished :operator-arglist 
params: nil
[---Sent---] 143.91
(:emacs-rex (swank:operator-arglist "/home/boechat/Documents/captchas/jequiti/a/1016848690" "image-processing.gui") "image-processing.gui" t 377)

[-Received-] 143.93
(:return (:ok nil) 377)
[Actionlist] 143.93
377: finished :operator-arglist 
params: nil
[---Sent---] 143.93
(:emacs-rex (swank:operator-arglist "/home/boechat/Documents/captchas/jequiti/b/1015055312" "image-processing.gui") "image-processing.gui" t 378)

[-Received-] 143.93
(:return (:ok nil) 378)
[Actionlist] 143.93
378: finished :operator-arglist 
params: nil
[---Sent---] 144.37
(:emacs-rex (swank:listener-eval "(def x '(\"/home/boechat/Documents/captchas/jequiti/a/1016848690.png\"
         \"/home/boechat/Documents/captchas/jequiti/b/1015055312.png\"))
") "image-processing.gui" :repl-thread 379)

[-Received-] 144.37
(:write-string "#'image-processing.gui/x
" :repl-result)
[-Received-] 144.37
(:return (:ok nil) 379)
[Actionlist] 144.37
379: finished :listener-eval 
params: nil
[---Sent---] 144.76
(:emacs-rex (swank:operator-arglist "show-images" "image-processing.gui") "image-processing.gui" t 380)

[-Received-] 144.76
(:return (:ok nil) 380)
[Actionlist] 144.76
380: finished :operator-arglist 
params: nil
[---Sent---] 144.85
(:emacs-rex (swank:listener-eval "(defn show-images [& imgs]
  (let [imgs-url (map clojure.java.io/resource imgs)]
    (vertical-panel :items (vec imgs-url))))
") "image-processing.gui" :repl-thread 381)

[-Received-] 144.85
(:write-string "#'image-processing.gui/show-images
" :repl-result)
[-Received-] 144.85
(:return (:ok nil) 381)
[Actionlist] 144.85
381: finished :listener-eval 
params: nil
[---Sent---] 145.04
(:emacs-rex (swank:listener-eval "(defn create-frame [] 
  (-> (frame :title \"Hello\",
             :content (show-images x) ,
             :on-close :exit)
      pack!
      show!))
") "image-processing.gui" :repl-thread 382)

[-Received-] 145.05
(:write-string "#'image-processing.gui/create-frame
" :repl-result)
[-Received-] 145.05
(:return (:ok nil) 382)
[Actionlist] 145.05
382: finished :listener-eval 
params: nil
[---Sent---] 145.43
(:emacs-rex (swank:listener-eval "(create-frame)
") "image-processing.gui" :repl-thread 383)

[-Received-] 145.47
(:debug 1 1 ("clojure.lang.PersistentList cannot be cast to java.lang.String" "  [Thrown class java.lang.ClassCastException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "            io.clj:428 clojure.java.io/resource" (:restartable nil)) (1 "            io.clj:427 clojure.java.io/resource" (:restartable nil)) (2 "         core.clj:2432 clojure.core/map[fn]" (:restartable nil)) (3 "       LazySeq.java:42 clojure.lang.LazySeq.sval" (:restartable nil)) (4 "       LazySeq.java:60 clojure.lang.LazySeq.seq" (:restartable nil)) (5 "           RT.java:466 clojure.lang.RT.seq" (:restartable nil)) (6 "LazilyPersistentVector.java:31 clojure.lang.LazilyPersistentVector.create" (:restartable nil)) (7 "          core.clj:345 clojure.core/vec" (:restartable nil)) (8 "      NO_SOURCE_FILE:1 image-processing.gui/show-images" (:restartable nil)) (9 "       RestFn.java:408 clojure.lang.RestFn.invoke" (:restartable nil))) (nil))
[-Received-] 145.47
(:debug-activate 1 1 nil)
[---Sent---] 146.84
(:emacs-rex (swank:operator-arglist "image-processing" "image-processing.gui") "image-processing.gui" t 384)

[-Received-] 146.84
(:return (:ok nil) 384)
[Actionlist] 146.84
383: pending  :listener-eval 
384: finished :operator-arglist 
params: nil
[---Sent---] 146.9
(:emacs-rex (swank:throw-to-toplevel) nil 1 385)

[-Received-] 146.9
(:return (:abort) 385)
[Actionlist] 146.9
383: pending  :listener-eval 
385: finished :throw-to-toplevel 
[-Received-] 146.9
(:debug-return 1 1 nil)
[-Received-] 146.9
(:return (:abort) 383)
[Actionlist] 146.9
383: finished :listener-eval 
385: finished :throw-to-toplevel 
[---Sent---] 147.12
(:emacs-rex (swank:operator-arglist "/home/boechat/Documents/captchas/jequiti/b/1015055312" "image-processing.gui") "image-processing.gui" t 386)

[-Received-] 147.12
(:return (:ok nil) 386)
[Actionlist] 147.12
386: finished :operator-arglist 
params: nil
[---Sent---] 147.14
(:emacs-rex (swank:operator-arglist "/home/boechat/Documents/captchas/jequiti/b/1015055312" "image-processing.gui") "image-processing.gui" t 387)

[-Received-] 147.14
(:return (:ok nil) 387)
[Actionlist] 147.14
387: finished :operator-arglist 
params: nil
[---Sent---] 147.15
(:emacs-rex (swank:operator-arglist "/home/boechat/Documents/captchas/jequiti/b/1015055312" "image-processing.gui") "image-processing.gui" t 388)

[-Received-] 147.15
(:return (:ok nil) 388)
[Actionlist] 147.15
388: finished :operator-arglist 
params: nil
[---Sent---] 147.36
(:emacs-rex (swank:listener-eval "x
") "image-processing.gui" :repl-thread 389)

[-Received-] 147.37
(:write-string "(\"/home/boechat/Documents/captchas/jequiti/a/1016848690.png\" \"/home/boechat/Documents/captchas/jequiti/b/1015055312.png\")
" :repl-result)
[-Received-] 147.37
(:return (:ok nil) 389)
[Actionlist] 147.37
389: finished :listener-eval 
params: nil
[---Sent---] 147.55
(:emacs-rex (swank:operator-arglist "clojure" "image-processing.gui") "image-processing.gui" t 390)

[-Received-] 147.56
(:return (:ok nil) 390)
[Actionlist] 147.56
390: finished :operator-arglist 
params: nil
[---Sent---] 147.77
(:emacs-rex (swank:operator-arglist "show-images" "image-processing.gui") "image-processing.gui" t 391)

[-Received-] 147.77
(:return (:ok "([& imgs])") 391)
[Actionlist] 147.77
391: finished :operator-arglist 
params: "([& imgs])"
[---Sent---] 147.78
(:emacs-rex (swank:describe-function "show-images") "image-processing.gui" t 392)

[-Received-] 147.78
(:return (:ok "-------------------------
image-processing.gui/show-images
([& imgs])
  nil
") 392)
[Actionlist] 147.78
392: finished :describe-function 
params: "-------------------------
image-processing.gui/show-images
([& imgs])
  nil
"
[---Sent---] 147.8
(:emacs-rex (swank:operator-arglist "show-images" "image-processing.gui") "image-processing.gui" t 393)

[-Received-] 147.8
(:return (:ok "([& imgs])") 393)
[Actionlist] 147.8
393: finished :operator-arglist 
params: "([& imgs])"
[---Sent---] 147.8
(:emacs-rex (swank:describe-function "show-images") "image-processing.gui" t 394)

[-Received-] 147.8
(:return (:ok "-------------------------
image-processing.gui/show-images
([& imgs])
  nil
") 394)
[Actionlist] 147.8
394: finished :describe-function 
params: "-------------------------
image-processing.gui/show-images
([& imgs])
  nil
"
[---Sent---] 147.8
(:emacs-rex (swank:operator-arglist "show-images" "image-processing.gui") "image-processing.gui" t 395)

[-Received-] 147.81
(:return (:ok "([& imgs])") 395)
[Actionlist] 147.81
395: finished :operator-arglist 
params: "([& imgs])"
[---Sent---] 147.81
(:emacs-rex (swank:describe-function "show-images") "image-processing.gui" t 396)

[-Received-] 147.81
(:return (:ok "-------------------------
image-processing.gui/show-images
([& imgs])
  nil
") 396)
[Actionlist] 147.81
396: finished :describe-function 
params: "-------------------------
image-processing.gui/show-images
([& imgs])
  nil
"
[---Sent---] 147.81
(:emacs-rex (swank:operator-arglist "show-images" "image-processing.gui") "image-processing.gui" t 397)

[-Received-] 147.81
(:return (:ok "([& imgs])") 397)
[Actionlist] 147.81
397: finished :operator-arglist 
params: "([& imgs])"
[---Sent---] 147.81
(:emacs-rex (swank:describe-function "show-images") "image-processing.gui" t 398)

[-Received-] 147.81
(:return (:ok "-------------------------
image-processing.gui/show-images
([& imgs])
  nil
") 398)
[Actionlist] 147.81
398: finished :describe-function 
params: "-------------------------
image-processing.gui/show-images
([& imgs])
  nil
"
[---Sent---] 147.81
(:emacs-rex (swank:operator-arglist "show-images" "image-processing.gui") "image-processing.gui" t 399)

[-Received-] 147.82
(:return (:ok "([& imgs])") 399)
[Actionlist] 147.82
399: finished :operator-arglist 
params: "([& imgs])"
[---Sent---] 147.82
(:emacs-rex (swank:describe-function "show-images") "image-processing.gui" t 400)

[-Received-] 147.82
(:return (:ok "-------------------------
image-processing.gui/show-images
([& imgs])
  nil
") 400)
[Actionlist] 147.82
400: finished :describe-function 
params: "-------------------------
image-processing.gui/show-images
([& imgs])
  nil
"
[---Sent---] 147.82
(:emacs-rex (swank:operator-arglist "show-images" "image-processing.gui") "image-processing.gui" t 401)

[-Received-] 147.82
(:return (:ok "([& imgs])") 401)
[Actionlist] 147.82
401: finished :operator-arglist 
params: "([& imgs])"
[---Sent---] 147.82
(:emacs-rex (swank:describe-function "show-images") "image-processing.gui" t 402)

[-Received-] 147.82
(:return (:ok "-------------------------
image-processing.gui/show-images
([& imgs])
  nil
") 402)
[Actionlist] 147.82
402: finished :describe-function 
params: "-------------------------
image-processing.gui/show-images
([& imgs])
  nil
"
[---Sent---] 147.83
(:emacs-rex (swank:operator-arglist "show-images" "image-processing.gui") "image-processing.gui" t 403)

[-Received-] 147.83
(:return (:ok "([& imgs])") 403)
[Actionlist] 147.83
403: finished :operator-arglist 
params: "([& imgs])"
[---Sent---] 147.83
(:emacs-rex (swank:describe-function "show-images") "image-processing.gui" t 404)

[-Received-] 147.83
(:return (:ok "-------------------------
image-processing.gui/show-images
([& imgs])
  nil
") 404)
[Actionlist] 147.83
404: finished :describe-function 
params: "-------------------------
image-processing.gui/show-images
([& imgs])
  nil
"
[---Sent---] 147.83
(:emacs-rex (swank:operator-arglist "show-images" "image-processing.gui") "image-processing.gui" t 405)

[-Received-] 147.83
(:return (:ok "([& imgs])") 405)
[Actionlist] 147.84
405: finished :operator-arglist 
params: "([& imgs])"
[---Sent---] 147.84
(:emacs-rex (swank:describe-function "show-images") "image-processing.gui" t 406)

[-Received-] 147.84
(:return (:ok "-------------------------
image-processing.gui/show-images
([& imgs])
  nil
") 406)
[Actionlist] 147.84
406: finished :describe-function 
params: "-------------------------
image-processing.gui/show-images
([& imgs])
  nil
"
[---Sent---] 147.85
(:emacs-rex (swank:operator-arglist "show-images" "image-processing.gui") "image-processing.gui" t 407)

[-Received-] 147.85
(:return (:ok "([& imgs])") 407)
[Actionlist] 147.85
407: finished :operator-arglist 
params: "([& imgs])"
[---Sent---] 147.85
(:emacs-rex (swank:describe-function "show-images") "image-processing.gui" t 408)

[-Received-] 147.85
(:return (:ok "-------------------------
image-processing.gui/show-images
([& imgs])
  nil
") 408)
[Actionlist] 147.85
408: finished :describe-function 
params: "-------------------------
image-processing.gui/show-images
([& imgs])
  nil
"
[---Sent---] 147.85
(:emacs-rex (swank:operator-arglist "show-images" "image-processing.gui") "image-processing.gui" t 409)

[-Received-] 147.85
(:return (:ok "([& imgs])") 409)
[Actionlist] 147.85
409: finished :operator-arglist 
params: "([& imgs])"
[---Sent---] 147.85
(:emacs-rex (swank:describe-function "show-images") "image-processing.gui" t 410)

[-Received-] 147.85
(:return (:ok "-------------------------
image-processing.gui/show-images
([& imgs])
  nil
") 410)
[Actionlist] 147.85
410: finished :describe-function 
params: "-------------------------
image-processing.gui/show-images
([& imgs])
  nil
"
[---Sent---] 148.38
(:emacs-rex (swank:operator-arglist "()" "image-processing.gui") "image-processing.gui" t 411)

[-Received-] 148.38
(:return (:ok nil) 411)
[Actionlist] 148.38
411: finished :operator-arglist 
params: nil
[---Sent---] 148.47
(:emacs-rex (swank:operator-arglist "map" "image-processing.gui") "image-processing.gui" t 412)

[-Received-] 148.47
(:return (:ok "([f coll] [f c1 c2] [f c1 c2 c3] [f c1 c2 c3 & colls])") 412)
[Actionlist] 148.47
412: finished :operator-arglist 
params: "([f coll] [f c1 c2] [f c1 c2 c3] [f c1 c2 c3 & colls])"
[---Sent---] 148.87
(:emacs-rex (swank:operator-arglist "map" "image-processing.gui") "image-processing.gui" t 413)

[-Received-] 148.87
(:return (:ok "([f coll] [f c1 c2] [f c1 c2 c3] [f c1 c2 c3 & colls])") 413)
[Actionlist] 148.87
413: finished :operator-arglist 
params: "([f coll] [f c1 c2] [f c1 c2 c3] [f c1 c2 c3 & colls])"
[---Sent---] 148.97
(:emacs-rex (swank:listener-eval "(map clojure.java.io/resource x)
") "image-processing.gui" :repl-thread 414)

[-Received-] 148.97
(:write-string "(nil nil)
" :repl-result)
[-Received-] 149.06
(:return (:ok nil) 414)
[Actionlist] 149.06
414: finished :listener-eval 
params: nil
[---Sent---] 149.55
(:emacs-rex (swank:operator-arglist "clojure" "image-processing.gui") "image-processing.gui" t 415)

[-Received-] 149.55
(:return (:ok nil) 415)
[Actionlist] 149.55
415: finished :operator-arglist 
params: nil
[---Sent---] 149.78
(:emacs-rex (swank:operator-arglist ")" "image-processing.gui") "image-processing.gui" t 416)

[-Received-] 149.78
(:return (:ok nil) 416)
[Actionlist] 149.78
416: finished :operator-arglist 
params: nil
[---Sent---] 149.9
(:emacs-rex (swank:operator-arglist "first" "image-processing.gui") "image-processing.gui" t 417)

[-Received-] 149.91
(:return (:ok "([coll])") 417)
[Actionlist] 149.91
417: finished :operator-arglist 
params: "([coll])"
[---Sent---] 150.0
(:emacs-rex (swank:listener-eval "(clojure.java.io/resource (first x)) 
") "image-processing.gui" :repl-thread 418)

[-Received-] 150.01
(:write-string "nil
" :repl-result)
[-Received-] 150.01
(:return (:ok nil) 418)
[Actionlist] 150.01
418: finished :listener-eval 
params: nil
[---Sent---] 150.81
(:emacs-rex (swank:listener-eval "(clojure.java.io/resource \"/home/boechat/Documents/captchas/jequiti/a/1016848690.png\")
") "image-processing.gui" :repl-thread 419)

[-Received-] 150.81
(:write-string "nil
" :repl-result)
[-Received-] 150.81
(:return (:ok nil) 419)
[Actionlist] 150.81
419: finished :listener-eval 
params: nil
[---Sent---] 151.23
(:emacs-rex (swank:operator-arglist "doc" "image-processing.gui") "image-processing.gui" t 420)

[-Received-] 151.23
(:return (:ok nil) 420)
[Actionlist] 151.23
420: finished :operator-arglist 
params: nil
[---Sent---] 151.67
(:emacs-rex (swank:listener-eval "(doc clojure.java.io/resource)
") "image-processing.gui" :repl-thread 421)

[-Received-] 151.67
(:debug 1 1 ("Unable to resolve symbol: doc in this context" "  [Thrown class java.lang.RuntimeException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "              Util.java:156 clojure.lang.Util.runtimeException" (:restartable nil)) (1 "         Compiler.java:6720 clojure.lang.Compiler.resolveIn" (:restartable nil)) (2 "         Compiler.java:6664 clojure.lang.Compiler.resolve" (:restartable nil)) (3 "         Compiler.java:6625 clojure.lang.Compiler.analyzeSymbol" (:restartable nil)) (4 "         Compiler.java:6198 clojure.lang.Compiler.analyze" (:restartable nil)) (5 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil)) (6 "         Compiler.java:3452 clojure.lang.Compiler$InvokeExpr.parse" (:restartable nil)) (7 "         Compiler.java:6411 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (8 "         Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil)) (9 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil))) (nil))
[-Received-] 151.68
(:debug-activate 1 1 nil)
[---Sent---] 151.85
(:emacs-rex (swank:throw-to-toplevel) nil 1 422)

[-Received-] 151.85
(:return (:abort) 422)
[Actionlist] 151.85
421: pending  :listener-eval 
422: finished :throw-to-toplevel 
[-Received-] 151.85
(:debug-return 1 1 nil)
[-Received-] 151.85
(:return (:abort) 421)
[Actionlist] 151.85
421: finished :listener-eval 
422: finished :throw-to-toplevel 
[---Sent---] 152.37
(:emacs-rex (swank:listener-eval "clojure.java.io/resource
") "image-processing.gui" :repl-thread 423)

[-Received-] 152.37
(:write-string "#<io$resource clojure.java.io$resource@c2bc9b>
" :repl-result)
[-Received-] 152.37
(:return (:ok nil) 423)
[Actionlist] 152.37
423: finished :listener-eval 
params: nil
[---Sent---] 152.54
(:emacs-rex (swank:operator-arglist "clojure.java" "image-processing.gui") "image-processing.gui" t 424)

[-Received-] 152.54
(:return (:ok nil) 424)
[Actionlist] 152.55
424: finished :operator-arglist 
params: nil
[---Sent---] 152.61
(:emacs-rex (swank:operator-arglist "clojure.java" "image-processing.gui") "image-processing.gui" t 425)

[-Received-] 152.62
(:return (:ok nil) 425)
[Actionlist] 152.62
425: finished :operator-arglist 
params: nil
[---Sent---] 152.66
(:emacs-rex (swank:operator-arglist "clojure.java" "image-processing.gui") "image-processing.gui" t 426)

[-Received-] 152.66
(:return (:ok nil) 426)
[Actionlist] 152.66
426: finished :operator-arglist 
params: nil
[---Sent---] 152.7
(:emacs-rex (swank:operator-arglist "seesaw.core" "image-processing.gui") "image-processing.gui" t 427)

[-Received-] 152.7
(:return (:ok nil) 427)
[Actionlist] 152.7
427: finished :operator-arglist 
params: nil
[---Sent---] 152.77
(:emacs-rex (swank:operator-arglist "defn" "image-processing.gui") "image-processing.gui" t 428)

[-Received-] 152.77
(:return (:ok "([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])") 428)
[Actionlist] 152.77
428: finished :operator-arglist 
params: "([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])"
[---Sent---] 152.77
(:emacs-rex (swank:describe-function "defn") "image-processing.gui" t 429)

[-Received-] 152.77
(:return (:ok "-------------------------
clojure.core/defn
([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])
Macro
  Same as (def name (fn [params* ] exprs*)) or (def
    name (fn ([params* ] exprs*)+)) with any doc-string or attrs added
    to the var metadata
") 429)
[Actionlist] 152.77
429: finished :describe-function 
params: "-------------------------
clojure.core/defn
([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])
Macro
  Same as (def name (fn [params* ] exprs*)) or (def
    name (fn ([params* ] exprs*)+)) with any doc-string or attrs added
    to the var metadata
"
[---Sent---] 152.8
(:emacs-rex (swank:operator-arglist "seesaw" "image-processing.gui") "image-processing.gui" t 430)

[-Received-] 152.8
(:return (:ok nil) 430)
[Actionlist] 152.8
430: finished :operator-arglist 
params: nil
[---Sent---] 152.85
(:emacs-rex (swank:operator-arglist "def" "image-processing.gui") "image-processing.gui" t 431)

[-Received-] 152.85
(:return (:ok nil) 431)
[Actionlist] 152.85
431: finished :operator-arglist 
params: nil
[---Sent---] 152.9
(:emacs-rex (swank:operator-arglist "defn" "image-processing.gui") "image-processing.gui" t 432)

[-Received-] 152.9
(:return (:ok "([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])") 432)
[Actionlist] 152.9
432: finished :operator-arglist 
params: "([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])"
[---Sent---] 152.9
(:emacs-rex (swank:describe-function "defn") "image-processing.gui" t 433)

[-Received-] 152.91
(:return (:ok "-------------------------
clojure.core/defn
([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])
Macro
  Same as (def name (fn [params* ] exprs*)) or (def
    name (fn ([params* ] exprs*)+)) with any doc-string or attrs added
    to the var metadata
") 433)
[Actionlist] 152.91
433: finished :describe-function 
params: "-------------------------
clojure.core/defn
([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])
Macro
  Same as (def name (fn [params* ] exprs*)) or (def
    name (fn ([params* ] exprs*)+)) with any doc-string or attrs added
    to the var metadata
"
[---Sent---] 152.95
(:emacs-rex (swank:operator-arglist "def" "image-processing.gui") "image-processing.gui" t 434)

[-Received-] 152.95
(:return (:ok nil) 434)
[Actionlist] 152.95
434: finished :operator-arglist 
params: nil
[---Sent---] 153.0
(:emacs-rex (swank:operator-arglist "ns" "image-processing.gui") "image-processing.gui" t 435)

[-Received-] 153.0
(:return (:ok "([name docstring? attr-map? references*])") 435)
[Actionlist] 153.0
435: finished :operator-arglist 
params: "([name docstring? attr-map? references*])"
[---Sent---] 153.0
(:emacs-rex (swank:describe-function "ns") "image-processing.gui" t 436)

[-Received-] 153.0
(:return (:ok "-------------------------
clojure.core/ns
([name docstring? attr-map? references*])
Macro
  Sets *ns* to the namespace named by name (unevaluated), creating it
  if needed.  references can be zero or more of: (:refer-clojure ...)
  (:require ...) (:use ...) (:import ...) (:load ...) (:gen-class)
  with the syntax of refer-clojure/require/use/import/load/gen-class
  respectively, except the arguments are unevaluated and need not be
  quoted. (:gen-class ...), when supplied, defaults to :name
  corresponding to the ns name, :main true, :impl-ns same as ns, and
  :init-impl-ns true. All options of gen-class are
  supported. The :gen-class directive is ignored when not
  compiling. If :gen-class is not supplied, when compiled only an
  nsname__init.class will be generated. If :refer-clojure is not used, a
  default (refer 'clojure) is used.  Use of ns is preferred to
  individual calls to in-ns/require/use/import:

  (ns foo.bar
    (:refer-clojure :exclude [ancestors printf])
    (:require (clojure.contrib sql sql.tests))
    (:use (my.lib this that))
    (:import (java.util Date Timer Random)
             (java.sql Connection Statement)))
") 436)
[Actionlist] 153.01
436: finished :describe-function 
params: "-------------------------
clojure.core/ns
([name docstring? attr-map? references*])
Macro
  Sets *ns* to the namespace named by name (unevaluated), creating it
  if needed.  references can be zero or more of: (:refer-clojure ...)
  (:require ...) (:use ...) (:import ...) (:load ...) (:gen-class)
  with the syntax of refer-clojure/require/use/import/load/gen-class
  respectively, except the arguments are unevaluated and need not be
  quoted. (:gen-class ...), when supplied, defaults to :name
  corresponding to the ns name, :main true, :impl-ns same as ns, and
  :init-impl-ns true. All options of gen-class are
  supported. The :gen-class directive is ignored when not
  compiling. If :gen-class is not supplied, when compiled only an
  nsname__init.class will be generated. If :refer-clojure is not used, a
  default (refer 'clojure) is used.  Use of ns is preferred to
  individual calls to in-ns/require/use/import:

  (ns foo.bar
    (:refer-clojure :exclude [ancestors printf])
    (:require (clojure.contrib sql sql.tests))
    (:use (my.lib this that))
    (:import (java.util Date Timer Random)
             (java.sql Connection Statement)))
"
[---Sent---] 153.1
(:emacs-rex (swank:operator-arglist "let" "image-processing.gui") "image-processing.gui" t 437)

[-Received-] 153.11
(:return (:ok "([bindings & body])") 437)
[Actionlist] 153.11
437: finished :operator-arglist 
params: "([bindings & body])"
[---Sent---] 153.11
(:emacs-rex (swank:describe-function "let") "image-processing.gui" t 438)

[-Received-] 153.11
(:return (:ok "-------------------------
clojure.core/let
  (let [bindings*] exprs*)
Special Form
  binding => binding-form init-expr

  Evaluates the exprs in a lexical context in which the symbols in
  the binding-forms are bound to their respective init-exprs or parts
  therein.

  Please see http://clojure.org/special_forms#let
") 438)
[Actionlist] 153.11
438: finished :describe-function 
params: "-------------------------
clojure.core/let
  (let [bindings*] exprs*)
Special Form
  binding => binding-form init-expr

  Evaluates the exprs in a lexical context in which the symbols in
  the binding-forms are bound to their respective init-exprs or parts
  therein.

  Please see http://clojure.org/special_forms#let
"
[---Sent---] 153.32
(:emacs-rex (swank:operator-arglist "clojure" "image-processing.gui") "image-processing.gui" t 439)

[-Received-] 153.32
(:return (:ok nil) 439)
[Actionlist] 153.32
439: finished :operator-arglist 
params: nil
[---Sent---] 153.61
(:emacs-rex (swank:listener-eval "(defn show-images [& imgs]
  (let [imgs-url (map clojure.java.io/resource imgs)]
    (vertical-panel :items (vec imgs))))
") "image-processing.gui" :repl-thread 440)

[-Received-] 153.61
(:write-string "#'image-processing.gui/show-images
" :repl-result)
[-Received-] 153.61
(:return (:ok nil) 440)
[Actionlist] 153.61
440: finished :listener-eval 
params: nil
[---Sent---] 153.78
(:emacs-rex (swank:listener-eval "(defn show-images [& imgs]
  (let [imgs-url (map clojure.java.io/resource imgs)]
    (vertical-panel :items (vec imgs))))
") "image-processing.gui" :repl-thread 441)

[-Received-] 153.78
(:write-string "#'image-processing.gui/show-images
" :repl-result)
[-Received-] 153.78
(:return (:ok nil) 441)
[Actionlist] 153.78
441: finished :listener-eval 
params: nil
[---Sent---] 154.16
(:emacs-rex (swank:listener-eval "(create-frame)
") "image-processing.gui" :repl-thread 442)

[-Received-] 154.21
(:debug 1 1 ("No implementation of method: :make-widget* of protocol: #'seesaw.make-widget/MakeWidget found for class: clojure.lang.PersistentList" "  [Thrown class java.lang.IllegalArgumentException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "core_deftype.clj:495 clojure.core/-cache-protocol-fn" (:restartable nil)) (1 " make_widget.clj:16 seesaw.make-widget/eval2746[fn]" (:restartable nil)) (2 "      layout.clj:38 seesaw.layout/add-widget" (:restartable nil)) (3 "      layout.clj:36 seesaw.layout/add-widget" (:restartable nil)) (4 "      layout.clj:47 seesaw.layout/add-widgets" (:restartable nil)) (5 "      layout.clj:53 seesaw.layout/fn" (:restartable nil)) (6 "    options.clj:114 seesaw.options/apply-option" (:restartable nil)) (7 "    options.clj:129 seesaw.options/apply-options*" (:restartable nil)) (8 "    options.clj:136 seesaw.options/apply-options" (:restartable nil)) (9 "       core.clj:907 seesaw.core/abstract-panel" (:restartable nil))) (nil))
[-Received-] 154.21
(:debug-activate 1 1 nil)
[---Sent---] 155.43
(:emacs-rex (swank:throw-to-toplevel) nil 1 443)

[-Received-] 155.43
(:return (:abort) 443)
[Actionlist] 155.43
442: pending  :listener-eval 
443: finished :throw-to-toplevel 
[-Received-] 155.43
(:debug-return 1 1 nil)
[-Received-] 155.43
(:return (:abort) 442)
[Actionlist] 155.43
442: finished :listener-eval 
443: finished :throw-to-toplevel 
[---Sent---] 155.62
(:emacs-rex (swank:operator-arglist "show-images" "image-processing.gui") "image-processing.gui" t 444)

[-Received-] 155.62
(:return (:ok "([& imgs])") 444)
[Actionlist] 155.62
444: finished :operator-arglist 
params: "([& imgs])"
[---Sent---] 155.62
(:emacs-rex (swank:describe-function "show-images") "image-processing.gui" t 445)

[-Received-] 155.62
(:return (:ok "-------------------------
image-processing.gui/show-images
([& imgs])
  nil
") 445)
[Actionlist] 155.62
445: finished :describe-function 
params: "-------------------------
image-processing.gui/show-images
([& imgs])
  nil
"
[---Sent---] 155.68
(:emacs-rex (swank:operator-arglist "," "image-processing.gui") "image-processing.gui" t 446)

[-Received-] 155.69
(:return (:ok nil) 446)
[Actionlist] 155.69
446: finished :operator-arglist 
params: nil
[---Sent---] 155.76
(:emacs-rex (swank:operator-arglist "vec" "image-processing.gui") "image-processing.gui" t 447)

[-Received-] 155.76
(:return (:ok "([coll])") 447)
[Actionlist] 155.76
447: finished :operator-arglist 
params: "([coll])"
[---Sent---] 155.76
(:emacs-rex (swank:describe-function "vec") "image-processing.gui" t 448)

[-Received-] 155.76
(:return (:ok "-------------------------
clojure.core/vec
([coll])
  Creates a new vector containing the contents of coll.
") 448)
[Actionlist] 155.76
448: finished :describe-function 
params: "-------------------------
clojure.core/vec
([coll])
  Creates a new vector containing the contents of coll.
"
[---Sent---] 155.9
(:emacs-rex (swank:operator-arglist "vertical-panel" "image-processing.gui") "image-processing.gui" t 449)

[-Received-] 155.9
(:return (:ok "([& opts])") 449)
[Actionlist] 155.9
449: finished :operator-arglist 
params: "([& opts])"
[---Sent---] 156.03
(:emacs-rex (swank:listener-eval "(defn show-images [& imgs]
  (let [imgs-url (map clojure.java.io/resource imgs)]
    (vertical-panel :items [\"A\" \"Ha\"])))
") "image-processing.gui" :repl-thread 450)

[-Received-] 156.04
(:write-string "#'image-processing.gui/show-images
" :repl-result)
[-Received-] 156.13
(:return (:ok nil) 450)
[Actionlist] 156.13
450: finished :listener-eval 
params: nil
[---Sent---] 156.31
(:emacs-rex (swank:listener-eval "(create-frame)
") "image-processing.gui" :repl-thread 451)

[-Received-] 156.37
(:write-string "#<JFrame$Tag$a79ba523 seesaw.core.proxy$javax.swing.JFrame$Tag$a79ba523[frame0,0,31,25x56,layout=java.awt.BorderLayout,title=Hello,resizable,normal,defaultCloseOperation=EXIT_ON_CLOSE,rootPane=javax.swing.JRootPane[,3,23,19x30,layout=javax.swing.JRootPane$RootLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=16777673,maximumSize=,minimumSize=,preferredSize=],rootPaneCheckingEnabled=true]>
" :repl-result)
[-Received-] 156.37
(:return (:ok nil) 451)
[Actionlist] 156.37
451: finished :listener-eval 
params: nil
[---Sent---] 156.82
(:emacs-rex (swank:operator-arglist "horizontal-panel" "image-processing.gui") "image-processing.gui" t 452)

[---Sent---] 159.99
(:emacs-rex (swank:operator-arglist "vec" "image-processing.gui") "image-processing.gui" t 453)

[---Sent---] 163.01
(:emacs-rex (swank:connection-info) nil t 454)

[-Received-] 163.06
(:indentation-update (("dothread-keeping-clj" . 1) ("dothread-keeping" . 1) ("dothread" . 0) ("binding-map" . 1) ("print-length-loop" . 1) ("with-pretty-writer" . 1) ("with-pprint-dispatch" . 1) ("with-connection" . 1) ("with-bindings" . 0) ("with-emacs-package" . 0) ("dothread-swank" . 0) ("with-read-line-support" . 0) ("with-package-tracking" . 0) ("doseq" . 1) ("letfn" . 1) ("cond" . 0) ("with-open" . 1) ("sync" . 1) ("let" . 1) ("dotimes" . 1) ("with-in-str" . 1) ("loop" . 1) ("with-out-str" . 0) ("when-not" . 1) ("with-loading-context" . 0) ("future" . 0) ("with-redefs" . 1) ("when-first" . 1) ("comment" . 0) ("condp" . 2) ("with-local-vars" . 1) ("with-bindings" . 1) ("when-let" . 1) ("while" . 1) ("case" . 1) ("locking" . 1) ("delay" . 0) ("io!" . 0) ("lazy-seq" . 0) ("when" . 1) ("binding" . 1) ("defslimefn" . defun) ("returning" . 1) ("continuously" . 0) ("failing-gracefully" . 0)))
[-Received-] 163.07
(:return (:ok (:pid "1681" :style :spawn :lisp-implementation (:type "Clojure" :name "clojure" :version "1.3.0") :package (:name "user" :prompt "user") :version "20100404")) 454)
[Actionlist] 163.07
454: finished :connection-info 
params: [':pid', '"1681"', ':style', ':spawn', ':lisp-implementation', [':type', '"Clojure"', ':name', '"clojure"', ':version', '"1.3.0"'], ':package', [':name', '"user"', ':prompt', '"user"'], ':version', '"20100404"']
 Package:user Prompt:user
[---Sent---] 163.11
(:emacs-rex (swank:create-repl nil) "image-processing.gui" t 455)

[-Received-] 163.12
(:return (:ok ("user" "user")) 455)
[Actionlist] 163.12
455: finished :create-repl 
params: ['"user"', '"user"']
[---Sent---] 163.12
(:emacs-rex (swank:swank-require 'swank-fuzzy) nil t 456)

[---Sent---] 163.17
(:emacs-rex (swank:listener-eval "(use '[clojure.repl :only (source apropos dir pst doc find-doc)])
(use '[clojure.java.javadoc :only (javadoc)])
(use '[clojure.pprint :only (pp pprint)])
") "image-processing.gui" :repl-thread 457)

[---Sent---] 163.22
(:emacs-rex (swank:listener-eval "(ns image-processing.gui
    (:require clojure.java.io)
    (:use seesaw.core))


(def x '(\"/home/boechat/Documents/captchas/jequiti/a/1016848690.png\"
         \"/home/boechat/Documents/captchas/jequiti/b/1015055312.png\"))


(defn create-frame [] 
  (-> (frame :title \"Hello\",
             :content (show-images x) ,
             :on-close :exit)
      pack!
      show!)) 

(defn show-images [& imgs]
  (let [imgs-url (map clojure.java.io/resource imgs)]
    (horizontal-panel :items (vec '(\"A\" \"Ha\")))))
") "user" :repl-thread 458)

[-Received-] 163.29
(:write-string "nil
" :repl-result)
[-Received-] 163.29
(:indentation-update (("with-timeout" . 1) ("with-bindings" . 0)))
[-Received-] 163.29
(:return (:ok nil) 456)
[Actionlist] 163.29
456: finished :swank-require 
457: pending  :listener-eval 
458: pending  :listener-eval 
params: nil
[-Received-] 163.29
(:indentation-update (("with-timeout" . 1) ("with-bindings" . 0)))
[-Received-] 163.29
(:return (:ok nil) 457)
[Actionlist] 163.29
456: finished :swank-require 
457: finished :listener-eval 
458: pending  :listener-eval 
params: nil
[---Sent---] 163.72
(:emacs-rex (swank:listener-eval "
") "user" :repl-thread 459)

[-Received-] 163.82
(:new-package "image-processing.gui" "image-processing.gui")
[-Received-] 163.82
(:debug 1 1 ("Unable to resolve symbol: show-images in this context" "  [Thrown class java.lang.RuntimeException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "              Util.java:156 clojure.lang.Util.runtimeException" (:restartable nil)) (1 "         Compiler.java:6720 clojure.lang.Compiler.resolveIn" (:restartable nil)) (2 "         Compiler.java:6664 clojure.lang.Compiler.resolve" (:restartable nil)) (3 "         Compiler.java:6625 clojure.lang.Compiler.analyzeSymbol" (:restartable nil)) (4 "         Compiler.java:6198 clojure.lang.Compiler.analyze" (:restartable nil)) (5 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil)) (6 "         Compiler.java:3452 clojure.lang.Compiler$InvokeExpr.parse" (:restartable nil)) (7 "         Compiler.java:6411 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (8 "         Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil)) (9 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil))) (nil))
[-Received-] 163.83
(:debug-activate 1 1 nil)
[-Received-] 163.83
(:write-string "nil
" :repl-result)
[-Received-] 163.83
(:indentation-update (("with-bindings" . 1) ("with-widgets" . 1) ("invoke-now" . 0) ("invoke-soon" . 0) ("signaller" . 1) ("invoke-later" . 0)))
[-Received-] 163.83
(:return (:ok nil) 459)
[Actionlist] 163.83
458: pending  :listener-eval 
459: finished :listener-eval 
params: nil
[-Received-] 163.83
(:debug-activate 1 1 nil)
[---Sent---] 164.06
(:emacs-rex (swank:throw-to-toplevel) nil 1 460)

[-Received-] 164.06
(:return (:abort) 460)
[Actionlist] 164.06
458: pending  :listener-eval 
460: finished :throw-to-toplevel 
[-Received-] 164.17
(:debug-return 1 1 nil)
[-Received-] 164.17
(:return (:abort) 458)
[Actionlist] 164.17
458: finished :listener-eval 
[---Sent---] 164.5
(:emacs-rex (swank:listener-eval "(ns image-processing.gui
    (:require clojure.java.io)
    (:use seesaw.core))


(def x '(\"/home/boechat/Documents/captchas/jequiti/a/1016848690.png\"
         \"/home/boechat/Documents/captchas/jequiti/b/1015055312.png\"))


(defn show-images [& imgs]
  (let [imgs-url (map clojure.java.io/resource imgs)]
    (horizontal-panel :items (vec '(\"A\" \"Ha\")))))


(defn create-frame [] 
  (-> (frame :title \"Hello\",
             :content (show-images x) ,
             :on-close :exit)
      pack!
      show!)) 

") "image-processing.gui" :repl-thread 461)

[-Received-] 164.55
(:write-string "#'image-processing.gui/create-frame
" :repl-result)
[-Received-] 164.55
(:indentation-update (("with-bindings" . 0)))
[-Received-] 164.55
(:return (:ok nil) 461)
[Actionlist] 164.55
461: finished :listener-eval 
params: nil
[---Sent---] 164.8
(:emacs-rex (swank:fuzzy-completions "cre" "image-processing.gui" :limit 200 :time-limit-in-msec 2000) nil t 462)

[-Received-] 164.83
(:indentation-update (("with-bindings" . 1)))
[-Received-] 164.84
(:return (:ok ((("create-frame" "30.38" ((0 "cre")) "-f------") ("clojure.repl/" "27.00" ((0 "c") (8 "re")) "b------p") ("clj-stacktrace.repl/" "26.59" ((0 "c") (15 "re")) "b------p") ("clojure.core/" "18.00" ((0 "c") (5 "r") (11 "e")) "b------p") ("clj-stacktrace.core/" "17.59" ((0 "c") (10 "r") (18 "e")) "b------p") ("clojure.java.browse/" "17.59" ((0 "c") (5 "r") (18 "e")) "b------p") ("j18n.core/" "16.43" ((5 "c") (7 "re")) "b------p") ("swank.core/" "16.25" ((6 "c") (8 "re")) "b------p") ("seesaw.core/" "16.11" ((7 "c") (9 "re")) "b------p") ("swank.util.clojure/" "15.63" ((11 "c") (16 "re")) "b------p") ("swank.util.class-browse/" "15.48" ((11 "c") (18 "r") (22 "e")) "b------p") ("clojure.set/" "14.16" ((0 "c") (5 "re")) "b------p") ("clojure.zip/" "14.16" ((0 "c") (5 "re")) "b------p") ("clojure.main/" "14.05" ((0 "c") (5 "re")) "b------p") ("clojure.walk/" "14.05" ((0 "c") (5 "re")) "b------p") ("clojure.pprint/" "13.88" ((0 "c") (5 "re")) "b------p") ("clojure.string/" "13.88" ((0 "c") (5 "re")) "b------p") ("clojure.java.io/" "13.82" ((0 "c") (5 "re")) "b------p") ("clojure.java.shell/" "13.68" ((0 "c") (5 "re")) "b------p") ("clojure.contrib.def/" "13.64" ((0 "c") (5 "re")) "b------p") ("clojure.java.javadoc/" "13.61" ((0 "c") (5 "re")) "b------p") ("clojure.core.protocols/" "13.55" ((0 "c") (5 "re")) "b------p") ("clojure.contrib.macro-utils/" "13.45" ((0 "c") (5 "re")) "b------p") ("clj-stacktrace.utils/" "12.56" ((0 "c") (10 "r") (13 "e")) "b------p") ("swank.core.hooks/" "11.76" ((6 "c") (8 "re")) "b------p") ("swank.core.server/" "11.72" ((6 "c") (8 "re")) "b------p") ("swank.core.protocol/" "11.64" ((6 "c") (8 "re")) "b------p") ("swank.core.threadmap/" "11.61" ((6 "c") (8 "re")) "b------p") ("swank.core.connection/" "11.58" ((6 "c") (8 "re")) "b------p") ("swank.util.concurrent.mbox/" "11.47" ((11 "c") (17 "re")) "b------p") ("swank.core.debugger-backends/" "11.43" ((6 "c") (8 "re")) "b------p") ("swank.util.concurrent.thread/" "11.43" ((11 "c") (17 "re")) "b------p") ("swank.clj-contrib.macroexpand/" "10.37" ((6 "c") (14 "r") (23 "e")) "b------p") ("swank.util.clj-stacktrace-compat/" "10.33" ((11 "c") (21 "r") (24 "e")) "b------p")) nil)) 462)
[Actionlist] 164.85
462: finished :fuzzy-completions 
params: [[['"create-frame"', '"30.38"', [['0', '"cre"']], '"-f------"'], ['"clojure.repl/"', '"27.00"', [['0', '"c"'], ['8', '"re"']], '"b------p"'], ['"clj-stacktrace.repl/"', '"26.59"', [['0', '"c"'], ['15', '"re"']], '"b------p"'], ['"clojure.core/"', '"18.00"', [['0', '"c"'], ['5', '"r"'], ['11', '"e"']], '"b------p"'], ['"clj-stacktrace.core/"', '"17.59"', [['0', '"c"'], ['10', '"r"'], ['18', '"e"']], '"b------p"'], ['"clojure.java.browse/"', '"17.59"', [['0', '"c"'], ['5', '"r"'], ['18', '"e"']], '"b------p"'], ['"j18n.core/"', '"16.43"', [['5', '"c"'], ['7', '"re"']], '"b------p"'], ['"swank.core/"', '"16.25"', [['6', '"c"'], ['8', '"re"']], '"b------p"'], ['"seesaw.core/"', '"16.11"', [['7', '"c"'], ['9', '"re"']], '"b------p"'], ['"swank.util.clojure/"', '"15.63"', [['11', '"c"'], ['16', '"re"']], '"b------p"'], ['"swank.util.class-browse/"', '"15.48"', [['11', '"c"'], ['18', '"r"'], ['22', '"e"']], '"b------p"'], ['"clojure.set/"', '"14.16"', [['0', '"c"'], ['5', '"re"']], '"b------p"'], ['"clojure.zip/"', '"14.16"', [['0', '"c"'], ['5', '"re"']], '"b------p"'], ['"clojure.main/"', '"14.05"', [['0', '"c"'], ['5', '"re"']], '"b------p"'], ['"clojure.walk/"', '"14.05"', [['0', '"c"'], ['5', '"re"']], '"b------p"'], ['"clojure.pprint/"', '"13.88"', [['0', '"c"'], ['5', '"re"']], '"b------p"'], ['"clojure.string/"', '"13.88"', [['0', '"c"'], ['5', '"re"']], '"b------p"'], ['"clojure.java.io/"', '"13.82"', [['0', '"c"'], ['5', '"re"']], '"b------p"'], ['"clojure.java.shell/"', '"13.68"', [['0', '"c"'], ['5', '"re"']], '"b------p"'], ['"clojure.contrib.def/"', '"13.64"', [['0', '"c"'], ['5', '"re"']], '"b------p"'], ['"clojure.java.javadoc/"', '"13.61"', [['0', '"c"'], ['5', '"re"']], '"b------p"'], ['"clojure.core.protocols/"', '"13.55"', [['0', '"c"'], ['5', '"re"']], '"b------p"'], ['"clojure.contrib.macro-utils/"', '"13.45"', [['0', '"c"'], ['5', '"re"']], '"b------p"'], ['"clj-stacktrace.utils/"', '"12.56"', [['0', '"c"'], ['10', '"r"'], ['13', '"e"']], '"b------p"'], ['"swank.core.hooks/"', '"11.76"', [['6', '"c"'], ['8', '"re"']], '"b------p"'], ['"swank.core.server/"', '"11.72"', [['6', '"c"'], ['8', '"re"']], '"b------p"'], ['"swank.core.protocol/"', '"11.64"', [['6', '"c"'], ['8', '"re"']], '"b------p"'], ['"swank.core.threadmap/"', '"11.61"', [['6', '"c"'], ['8', '"re"']], '"b------p"'], ['"swank.core.connection/"', '"11.58"', [['6', '"c"'], ['8', '"re"']], '"b------p"'], ['"swank.util.concurrent.mbox/"', '"11.47"', [['11', '"c"'], ['17', '"re"']], '"b------p"'], ['"swank.core.debugger-backends/"', '"11.43"', [['6', '"c"'], ['8', '"re"']], '"b------p"'], ['"swank.util.concurrent.thread/"', '"11.43"', [['11', '"c"'], ['17', '"re"']], '"b------p"'], ['"swank.clj-contrib.macroexpand/"', '"10.37"', [['6', '"c"'], ['14', '"r"'], ['23', '"e"']], '"b------p"'], ['"swank.util.clj-stacktrace-compat/"', '"10.33"', [['11', '"c"'], ['21', '"r"'], ['24', '"e"']], '"b------p"']], 'nil']
[---Sent---] 165.3
(:emacs-rex (swank:fuzzy-completions "create-fra" "image-processing.gui" :limit 200 :time-limit-in-msec 2000) nil t 463)

[-Received-] 165.31
(:indentation-update (("with-bindings" . 0)))
[-Received-] 165.31
(:return (:ok ((("create-frame" "127.52" ((0 "create-fra")) "-f------")) nil)) 463)
[Actionlist] 165.31
463: finished :fuzzy-completions 
params: [[['"create-frame"', '"127.52"', [['0', '"create-fra"']], '"-f------"']], 'nil']
[---Sent---] 165.56
(:emacs-rex (swank:listener-eval "
") "image-processing.gui" :repl-thread 464)

[-Received-] 165.56
(:write-string "nil
" :repl-result)
[-Received-] 165.64
(:indentation-update (("with-bindings" . 1)))
[-Received-] 165.64
(:return (:ok nil) 464)
[Actionlist] 165.64
464: finished :listener-eval 
params: nil
[---Sent---] 165.87
(:emacs-rex (swank:listener-eval "(create-frame) 
") "image-processing.gui" :repl-thread 465)

[-Received-] 165.92
(:write-string "#<JFrame$Tag$a79ba523 seesaw.core.proxy$javax.swing.JFrame$Tag$a79ba523[frame0,0,31,34x41,layout=java.awt.BorderLayout,title=Hello,resizable,normal,defaultCloseOperation=EXIT_ON_CLOSE,rootPane=javax.swing.JRootPane[,5,25,28x15,layout=javax.swing.JRootPane$RootLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=16777673,maximumSize=,minimumSize=,preferredSize=],rootPaneCheckingEnabled=true]>
" :repl-result)
[-Received-] 165.92
(:indentation-update (("with-bindings" . 0)))
[-Received-] 165.92
(:return (:ok nil) 465)
[Actionlist] 165.93
465: finished :listener-eval 
params: nil
[---Sent---] 166.29
(:emacs-rex (swank:operator-arglist "vec" "image-processing.gui") "image-processing.gui" t 466)

[---Sent---] 168.67
(:emacs-rex (swank:operator-arglist "horizontal-panel" "image-processing.gui") "image-processing.gui" t 467)

[---Sent---] 172.11
(:emacs-rex (swank:connection-info) nil t 468)

[-Received-] 172.16
(:indentation-update (("dothread-keeping-clj" . 1) ("dothread-keeping" . 1) ("dothread" . 0) ("binding-map" . 1) ("print-length-loop" . 1) ("with-pretty-writer" . 1) ("with-pprint-dispatch" . 1) ("with-connection" . 1) ("with-bindings" . 0) ("with-emacs-package" . 0) ("dothread-swank" . 0) ("with-read-line-support" . 0) ("with-package-tracking" . 0) ("doseq" . 1) ("letfn" . 1) ("cond" . 0) ("with-open" . 1) ("sync" . 1) ("let" . 1) ("dotimes" . 1) ("with-in-str" . 1) ("loop" . 1) ("with-out-str" . 0) ("when-not" . 1) ("with-loading-context" . 0) ("future" . 0) ("with-redefs" . 1) ("when-first" . 1) ("comment" . 0) ("condp" . 2) ("with-local-vars" . 1) ("with-bindings" . 1) ("when-let" . 1) ("while" . 1) ("case" . 1) ("locking" . 1) ("delay" . 0) ("io!" . 0) ("lazy-seq" . 0) ("when" . 1) ("binding" . 1) ("defslimefn" . defun) ("returning" . 1) ("continuously" . 0) ("failing-gracefully" . 0)))
[-Received-] 172.17
(:return (:ok (:pid "1844" :style :spawn :lisp-implementation (:type "Clojure" :name "clojure" :version "1.3.0") :package (:name "user" :prompt "user") :version "20100404")) 468)
[Actionlist] 172.17
468: finished :connection-info 
params: [':pid', '"1844"', ':style', ':spawn', ':lisp-implementation', [':type', '"Clojure"', ':name', '"clojure"', ':version', '"1.3.0"'], ':package', [':name', '"user"', ':prompt', '"user"'], ':version', '"20100404"']
 Package:user Prompt:user
[---Sent---] 172.2
(:emacs-rex (swank:create-repl nil) "image-processing.gui" t 469)

[-Received-] 172.2
(:return (:ok ("user" "user")) 469)
[Actionlist] 172.2
469: finished :create-repl 
params: ['"user"', '"user"']
[---Sent---] 172.2
(:emacs-rex (swank:swank-require 'swank-fuzzy) nil t 470)

[---Sent---] 172.25
(:emacs-rex (swank:listener-eval "(use '[clojure.repl :only (source apropos dir pst doc find-doc)])
(use '[clojure.java.javadoc :only (javadoc)])
(use '[clojure.pprint :only (pp pprint)])
") "image-processing.gui" :repl-thread 471)

[---Sent---] 172.29
(:emacs-rex (swank:listener-eval "(vec (first x)) 
") "user" :repl-thread 472)

[-Received-] 172.35
(:write-string "nil
" :repl-result)
[-Received-] 172.35
(:indentation-update (("with-timeout" . 1) ("with-bindings" . 0)))
[-Received-] 172.35
(:return (:ok nil) 470)
[Actionlist] 172.35
470: finished :swank-require 
471: pending  :listener-eval 
472: pending  :listener-eval 
params: nil
[-Received-] 172.39
(:indentation-update (("with-timeout" . 1) ("with-bindings" . 0)))
[-Received-] 172.44
(:return (:ok nil) 471)
[Actionlist] 172.44
471: finished :listener-eval 
472: pending  :listener-eval 
params: nil
[-Received-] 172.44
(:debug 1 1 ("Unable to resolve symbol: x in this context" "  [Thrown class java.lang.RuntimeException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "              Util.java:156 clojure.lang.Util.runtimeException" (:restartable nil)) (1 "         Compiler.java:6720 clojure.lang.Compiler.resolveIn" (:restartable nil)) (2 "         Compiler.java:6664 clojure.lang.Compiler.resolve" (:restartable nil)) (3 "         Compiler.java:6625 clojure.lang.Compiler.analyzeSymbol" (:restartable nil)) (4 "         Compiler.java:6198 clojure.lang.Compiler.analyze" (:restartable nil)) (5 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil)) (6 "         Compiler.java:3503 clojure.lang.Compiler$InvokeExpr.parse" (:restartable nil)) (7 "         Compiler.java:6411 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (8 "         Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil)) (9 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil))) (nil))
[-Received-] 172.45
(:debug-activate 1 1 nil)
[---Sent---] 172.57
(:emacs-rex (swank:throw-to-toplevel) nil 1 473)

[-Received-] 172.57
(:return (:abort) 473)
[Actionlist] 172.57
472: pending  :listener-eval 
473: finished :throw-to-toplevel 
[-Received-] 172.57
(:debug-return 1 1 nil)
[-Received-] 172.57
(:return (:abort) 472)
[Actionlist] 172.57
472: finished :listener-eval 
473: finished :throw-to-toplevel 
[---Sent---] 172.74
(:emacs-rex (swank:listener-eval "(ns image-processing.gui
    (:require clojure.java.io)
    (:use seesaw.core))


(def x '(\"/home/boechat/Documents/captchas/jequiti/a/1016848690.png\"
         \"/home/boechat/Documents/captchas/jequiti/b/1015055312.png\"))


(defn show-images [& imgs]
  (let [imgs-url (map clojure.java.io/resource imgs)]
    (horizontal-panel :items (vec ))))


(defn create-frame [] 
  (-> (frame :title \"Hello\",
             :content (show-images x) ,
             :on-close :exit)
      pack!
      show!)) 

") "user" :repl-thread 474)

[-Received-] 173.08
(:write-string "#'image-processing.gui/create-frame
" :repl-result)
[-Received-] 173.08
(:new-package "image-processing.gui" "image-processing.gui")
[-Received-] 173.08
(:indentation-update (("with-bindings" . 1) ("with-widgets" . 1) ("invoke-now" . 0) ("invoke-soon" . 0) ("signaller" . 1) ("invoke-later" . 0)))
[-Received-] 173.08
(:return (:ok nil) 474)
[Actionlist] 173.08
474: finished :listener-eval 
params: nil
[---Sent---] 173.3
(:emacs-rex (swank:operator-arglist "vec" "image-processing.gui") "image-processing.gui" t 475)

[-Received-] 173.32
(:indentation-update (("with-bindings" . 0)))
[-Received-] 173.32
(:return (:ok "([coll])") 475)
[Actionlist] 173.32
475: finished :operator-arglist 
params: "([coll])"
[---Sent---] 173.44
(:emacs-rex (swank:operator-arglist "first" "image-processing.gui") "image-processing.gui" t 476)

[-Received-] 173.45
(:indentation-update (("with-bindings" . 1)))
[-Received-] 173.45
(:return (:ok "([coll])") 476)
[Actionlist] 173.45
476: finished :operator-arglist 
params: "([coll])"
[---Sent---] 173.53
(:emacs-rex (swank:listener-eval "(vec (first x))
") "image-processing.gui" :repl-thread 477)

[-Received-] 173.53
(:write-string "[\\/ \\h \\o \\m \\e \\/ \\b \\o \\e \\c \\h \\a \\t \\/ \\D \\o \\c \\u \\m \\e \\n \\t \\s \\/ \\c \\a \\p \\t \\c \\h \\a \\s \\/ \\j \\e \\q \\u \\i \\t \\i \\/ \\a \\/ \\1 \\0 \\1 \\6 \\8 \\4 \\8 \\6 \\9 \\0 \\. \\p \\n \\g]
" :repl-result)
[-Received-] 173.63
(:indentation-update (("with-bindings" . 0)))
[-Received-] 173.63
(:return (:ok nil) 477)
[Actionlist] 173.63
477: finished :listener-eval 
params: nil
[---Sent---] 173.84
(:emacs-rex (swank:operator-arglist "onj" "image-processing.gui") "image-processing.gui" t 478)

[-Received-] 173.85
(:indentation-update (("with-bindings" . 1)))
[-Received-] 173.85
(:return (:ok nil) 478)
[Actionlist] 173.85
478: finished :operator-arglist 
params: nil
[---Sent---] 174.05
(:emacs-rex (swank:operator-arglist "conj" "image-processing.gui") "image-processing.gui" t 479)

[-Received-] 174.07
(:indentation-update (("with-bindings" . 0)))
[-Received-] 174.07
(:return (:ok "([coll x] [coll x & xs])") 479)
[Actionlist] 174.07
479: finished :operator-arglist 
params: "([coll x] [coll x & xs])"
[---Sent---] 174.39
(:emacs-rex (swank:operator-arglist "first" "image-processing.gui") "image-processing.gui" t 480)

[-Received-] 174.39
(:indentation-update (("with-bindings" . 1)))
[-Received-] 174.39
(:return (:ok "([coll])") 480)
[Actionlist] 174.39
480: finished :operator-arglist 
params: "([coll])"
[---Sent---] 174.48
(:emacs-rex (swank:listener-eval "(conj [] (first x)) 
") "image-processing.gui" :repl-thread 481)

[-Received-] 174.48
(:write-string "[\"/home/boechat/Documents/captchas/jequiti/a/1016848690.png\"]
" :repl-result)
[-Received-] 174.59
(:indentation-update (("with-bindings" . 0)))
[-Received-] 174.59
(:return (:ok nil) 481)
[Actionlist] 174.59
481: finished :listener-eval 
params: nil
[---Sent---] 174.83
(:emacs-rex (swank:operator-arglist "conj" "image-processing.gui") "image-processing.gui" t 482)

[-Received-] 174.85
(:indentation-update (("with-bindings" . 1)))
[-Received-] 174.85
(:return (:ok "([coll x] [coll x & xs])") 482)
[Actionlist] 174.85
482: finished :operator-arglist 
params: "([coll x] [coll x & xs])"
[---Sent---] 174.99
(:emacs-rex (swank:operator-arglist "first" "image-processing.gui") "image-processing.gui" t 483)

[-Received-] 174.99
(:indentation-update (("with-bindings" . 0)))
[-Received-] 175.0
(:return (:ok "([coll])") 483)
[Actionlist] 175.0
483: finished :operator-arglist 
params: "([coll])"
[---Sent---] 175.1
(:emacs-rex (swank:listener-eval "(defn show-images [& imgs]
  (let [imgs-url (map clojure.java.io/resource imgs)]
    (horizontal-panel :items (conj [] (first x)))))
") "image-processing.gui" :repl-thread 484)

[-Received-] 175.1
(:write-string "#'image-processing.gui/show-images
" :repl-result)
[-Received-] 175.2
(:indentation-update (("with-bindings" . 1)))
[-Received-] 175.2
(:return (:ok nil) 484)
[Actionlist] 175.2
484: finished :listener-eval 
params: nil
[---Sent---] 175.56
(:emacs-rex (swank:listener-eval "(create-frame)
") "image-processing.gui" :repl-thread 485)

[-Received-] 175.62
(:write-string "#<JFrame$Tag$a79ba523 seesaw.core.proxy$javax.swing.JFrame$Tag$a79ba523[frame0,0,31,440x41,layout=java.awt.BorderLayout,title=Hello,resizable,normal,defaultCloseOperation=EXIT_ON_CLOSE,rootPane=javax.swing.JRootPane[,3,23,434x15,layout=javax.swing.JRootPane$RootLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=16777673,maximumSize=,minimumSize=,preferredSize=],rootPaneCheckingEnabled=true]>
" :repl-result)
[-Received-] 175.62
(:indentation-update (("with-bindings" . 0)))
[-Received-] 175.62
(:return (:ok nil) 485)
[Actionlist] 175.62
485: finished :listener-eval 
params: nil
[---Sent---] 175.85
(:emacs-rex (swank:listener-eval "
") "image-processing.gui" :repl-thread 486)

[-Received-] 175.85
(:write-string "nil
" :repl-result)
[-Received-] 175.94
(:indentation-update (("with-bindings" . 1)))
[-Received-] 175.94
(:return (:ok nil) 486)
[Actionlist] 175.94
486: finished :listener-eval 
params: nil
[---Sent---] 176.33
(:emacs-rex (swank:listener-eval "(ns image-processing.gui
    (:require clojure.java.io)
    (:use seesaw.core))


(def x '(\"/home/boechat/Documents/captchas/jequiti/a/1016848690.png\"
         \"/home/boechat/Documents/captchas/jequiti/b/1015055312.png\"))


(defn show-images [& imgs]
  (let [imgs-url (map clojure.java.io/resource imgs)]
    (horizontal-panel :items (conj [] (first x)))))


(defn create-frame [] 
  (-> (frame :title \"Hello\",
             :content (show-images x) ,
             :on-close :exit)
      pack!
      show!)) 

") "image-processing.gui" :repl-thread 487)

[---Sent---] 178.55
(:emacs-rex (swank:connection-info) nil t 488)

[-Received-] 178.58
(:indentation-update (("dothread-keeping-clj" . 1) ("dothread-keeping" . 1) ("dothread" . 0) ("binding-map" . 1) ("print-length-loop" . 1) ("with-pretty-writer" . 1) ("with-pprint-dispatch" . 1) ("with-connection" . 1) ("with-bindings" . 0) ("with-emacs-package" . 0) ("dothread-swank" . 0) ("with-read-line-support" . 0) ("with-package-tracking" . 0) ("doseq" . 1) ("letfn" . 1) ("cond" . 0) ("with-open" . 1) ("sync" . 1) ("let" . 1) ("dotimes" . 1) ("with-in-str" . 1) ("loop" . 1) ("with-out-str" . 0) ("when-not" . 1) ("with-loading-context" . 0) ("future" . 0) ("with-redefs" . 1) ("when-first" . 1) ("comment" . 0) ("condp" . 2) ("with-local-vars" . 1) ("with-bindings" . 1) ("when-let" . 1) ("while" . 1) ("case" . 1) ("locking" . 1) ("delay" . 0) ("io!" . 0) ("lazy-seq" . 0) ("when" . 1) ("binding" . 1) ("defslimefn" . defun) ("returning" . 1) ("continuously" . 0) ("failing-gracefully" . 0)))
[-Received-] 178.59
(:return (:ok (:pid "1948" :style :spawn :lisp-implementation (:type "Clojure" :name "clojure" :version "1.3.0") :package (:name "user" :prompt "user") :version "20100404")) 488)
[Actionlist] 178.59
488: finished :connection-info 
params: [':pid', '"1948"', ':style', ':spawn', ':lisp-implementation', [':type', '"Clojure"', ':name', '"clojure"', ':version', '"1.3.0"'], ':package', [':name', '"user"', ':prompt', '"user"'], ':version', '"20100404"']
 Package:user Prompt:user
[---Sent---] 178.64
(:emacs-rex (swank:create-repl nil) "user" t 489)

[-Received-] 178.64
(:return (:ok ("user" "user")) 489)
[Actionlist] 178.64
489: finished :create-repl 
params: ['"user"', '"user"']
[---Sent---] 178.64
(:emacs-rex (swank:swank-require 'swank-fuzzy) nil t 490)

[---Sent---] 178.71
(:emacs-rex (swank:listener-eval "(use '[clojure.repl :only (source apropos dir pst doc find-doc)])
(use '[clojure.java.javadoc :only (javadoc)])
(use '[clojure.pprint :only (pp pprint)])
") "user" :repl-thread 491)

[---Sent---] 178.76
(:emacs-rex (swank:listener-eval "(ns image-processing.gui
    (:require clojure.java.io)
    (:use seesaw.core))


(def x '(\"image_processing/test/image_processing/1a7r.gif\"
         \"/home/boechat/Documents/captchas/jequiti/b/1015055312.png\"))


(defn show-images [& imgs]
  (let [imgs-url (map clojure.java.io/resource imgs)]
    (horizontal-panel :items (conj [] (first x)))))


(defn create-frame [] 
  (-> (frame :title \"Hello\",
             :content (show-images x) ,
             :on-close :exit)
      pack!
      show!)) 

") "user" :repl-thread 492)

[-Received-] 178.82
(:write-string "nil
" :repl-result)
[-Received-] 178.86
(:indentation-update (("with-timeout" . 1) ("with-bindings" . 0)))
[-Received-] 178.86
(:return (:ok nil) 490)
[Actionlist] 178.86
490: finished :swank-require 
491: pending  :listener-eval 
492: pending  :listener-eval 
params: nil
[-Received-] 178.9
(:indentation-update (("with-timeout" . 1) ("with-bindings" . 0)))
[-Received-] 178.9
(:return (:ok nil) 491)
[Actionlist] 178.9
491: finished :listener-eval 
492: pending  :listener-eval 
params: nil
[-Received-] 179.29
(:write-string "#'image-processing.gui/create-frame
" :repl-result)
[-Received-] 179.29
(:new-package "image-processing.gui" "image-processing.gui")
[-Received-] 179.29
(:indentation-update (("with-bindings" . 1) ("with-widgets" . 1) ("invoke-now" . 0) ("invoke-soon" . 0) ("signaller" . 1) ("invoke-later" . 0)))
[-Received-] 179.29
(:return (:ok nil) 492)
[Actionlist] 179.29
492: finished :listener-eval 
params: nil
[---Sent---] 180.04
(:emacs-rex (swank:operator-arglist "clojure" "image-processing.gui") "image-processing.gui" t 493)

[-Received-] 180.05
(:indentation-update (("with-bindings" . 0)))
[-Received-] 180.05
(:return (:ok nil) 493)
[Actionlist] 180.05
493: finished :operator-arglist 
params: nil
[---Sent---] 180.17
(:emacs-rex (swank:operator-arglist "first" "image-processing.gui") "image-processing.gui" t 494)

[-Received-] 180.18
(:indentation-update (("with-bindings" . 1)))
[-Received-] 180.18
(:return (:ok "([coll])") 494)
[Actionlist] 180.18
494: finished :operator-arglist 
params: "([coll])"
[---Sent---] 180.27
(:emacs-rex (swank:listener-eval "(clojure.java.io/resource (first x))
") "image-processing.gui" :repl-thread 495)

[-Received-] 180.28
(:write-string "nil
" :repl-result)
[-Received-] 180.36
(:indentation-update (("with-bindings" . 0)))
[-Received-] 180.36
(:return (:ok nil) 495)
[Actionlist] 180.36
495: finished :listener-eval 
params: nil
[---Sent---] 180.69
(:emacs-rex (swank:operator-arglist "first" "image-processing.gui") "image-processing.gui" t 496)

[-Received-] 180.69
(:indentation-update (("with-bindings" . 1)))
[-Received-] 180.69
(:return (:ok "([coll])") 496)
[Actionlist] 180.69
496: finished :operator-arglist 
params: "([coll])"
[---Sent---] 180.77
(:emacs-rex (swank:listener-eval "(first x)
") "image-processing.gui" :repl-thread 497)

[-Received-] 180.77
(:write-string "\"image_processing/test/image_processing/1a7r.gif\"
" :repl-result)
[-Received-] 180.86
(:indentation-update (("with-bindings" . 0)))
[-Received-] 180.86
(:return (:ok nil) 497)
[Actionlist] 180.86
497: finished :listener-eval 
params: nil
[---Sent---] 181.52
(:emacs-rex (swank:listener-eval "(def x '(\"image_processing/test/image_processing/test/1a7r.gif\"
         \"/home/boechat/Documents/captchas/jequiti/b/1015055312.png\"))
") "image-processing.gui" :repl-thread 498)

[-Received-] 181.52
(:write-string "#'image-processing.gui/x
" :repl-result)
[-Received-] 181.62
(:indentation-update (("with-bindings" . 1)))
[-Received-] 181.62
(:return (:ok nil) 498)
[Actionlist] 181.62
498: finished :listener-eval 
params: nil
[---Sent---] 181.87
(:emacs-rex (swank:listener-eval "(clojure.java.io/resource (first x))
") "image-processing.gui" :repl-thread 499)

[-Received-] 181.88
(:write-string "nil
" :repl-result)
[-Received-] 181.97
(:indentation-update (("with-bindings" . 0)))
[-Received-] 181.98
(:return (:ok nil) 499)
[Actionlist] 181.98
499: finished :listener-eval 
params: nil
[---Sent---] 182.4
(:emacs-rex (swank:listener-eval "(def x '(\"image-processing/test/image-processing/test/1a7r.gif\"
         \"/home/boechat/Documents/captchas/jequiti/b/1015055312.png\"))
") "image-processing.gui" :repl-thread 500)

[-Received-] 182.4
(:write-string "#'image-processing.gui/x
" :repl-result)
[-Received-] 182.5
(:indentation-update (("with-bindings" . 1)))
[-Received-] 182.5
(:return (:ok nil) 500)
[Actionlist] 182.5
500: finished :listener-eval 
params: nil
[---Sent---] 182.71
(:emacs-rex (swank:listener-eval "(clojure.java.io/resource (first x))
") "image-processing.gui" :repl-thread 501)

[-Received-] 182.71
(:write-string "nil
" :repl-result)
[-Received-] 182.81
(:indentation-update (("with-bindings" . 0)))
[-Received-] 182.81
(:return (:ok nil) 501)
[Actionlist] 182.81
501: finished :listener-eval 
params: nil
[---Sent---] 182.98
(:emacs-rex (swank:listener-eval "(first x)
") "image-processing.gui" :repl-thread 502)

[-Received-] 182.99
(:write-string "\"image-processing/test/image-processing/test/1a7r.gif\"
" :repl-result)
[-Received-] 183.08
(:indentation-update (("with-bindings" . 1)))
[-Received-] 183.08
(:return (:ok nil) 502)
[Actionlist] 183.08
502: finished :listener-eval 
params: nil
[---Sent---] 184.35
(:emacs-rex (swank:operator-arglist "/home/boechat/Documents/captchas/jequiti/b/1015055312" "image-processing.gui") "image-processing.gui" t 503)

[-Received-] 184.35
(:indentation-update (("with-bindings" . 0)))
[-Received-] 184.35
(:return (:ok nil) 503)
[Actionlist] 184.35
503: finished :operator-arglist 
params: nil
[---Sent---] 184.64
(:emacs-rex (swank:operator-arglist "image-processing/test/image-processing/test/1a7r" "image-processing.gui") "image-processing.gui" t 504)

[-Received-] 184.65
(:indentation-update (("with-bindings" . 1)))
[-Received-] 184.65
(:return (:ok nil) 504)
[Actionlist] 184.65
504: finished :operator-arglist 
params: nil
[---Sent---] 184.74
(:emacs-rex (swank:operator-arglist "imgs-url" "image-processing.gui") "image-processing.gui" t 505)

[-Received-] 184.74
(:indentation-update (("with-bindings" . 0)))
[-Received-] 184.74
(:return (:ok nil) 505)
[Actionlist] 184.74
505: finished :operator-arglist 
params: nil
[---Sent---] 184.79
(:emacs-rex (swank:operator-arglist "clojure" "image-processing.gui") "image-processing.gui" t 506)

[-Received-] 184.8
(:indentation-update (("with-bindings" . 1)))
[-Received-] 184.8
(:return (:ok nil) 506)
[Actionlist] 184.8
506: finished :operator-arglist 
params: nil
[---Sent---] 185.2
(:emacs-rex (swank:listener-eval "
") "image-processing.gui" :repl-thread 507)

[-Received-] 185.2
(:write-string "nil
" :repl-result)
[-Received-] 185.2
(:indentation-update (("with-bindings" . 0)))
[-Received-] 185.2
(:return (:ok nil) 507)
[Actionlist] 185.2
507: finished :listener-eval 
params: nil
[---Sent---] 185.58
(:emacs-rex (swank:listener-eval "(clojure.java.io/resource \"1a7r.gif\")
") "image-processing.gui" :repl-thread 508)

[-Received-] 185.58
(:write-string "nil
" :repl-result)
[-Received-] 185.64
(:indentation-update (("with-bindings" . 1)))
[-Received-] 185.64
(:return (:ok nil) 508)
[Actionlist] 185.64
508: finished :listener-eval 
params: nil
[---Sent---] 185.88
(:emacs-rex (swank:listener-eval "(clojure.java.io/resource \"./1a7r.gif\")
") "image-processing.gui" :repl-thread 509)

[-Received-] 185.88
(:write-string "nil
" :repl-result)
[-Received-] 185.88
(:indentation-update (("with-bindings" . 0)))
[-Received-] 185.88
(:return (:ok nil) 509)
[Actionlist] 185.88
509: finished :listener-eval 
params: nil
[---Sent---] 186.37
(:emacs-rex (swank:listener-eval "ls
") "image-processing.gui" :repl-thread 510)

[-Received-] 186.4
(:debug 1 1 ("Unable to resolve symbol: ls in this context" "  [Thrown class java.lang.RuntimeException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "              Util.java:156 clojure.lang.Util.runtimeException" (:restartable nil)) (1 "         Compiler.java:6720 clojure.lang.Compiler.resolveIn" (:restartable nil)) (2 "         Compiler.java:6664 clojure.lang.Compiler.resolve" (:restartable nil)) (3 "         Compiler.java:6625 clojure.lang.Compiler.analyzeSymbol" (:restartable nil)) (4 "         Compiler.java:6198 clojure.lang.Compiler.analyze" (:restartable nil)) (5 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil)) (6 "         Compiler.java:6469 clojure.lang.Compiler.eval" (:restartable nil)) (7 "         Compiler.java:6431 clojure.lang.Compiler.eval" (:restartable nil)) (8 "              core.clj:2795 clojure.core/eval" (:restartable nil)) (9 "               core.clj:534 swank.core/eval825[fn]" (:restartable nil))) (nil))
[-Received-] 186.41
(:debug-activate 1 1 nil)
[---Sent---] 186.5
(:emacs-rex (swank:throw-to-toplevel) nil 1 511)

[-Received-] 186.51
(:return (:abort) 511)
[Actionlist] 186.51
510: pending  :listener-eval 
511: finished :throw-to-toplevel 
[-Received-] 186.51
(:debug-return 1 1 nil)
[-Received-] 186.51
(:return (:abort) 510)
[Actionlist] 186.51
510: finished :listener-eval 
511: finished :throw-to-toplevel 
[---Sent---] 186.67
(:emacs-rex (swank:listener-eval "(clojure.java.io/resource \"./1a7r.gif\")
") "image-processing.gui" :repl-thread 512)

[-Received-] 186.67
(:write-string "nil
" :repl-result)
[-Received-] 186.74
(:indentation-update (("with-bindings" . 1)))
[-Received-] 186.74
(:return (:ok nil) 512)
[Actionlist] 186.74
512: finished :listener-eval 
params: nil
[---Sent---] 187.38
(:emacs-rex (swank:operator-arglist "horizontal-panel" "image-processing.gui") "image-processing.gui" t 513)

[-Received-] 187.39
(:indentation-update (("with-bindings" . 0)))
[-Received-] 187.39
(:return (:ok "([& opts])") 513)
[Actionlist] 187.39
513: finished :operator-arglist 
params: "([& opts])"
[---Sent---] 187.39
(:emacs-rex (swank:describe-function "horizontal-panel") "image-processing.gui" t 514)

[-Received-] 187.39
(:indentation-update (("with-bindings" . 1)))
[-Received-] 187.39
(:return (:ok "-------------------------
seesaw.core/horizontal-panel
([& opts])
  Create a panel where widgets are arranged horizontally. Options:

    :items List of widgets (passed through make-widget)

  See http://download.oracle.com/javase/6/docs/api/javax/swing/BoxLayout.html
  
") 514)
[Actionlist] 187.39
514: finished :describe-function 
params: "-------------------------
seesaw.core/horizontal-panel
([& opts])
  Create a panel where widgets are arranged horizontally. Options:

    :items List of widgets (passed through make-widget)

  See http://download.oracle.com/javase/6/docs/api/javax/swing/BoxLayout.html
  
"
[---Sent---] 187.7
(:emacs-rex (swank:operator-arglist "second" "image-processing.gui") "image-processing.gui" t 515)

[-Received-] 187.71
(:indentation-update (("with-bindings" . 0)))
[-Received-] 187.71
(:return (:ok "([x])") 515)
[Actionlist] 187.71
515: finished :operator-arglist 
params: "([x])"
[---Sent---] 187.71
(:emacs-rex (swank:describe-function "second") "image-processing.gui" t 516)

[-Received-] 187.71
(:indentation-update (("with-bindings" . 1)))
[-Received-] 187.72
(:return (:ok "-------------------------
clojure.core/second
([x])
  Same as (first (next x))
") 516)
[Actionlist] 187.72
516: finished :describe-function 
params: "-------------------------
clojure.core/second
([x])
  Same as (first (next x))
"
[---Sent---] 187.94
(:emacs-rex (swank:listener-eval "(defn show-images [& imgs]
  (let [imgs-url (map clojure.java.io/resource imgs)]
    (horizontal-panel :items (conj [] (.getFile (second x))))))
") "image-processing.gui" :repl-thread 517)

[-Received-] 187.94
(:write-string "#'image-processing.gui/show-images
" :repl-result)
[-Received-] 188.0
(:indentation-update (("with-bindings" . 0)))
[-Received-] 188.0
(:return (:ok nil) 517)
[Actionlist] 188.0
517: finished :listener-eval 
params: nil
[---Sent---] 188.28
(:emacs-rex (swank:fuzzy-completions "create-fr" "image-processing.gui" :limit 200 :time-limit-in-msec 2000) nil t 518)

[-Received-] 188.29
(:indentation-update (("with-bindings" . 1)))
[-Received-] 188.29
(:return (:ok ((("create-frame" "107.47" ((0 "create-fr")) "-f------")) nil)) 518)
[Actionlist] 188.29
518: finished :fuzzy-completions 
params: [[['"create-frame"', '"107.47"', [['0', '"create-fr"']], '"-f------"']], 'nil']
[---Sent---] 188.34
(:emacs-rex (swank:listener-eval "(create-frame)
") "image-processing.gui" :repl-thread 519)

[-Received-] 188.34
(:debug 1 1 ("No matching field found: getFile for class java.lang.String" "  [Thrown class java.lang.IllegalArgumentException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "    Reflector.java:289 clojure.lang.Reflector.getInstanceField" (:restartable nil)) (1 "    Reflector.java:318 clojure.lang.Reflector.invokeNoArgInstanceMember" (:restartable nil)) (2 "      NO_SOURCE_FILE:1 image-processing.gui/show-images" (:restartable nil)) (3 "       RestFn.java:408 clojure.lang.RestFn.invoke" (:restartable nil)) (4 "      NO_SOURCE_FILE:1 image-processing.gui/create-frame" (:restartable nil)) (5 "      NO_SOURCE_FILE:1 image-processing.gui/eval7409" (:restartable nil)) (6 "    Compiler.java:6465 clojure.lang.Compiler.eval" (:restartable nil)) (7 "    Compiler.java:6431 clojure.lang.Compiler.eval" (:restartable nil)) (8 "         core.clj:2795 clojure.core/eval" (:restartable nil)) (9 "          core.clj:534 swank.core/eval825[fn]" (:restartable nil))) (nil))
[-Received-] 188.35
(:debug-activate 1 1 nil)
[---Sent---] 188.51
(:emacs-rex (swank:throw-to-toplevel) nil 1 520)

[-Received-] 188.51
(:return (:abort) 520)
[Actionlist] 188.51
519: pending  :listener-eval 
520: finished :throw-to-toplevel 
[-Received-] 188.51
(:debug-return 1 1 nil)
[-Received-] 188.51
(:return (:abort) 519)
[Actionlist] 188.51
519: finished :listener-eval 
520: finished :throw-to-toplevel 
[---Sent---] 188.67
(:emacs-rex (swank:operator-arglist "get-point" "image-processing.gui") "image-processing.gui" t 521)

[-Received-] 188.67
(:indentation-update (("with-bindings" . 0)))
[-Received-] 188.67
(:return (:ok nil) 521)
[Actionlist] 188.67
521: finished :operator-arglist 
params: nil
[---Sent---] 188.69
(:emacs-rex (swank:operator-arglist "get-point" "image-processing.gui") "image-processing.gui" t 522)

[-Received-] 188.7
(:indentation-update (("with-bindings" . 1)))
[-Received-] 188.7
(:return (:ok nil) 522)
[Actionlist] 188.7
522: finished :operator-arglist 
params: nil
[---Sent---] 189.94
(:emacs-rex (swank:operator-arglist "File" "image-processing.gui") "image-processing.gui" t 523)

[-Received-] 189.95
(:indentation-update (("with-bindings" . 0)))
[-Received-] 189.95
(:return (:ok nil) 523)
[Actionlist] 189.95
523: finished :operator-arglist 
params: nil
[---Sent---] 190.2
(:emacs-rex (swank:listener-eval "(defn show-images [& imgs]
  (let [imgs-url (map clojure.java.io/resource imgs)]
    (horizontal-panel :items (conj [] (File. (second x))))))
") "image-processing.gui" :repl-thread 524)

[-Received-] 190.25
(:debug 1 1 ("Unable to resolve classname: File" "  [Thrown class java.lang.IllegalArgumentException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "         Compiler.java:2430 clojure.lang.Compiler$NewExpr$Parser.parse" (:restartable nil)) (1 "         Compiler.java:6409 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (2 "         Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil)) (3 "         Compiler.java:6397 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (4 "         Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil)) (5 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil)) (6 "         Compiler.java:3503 clojure.lang.Compiler$InvokeExpr.parse" (:restartable nil)) (7 "         Compiler.java:6411 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (8 "         Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil)) (9 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil))) (nil))
[-Received-] 190.26
(:debug-activate 1 1 nil)
[---Sent---] 190.34
(:emacs-rex (swank:throw-to-toplevel) nil 1 525)

[-Received-] 190.34
(:return (:abort) 525)
[Actionlist] 190.34
524: pending  :listener-eval 
525: finished :throw-to-toplevel 
[-Received-] 190.34
(:debug-return 1 1 nil)
[-Received-] 190.34
(:return (:abort) 524)
[Actionlist] 190.34
524: finished :listener-eval 
525: finished :throw-to-toplevel 
[---Sent---] 190.54
(:emacs-rex (swank:listener-eval "(ns image-processing.gui
    (:import 
      (javax.imageio ImageIO) 
      (java.io File)) 
    (:require clojure.java.io)
    (:use seesaw.core))
") "image-processing.gui" :repl-thread 526)

[-Received-] 190.58
(:write-string "nil
" :repl-result)
[-Received-] 190.58
(:indentation-update (("with-bindings" . 1)))
[-Received-] 190.58
(:return (:ok nil) 526)
[Actionlist] 190.58
526: finished :listener-eval 
params: nil
[---Sent---] 190.76
(:emacs-rex (swank:listener-eval "(defn show-images [& imgs]
  (let [imgs-url (map clojure.java.io/resource imgs)]
    (horizontal-panel :items (conj [] (File. (second x))))))
") "image-processing.gui" :repl-thread 527)

[-Received-] 190.76
(:write-string "#'image-processing.gui/show-images
" :repl-result)
[-Received-] 190.83
(:indentation-update (("with-bindings" . 0)))
[-Received-] 190.83
(:return (:ok nil) 527)
[Actionlist] 190.83
527: finished :listener-eval 
params: nil
[---Sent---] 190.98
(:emacs-rex (swank:listener-eval "(create-frame)
") "image-processing.gui" :repl-thread 528)

[-Received-] 191.02
(:debug 1 1 ("No implementation of method: :make-widget* of protocol: #'seesaw.make-widget/MakeWidget found for class: java.io.File" "  [Thrown class java.lang.IllegalArgumentException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "core_deftype.clj:495 clojure.core/-cache-protocol-fn" (:restartable nil)) (1 " make_widget.clj:16 seesaw.make-widget/eval2741[fn]" (:restartable nil)) (2 "      layout.clj:38 seesaw.layout/add-widget" (:restartable nil)) (3 "      layout.clj:36 seesaw.layout/add-widget" (:restartable nil)) (4 "      layout.clj:47 seesaw.layout/add-widgets" (:restartable nil)) (5 "      layout.clj:53 seesaw.layout/fn" (:restartable nil)) (6 "    options.clj:114 seesaw.options/apply-option" (:restartable nil)) (7 "    options.clj:129 seesaw.options/apply-options*" (:restartable nil)) (8 "    options.clj:136 seesaw.options/apply-options" (:restartable nil)) (9 "       core.clj:907 seesaw.core/abstract-panel" (:restartable nil))) (nil))
[-Received-] 191.03
(:debug-activate 1 1 nil)
[---Sent---] 191.24
(:emacs-rex (swank:throw-to-toplevel) nil 1 529)

[-Received-] 191.24
(:return (:abort) 529)
[Actionlist] 191.24
528: pending  :listener-eval 
529: finished :throw-to-toplevel 
[-Received-] 191.24
(:debug-return 1 1 nil)
[-Received-] 191.24
(:return (:abort) 528)
[Actionlist] 191.24
528: finished :listener-eval 
529: finished :throw-to-toplevel 
[---Sent---] 191.62
(:emacs-rex (swank:operator-arglist "seesaw.core" "image-processing.gui") "image-processing.gui" t 530)

[-Received-] 191.62
(:indentation-update (("with-bindings" . 1)))
[-Received-] 191.62
(:return (:ok nil) 530)
[Actionlist] 191.62
530: finished :operator-arglist 
params: nil
[---Sent---] 191.63
(:emacs-rex (swank:operator-arglist "seesaw.core" "image-processing.gui") "image-processing.gui" t 531)

[-Received-] 191.63
(:indentation-update (("with-bindings" . 0)))
[-Received-] 191.63
(:return (:ok nil) 531)
[Actionlist] 191.63
531: finished :operator-arglist 
params: nil
[---Sent---] 191.7
(:emacs-rex (swank:operator-arglist ":require" "image-processing.gui") "image-processing.gui" t 532)

[-Received-] 191.7
(:indentation-update (("with-bindings" . 1)))
[-Received-] 191.7
(:return (:ok "([map])") 532)
[Actionlist] 191.7
532: finished :operator-arglist 
params: "([map])"
[---Sent---] 191.7
(:emacs-rex (swank:describe-function ":require") "image-processing.gui" t 533)

[-Received-] 191.7
(:indentation-update (("with-bindings" . 0)))
[-Received-] 191.71
(:return (:ok nil) 533)
[Actionlist] 191.71
533: finished :describe-function 
params: nil
[---Sent---] 191.97
(:emacs-rex (swank:operator-arglist ":require" "image-processing.gui") "image-processing.gui" t 534)

[-Received-] 191.98
(:indentation-update (("with-bindings" . 1)))
[-Received-] 191.98
(:return (:ok "([map])") 534)
[Actionlist] 191.98
534: finished :operator-arglist 
params: "([map])"
[---Sent---] 191.99
(:emacs-rex (swank:describe-function ":require") "image-processing.gui" t 535)

[-Received-] 191.99
(:indentation-update (("with-bindings" . 0)))
[-Received-] 191.99
(:return (:ok nil) 535)
[Actionlist] 191.99
535: finished :describe-function 
params: nil
[---Sent---] 192.0
(:emacs-rex (swank:operator-arglist ":require" "image-processing.gui") "image-processing.gui" t 536)

[-Received-] 192.0
(:indentation-update (("with-bindings" . 1)))
[-Received-] 192.0
(:return (:ok "([map])") 536)
[Actionlist] 192.0
536: finished :operator-arglist 
params: "([map])"
[---Sent---] 192.0
(:emacs-rex (swank:describe-function ":require") "image-processing.gui" t 537)

[-Received-] 192.0
(:indentation-update (("with-bindings" . 0)))
[-Received-] 192.0
(:return (:ok nil) 537)
[Actionlist] 192.01
537: finished :describe-function 
params: nil
[---Sent---] 192.1
(:emacs-rex (swank:operator-arglist "x" "image-processing.gui") "image-processing.gui" t 538)

[-Received-] 192.1
(:indentation-update (("with-bindings" . 1)))
[-Received-] 192.11
(:return (:ok nil) 538)
[Actionlist] 192.11
538: finished :operator-arglist 
params: nil
[---Sent---] 192.2
(:emacs-rex (swank:operator-arglist "imgs-url" "image-processing.gui") "image-processing.gui" t 539)

[-Received-] 192.21
(:indentation-update (("with-bindings" . 0)))
[-Received-] 192.21
(:return (:ok nil) 539)
[Actionlist] 192.21
539: finished :operator-arglist 
params: nil
[---Sent---] 193.42
(:emacs-rex (swank:listener-eval "(clojure.java.io/as-url (File. \"./1a7r.gif\")) 
") "image-processing.gui" :repl-thread 540)

[-Received-] 193.43
(:write-string "#<URL file:/home/boechat/Dropbox2/Documents/Coding/Image_processing/./1a7r.gif>
" :repl-result)
[-Received-] 193.49
(:indentation-update (("with-bindings" . 1)))
[-Received-] 193.49
(:return (:ok nil) 540)
[Actionlist] 193.49
540: finished :listener-eval 
params: nil
[---Sent---] 194.27
(:emacs-rex (swank:operator-arglist ":use" "image-processing.gui") "image-processing.gui" t 541)

[-Received-] 194.27
(:indentation-update (("with-bindings" . 0)))
[-Received-] 194.27
(:return (:ok "([map])") 541)
[Actionlist] 194.27
541: finished :operator-arglist 
params: "([map])"
[---Sent---] 194.6
(:emacs-rex (swank:operator-arglist "map" "image-processing.gui") "image-processing.gui" t 542)

[-Received-] 194.62
(:indentation-update (("with-bindings" . 1)))
[-Received-] 194.62
(:return (:ok "([f coll] [f c1 c2] [f c1 c2 c3] [f c1 c2 c3 & colls])") 542)
[Actionlist] 194.62
542: finished :operator-arglist 
params: "([f coll] [f c1 c2] [f c1 c2 c3] [f c1 c2 c3 & colls])"
[---Sent---] 194.77
(:emacs-rex (swank:operator-arglist "as-url" "image-processing.gui") "image-processing.gui" t 543)

[-Received-] 194.77
(:indentation-update (("with-bindings" . 0)))
[-Received-] 194.77
(:return (:ok nil) 543)
[Actionlist] 194.77
543: finished :operator-arglist 
params: nil
[---Sent---] 195.16
(:emacs-rex (swank:listener-eval "(ns image-processing.gui
    (:import 
      (javax.imageio ImageIO) 
      (java.io File)) 
    (:use clojure.java.io)
    (:use seesaw.core))


(def x '(\"../../test/image_processing/test/1a7r.gif\"
         \"/home/boechat/Documents/captchas/jequiti/b/1015055312.png\"))


(defn show-images [& imgs]
  (let [imgs-url (map #(as-url (File. %)) imgs)]
    (horizontal-panel :items (conj [] imgs-url))))


(defn create-frame [] 
  (-> (frame :title \"Hello\",
             :content (show-images x) ,
             :on-close :exit)
      pack!
      show!)) 

") "image-processing.gui" :repl-thread 544)

[-Received-] 195.2
(:write-string "#'image-processing.gui/create-frame
" :repl-result)
[-Received-] 195.2
(:indentation-update (("with-bindings" . 1)))
[-Received-] 195.2
(:return (:ok nil) 544)
[Actionlist] 195.2
544: finished :listener-eval 
params: nil
[---Sent---] 195.43
(:emacs-rex (swank:fuzzy-completions "create-fr" "image-processing.gui" :limit 200 :time-limit-in-msec 2000) nil t 545)

[-Received-] 195.43
(:indentation-update (("with-bindings" . 0)))
[-Received-] 195.43
(:return (:ok ((("create-frame" "107.47" ((0 "create-fr")) "-f------")) nil)) 545)
[Actionlist] 195.43
545: finished :fuzzy-completions 
params: [[['"create-frame"', '"107.47"', [['0', '"create-fr"']], '"-f------"']], 'nil']
[---Sent---] 195.49
(:emacs-rex (swank:listener-eval "(create-frame)
") "image-processing.gui" :repl-thread 546)

[-Received-] 195.49
(:debug 1 1 ("No implementation of method: :make-widget* of protocol: #'seesaw.make-widget/MakeWidget found for class: clojure.lang.LazySeq" "  [Thrown class java.lang.IllegalArgumentException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "core_deftype.clj:495 clojure.core/-cache-protocol-fn" (:restartable nil)) (1 " make_widget.clj:16 seesaw.make-widget/eval2741[fn]" (:restartable nil)) (2 "      layout.clj:38 seesaw.layout/add-widget" (:restartable nil)) (3 "      layout.clj:36 seesaw.layout/add-widget" (:restartable nil)) (4 "      layout.clj:47 seesaw.layout/add-widgets" (:restartable nil)) (5 "      layout.clj:53 seesaw.layout/fn" (:restartable nil)) (6 "    options.clj:114 seesaw.options/apply-option" (:restartable nil)) (7 "    options.clj:129 seesaw.options/apply-options*" (:restartable nil)) (8 "    options.clj:136 seesaw.options/apply-options" (:restartable nil)) (9 "       core.clj:907 seesaw.core/abstract-panel" (:restartable nil))) (nil))
[-Received-] 195.49
(:debug-activate 1 1 nil)
[---Sent---] 195.81
(:emacs-rex (swank:throw-to-toplevel) nil 1 547)

[-Received-] 195.81
(:return (:abort) 547)
[Actionlist] 195.81
546: pending  :listener-eval 
547: finished :throw-to-toplevel 
[-Received-] 195.81
(:debug-return 1 1 nil)
[-Received-] 195.81
(:return (:abort) 546)
[Actionlist] 195.81
546: finished :listener-eval 
547: finished :throw-to-toplevel 
[---Sent---] 196.18
(:emacs-rex (swank:operator-arglist "horizontal-panel" "image-processing.gui") "image-processing.gui" t 548)

[-Received-] 196.18
(:indentation-update (("with-bindings" . 1)))
[-Received-] 196.18
(:return (:ok "([& opts])") 548)
[Actionlist] 196.18
548: finished :operator-arglist 
params: "([& opts])"
[---Sent---] 196.18
(:emacs-rex (swank:describe-function "horizontal-panel") "image-processing.gui" t 549)

[-Received-] 196.19
(:indentation-update (("with-bindings" . 0)))
[-Received-] 196.19
(:return (:ok "-------------------------
seesaw.core/horizontal-panel
([& opts])
  Create a panel where widgets are arranged horizontally. Options:

    :items List of widgets (passed through make-widget)

  See http://download.oracle.com/javase/6/docs/api/javax/swing/BoxLayout.html
  
") 549)
[Actionlist] 196.19
549: finished :describe-function 
params: "-------------------------
seesaw.core/horizontal-panel
([& opts])
  Create a panel where widgets are arranged horizontally. Options:

    :items List of widgets (passed through make-widget)

  See http://download.oracle.com/javase/6/docs/api/javax/swing/BoxLayout.html
  
"
[---Sent---] 196.28
(:emacs-rex (swank:operator-arglist ".." "image-processing.gui") "image-processing.gui" t 550)

[-Received-] 196.29
(:indentation-update (("with-bindings" . 1)))
[-Received-] 196.29
(:return (:ok "([x form] [x form & more])") 550)
[Actionlist] 196.29
550: finished :operator-arglist 
params: "([x form] [x form & more])"
[---Sent---] 196.29
(:emacs-rex (swank:describe-function "..") "image-processing.gui" t 551)

[-Received-] 196.29
(:indentation-update (("with-bindings" . 0)))
[-Received-] 196.29
(:return (:ok "-------------------------
clojure.core/..
([x form] [x form & more])
Macro
  form => fieldName-symbol or (instanceMethodName-symbol args*)

  Expands into a member access (.) of the first member on the first
  argument, followed by the next member on the result, etc. For
  instance:

  (.. System (getProperties) (get \"os.name\"))

  expands to:

  (. (. System (getProperties)) (get \"os.name\"))

  but is easier to write, read, and understand.
") 551)
[Actionlist] 196.29
551: finished :describe-function 
params: "-------------------------
clojure.core/..
([x form] [x form & more])
Macro
  form => fieldName-symbol or (instanceMethodName-symbol args*)

  Expands into a member access (.) of the first member on the first
  argument, followed by the next member on the result, etc. For
  instance:

  (.. System (getProperties) (get \"os.name\"))

  expands to:

  (. (. System (getProperties)) (get \"os.name\"))

  but is easier to write, read, and understand.
"
[---Sent---] 196.73
(:emacs-rex (swank:operator-arglist "seesaw" "image-processing.gui") "image-processing.gui" t 552)

[-Received-] 196.74
(:indentation-update (("with-bindings" . 1)))
[-Received-] 196.74
(:return (:ok nil) 552)
[Actionlist] 196.74
552: finished :operator-arglist 
params: nil
[---Sent---] 196.79
(:emacs-rex (swank:operator-arglist "seesaw" "image-processing.gui") "image-processing.gui" t 553)

[-Received-] 196.79
(:indentation-update (("with-bindings" . 0)))
[-Received-] 196.79
(:return (:ok nil) 553)
[Actionlist] 196.79
553: finished :operator-arglist 
params: nil
[---Sent---] 196.86
(:emacs-rex (swank:operator-arglist "seesaw" "image-processing.gui") "image-processing.gui" t 554)

[-Received-] 196.86
(:indentation-update (("with-bindings" . 1)))
[-Received-] 196.86
(:return (:ok nil) 554)
[Actionlist] 196.86
554: finished :operator-arglist 
params: nil
[---Sent---] 196.95
(:emacs-rex (swank:operator-arglist "seesaw" "image-processing.gui") "image-processing.gui" t 555)

[-Received-] 196.96
(:indentation-update (("with-bindings" . 0)))
[-Received-] 196.96
(:return (:ok nil) 555)
[Actionlist] 196.96
555: finished :operator-arglist 
params: nil
[---Sent---] 197.13
(:emacs-rex (swank:listener-eval "(ns image-processing.gui
    (:import 
      (javax.imageio ImageIO) 
      (java.io File)) 
    (:use 
      (clojure.java.io)
      (seesaw core make-widget border)))
") "image-processing.gui" :repl-thread 556)

[-Received-] 197.13
(:write-string "nil
" :repl-result)
[-Received-] 197.2
(:indentation-update (("with-bindings" . 1)))
[-Received-] 197.2
(:return (:ok nil) 556)
[Actionlist] 197.2
556: finished :listener-eval 
params: nil
[---Sent---] 197.37
(:emacs-rex (swank:listener-eval "(create-frame)
") "image-processing.gui" :repl-thread 557)

[-Received-] 197.4
(:debug 1 1 ("No implementation of method: :make-widget* of protocol: #'seesaw.make-widget/MakeWidget found for class: clojure.lang.LazySeq" "  [Thrown class java.lang.IllegalArgumentException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "core_deftype.clj:495 clojure.core/-cache-protocol-fn" (:restartable nil)) (1 " make_widget.clj:16 seesaw.make-widget/eval2741[fn]" (:restartable nil)) (2 "      layout.clj:38 seesaw.layout/add-widget" (:restartable nil)) (3 "      layout.clj:36 seesaw.layout/add-widget" (:restartable nil)) (4 "      layout.clj:47 seesaw.layout/add-widgets" (:restartable nil)) (5 "      layout.clj:53 seesaw.layout/fn" (:restartable nil)) (6 "    options.clj:114 seesaw.options/apply-option" (:restartable nil)) (7 "    options.clj:129 seesaw.options/apply-options*" (:restartable nil)) (8 "    options.clj:136 seesaw.options/apply-options" (:restartable nil)) (9 "       core.clj:907 seesaw.core/abstract-panel" (:restartable nil))) (nil))
[-Received-] 197.41
(:debug-activate 1 1 nil)
[---Sent---] 198.09
(:emacs-rex (swank:throw-to-toplevel) nil 1 558)

[-Received-] 198.09
(:return (:abort) 558)
[Actionlist] 198.09
557: pending  :listener-eval 
558: finished :throw-to-toplevel 
[-Received-] 198.16
(:debug-return 1 1 nil)
[-Received-] 198.16
(:return (:abort) 557)
[Actionlist] 198.16
557: finished :listener-eval 
[---Sent---] 199.01
(:emacs-rex (swank:listener-eval "(defn show-images [& imgs]
  (let [imgs-url (doall (map #(as-url (File. %)) imgs))]
    (horizontal-panel :items (conj [] imgs-url))))
") "image-processing.gui" :repl-thread 559)

[-Received-] 199.01
(:write-string "#'image-processing.gui/show-images
" :repl-result)
[-Received-] 199.08
(:indentation-update (("with-bindings" . 0)))
[-Received-] 199.08
(:return (:ok nil) 559)
[Actionlist] 199.08
559: finished :listener-eval 
params: nil
[---Sent---] 199.21
(:emacs-rex (swank:listener-eval "(create-frame)
") "image-processing.gui" :repl-thread 560)

[-Received-] 199.22
(:debug 1 1 ("No matching ctor found for class java.io.File" "  [Thrown class java.lang.IllegalArgumentException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "    Reflector.java:186 clojure.lang.Reflector.invokeConstructor" (:restartable nil)) (1 "      NO_SOURCE_FILE:1 image-processing.gui/show-images[fn]" (:restartable nil)) (2 "         core.clj:2432 clojure.core/map[fn]" (:restartable nil)) (3 "       LazySeq.java:42 clojure.lang.LazySeq.sval" (:restartable nil)) (4 "       LazySeq.java:60 clojure.lang.LazySeq.seq" (:restartable nil)) (5 "           RT.java:466 clojure.lang.RT.seq" (:restartable nil)) (6 "          core.clj:133 clojure.core/seq" (:restartable nil)) (7 "         core.clj:2723 clojure.core/dorun" (:restartable nil)) (8 "         core.clj:2739 clojure.core/doall" (:restartable nil)) (9 "      NO_SOURCE_FILE:1 image-processing.gui/show-images" (:restartable nil))) (nil))
[-Received-] 199.23
(:debug-activate 1 1 nil)
[---Sent---] 199.64
(:emacs-rex (swank:frame-locals-and-catch-tags 2) nil 1 561)

[---Sent---] 199.64
(:emacs-rex (swank:frame-source-location 2) nil 1 562)

[---Sent---] 199.64
(:emacs-rex (swank-backend:frame-call 2) nil 1 563)

[-Received-] 199.65
(:indentation-update (("with-bindings" . 1)))
[-Received-] 199.66
(:return (:ok (nil nil)) 561)
[Actionlist] 199.66
560: pending  :listener-eval 
561: finished :frame-locals-and-catch-tags 
562: pending  :frame-source-location 
563: pending  :frame-call 
params: ['nil', 'nil']
[-Received-] 199.66
(:debug-activate 1 1 nil)
[-Received-] 199.66
(:indentation-update (("with-bindings" . 0)))
[-Received-] 199.66
(:return (:ok (:location (:zip "/home/boechat/Dropbox2/Documents/Coding/Image_processing/lib/clojure-1.3.0.jar" "clojure/core.clj") (:line 2432) nil)) 562)
[Actionlist] 199.66
560: pending  :listener-eval 
561: finished :frame-locals-and-catch-tags 
562: finished :frame-source-location 
563: pending  :frame-call 
params: [':location', [':zip', '"/home/boechat/Dropbox2/Documents/Coding/Image_processing/lib/clojure-1.3.0.jar"', '"clojure/core.clj"'], [':line', '2432'], 'nil']
[-Received-] 199.66
(:debug-activate 1 1 nil)
[-Received-] 199.66
(:return (:abort) 563)
[Actionlist] 199.66
560: pending  :listener-eval 
561: finished :frame-locals-and-catch-tags 
562: finished :frame-source-location 
563: finished :frame-call 
[-Received-] 199.66
(:debug-activate 1 1 nil)
[---Sent---] 200.05
(:emacs-rex (swank:throw-to-toplevel) nil 1 564)

[-Received-] 200.06
(:return (:abort) 564)
[Actionlist] 200.06
560: pending  :listener-eval 
564: finished :throw-to-toplevel 
[-Received-] 200.06
(:debug-return 1 1 nil)
[-Received-] 200.06
(:return (:abort) 560)
[Actionlist] 200.06
560: finished :listener-eval 
564: finished :throw-to-toplevel 
[---Sent---] 200.53
(:emacs-rex (swank:listener-eval "(map #(as-url (File. %)) x)
") "image-processing.gui" :repl-thread 565)

[-Received-] 200.57
(:write-string "(#<URL file:/home/boechat/Dropbox2/Documents/Coding/Image_processing/../../test/image_processing/test/1a7r.gif> #<URL file:/home/boechat/Documents/captchas/jequiti/b/1015055312.png>)
" :repl-result)
[-Received-] 200.57
(:indentation-update (("with-bindings" . 1)))
[-Received-] 200.57
(:return (:ok nil) 565)
[Actionlist] 200.57
565: finished :listener-eval 
params: nil
[---Sent---] 200.89
(:emacs-rex (swank:listener-eval "(doall (map #(as-url (File. %)) x)) 
") "image-processing.gui" :repl-thread 566)

[-Received-] 200.89
(:write-string "(#<URL file:/home/boechat/Dropbox2/Documents/Coding/Image_processing/../../test/image_processing/test/1a7r.gif> #<URL file:/home/boechat/Documents/captchas/jequiti/b/1015055312.png>)
" :repl-result)
[-Received-] 200.96
(:indentation-update (("with-bindings" . 0)))
[-Received-] 200.96
(:return (:ok nil) 566)
[Actionlist] 200.96
566: finished :listener-eval 
params: nil
[---Sent---] 201.3
(:emacs-rex (swank:listener-eval "(def x '(\"../../test/image_processing/test/1a7r.gif\"
         \"/home/boechat/Documents/captchas/jequiti/b/1015055312.png\"))
") "image-processing.gui" :repl-thread 567)

[-Received-] 201.3
(:write-string "#'image-processing.gui/x
" :repl-result)
[-Received-] 201.36
(:indentation-update (("with-bindings" . 1)))
[-Received-] 201.36
(:return (:ok nil) 567)
[Actionlist] 201.36
567: finished :listener-eval 
params: nil
[---Sent---] 201.53
(:emacs-rex (swank:listener-eval "(doall (map #(as-url (File. %)) x))
") "image-processing.gui" :repl-thread 568)

[-Received-] 201.53
(:write-string "(#<URL file:/home/boechat/Dropbox2/Documents/Coding/Image_processing/../../test/image_processing/test/1a7r.gif> #<URL file:/home/boechat/Documents/captchas/jequiti/b/1015055312.png>)
" :repl-result)
[-Received-] 201.6
(:indentation-update (("with-bindings" . 0)))
[-Received-] 201.6
(:return (:ok nil) 568)
[Actionlist] 201.6
568: finished :listener-eval 
params: nil
[---Sent---] 201.9
(:emacs-rex (swank:listener-eval "(def x '(\"test/image_processing/test/1a7r.gif\"
         \"/home/boechat/Documents/captchas/jequiti/b/1015055312.png\"))
") "image-processing.gui" :repl-thread 569)

[-Received-] 201.94
(:write-string "#'image-processing.gui/x
" :repl-result)
[-Received-] 201.94
(:indentation-update (("with-bindings" . 1)))
[-Received-] 201.94
(:return (:ok nil) 569)
[Actionlist] 201.94
569: finished :listener-eval 
params: nil
[---Sent---] 202.1
(:emacs-rex (swank:listener-eval "(doall (map #(as-url (File. %)) x))
") "image-processing.gui" :repl-thread 570)

[-Received-] 202.11
(:write-string "(#<URL file:/home/boechat/Dropbox2/Documents/Coding/Image_processing/test/image_processing/test/1a7r.gif> #<URL file:/home/boechat/Documents/captchas/jequiti/b/1015055312.png>)
" :repl-result)
[-Received-] 202.17
(:indentation-update (("with-bindings" . 0)))
[-Received-] 202.17
(:return (:ok nil) 570)
[Actionlist] 202.17
570: finished :listener-eval 
params: nil
[---Sent---] 202.59
(:emacs-rex (swank:operator-arglist "show-images" "image-processing.gui") "image-processing.gui" t 571)

[-Received-] 202.6
(:indentation-update (("with-bindings" . 1)))
[-Received-] 202.6
(:return (:ok "([& imgs])") 571)
[Actionlist] 202.6
571: finished :operator-arglist 
params: "([& imgs])"
[---Sent---] 202.6
(:emacs-rex (swank:describe-function "show-images") "image-processing.gui" t 572)

[-Received-] 202.6
(:indentation-update (("with-bindings" . 0)))
[-Received-] 202.61
(:return (:ok "-------------------------
image-processing.gui/show-images
([& imgs])
  nil
") 572)
[Actionlist] 202.61
572: finished :describe-function 
params: "-------------------------
image-processing.gui/show-images
([& imgs])
  nil
"
[---Sent---] 202.63
(:emacs-rex (swank:operator-arglist "create-frame" "image-processing.gui") "image-processing.gui" t 573)

[-Received-] 202.63
(:indentation-update (("with-bindings" . 1)))
[-Received-] 202.64
(:return (:ok "([])") 573)
[Actionlist] 202.64
573: finished :operator-arglist 
params: "([])"
[---Sent---] 202.64
(:emacs-rex (swank:describe-function "create-frame") "image-processing.gui" t 574)

[-Received-] 202.64
(:indentation-update (("with-bindings" . 0)))
[-Received-] 202.64
(:return (:ok "-------------------------
image-processing.gui/create-frame
([])
  nil
") 574)
[Actionlist] 202.64
574: finished :describe-function 
params: "-------------------------
image-processing.gui/create-frame
([])
  nil
"
[---Sent---] 202.82
(:emacs-rex (swank:listener-eval "(ns image-processing.gui
    (:import 
      (javax.imageio ImageIO) 
      (java.io File)) 
    (:use 
      (clojure.java.io)
      (seesaw core make-widget border)))


(def x '(\"test/image_processing/test/1a7r.gif\"
         \"/home/boechat/Documents/captchas/jequiti/b/1015055312.png\"))


(defn show-images [& imgs]
  (let [imgs-url (doall (map #(as-url (File. %)) imgs))]
    (horizontal-panel :items (conj [] imgs-url))))


(defn create-frame [] 
  (-> (frame :title \"Hello\",
             :content (show-images x) ,
             :on-close :exit)
      pack!
      show!)) 

") "image-processing.gui" :repl-thread 575)

[-Received-] 202.85
(:write-string "#'image-processing.gui/create-frame
" :repl-result)
[-Received-] 202.86
(:indentation-update (("with-bindings" . 1)))
[-Received-] 202.86
(:return (:ok nil) 575)
[Actionlist] 202.86
575: finished :listener-eval 
params: nil
[---Sent---] 203.16
(:emacs-rex (swank:listener-eval "(create-frame)
") "image-processing.gui" :repl-thread 576)

[-Received-] 203.16
(:debug 1 1 ("No matching ctor found for class java.io.File" "  [Thrown class java.lang.IllegalArgumentException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "    Reflector.java:186 clojure.lang.Reflector.invokeConstructor" (:restartable nil)) (1 "      NO_SOURCE_FILE:1 image-processing.gui/show-images[fn]" (:restartable nil)) (2 "         core.clj:2432 clojure.core/map[fn]" (:restartable nil)) (3 "       LazySeq.java:42 clojure.lang.LazySeq.sval" (:restartable nil)) (4 "       LazySeq.java:60 clojure.lang.LazySeq.seq" (:restartable nil)) (5 "           RT.java:466 clojure.lang.RT.seq" (:restartable nil)) (6 "          core.clj:133 clojure.core/seq" (:restartable nil)) (7 "         core.clj:2723 clojure.core/dorun" (:restartable nil)) (8 "         core.clj:2739 clojure.core/doall" (:restartable nil)) (9 "      NO_SOURCE_FILE:1 image-processing.gui/show-images" (:restartable nil))) (nil))
[-Received-] 203.17
(:debug-activate 1 1 nil)
[---Sent---] 203.49
(:emacs-rex (swank:throw-to-toplevel) nil 1 577)

[-Received-] 203.49
(:return (:abort) 577)
[Actionlist] 203.49
576: pending  :listener-eval 
577: finished :throw-to-toplevel 
[-Received-] 203.49
(:debug-return 1 1 nil)
[-Received-] 203.49
(:return (:abort) 576)
[Actionlist] 203.49
576: finished :listener-eval 
577: finished :throw-to-toplevel 
[---Sent---] 203.71
(:emacs-rex (swank:operator-arglist "test/image_processing/test/1a7r" "image-processing.gui") "image-processing.gui" t 578)

[-Received-] 203.71
(:indentation-update (("with-bindings" . 0)))
[-Received-] 203.71
(:return (:ok nil) 578)
[Actionlist] 203.71
578: finished :operator-arglist 
params: nil
[---Sent---] 203.92
(:emacs-rex (swank:operator-arglist "test/image_processing/test/" "image-processing.gui") "image-processing.gui" t 579)

[-Received-] 203.92
(:indentation-update (("with-bindings" . 1)))
[-Received-] 203.92
(:return (:ok nil) 579)
[Actionlist] 203.92
579: finished :operator-arglist 
params: nil
[---Sent---] 204.08
(:emacs-rex (swank:listener-eval "(def x '(\"1a7r.gif\"
         \"/home/boechat/Documents/captchas/jequiti/b/1015055312.png\"))
") "image-processing.gui" :repl-thread 580)

[-Received-] 204.08
(:write-string "#'image-processing.gui/x
" :repl-result)
[-Received-] 204.14
(:indentation-update (("with-bindings" . 0)))
[-Received-] 204.14
(:return (:ok nil) 580)
[Actionlist] 204.14
580: finished :listener-eval 
params: nil
[---Sent---] 204.33
(:emacs-rex (swank:listener-eval "(doall (map #(as-url (File. %)) x))
") "image-processing.gui" :repl-thread 581)

[-Received-] 204.33
(:write-string "(#<URL file:/home/boechat/Dropbox2/Documents/Coding/Image_processing/1a7r.gif> #<URL file:/home/boechat/Documents/captchas/jequiti/b/1015055312.png>)
" :repl-result)
[-Received-] 204.39
(:indentation-update (("with-bindings" . 1)))
[-Received-] 204.39
(:return (:ok nil) 581)
[Actionlist] 204.39
581: finished :listener-eval 
params: nil
[---Sent---] 204.6
(:emacs-rex (swank:listener-eval "(def x '(\"./1a7r.gif\"
         \"/home/boechat/Documents/captchas/jequiti/b/1015055312.png\"))
") "image-processing.gui" :repl-thread 582)

[-Received-] 204.6
(:write-string "#'image-processing.gui/x
" :repl-result)
[-Received-] 204.66
(:indentation-update (("with-bindings" . 0)))
[-Received-] 204.66
(:return (:ok nil) 582)
[Actionlist] 204.67
582: finished :listener-eval 
params: nil
[---Sent---] 204.82
(:emacs-rex (swank:listener-eval "(doall (map #(as-url (File. %)) x))
") "image-processing.gui" :repl-thread 583)

[-Received-] 204.82
(:write-string "(#<URL file:/home/boechat/Dropbox2/Documents/Coding/Image_processing/./1a7r.gif> #<URL file:/home/boechat/Documents/captchas/jequiti/b/1015055312.png>)
" :repl-result)
[-Received-] 204.89
(:indentation-update (("with-bindings" . 1)))
[-Received-] 204.89
(:return (:ok nil) 583)
[Actionlist] 204.89
583: finished :listener-eval 
params: nil
[---Sent---] 205.09
(:emacs-rex (swank:operator-arglist "file:/home/boechat/Dropbox2/Documents/Coding/Image_processing/1a7r" "image-processing.gui") "image-processing.gui" t 584)

[-Received-] 205.1
(:indentation-update (("with-bindings" . 0)))
[-Received-] 205.1
(:return (:ok nil) 584)
[Actionlist] 205.1
584: finished :operator-arglist 
params: nil
[---Sent---] 205.1
(:emacs-rex (swank:operator-arglist "file:/home/boechat/Dropbox2/Documents/Coding/Image_processing/1a7r" "image-processing.gui") "image-processing.gui" t 585)

[-Received-] 205.11
(:indentation-update (("with-bindings" . 1)))
[-Received-] 205.11
(:return (:ok nil) 585)
[Actionlist] 205.11
585: finished :operator-arglist 
params: nil
[---Sent---] 206.89
(:emacs-rex (swank:listener-eval "(ns image-processing.gui
    (:import 
      (javax.imageio ImageIO) 
      (java.io File)) 
    (:use 
      (clojure.java.io)
      (seesaw core make-widget border)))


(def x '(\"test/image_processing/test/1a7r.gif\"
         \"/home/boechat/Documents/captchas/jequiti/b/1015055312.png\"))


(defn show-images [& imgs]
  (let [imgs-url (doall (map #(as-url (File. %)) imgs))]
    (horizontal-panel :items (conj [] (first imgs-url)))))


(defn create-frame [] 
  (-> (frame :title \"Hello\",
             :content (show-images x) ,
             :on-close :exit)
      pack!
      show!)) 

") "image-processing.gui" :repl-thread 586)

[-Received-] 206.93
(:write-string "#'image-processing.gui/create-frame
" :repl-result)
[-Received-] 206.93
(:indentation-update (("with-bindings" . 0)))
[-Received-] 206.93
(:return (:ok nil) 586)
[Actionlist] 206.93
586: finished :listener-eval 
params: nil
[---Sent---] 207.11
(:emacs-rex (swank:listener-eval "(create-frame)
") "image-processing.gui" :repl-thread 587)

[-Received-] 207.11
(:debug 1 1 ("No matching ctor found for class java.io.File" "  [Thrown class java.lang.IllegalArgumentException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "    Reflector.java:186 clojure.lang.Reflector.invokeConstructor" (:restartable nil)) (1 "      NO_SOURCE_FILE:1 image-processing.gui/show-images[fn]" (:restartable nil)) (2 "         core.clj:2432 clojure.core/map[fn]" (:restartable nil)) (3 "       LazySeq.java:42 clojure.lang.LazySeq.sval" (:restartable nil)) (4 "       LazySeq.java:60 clojure.lang.LazySeq.seq" (:restartable nil)) (5 "           RT.java:466 clojure.lang.RT.seq" (:restartable nil)) (6 "          core.clj:133 clojure.core/seq" (:restartable nil)) (7 "         core.clj:2723 clojure.core/dorun" (:restartable nil)) (8 "         core.clj:2739 clojure.core/doall" (:restartable nil)) (9 "      NO_SOURCE_FILE:1 image-processing.gui/show-images" (:restartable nil))) (nil))
[-Received-] 207.12
(:debug-activate 1 1 nil)
[---Sent---] 207.33
(:emacs-rex (swank:frame-locals-and-catch-tags 1) nil 1 588)

[---Sent---] 207.33
(:emacs-rex (swank:frame-source-location 1) nil 1 589)

[---Sent---] 207.34
(:emacs-rex (swank-backend:frame-call 1) nil 1 590)

[-Received-] 207.35
(:indentation-update (("with-bindings" . 1)))
[-Received-] 207.35
(:return (:ok (nil nil)) 588)
[Actionlist] 207.35
587: pending  :listener-eval 
588: finished :frame-locals-and-catch-tags 
589: pending  :frame-source-location 
590: pending  :frame-call 
params: ['nil', 'nil']
[-Received-] 207.35
(:debug-activate 1 1 nil)
[-Received-] 207.35
(:indentation-update (("with-bindings" . 0)))
[-Received-] 207.35
(:return (:ok (:error "image_processing/NO_SOURCE_FILE - source not found.")) 589)
[Actionlist] 207.35
587: pending  :listener-eval 
588: finished :frame-locals-and-catch-tags 
589: finished :frame-source-location 
590: pending  :frame-call 
params: [':error', '"image_processing/NO_SOURCE_FILE - source not found."']
[-Received-] 207.35
(:debug-activate 1 1 nil)
[-Received-] 207.35
(:return (:abort) 590)
[Actionlist] 207.35
587: pending  :listener-eval 
588: finished :frame-locals-and-catch-tags 
589: finished :frame-source-location 
590: finished :frame-call 
[-Received-] 207.35
(:debug-activate 1 1 nil)
[---Sent---] 207.64
(:emacs-rex (swank:frame-locals-and-catch-tags 2) nil 1 591)

[---Sent---] 207.64
(:emacs-rex (swank:frame-source-location 2) nil 1 592)

[---Sent---] 207.64
(:emacs-rex (swank-backend:frame-call 2) nil 1 593)

[-Received-] 207.65
(:indentation-update (("with-bindings" . 1)))
[-Received-] 207.65
(:return (:ok (nil nil)) 591)
[Actionlist] 207.65
587: pending  :listener-eval 
591: finished :frame-locals-and-catch-tags 
592: pending  :frame-source-location 
593: pending  :frame-call 
params: ['nil', 'nil']
[-Received-] 207.65
(:debug-activate 1 1 nil)
[-Received-] 207.65
(:indentation-update (("with-bindings" . 0)))
[-Received-] 207.65
(:return (:ok (:location (:zip "/home/boechat/Dropbox2/Documents/Coding/Image_processing/lib/clojure-1.3.0.jar" "clojure/core.clj") (:line 2432) nil)) 592)
[Actionlist] 207.65
587: pending  :listener-eval 
591: finished :frame-locals-and-catch-tags 
592: finished :frame-source-location 
593: pending  :frame-call 
params: [':location', [':zip', '"/home/boechat/Dropbox2/Documents/Coding/Image_processing/lib/clojure-1.3.0.jar"', '"clojure/core.clj"'], [':line', '2432'], 'nil']
[-Received-] 207.65
(:debug-activate 1 1 nil)
[-Received-] 207.65
(:return (:abort) 593)
[Actionlist] 207.66
587: pending  :listener-eval 
591: finished :frame-locals-and-catch-tags 
592: finished :frame-source-location 
593: finished :frame-call 
[-Received-] 207.66
(:debug-activate 1 1 nil)
[---Sent---] 211.19
(:emacs-rex (swank:listener-eval "(doall (map #(as-url %) x))
") "image-processing.gui" :repl-thread 594)

[-Received-] 211.19
(:debug 1 2 ("no protocol: test/image_processing/test/1a7r.gif" "  [Thrown class java.net.MalformedURLException]" nil) (("QUIT" "Quit to the SLIME top level") ("ABORT" "ABORT to SLIME level 0")) ((0 "  URL.java:583 java.net.URL.<init>" (:restartable nil)) (1 "  URL.java:480 java.net.URL.<init>" (:restartable nil)) (2 "  URL.java:429 java.net.URL.<init>" (:restartable nil)) (3 "     io.clj:39 clojure.java.io/fn" (:restartable nil)) (4 "     io.clj:34 clojure.java.io/fn[fn]" (:restartable nil)) (5 "NO_SOURCE_FILE:1 image-processing.gui/eval7650[fn]" (:restartable nil)) (6 " core.clj:2432 clojure.core/map[fn]" (:restartable nil)) (7 "LazySeq.java:42 clojure.lang.LazySeq.sval" (:restartable nil)) (8 "LazySeq.java:60 clojure.lang.LazySeq.seq" (:restartable nil)) (9 "   RT.java:466 clojure.lang.RT.seq" (:restartable nil))) (nil))
[-Received-] 211.2
(:debug-activate 1 2 nil)
[---Sent---] 211.35
(:emacs-rex (swank:throw-to-toplevel) nil 1 595)

[-Received-] 211.35
(:return (:abort) 595)
[Actionlist] 211.35
587: pending  :listener-eval 
594: pending  :listener-eval 
595: finished :throw-to-toplevel 
[-Received-] 211.35
(:debug-return 1 2 nil)
[-Received-] 211.35
(:return (:abort) 594)
[Actionlist] 211.35
587: pending  :listener-eval 
594: finished :listener-eval 
595: finished :throw-to-toplevel 
[-Received-] 211.35
(:debug-return 1 1 nil)
[-Received-] 211.35
(:return (:abort) 587)
[Actionlist] 211.35
587: finished :listener-eval 
594: finished :listener-eval 
595: finished :throw-to-toplevel 
[---Sent---] 211.87
(:emacs-rex (swank:listener-eval "(ns image-processing.gui
    (:import 
      (javax.imageio ImageIO) 
      (java.io File)) 
    (:use 
      (clojure.java.io)
      (seesaw core make-widget border)))


(def x '(\"test/image_processing/test/1a7r.gif\"
         \"/home/boechat/Documents/captchas/jequiti/b/1015055312.png\"))


(defn show-images [& imgs]
  (let [imgs-url (doall (map #(as-url (File. %)) imgs))]
    (horizontal-panel :items (conj [] (first imgs-url)))))


(defn create-frame [] 
  (-> (frame :title \"Hello\",
             :content (show-images x) ,
             :on-close :exit)
      pack!
      show!)) 

") "image-processing.gui" :repl-thread 596)

[-Received-] 211.9
(:write-string "#'image-processing.gui/create-frame
" :repl-result)
[-Received-] 211.9
(:indentation-update (("with-bindings" . 1)))
[-Received-] 211.9
(:return (:ok nil) 596)
[Actionlist] 211.9
596: finished :listener-eval 
params: nil
[---Sent---] 212.13
(:emacs-rex (swank:listener-eval "(create-frame)
") "image-processing.gui" :repl-thread 597)

[-Received-] 212.16
(:debug 1 1 ("No matching ctor found for class java.io.File" "  [Thrown class java.lang.IllegalArgumentException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "    Reflector.java:186 clojure.lang.Reflector.invokeConstructor" (:restartable nil)) (1 "      NO_SOURCE_FILE:1 image-processing.gui/show-images[fn]" (:restartable nil)) (2 "         core.clj:2432 clojure.core/map[fn]" (:restartable nil)) (3 "       LazySeq.java:42 clojure.lang.LazySeq.sval" (:restartable nil)) (4 "       LazySeq.java:60 clojure.lang.LazySeq.seq" (:restartable nil)) (5 "           RT.java:466 clojure.lang.RT.seq" (:restartable nil)) (6 "          core.clj:133 clojure.core/seq" (:restartable nil)) (7 "         core.clj:2723 clojure.core/dorun" (:restartable nil)) (8 "         core.clj:2739 clojure.core/doall" (:restartable nil)) (9 "      NO_SOURCE_FILE:1 image-processing.gui/show-images" (:restartable nil))) (nil))
[-Received-] 212.16
(:debug-activate 1 1 nil)
[---Sent---] 212.71
(:emacs-rex (swank:frame-locals-and-catch-tags 9) nil 1 598)

[---Sent---] 212.71
(:emacs-rex (swank:frame-source-location 9) nil 1 599)

[---Sent---] 212.72
(:emacs-rex (swank-backend:frame-call 9) nil 1 600)

[-Received-] 212.73
(:indentation-update (("with-bindings" . 0)))
[-Received-] 212.73
(:return (:ok (nil nil)) 598)
[Actionlist] 212.73
597: pending  :listener-eval 
598: finished :frame-locals-and-catch-tags 
599: pending  :frame-source-location 
600: pending  :frame-call 
params: ['nil', 'nil']
[-Received-] 212.73
(:debug-activate 1 1 nil)
[-Received-] 212.73
(:indentation-update (("with-bindings" . 1)))
[-Received-] 212.73
(:return (:ok (:error "image_processing/NO_SOURCE_FILE - source not found.")) 599)
[Actionlist] 212.73
597: pending  :listener-eval 
598: finished :frame-locals-and-catch-tags 
599: finished :frame-source-location 
600: pending  :frame-call 
params: [':error', '"image_processing/NO_SOURCE_FILE - source not found."']
[-Received-] 212.74
(:debug-activate 1 1 nil)
[-Received-] 212.74
(:return (:abort) 600)
[Actionlist] 212.74
597: pending  :listener-eval 
598: finished :frame-locals-and-catch-tags 
599: finished :frame-source-location 
600: finished :frame-call 
[-Received-] 212.74
(:debug-activate 1 1 nil)
[---Sent---] 213.03
(:emacs-rex (swank:throw-to-toplevel) nil 1 601)

[-Received-] 213.03
(:return (:abort) 601)
[Actionlist] 213.03
597: pending  :listener-eval 
601: finished :throw-to-toplevel 
[-Received-] 213.03
(:debug-return 1 1 nil)
[-Received-] 213.03
(:return (:abort) 597)
[Actionlist] 213.03
597: finished :listener-eval 
601: finished :throw-to-toplevel 
[---Sent---] 213.55
(:emacs-rex (swank:operator-arglist "as-url" "image-processing.gui") "image-processing.gui" t 602)

[-Received-] 213.55
(:indentation-update (("with-bindings" . 0)))
[-Received-] 213.55
(:return (:ok "([x])") 602)
[Actionlist] 213.55
602: finished :operator-arglist 
params: "([x])"
[---Sent---] 213.75
(:emacs-rex (swank:operator-arglist "first" "image-processing.gui") "image-processing.gui" t 603)

[-Received-] 213.75
(:indentation-update (("with-bindings" . 1)))
[-Received-] 213.75
(:return (:ok "([coll])") 603)
[Actionlist] 213.75
603: finished :operator-arglist 
params: "([coll])"
[---Sent---] 213.9
(:emacs-rex (swank:listener-eval "(ns image-processing.gui
    (:import 
      (javax.imageio ImageIO) 
      (java.io File)) 
    (:use 
      (clojure.java.io)
      (seesaw core make-widget border)))


(def x '(\"test/image_processing/test/1a7r.gif\"
         \"/home/boechat/Documents/captchas/jequiti/b/1015055312.png\"))


(defn show-images [& imgs]
  (let [imgs-url (doall (map #(as-url (File. %)) imgs))]
    (horizontal-panel :items (conj [] (first imgs-url)))))


(defn create-frame [] 
  (-> (frame :title \"Hello\",
             :content  (as-url (File. (first x))) ,
             :on-close :exit)
      pack!
      show!)) 

") "image-processing.gui" :repl-thread 604)

[-Received-] 213.94
(:write-string "#'image-processing.gui/create-frame
" :repl-result)
[-Received-] 213.94
(:indentation-update (("with-bindings" . 0)))
[-Received-] 213.94
(:return (:ok nil) 604)
[Actionlist] 213.94
604: finished :listener-eval 
params: nil
[---Sent---] 214.12
(:emacs-rex (swank:listener-eval "(create-frame)
") "image-processing.gui" :repl-thread 605)

[-Received-] 214.18
(:write-string "#<JFrame$Tag$a79ba523 seesaw.core.proxy$javax.swing.JFrame$Tag$a79ba523[frame0,617,407,206x116,invalid,layout=java.awt.BorderLayout,title=Hello,resizable,normal,defaultCloseOperation=EXIT_ON_CLOSE,rootPane=javax.swing.JRootPane[,5,25,200x90,layout=javax.swing.JRootPane$RootLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=16777673,maximumSize=,minimumSize=,preferredSize=],rootPaneCheckingEnabled=true]>
" :repl-result)
[-Received-] 214.18
(:indentation-update (("with-bindings" . 1)))
[-Received-] 214.18
(:return (:ok nil) 605)
[Actionlist] 214.18
605: finished :listener-eval 
params: nil
[---Sent---] 214.42
(:emacs-rex (swank:operator-arglist "map" "image-processing.gui") "image-processing.gui" t 606)

[---Sent---] 217.26
(:emacs-rex (swank:fuzzy-completions "show-ima" "image-processing.gui" :limit 200 :time-limit-in-msec 2000) nil t 607)

[---Sent---] 219.77
(:emacs-rex (swank:connection-info) nil t 608)

[-Received-] 220.02
(:indentation-update (("dothread-keeping-clj" . 1) ("dothread-keeping" . 1) ("dothread" . 0) ("binding-map" . 1) ("print-length-loop" . 1) ("with-pretty-writer" . 1) ("with-pprint-dispatch" . 1) ("with-connection" . 1) ("with-bindings" . 0) ("with-emacs-package" . 0) ("dothread-swank" . 0) ("with-read-line-support" . 0) ("with-package-tracking" . 0) ("doseq" . 1) ("letfn" . 1) ("cond" . 0) ("with-open" . 1) ("sync" . 1) ("let" . 1) ("dotimes" . 1) ("with-in-str" . 1) ("loop" . 1) ("with-out-str" . 0) ("when-not" . 1) ("with-loading-context" . 0) ("future" . 0) ("with-redefs" . 1) ("when-first" . 1) ("comment" . 0) ("condp" . 2) ("with-local-vars" . 1) ("with-bindings" . 1) ("when-let" . 1) ("while" . 1) ("case" . 1) ("locking" . 1) ("delay" . 0) ("io!" . 0) ("lazy-seq" . 0) ("when" . 1) ("binding" . 1) ("defslimefn" . defun) ("returning" . 1) ("continuously" . 0) ("failing-gracefully" . 0)))
[-Received-] 220.04
(:return (:ok (:pid "3452" :style :spawn :lisp-implementation (:type "Clojure" :name "clojure" :version "1.3.0") :package (:name "user" :prompt "user") :version "20100404")) 608)
[Actionlist] 220.04
608: finished :connection-info 
params: [':pid', '"3452"', ':style', ':spawn', ':lisp-implementation', [':type', '"Clojure"', ':name', '"clojure"', ':version', '"1.3.0"'], ':package', [':name', '"user"', ':prompt', '"user"'], ':version', '"20100404"']
 Package:user Prompt:user
[---Sent---] 220.07
(:emacs-rex (swank:create-repl nil) "image-processing.gui" t 609)

[-Received-] 220.08
(:return (:ok ("user" "user")) 609)
[Actionlist] 220.08
609: finished :create-repl 
params: ['"user"', '"user"']
[---Sent---] 220.08
(:emacs-rex (swank:swank-require 'swank-fuzzy) nil t 610)

[---Sent---] 220.13
(:emacs-rex (swank:listener-eval "(use '[clojure.repl :only (source apropos dir pst doc find-doc)])
(use '[clojure.java.javadoc :only (javadoc)])
(use '[clojure.pprint :only (pp pprint)])
") "image-processing.gui" :repl-thread 611)

[---Sent---] 220.18
(:emacs-rex (swank:listener-eval "(show-images x)
") "user" :repl-thread 612)

[-Received-] 220.25
(:write-string "nil
" :repl-result)
[-Received-] 220.35
(:indentation-update (("with-timeout" . 1) ("with-bindings" . 0)))
[-Received-] 220.35
(:return (:ok nil) 611)
[Actionlist] 220.35
610: pending  :swank-require 
611: finished :listener-eval 
612: pending  :listener-eval 
params: nil
[-Received-] 220.35
(:debug 1 1 ("Unable to resolve symbol: show-images in this context" "  [Thrown class java.lang.RuntimeException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "              Util.java:156 clojure.lang.Util.runtimeException" (:restartable nil)) (1 "         Compiler.java:6720 clojure.lang.Compiler.resolveIn" (:restartable nil)) (2 "         Compiler.java:6664 clojure.lang.Compiler.resolve" (:restartable nil)) (3 "         Compiler.java:6625 clojure.lang.Compiler.analyzeSymbol" (:restartable nil)) (4 "         Compiler.java:6198 clojure.lang.Compiler.analyze" (:restartable nil)) (5 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil)) (6 "         Compiler.java:3452 clojure.lang.Compiler$InvokeExpr.parse" (:restartable nil)) (7 "         Compiler.java:6411 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (8 "         Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil)) (9 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil))) (nil))
[-Received-] 220.36
(:debug-activate 1 1 nil)
[-Received-] 220.36
(:indentation-update (("with-bindings" . 1)))
[-Received-] 220.36
(:return (:ok nil) 610)
[Actionlist] 220.36
610: finished :swank-require 
611: finished :listener-eval 
612: pending  :listener-eval 
params: nil
[---Sent---] 220.88
(:emacs-rex (swank:throw-to-toplevel) nil 1 613)

[-Received-] 220.88
(:return (:abort) 613)
[Actionlist] 220.88
612: pending  :listener-eval 
613: finished :throw-to-toplevel 
[-Received-] 220.95
(:debug-return 1 1 nil)
[-Received-] 220.95
(:return (:abort) 612)
[Actionlist] 220.95
612: finished :listener-eval 
[---Sent---] 221.14
(:emacs-rex (swank:listener-eval "(ns image-processing.gui
    (:import 
      (javax.imageio ImageIO) 
      (java.io File)) 
    (:use 
      (clojure.java.io)
      (seesaw core make-widget border)))


(def x '(\"test/image_processing/test/1a7r.gif\"
         \"/home/boechat/Documents/captchas/jequiti/b/1015055312.png\"))


(defn show-images [& imgs]
  (let [imgs-url (doall (map #(as-url (File. %)) imgs))]
    (horizontal-panel :items (conj [] (first imgs-url)))))


(defn create-frame [] 
  (-> (frame :title \"Hello\",
             :content  (as-url (File. (first x))) ,
             :on-close :exit)
      pack!
      show!)) 

") "user" :repl-thread 614)

[-Received-] 221.45
(:new-package "image-processing.gui" "image-processing.gui")
[-Received-] 221.45
(:debug 1 1 ("Unable to resolve symbol: as-url in this context" "  [Thrown class java.lang.RuntimeException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "              Util.java:156 clojure.lang.Util.runtimeException" (:restartable nil)) (1 "         Compiler.java:6720 clojure.lang.Compiler.resolveIn" (:restartable nil)) (2 "         Compiler.java:6664 clojure.lang.Compiler.resolve" (:restartable nil)) (3 "         Compiler.java:6625 clojure.lang.Compiler.analyzeSymbol" (:restartable nil)) (4 "         Compiler.java:6198 clojure.lang.Compiler.analyze" (:restartable nil)) (5 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil)) (6 "         Compiler.java:3452 clojure.lang.Compiler$InvokeExpr.parse" (:restartable nil)) (7 "         Compiler.java:6411 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (8 "         Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil)) (9 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil))) (nil))
[-Received-] 221.46
(:debug-activate 1 1 nil)
[---Sent---] 223.06
(:emacs-rex (swank:throw-to-toplevel) nil 1 615)

[-Received-] 223.06
(:return (:abort) 615)
[Actionlist] 223.06
614: pending  :listener-eval 
615: finished :throw-to-toplevel 
[-Received-] 223.13
(:debug-return 1 1 nil)
[-Received-] 223.13
(:return (:abort) 614)
[Actionlist] 223.13
614: finished :listener-eval 
[---Sent---] 223.43
(:emacs-rex (swank:listener-eval "(ns image-processing.gui
    (:import 
      (javax.imageio ImageIO) 
      (java.io File)) 
    (:use 
      (clojure.java.io)
      (seesaw core make-widget border)))


(def x '(\"test/image_processing/test/1a7r.gif\"
         \"/home/boechat/Documents/captchas/jequiti/b/1015055312.png\"))


(defn show-images [& imgs]
  (let [imgs-url (doall (map #(as-url (File. %)) imgs))]
    (horizontal-panel :items (conj [] (first imgs-url)))))


(defn create-frame [] 
  (-> (frame :title \"Hello\",
             :content  (as-url (File. (first x))) ,
             :on-close :exit)
      pack!
      show!)) 

") "image-processing.gui" :repl-thread 616)

[-Received-] 223.46
(:debug 1 1 ("Unable to resolve symbol: as-url in this context" "  [Thrown class java.lang.RuntimeException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "              Util.java:156 clojure.lang.Util.runtimeException" (:restartable nil)) (1 "         Compiler.java:6720 clojure.lang.Compiler.resolveIn" (:restartable nil)) (2 "         Compiler.java:6664 clojure.lang.Compiler.resolve" (:restartable nil)) (3 "         Compiler.java:6625 clojure.lang.Compiler.analyzeSymbol" (:restartable nil)) (4 "         Compiler.java:6198 clojure.lang.Compiler.analyze" (:restartable nil)) (5 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil)) (6 "         Compiler.java:3452 clojure.lang.Compiler$InvokeExpr.parse" (:restartable nil)) (7 "         Compiler.java:6411 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (8 "         Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil)) (9 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil))) (nil))
[-Received-] 223.48
(:debug-activate 1 1 nil)
[---Sent---] 223.54
(:emacs-rex (swank:throw-to-toplevel) nil 1 617)

[-Received-] 223.54
(:return (:abort) 617)
[Actionlist] 223.54
616: pending  :listener-eval 
617: finished :throw-to-toplevel 
[-Received-] 223.54
(:debug-return 1 1 nil)
[-Received-] 223.54
(:return (:abort) 616)
[Actionlist] 223.55
616: finished :listener-eval 
617: finished :throw-to-toplevel 
[---Sent---] 223.77
(:emacs-rex (swank:listener-eval "(ns image-processing.gui
    (:import 
      (javax.imageio ImageIO) 
      (java.io File)) 
    (:use 
      (clojure.java.io)
      (seesaw core make-widget border)))
") "image-processing.gui" :repl-thread 618)

[-Received-] 223.77
(:write-string "nil
" :repl-result)
[-Received-] 223.84
(:indentation-update (("with-bindings" . 0) ("with-widgets" . 1) ("invoke-now" . 0) ("invoke-soon" . 0) ("signaller" . 1) ("invoke-later" . 0)))
[-Received-] 223.84
(:return (:ok nil) 618)
[Actionlist] 223.84
618: finished :listener-eval 
params: nil
[---Sent---] 224.01
(:emacs-rex (swank:listener-eval "(defn show-images [& imgs]
  (let [imgs-url (doall (map #(as-url (File. %)) imgs))]
    (horizontal-panel :items (conj [] (first imgs-url)))))
") "image-processing.gui" :repl-thread 619)

[-Received-] 224.01
(:debug 1 1 ("Unable to resolve symbol: as-url in this context" "  [Thrown class java.lang.RuntimeException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "              Util.java:156 clojure.lang.Util.runtimeException" (:restartable nil)) (1 "         Compiler.java:6720 clojure.lang.Compiler.resolveIn" (:restartable nil)) (2 "         Compiler.java:6664 clojure.lang.Compiler.resolve" (:restartable nil)) (3 "         Compiler.java:6625 clojure.lang.Compiler.analyzeSymbol" (:restartable nil)) (4 "         Compiler.java:6198 clojure.lang.Compiler.analyze" (:restartable nil)) (5 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil)) (6 "         Compiler.java:3452 clojure.lang.Compiler$InvokeExpr.parse" (:restartable nil)) (7 "         Compiler.java:6411 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (8 "         Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil)) (9 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil))) (nil))
[-Received-] 224.01
(:debug-activate 1 1 nil)
[---Sent---] 224.24
(:emacs-rex (swank:throw-to-toplevel) nil 1 620)

[-Received-] 224.24
(:return (:abort) 620)
[Actionlist] 224.24
619: pending  :listener-eval 
620: finished :throw-to-toplevel 
[-Received-] 224.25
(:debug-return 1 1 nil)
[-Received-] 224.32
(:return (:abort) 619)
[Actionlist] 224.33
619: finished :listener-eval 
[---Sent---] 224.75
(:emacs-rex (swank:listener-eval "as-url
") "image-processing.gui" :repl-thread 621)

[-Received-] 224.78
(:debug 1 1 ("Unable to resolve symbol: as-url in this context" "  [Thrown class java.lang.RuntimeException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "              Util.java:156 clojure.lang.Util.runtimeException" (:restartable nil)) (1 "         Compiler.java:6720 clojure.lang.Compiler.resolveIn" (:restartable nil)) (2 "         Compiler.java:6664 clojure.lang.Compiler.resolve" (:restartable nil)) (3 "         Compiler.java:6625 clojure.lang.Compiler.analyzeSymbol" (:restartable nil)) (4 "         Compiler.java:6198 clojure.lang.Compiler.analyze" (:restartable nil)) (5 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil)) (6 "         Compiler.java:6469 clojure.lang.Compiler.eval" (:restartable nil)) (7 "         Compiler.java:6431 clojure.lang.Compiler.eval" (:restartable nil)) (8 "              core.clj:2795 clojure.core/eval" (:restartable nil)) (9 "               core.clj:534 swank.core/eval825[fn]" (:restartable nil))) (nil))
[-Received-] 224.79
(:debug-activate 1 1 nil)
[---Sent---] 224.95
(:emacs-rex (swank:throw-to-toplevel) nil 1 622)

[-Received-] 224.95
(:return (:abort) 622)
[Actionlist] 224.95
621: pending  :listener-eval 
622: finished :throw-to-toplevel 
[-Received-] 224.95
(:debug-return 1 1 nil)
[-Received-] 225.03
(:return (:abort) 621)
[Actionlist] 225.03
621: finished :listener-eval 
[---Sent---] 225.29
(:emacs-rex (swank:listener-eval "clojure.java.io/as-url
") "image-processing.gui" :repl-thread 623)

[-Received-] 225.29
(:write-string "#<io$fn__7753$G__7735__7758 clojure.java.io$fn__7753$G__7735__7758@1cdfc68>
" :repl-result)
[-Received-] 225.36
(:indentation-update (("with-bindings" . 1)))
[-Received-] 225.36
(:return (:ok nil) 623)
[Actionlist] 225.36
623: finished :listener-eval 
params: nil
[---Sent---] 225.58
(:emacs-rex (swank:operator-arglist "clojure" "image-processing.gui") "image-processing.gui" t 624)

[-Received-] 225.59
(:indentation-update (("with-bindings" . 0)))
[-Received-] 225.6
(:return (:ok nil) 624)
[Actionlist] 225.6
624: finished :operator-arglist 
params: nil
[---Sent---] 225.67
(:emacs-rex (swank:operator-arglist "make-widget" "image-processing.gui") "image-processing.gui" t 625)

[-Received-] 225.67
(:indentation-update (("with-bindings" . 1)))
[-Received-] 225.67
(:return (:ok "([v])") 625)
[Actionlist] 225.67
625: finished :operator-arglist 
params: "([v])"
[---Sent---] 225.67
(:emacs-rex (swank:describe-function "make-widget") "image-processing.gui" t 626)

[-Received-] 225.68
(:indentation-update (("with-bindings" . 0)))
[-Received-] 225.68
(:return (:ok "-------------------------
seesaw.core/make-widget
([v])
  Try to create a new widget based on the following rules:

    nil -> nil
    java.awt.Component -> return argument unchanged (like to-widget)
    java.util.EventObject -> return the event source (like to-widget)

    java.awt.Dimension -> return Box/createRigidArea
    java.swing.Action    -> return a button using the action
    :separator -> create a horizontal JSeparator
    :fill-h -> Box/createHorizontalGlue
    :fill-v -> Box/createVerticalGlue
    [:fill-h n] -> Box/createHorizontalStrut with width n
    [:fill-v n] -> Box/createVerticalStrut with height n
    [width :by height] -> create rigid area with given dimensions
    java.net.URL -> a label with the image located at the url
    Anything else -> a label with the text from passing the object through str
  
") 626)
[Actionlist] 225.68
626: finished :describe-function 
params: "-------------------------
seesaw.core/make-widget
([v])
  Try to create a new widget based on the following rules:

    nil -> nil
    java.awt.Component -> return argument unchanged (like to-widget)
    java.util.EventObject -> return the event source (like to-widget)

    java.awt.Dimension -> return Box/createRigidArea
    java.swing.Action    -> return a button using the action
    :separator -> create a horizontal JSeparator
    :fill-h -> Box/createHorizontalGlue
    :fill-v -> Box/createVerticalGlue
    [:fill-h n] -> Box/createHorizontalStrut with width n
    [:fill-v n] -> Box/createVerticalStrut with height n
    [width :by height] -> create rigid area with given dimensions
    java.net.URL -> a label with the image located at the url
    Anything else -> a label with the text from passing the object through str
  
"
[---Sent---] 226.14
(:emacs-rex (swank:listener-eval "(ns image-processing.gui
    (:import 
      (javax.imageio ImageIO) 
      (java.io File)) 
    (:use 
      [clojure.java.io] 
      [seesaw core make-widget border]))
") "image-processing.gui" :repl-thread 627)

[-Received-] 226.14
(:write-string "nil
" :repl-result)
[-Received-] 226.2
(:indentation-update (("with-bindings" . 1)))
[-Received-] 226.2
(:return (:ok nil) 627)
[Actionlist] 226.2
627: finished :listener-eval 
params: nil
[---Sent---] 226.35
(:emacs-rex (swank:listener-eval "clojure.java.io/as-url
") "image-processing.gui" :repl-thread 628)

[-Received-] 226.35
(:write-string "#<io$fn__7753$G__7735__7758 clojure.java.io$fn__7753$G__7735__7758@1cdfc68>
" :repl-result)
[-Received-] 226.41
(:indentation-update (("with-bindings" . 0)))
[-Received-] 226.41
(:return (:ok nil) 628)
[Actionlist] 226.41
628: finished :listener-eval 
params: nil
[---Sent---] 226.56
(:emacs-rex (swank:listener-eval "as-url 
") "image-processing.gui" :repl-thread 629)

[-Received-] 226.56
(:write-string "#<io$fn__7753$G__7735__7758 clojure.java.io$fn__7753$G__7735__7758@1cdfc68>
" :repl-result)
[-Received-] 226.62
(:indentation-update (("with-bindings" . 1)))
[-Received-] 226.62
(:return (:ok nil) 629)
[Actionlist] 226.62
629: finished :listener-eval 
params: nil
[---Sent---] 226.75
(:emacs-rex (swank:listener-eval "(ns image-processing.gui
    (:import 
      (javax.imageio ImageIO) 
      (java.io File)) 
    (:use 
      [clojure.java.io] 
      [seesaw core make-widget border]))


(def x '(\"test/image_processing/test/1a7r.gif\"
         \"/home/boechat/Documents/captchas/jequiti/b/1015055312.png\"))


(defn show-images [& imgs]
  (let [imgs-url (doall (map #(as-url (File. %)) imgs))]
    (horizontal-panel :items (conj [] (first imgs-url)))))


(defn create-frame [] 
  (-> (frame :title \"Hello\",
             :content  (as-url (File. (first x))) ,
             :on-close :exit)
      pack!
      show!)) 

") "image-processing.gui" :repl-thread 630)

[-Received-] 226.79
(:write-string "#'image-processing.gui/create-frame
" :repl-result)
[-Received-] 226.79
(:indentation-update (("with-bindings" . 0)))
[-Received-] 226.79
(:return (:ok nil) 630)
[Actionlist] 226.79
630: finished :listener-eval 
params: nil
[---Sent---] 227.04
(:emacs-rex (swank:fuzzy-completions "show-ima" "image-processing.gui" :limit 200 :time-limit-in-msec 2000) nil t 631)

[-Received-] 227.05
(:indentation-update (("with-bindings" . 1)))
[-Received-] 227.05
(:return (:ok ((("show-images" "90.94" ((0 "show-ima")) "-f------")) nil)) 631)
[Actionlist] 227.05
631: finished :fuzzy-completions 
params: [[['"show-images"', '"90.94"', [['0', '"show-ima"']], '"-f------"']], 'nil']
[---Sent---] 227.06
(:emacs-rex (swank:operator-arglist "show-images" "image-processing.gui") "image-processing.gui" t 632)

[-Received-] 227.06
(:indentation-update (("with-bindings" . 0)))
[-Received-] 227.06
(:return (:ok "([& imgs])") 632)
[Actionlist] 227.06
632: finished :operator-arglist 
params: "([& imgs])"
[---Sent---] 227.11
(:emacs-rex (swank:listener-eval "(show-images x)
") "image-processing.gui" :repl-thread 633)

[-Received-] 227.11
(:debug 1 1 ("No matching ctor found for class java.io.File" "  [Thrown class java.lang.IllegalArgumentException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "    Reflector.java:186 clojure.lang.Reflector.invokeConstructor" (:restartable nil)) (1 "      NO_SOURCE_FILE:1 image-processing.gui/show-images[fn]" (:restartable nil)) (2 "         core.clj:2432 clojure.core/map[fn]" (:restartable nil)) (3 "       LazySeq.java:42 clojure.lang.LazySeq.sval" (:restartable nil)) (4 "       LazySeq.java:60 clojure.lang.LazySeq.seq" (:restartable nil)) (5 "           RT.java:466 clojure.lang.RT.seq" (:restartable nil)) (6 "          core.clj:133 clojure.core/seq" (:restartable nil)) (7 "         core.clj:2723 clojure.core/dorun" (:restartable nil)) (8 "         core.clj:2739 clojure.core/doall" (:restartable nil)) (9 "      NO_SOURCE_FILE:1 image-processing.gui/show-images" (:restartable nil))) (nil))
[-Received-] 227.12
(:debug-activate 1 1 nil)
[---Sent---] 227.25
(:emacs-rex (swank:throw-to-toplevel) nil 1 634)

[-Received-] 227.25
(:return (:abort) 634)
[Actionlist] 227.25
633: pending  :listener-eval 
634: finished :throw-to-toplevel 
[-Received-] 227.25
(:debug-return 1 1 nil)
[-Received-] 227.25
(:return (:abort) 633)
[Actionlist] 227.25
633: finished :listener-eval 
634: finished :throw-to-toplevel 
[---Sent---] 227.84
(:emacs-rex (swank:listener-eval "(defn show-images [imgs]
  (let [imgs-url (doall (map #(as-url (File. %)) imgs))]
    (horizontal-panel :items (conj [] (first imgs-url)))))
") "image-processing.gui" :repl-thread 635)

[-Received-] 227.84
(:write-string "#'image-processing.gui/show-images
" :repl-result)
[-Received-] 227.9
(:indentation-update (("with-bindings" . 1)))
[-Received-] 227.9
(:return (:ok nil) 635)
[Actionlist] 227.9
635: finished :listener-eval 
params: nil
[---Sent---] 228.31
(:emacs-rex (swank:listener-eval "(show-images x)
") "image-processing.gui" :repl-thread 636)

[-Received-] 228.35
(:write-string "#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,0,0,0x0,invalid,layout=javax.swing.BoxLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]>
" :repl-result)
[-Received-] 228.35
(:indentation-update (("with-bindings" . 0)))
[-Received-] 228.35
(:return (:ok nil) 636)
[Actionlist] 228.35
636: finished :listener-eval 
params: nil
[---Sent---] 228.78
(:emacs-rex (swank:fuzzy-completions "show" "image-processing.gui" :limit 200 :time-limit-in-msec 2000) nil t 637)

[-Received-] 228.79
(:indentation-update (("with-bindings" . 1)))
[-Received-] 228.79
(:return (:ok ((("show-images" "40.60" ((0 "show")) "-f------")) nil)) 637)
[Actionlist] 228.79
637: finished :fuzzy-completions 
params: [[['"show-images"', '"40.60"', [['0', '"show"']], '"-f------"']], 'nil']
[---Sent---] 228.8
(:emacs-rex (swank:operator-arglist "show-images" "image-processing.gui") "image-processing.gui" t 638)

[-Received-] 228.81
(:indentation-update (("with-bindings" . 0)))
[-Received-] 228.81
(:return (:ok "([imgs])") 638)
[Actionlist] 228.81
638: finished :operator-arglist 
params: "([imgs])"
[---Sent---] 228.95
(:emacs-rex (swank:listener-eval "(show-images x)
") "image-processing.gui" :repl-thread 639)

[-Received-] 228.99
(:write-string "#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,0,0,0x0,invalid,layout=javax.swing.BoxLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]>
" :repl-result)
[-Received-] 228.99
(:indentation-update (("with-bindings" . 1)))
[-Received-] 228.99
(:return (:ok nil) 639)
[Actionlist] 228.99
639: finished :listener-eval 
params: nil
[---Sent---] 229.25
(:emacs-rex (swank:listener-eval "(ns image-processing.gui
    (:import 
      (javax.imageio ImageIO) 
      (java.io File)) 
    (:use 
      [clojure.java.io] 
      [seesaw core make-widget border]))


(def x '(\"test/image_processing/test/1a7r.gif\"
         \"/home/boechat/Documents/captchas/jequiti/b/1015055312.png\"))


(defn show-images [imgs]
  (let [imgs-url (doall (map #(as-url (File. %)) imgs))]
    (horizontal-panel :items (conj [] imgs-url))))


(defn create-frame [] 
  (-> (frame :title \"Hello\",
             :content  (show-images x) ,
             :on-close :exit)
      pack!
      show!)) 

") "image-processing.gui" :repl-thread 640)

[-Received-] 229.28
(:write-string "#'image-processing.gui/create-frame
" :repl-result)
[-Received-] 229.29
(:indentation-update (("with-bindings" . 0)))
[-Received-] 229.29
(:return (:ok nil) 640)
[Actionlist] 229.29
640: finished :listener-eval 
params: nil
[---Sent---] 229.46
(:emacs-rex (swank:fuzzy-completions "crea" "image-processing.gui" :limit 200 :time-limit-in-msec 2000) nil t 641)

[-Received-] 229.47
(:indentation-update (("with-bindings" . 1)))
[-Received-] 229.47
(:return (:ok ((("create-frame" "40.46" ((0 "crea")) "-f------") ("clojure.main/" "15.16" ((0 "c") (5 "re") (9 "a")) "b------p") ("clojure.walk/" "15.16" ((0 "c") (5 "re") (9 "a")) "b------p") ("clojure.java.io/" "14.88" ((0 "c") (5 "re") (9 "a")) "b------p") ("swank.core.threadmap/" "14.82" ((6 "c") (13 "rea")) "b------p") ("clojure.java.shell/" "14.72" ((0 "c") (5 "re") (9 "a")) "b------p") ("clojure.java.browse/" "14.68" ((0 "c") (5 "re") (9 "a")) "b------p") ("clojure.java.javadoc/" "14.64" ((0 "c") (5 "re") (9 "a")) "b------p") ("swank.util.concurrent.thread/" "14.63" ((11 "c") (24 "rea")) "b------p") ("clojure.contrib.macro-utils/" "14.47" ((0 "c") (5 "re") (17 "a")) "b------p") ("swank.core.debugger-backends/" "12.45" ((6 "c") (8 "re") (21 "a")) "b------p") ("swank.clj-contrib.macroexpand/" "5.43" ((20 "cr") (23 "e") (26 "a")) "b------p") ("swank.util.clj-stacktrace-compat/" "3.34" ((21 "r") (24 "e") (30 "a")) "b------p")) nil)) 641)
[Actionlist] 229.47
641: finished :fuzzy-completions 
params: [[['"create-frame"', '"40.46"', [['0', '"crea"']], '"-f------"'], ['"clojure.main/"', '"15.16"', [['0', '"c"'], ['5', '"re"'], ['9', '"a"']], '"b------p"'], ['"clojure.walk/"', '"15.16"', [['0', '"c"'], ['5', '"re"'], ['9', '"a"']], '"b------p"'], ['"clojure.java.io/"', '"14.88"', [['0', '"c"'], ['5', '"re"'], ['9', '"a"']], '"b------p"'], ['"swank.core.threadmap/"', '"14.82"', [['6', '"c"'], ['13', '"rea"']], '"b------p"'], ['"clojure.java.shell/"', '"14.72"', [['0', '"c"'], ['5', '"re"'], ['9', '"a"']], '"b------p"'], ['"clojure.java.browse/"', '"14.68"', [['0', '"c"'], ['5', '"re"'], ['9', '"a"']], '"b------p"'], ['"clojure.java.javadoc/"', '"14.64"', [['0', '"c"'], ['5', '"re"'], ['9', '"a"']], '"b------p"'], ['"swank.util.concurrent.thread/"', '"14.63"', [['11', '"c"'], ['24', '"rea"']], '"b------p"'], ['"clojure.contrib.macro-utils/"', '"14.47"', [['0', '"c"'], ['5', '"re"'], ['17', '"a"']], '"b------p"'], ['"swank.core.debugger-backends/"', '"12.45"', [['6', '"c"'], ['8', '"re"'], ['21', '"a"']], '"b------p"'], ['"swank.clj-contrib.macroexpand/"', '"5.43"', [['20', '"cr"'], ['23', '"e"'], ['26', '"a"']], '"b------p"'], ['"swank.util.clj-stacktrace-compat/"', '"3.34"', [['21', '"r"'], ['24', '"e"'], ['30', '"a"']], '"b------p"']], 'nil']
[---Sent---] 229.73
(:emacs-rex (swank:listener-eval "(create-frame)
") "image-processing.gui" :repl-thread 642)

[-Received-] 229.77
(:debug 1 1 ("No implementation of method: :make-widget* of protocol: #'seesaw.make-widget/MakeWidget found for class: clojure.lang.LazySeq" "  [Thrown class java.lang.IllegalArgumentException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "core_deftype.clj:495 clojure.core/-cache-protocol-fn" (:restartable nil)) (1 " make_widget.clj:16 seesaw.make-widget/eval2746[fn]" (:restartable nil)) (2 "      layout.clj:38 seesaw.layout/add-widget" (:restartable nil)) (3 "      layout.clj:36 seesaw.layout/add-widget" (:restartable nil)) (4 "      layout.clj:47 seesaw.layout/add-widgets" (:restartable nil)) (5 "      layout.clj:53 seesaw.layout/fn" (:restartable nil)) (6 "    options.clj:114 seesaw.options/apply-option" (:restartable nil)) (7 "    options.clj:129 seesaw.options/apply-options*" (:restartable nil)) (8 "    options.clj:136 seesaw.options/apply-options" (:restartable nil)) (9 "       core.clj:907 seesaw.core/abstract-panel" (:restartable nil))) (nil))
[-Received-] 229.77
(:debug-activate 1 1 nil)
[---Sent---] 230.05
(:emacs-rex (swank:throw-to-toplevel) nil 1 643)

[-Received-] 230.05
(:return (:abort) 643)
[Actionlist] 230.05
642: pending  :listener-eval 
643: finished :throw-to-toplevel 
[-Received-] 230.05
(:debug-return 1 1 nil)
[-Received-] 230.05
(:return (:abort) 642)
[Actionlist] 230.05
642: finished :listener-eval 
643: finished :throw-to-toplevel 
[---Sent---] 230.7
(:emacs-rex (swank:listener-eval "(defn show-images [imgs]
  (let [imgs-url (map #(as-url (File. %)) imgs)]
    (doall (horizontal-panel :items (conj [] imgs-url)))))
") "image-processing.gui" :repl-thread 644)

[-Received-] 230.7
(:write-string "#'image-processing.gui/show-images
" :repl-result)
[-Received-] 230.76
(:indentation-update (("with-bindings" . 0)))
[-Received-] 230.76
(:return (:ok nil) 644)
[Actionlist] 230.76
644: finished :listener-eval 
params: nil
[---Sent---] 230.91
(:emacs-rex (swank:listener-eval "(create-frame)
") "image-processing.gui" :repl-thread 645)

[-Received-] 230.91
(:debug 1 1 ("No implementation of method: :make-widget* of protocol: #'seesaw.make-widget/MakeWidget found for class: clojure.lang.LazySeq" "  [Thrown class java.lang.IllegalArgumentException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "core_deftype.clj:495 clojure.core/-cache-protocol-fn" (:restartable nil)) (1 " make_widget.clj:16 seesaw.make-widget/eval2746[fn]" (:restartable nil)) (2 "      layout.clj:38 seesaw.layout/add-widget" (:restartable nil)) (3 "      layout.clj:36 seesaw.layout/add-widget" (:restartable nil)) (4 "      layout.clj:47 seesaw.layout/add-widgets" (:restartable nil)) (5 "      layout.clj:53 seesaw.layout/fn" (:restartable nil)) (6 "    options.clj:114 seesaw.options/apply-option" (:restartable nil)) (7 "    options.clj:129 seesaw.options/apply-options*" (:restartable nil)) (8 "    options.clj:136 seesaw.options/apply-options" (:restartable nil)) (9 "       core.clj:907 seesaw.core/abstract-panel" (:restartable nil))) (nil))
[-Received-] 230.92
(:debug-activate 1 1 nil)
[---Sent---] 231.04
(:emacs-rex (swank:throw-to-toplevel) nil 1 646)

[-Received-] 231.04
(:return (:abort) 646)
[Actionlist] 231.04
645: pending  :listener-eval 
646: finished :throw-to-toplevel 
[-Received-] 231.04
(:debug-return 1 1 nil)
[-Received-] 231.04
(:return (:abort) 645)
[Actionlist] 231.04
645: finished :listener-eval 
646: finished :throw-to-toplevel 
[---Sent---] 231.29
(:emacs-rex (swank:listener-eval "(show-images x)
") "image-processing.gui" :repl-thread 647)

[-Received-] 231.29
(:debug 1 1 ("No implementation of method: :make-widget* of protocol: #'seesaw.make-widget/MakeWidget found for class: clojure.lang.LazySeq" "  [Thrown class java.lang.IllegalArgumentException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "core_deftype.clj:495 clojure.core/-cache-protocol-fn" (:restartable nil)) (1 " make_widget.clj:16 seesaw.make-widget/eval2746[fn]" (:restartable nil)) (2 "      layout.clj:38 seesaw.layout/add-widget" (:restartable nil)) (3 "      layout.clj:36 seesaw.layout/add-widget" (:restartable nil)) (4 "      layout.clj:47 seesaw.layout/add-widgets" (:restartable nil)) (5 "      layout.clj:53 seesaw.layout/fn" (:restartable nil)) (6 "    options.clj:114 seesaw.options/apply-option" (:restartable nil)) (7 "    options.clj:129 seesaw.options/apply-options*" (:restartable nil)) (8 "    options.clj:136 seesaw.options/apply-options" (:restartable nil)) (9 "       core.clj:907 seesaw.core/abstract-panel" (:restartable nil))) (nil))
[-Received-] 231.3
(:debug-activate 1 1 nil)
[---Sent---] 231.45
(:emacs-rex (swank:throw-to-toplevel) nil 1 648)

[-Received-] 231.45
(:return (:abort) 648)
[Actionlist] 231.45
647: pending  :listener-eval 
648: finished :throw-to-toplevel 
[-Received-] 231.46
(:debug-return 1 1 nil)
[-Received-] 231.46
(:return (:abort) 647)
[Actionlist] 231.46
647: finished :listener-eval 
648: finished :throw-to-toplevel 
[---Sent---] 231.62
(:emacs-rex (swank:listener-eval "(show-images x)
") "image-processing.gui" :repl-thread 649)

[-Received-] 231.62
(:debug 1 1 ("No implementation of method: :make-widget* of protocol: #'seesaw.make-widget/MakeWidget found for class: clojure.lang.LazySeq" "  [Thrown class java.lang.IllegalArgumentException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "core_deftype.clj:495 clojure.core/-cache-protocol-fn" (:restartable nil)) (1 " make_widget.clj:16 seesaw.make-widget/eval2746[fn]" (:restartable nil)) (2 "      layout.clj:38 seesaw.layout/add-widget" (:restartable nil)) (3 "      layout.clj:36 seesaw.layout/add-widget" (:restartable nil)) (4 "      layout.clj:47 seesaw.layout/add-widgets" (:restartable nil)) (5 "      layout.clj:53 seesaw.layout/fn" (:restartable nil)) (6 "    options.clj:114 seesaw.options/apply-option" (:restartable nil)) (7 "    options.clj:129 seesaw.options/apply-options*" (:restartable nil)) (8 "    options.clj:136 seesaw.options/apply-options" (:restartable nil)) (9 "       core.clj:907 seesaw.core/abstract-panel" (:restartable nil))) (nil))
[-Received-] 231.63
(:debug-activate 1 1 nil)
[---Sent---] 231.75
(:emacs-rex (swank:throw-to-toplevel) nil 1 650)

[-Received-] 231.75
(:return (:abort) 650)
[Actionlist] 231.75
649: pending  :listener-eval 
650: finished :throw-to-toplevel 
[-Received-] 231.75
(:debug-return 1 1 nil)
[-Received-] 231.76
(:return (:abort) 649)
[Actionlist] 231.76
649: finished :listener-eval 
650: finished :throw-to-toplevel 
[---Sent---] 232.2
(:emacs-rex (swank:listener-eval "(defn show-images [imgs]
  (let [imgs-url (dorun (map #(as-url (File. %)) imgs))]
    (horizontal-panel :items (conj [] imgs-url))))
") "image-processing.gui" :repl-thread 651)

[-Received-] 232.2
(:write-string "#'image-processing.gui/show-images
" :repl-result)
[-Received-] 232.27
(:indentation-update (("with-bindings" . 1)))
[-Received-] 232.27
(:return (:ok nil) 651)
[Actionlist] 232.27
651: finished :listener-eval 
params: nil
[---Sent---] 232.45
(:emacs-rex (swank:listener-eval "(show-images x)
") "image-processing.gui" :repl-thread 652)

[-Received-] 232.5
(:debug 1 1 ("Can't add nil widget. Original was ()" "  [Thrown class java.lang.IllegalArgumentException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "        util.clj:23 seesaw.util/check-args" (:restartable nil)) (1 "      layout.clj:39 seesaw.layout/add-widget" (:restartable nil)) (2 "      layout.clj:36 seesaw.layout/add-widget" (:restartable nil)) (3 "      layout.clj:47 seesaw.layout/add-widgets" (:restartable nil)) (4 "      layout.clj:53 seesaw.layout/fn" (:restartable nil)) (5 "    options.clj:114 seesaw.options/apply-option" (:restartable nil)) (6 "    options.clj:129 seesaw.options/apply-options*" (:restartable nil)) (7 "    options.clj:136 seesaw.options/apply-options" (:restartable nil)) (8 "       core.clj:907 seesaw.core/abstract-panel" (:restartable nil)) (9 "       core.clj:910 seesaw.core/abstract-panel" (:restartable nil))) (nil))
[-Received-] 232.51
(:debug-activate 1 1 nil)
[---Sent---] 232.7
(:emacs-rex (swank:throw-to-toplevel) nil 1 653)

[-Received-] 232.7
(:return (:abort) 653)
[Actionlist] 232.7
652: pending  :listener-eval 
653: finished :throw-to-toplevel 
[-Received-] 232.7
(:debug-return 1 1 nil)
[-Received-] 232.7
(:return (:abort) 652)
[Actionlist] 232.7
652: finished :listener-eval 
653: finished :throw-to-toplevel 
[---Sent---] 233.23
(:emacs-rex (swank:listener-eval "(defn show-images [imgs]
  (let [imgs-url (dorun (map #(as-url (File. %)) imgs))]
    (swank.core/break)
    (horizontal-panel :items (conj [] imgs-url))))
") "image-processing.gui" :repl-thread 654)

[-Received-] 233.23
(:write-string "#'image-processing.gui/show-images
" :repl-result)
[-Received-] 233.31
(:indentation-update (("with-bindings" . 0)))
[-Received-] 233.31
(:return (:ok nil) 654)
[Actionlist] 233.31
654: finished :listener-eval 
params: nil
[---Sent---] 233.5
(:emacs-rex (swank:listener-eval "(show-images x)
") "image-processing.gui" :repl-thread 655)

[-Received-] 233.54
(:debug 1 1 ("BREAK:" "  [Thrown class java.lang.Exception]" nil) (("QUIT" "Quit to the SLIME top level") ("CONTINUE" "Continue from breakpoint")) ((0 "      NO_SOURCE_FILE:1 image-processing.gui/show-images" (:restartable nil)) (1 "      NO_SOURCE_FILE:1 image-processing.gui/eval7501" (:restartable nil)) (2 "    Compiler.java:6465 clojure.lang.Compiler.eval" (:restartable nil)) (3 "    Compiler.java:6431 clojure.lang.Compiler.eval" (:restartable nil)) (4 "         core.clj:2795 clojure.core/eval" (:restartable nil)) (5 "          core.clj:534 swank.core/eval825[fn]" (:restartable nil)) (6 "      MultiFn.java:163 clojure.lang.MultiFn.invoke" (:restartable nil)) (7 "          basic.clj:55 swank.commands.basic/eval-region" (:restartable nil)) (8 "          basic.clj:45 swank.commands.basic/eval-region" (:restartable nil)) (9 "          basic.clj:79 swank.commands.basic/eval1101[fn]" (:restartable nil))) (655))
[-Received-] 233.54
(:debug-activate 1 1 nil)
[---Sent---] 233.71
(:emacs-rex (swank:frame-locals-and-catch-tags 0) nil 1 656)

[---Sent---] 233.71
(:emacs-rex (swank:frame-source-location 0) nil 1 657)

[---Sent---] 233.71
(:emacs-rex (swank-backend:frame-call 0) nil 1 658)

[-Received-] 233.73
(:indentation-update (("with-bindings" . 1)))
[-Received-] 233.73
(:return (:ok (((:name "imgs" :id 0 :value "(\"test/image_processing/test/1a7r.gif\" \"/home/boechat/Documents/captchas/jequiti/b/1015055312.png\")") (:name "imgs-url" :id 0 :value "nil")) nil)) 656)
[Actionlist] 233.73
655: pending  :listener-eval 
656: finished :frame-locals-and-catch-tags 
657: pending  :frame-source-location 
658: pending  :frame-call 
params: [[[':name', '"imgs"', ':id', '0', ':value', '"(\\"test/image_processing/test/1a7r.gif\\" \\"/home/boechat/Documents/captchas/jequiti/b/1015055312.png\\")"'], [':name', '"imgs-url"', ':id', '0', ':value', '"nil"']], 'nil']
[-Received-] 233.73
(:debug-activate 1 1 nil)
[-Received-] 233.73
(:indentation-update (("with-bindings" . 0)))
[-Received-] 233.73
(:return (:ok (:error "image_processing/NO_SOURCE_FILE - source not found.")) 657)
[Actionlist] 233.73
655: pending  :listener-eval 
656: finished :frame-locals-and-catch-tags 
657: finished :frame-source-location 
658: pending  :frame-call 
params: [':error', '"image_processing/NO_SOURCE_FILE - source not found."']
[-Received-] 233.73
(:debug-activate 1 1 nil)
[-Received-] 233.74
(:return (:abort) 658)
[Actionlist] 233.74
655: pending  :listener-eval 
656: finished :frame-locals-and-catch-tags 
657: finished :frame-source-location 
658: finished :frame-call 
[-Received-] 233.74
(:debug-activate 1 1 nil)
[---Sent---] 234.25
(:emacs-rex (swank:throw-to-toplevel) nil 1 659)

[-Received-] 234.25
(:return (:abort) 659)
[Actionlist] 234.25
655: pending  :listener-eval 
659: finished :throw-to-toplevel 
[-Received-] 234.25
(:debug-return 1 1 nil)
[-Received-] 234.25
(:return (:abort) 655)
[Actionlist] 234.25
655: finished :listener-eval 
659: finished :throw-to-toplevel 
[---Sent---] 234.62
(:emacs-rex (swank:listener-eval "(defn show-images [imgs]
  (let [imgs-url (doall (map #(as-url (File. %)) imgs))]
    (swank.core/break)
    (horizontal-panel :items (conj [] imgs-url))))
") "image-processing.gui" :repl-thread 660)

[-Received-] 234.62
(:write-string "#'image-processing.gui/show-images
" :repl-result)
[-Received-] 234.68
(:indentation-update (("with-bindings" . 1)))
[-Received-] 234.68
(:return (:ok nil) 660)
[Actionlist] 234.68
660: finished :listener-eval 
params: nil
[---Sent---] 234.85
(:emacs-rex (swank:listener-eval "(show-images x)
") "image-processing.gui" :repl-thread 661)

[-Received-] 234.85
(:debug 1 1 ("BREAK:" "  [Thrown class java.lang.Exception]" nil) (("QUIT" "Quit to the SLIME top level") ("CONTINUE" "Continue from breakpoint")) ((0 "      NO_SOURCE_FILE:1 image-processing.gui/show-images" (:restartable nil)) (1 "      NO_SOURCE_FILE:1 image-processing.gui/eval7517" (:restartable nil)) (2 "    Compiler.java:6465 clojure.lang.Compiler.eval" (:restartable nil)) (3 "    Compiler.java:6431 clojure.lang.Compiler.eval" (:restartable nil)) (4 "         core.clj:2795 clojure.core/eval" (:restartable nil)) (5 "          core.clj:534 swank.core/eval825[fn]" (:restartable nil)) (6 "      MultiFn.java:163 clojure.lang.MultiFn.invoke" (:restartable nil)) (7 "          basic.clj:55 swank.commands.basic/eval-region" (:restartable nil)) (8 "          basic.clj:45 swank.commands.basic/eval-region" (:restartable nil)) (9 "          basic.clj:79 swank.commands.basic/eval1101[fn]" (:restartable nil))) (661))
[-Received-] 234.86
(:debug-activate 1 1 nil)
[---Sent---] 235.01
(:emacs-rex (swank:frame-locals-and-catch-tags 0) nil 1 662)

[---Sent---] 235.01
(:emacs-rex (swank:frame-source-location 0) nil 1 663)

[---Sent---] 235.01
(:emacs-rex (swank-backend:frame-call 0) nil 1 664)

[-Received-] 235.02
(:indentation-update (("with-bindings" . 0)))
[-Received-] 235.02
(:return (:ok (((:name "imgs" :id 0 :value "(\"test/image_processing/test/1a7r.gif\" \"/home/boechat/Documents/captchas/jequiti/b/1015055312.png\")") (:name "imgs-url" :id 0 :value "(#<URL file:/home/boechat/Dropbox2/Documents/Coding/Image_processing/test/image_processing/test/1a7r.gif> #<URL file:/home/boechat/Documents/captchas/jequiti/b/1015055312.png>)")) nil)) 662)
[Actionlist] 235.02
661: pending  :listener-eval 
662: finished :frame-locals-and-catch-tags 
663: pending  :frame-source-location 
664: pending  :frame-call 
params: [[[':name', '"imgs"', ':id', '0', ':value', '"(\\"test/image_processing/test/1a7r.gif\\" \\"/home/boechat/Documents/captchas/jequiti/b/1015055312.png\\")"'], [':name', '"imgs-url"', ':id', '0', ':value', '"(#<URL file:/home/boechat/Dropbox2/Documents/Coding/Image_processing/test/image_processing/test/1a7r.gif> #<URL file:/home/boechat/Documents/captchas/jequiti/b/1015055312.png>)"']], 'nil']
[-Received-] 235.03
(:debug-activate 1 1 nil)
[-Received-] 235.03
(:indentation-update (("with-bindings" . 1)))
[-Received-] 235.03
(:return (:ok (:error "image_processing/NO_SOURCE_FILE - source not found.")) 663)
[Actionlist] 235.03
661: pending  :listener-eval 
662: finished :frame-locals-and-catch-tags 
663: finished :frame-source-location 
664: pending  :frame-call 
params: [':error', '"image_processing/NO_SOURCE_FILE - source not found."']
[-Received-] 235.03
(:debug-activate 1 1 nil)
[-Received-] 235.03
(:return (:abort) 664)
[Actionlist] 235.03
661: pending  :listener-eval 
662: finished :frame-locals-and-catch-tags 
663: finished :frame-source-location 
664: finished :frame-call 
[-Received-] 235.03
(:debug-activate 1 1 nil)
[---Sent---] 235.66
(:emacs-rex (swank:throw-to-toplevel) nil 1 665)

[-Received-] 235.66
(:return (:abort) 665)
[Actionlist] 235.66
661: pending  :listener-eval 
665: finished :throw-to-toplevel 
[-Received-] 235.66
(:debug-return 1 1 nil)
[-Received-] 235.67
(:return (:abort) 661)
[Actionlist] 235.67
661: finished :listener-eval 
665: finished :throw-to-toplevel 
[---Sent---] 236.15
(:emacs-rex (swank:listener-eval "(defn show-images [imgs]
  (let [imgs-url (doall (map #(as-url (File. %)) imgs))]
    (horizontal-panel :items (vec imgs-url))))
") "image-processing.gui" :repl-thread 666)

[-Received-] 236.15
(:write-string "#'image-processing.gui/show-images
" :repl-result)
[-Received-] 236.21
(:indentation-update (("with-bindings" . 0)))
[-Received-] 236.21
(:return (:ok nil) 666)
[Actionlist] 236.21
666: finished :listener-eval 
params: nil
[---Sent---] 236.38
(:emacs-rex (swank:listener-eval "(show-images x)
") "image-processing.gui" :repl-thread 667)

[-Received-] 236.43
(:write-string "#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,0,0,0x0,invalid,layout=javax.swing.BoxLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]>
" :repl-result)
[-Received-] 236.44
(:indentation-update (("with-bindings" . 1)))
[-Received-] 236.44
(:return (:ok nil) 667)
[Actionlist] 236.44
667: finished :listener-eval 
params: nil
[---Sent---] 236.77
(:emacs-rex (swank:listener-eval "(create-frame) 
") "image-processing.gui" :repl-thread 668)

[-Received-] 236.82
(:write-string "#<JFrame$Tag$a79ba523 seesaw.core.proxy$javax.swing.JFrame$Tag$a79ba523[frame0,611,407,218x116,layout=java.awt.BorderLayout,title=Hello,resizable,normal,defaultCloseOperation=EXIT_ON_CLOSE,rootPane=javax.swing.JRootPane[,3,23,212x90,layout=javax.swing.JRootPane$RootLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=16777673,maximumSize=,minimumSize=,preferredSize=],rootPaneCheckingEnabled=true]>
" :repl-result)
[-Received-] 236.82
(:indentation-update (("with-bindings" . 0)))
[-Received-] 236.82
(:return (:ok nil) 668)
[Actionlist] 236.82
668: finished :listener-eval 
params: nil
[---Sent---] 237.65
(:emacs-rex (swank:listener-eval "(ns image-processing.gui
    (:import 
      (javax.imageio ImageIO) 
      (java.io File)) 
    (:use 
      [clojure.java.io] 
      [seesaw core make-widget border]))


(def x '(\"test/image_processing/test/1a7r.gif\"
         \"test/image_processing/test/1azc.gif\"))


(defn show-images [imgs]
  (let [imgs-url (doall (map #(as-url (File. %)) imgs))]
    (horizontal-panel :items (vec imgs-url))))


(defn create-frame [] 
  (-> (frame :title \"Hello\",
             :content  (show-images x) ,
             :on-close :exit)
      pack!
      show!)) 

") "image-processing.gui" :repl-thread 669)

[---Sent---] 237.85
(:emacs-rex (swank:connection-info) nil t 670)

[-Received-] 237.99
(:indentation-update (("dothread-keeping-clj" . 1) ("dothread-keeping" . 1) ("dothread" . 0) ("binding-map" . 1) ("print-length-loop" . 1) ("with-pretty-writer" . 1) ("with-pprint-dispatch" . 1) ("with-connection" . 1) ("with-bindings" . 0) ("with-emacs-package" . 0) ("dothread-swank" . 0) ("with-read-line-support" . 0) ("with-package-tracking" . 0) ("doseq" . 1) ("letfn" . 1) ("cond" . 0) ("with-open" . 1) ("sync" . 1) ("let" . 1) ("dotimes" . 1) ("with-in-str" . 1) ("loop" . 1) ("with-out-str" . 0) ("when-not" . 1) ("with-loading-context" . 0) ("future" . 0) ("with-redefs" . 1) ("when-first" . 1) ("comment" . 0) ("condp" . 2) ("with-local-vars" . 1) ("with-bindings" . 1) ("when-let" . 1) ("while" . 1) ("case" . 1) ("locking" . 1) ("delay" . 0) ("io!" . 0) ("lazy-seq" . 0) ("when" . 1) ("binding" . 1) ("defslimefn" . defun) ("returning" . 1) ("continuously" . 0) ("failing-gracefully" . 0)))
[-Received-] 238.0
(:return (:ok (:pid "3630" :style :spawn :lisp-implementation (:type "Clojure" :name "clojure" :version "1.3.0") :package (:name "user" :prompt "user") :version "20100404")) 670)
[Actionlist] 238.0
670: finished :connection-info 
params: [':pid', '"3630"', ':style', ':spawn', ':lisp-implementation', [':type', '"Clojure"', ':name', '"clojure"', ':version', '"1.3.0"'], ':package', [':name', '"user"', ':prompt', '"user"'], ':version', '"20100404"']
 Package:user Prompt:user
[---Sent---] 238.05
(:emacs-rex (swank:create-repl nil) "user" t 671)

[-Received-] 238.07
(:indentation-update (("with-bindings" . 0)))
[-Received-] 238.08
(:return (:ok ("user" "user")) 671)
[Actionlist] 238.08
671: finished :create-repl 
params: ['"user"', '"user"']
[---Sent---] 238.08
(:emacs-rex (swank:swank-require 'swank-fuzzy) nil t 672)

[---Sent---] 238.14
(:emacs-rex (swank:listener-eval "(use '[clojure.repl :only (source apropos dir pst doc find-doc)])
(use '[clojure.java.javadoc :only (javadoc)])
(use '[clojure.pprint :only (pp pprint)])
") "user" :repl-thread 673)

[-Received-] 238.16
(:write-string "nil
" :repl-result)
[-Received-] 238.26
(:indentation-update (("with-timeout" . 1) ("with-bindings" . 1)))
[-Received-] 238.26
(:return (:ok nil) 673)
[Actionlist] 238.26
672: pending  :swank-require 
673: finished :listener-eval 
params: nil
[-Received-] 238.26
(:indentation-update (("with-timeout" . 1) ("with-bindings" . 1)))
[-Received-] 238.26
(:return (:ok nil) 672)
[Actionlist] 238.26
672: finished :swank-require 
673: finished :listener-eval 
params: nil
[---Sent---] 238.46
(:emacs-rex (swank:listener-eval "(ns image-processing.gui
    (:import 
      (javax.imageio ImageIO) 
      (java.io File)) 
    (:use 
      [clojure.java.io] 
      [seesaw core make-widget border]))


(def x '(\"test/image_processing/test/1a7r.gif\"
         \"test/image_processing/test/1azc.gif\"))


(defn show-images [imgs]
  (let [imgs-url (doall (map #(as-url (File. %)) imgs))]
    (horizontal-panel :items (vec imgs-url))))


(defn create-frame [] 
  (-> (frame :title \"Hello\",
             :content  (show-images x) ,
             :on-close :exit)
      pack!
      show!)) 

") "user" :repl-thread 674)

[-Received-] 238.71
(:write-string "#'image-processing.gui/create-frame
" :repl-result)
[-Received-] 238.71
(:new-package "image-processing.gui" "image-processing.gui")
[-Received-] 238.71
(:indentation-update (("with-bindings" . 0) ("with-widgets" . 1) ("invoke-now" . 0) ("invoke-soon" . 0) ("signaller" . 1) ("invoke-later" . 0)))
[-Received-] 238.72
(:return (:ok nil) 674)
[Actionlist] 238.72
674: finished :listener-eval 
params: nil
[---Sent---] 239.29
(:emacs-rex (swank:listener-eval "(create-frame)
") "image-processing.gui" :repl-thread 675)

[-Received-] 239.33
(:write-string "#<JFrame$Tag$a79ba523 seesaw.core.proxy$javax.swing.JFrame$Tag$a79ba523[frame0,0,31,410x120,layout=java.awt.BorderLayout,title=Hello,resizable,normal,defaultCloseOperation=EXIT_ON_CLOSE,rootPane=javax.swing.JRootPane[,5,25,400x90,layout=javax.swing.JRootPane$RootLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=16777673,maximumSize=,minimumSize=,preferredSize=],rootPaneCheckingEnabled=true]>
" :repl-result)
[-Received-] 239.34
(:return (:ok nil) 675)
[Actionlist] 239.34
675: finished :listener-eval 
params: nil
[---Sent---] 240.02
(:emacs-rex (swank:operator-arglist "horizontal-panel" "image-processing.gui") "image-processing.gui" t 680)

[-Received-] 240.02
(:return (:ok "([& opts])") 680)
[Actionlist] 240.02
680: finished :operator-arglist 
params: "([& opts])"
[---Sent---] 240.02
(:emacs-rex (swank:describe-function "horizontal-panel") "image-processing.gui" t 681)

[-Received-] 240.02
(:return (:ok "-------------------------
seesaw.core/horizontal-panel
([& opts])
  Create a panel where widgets are arranged horizontally. Options:

    :items List of widgets (passed through make-widget)

  See http://download.oracle.com/javase/6/docs/api/javax/swing/BoxLayout.html
  
") 681)
[Actionlist] 240.02
681: finished :describe-function 
params: "-------------------------
seesaw.core/horizontal-panel
([& opts])
  Create a panel where widgets are arranged horizontally. Options:

    :items List of widgets (passed through make-widget)

  See http://download.oracle.com/javase/6/docs/api/javax/swing/BoxLayout.html
  
"
[---Sent---] 240.09
(:emacs-rex (swank:operator-arglist ":exit" "image-processing.gui") "image-processing.gui" t 682)

[-Received-] 240.09
(:return (:ok "([map])") 682)
[Actionlist] 240.09
682: finished :operator-arglist 
params: "([map])"
[---Sent---] 240.09
(:emacs-rex (swank:describe-function ":exit") "image-processing.gui" t 683)

[-Received-] 240.09
(:return (:ok nil) 683)
[Actionlist] 240.09
683: finished :describe-function 
params: nil
[---Sent---] 240.29
(:emacs-rex (swank:listener-eval "(defn show-images [imgs]
  (let [imgs-url (map #(as-url (File. %)) imgs)]
    (horizontal-panel :items (vec imgs-url))))
") "image-processing.gui" :repl-thread 684)

[-Received-] 240.29
(:write-string "#'image-processing.gui/show-images
" :repl-result)
[-Received-] 240.3
(:return (:ok nil) 684)
[Actionlist] 240.3
684: finished :listener-eval 
params: nil
[---Sent---] 240.6
(:emacs-rex (swank:listener-eval "(create-frame)
") "image-processing.gui" :repl-thread 685)

[-Received-] 240.65
(:write-string "#<JFrame$Tag$a79ba523 seesaw.core.proxy$javax.swing.JFrame$Tag$a79ba523[frame1,0,31,410x120,layout=java.awt.BorderLayout,title=Hello,resizable,normal,defaultCloseOperation=EXIT_ON_CLOSE,rootPane=javax.swing.JRootPane[,5,25,400x90,layout=javax.swing.JRootPane$RootLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=16777673,maximumSize=,minimumSize=,preferredSize=],rootPaneCheckingEnabled=true]>
" :repl-result)
[-Received-] 240.65
(:return (:ok nil) 685)
[Actionlist] 240.65
685: finished :listener-eval 
params: nil
[---Sent---] 242.05
(:emacs-rex (swank:operator-arglist "seesaw.core.proxy$javax.swing.JFrame$Tag$a79ba523" "image-processing.gui") "image-processing.gui" t 686)

[---Sent---] 244.73
(:emacs-rex (swank:operator-arglist "horizontal-panel" "image-processing.gui") "image-processing.gui" t 687)

[---Sent---] 247.24
(:emacs-rex (swank:connection-info) nil t 688)

[-Received-] 247.34
(:indentation-update (("dothread-keeping-clj" . 1) ("dothread-keeping" . 1) ("dothread" . 0) ("binding-map" . 1) ("print-length-loop" . 1) ("with-pretty-writer" . 1) ("with-pprint-dispatch" . 1) ("with-connection" . 1) ("with-bindings" . 0) ("with-emacs-package" . 0) ("dothread-swank" . 0) ("with-read-line-support" . 0) ("with-package-tracking" . 0) ("doseq" . 1) ("letfn" . 1) ("cond" . 0) ("with-open" . 1) ("sync" . 1) ("let" . 1) ("dotimes" . 1) ("with-in-str" . 1) ("loop" . 1) ("with-out-str" . 0) ("when-not" . 1) ("with-loading-context" . 0) ("future" . 0) ("with-redefs" . 1) ("when-first" . 1) ("comment" . 0) ("condp" . 2) ("with-local-vars" . 1) ("with-bindings" . 1) ("when-let" . 1) ("while" . 1) ("case" . 1) ("locking" . 1) ("delay" . 0) ("io!" . 0) ("lazy-seq" . 0) ("when" . 1) ("binding" . 1) ("defslimefn" . defun) ("returning" . 1) ("continuously" . 0) ("failing-gracefully" . 0)))
[-Received-] 247.35
(:return (:ok (:pid "3789" :style :spawn :lisp-implementation (:type "Clojure" :name "clojure" :version "1.3.0") :package (:name "user" :prompt "user") :version "20100404")) 688)
[Actionlist] 247.35
688: finished :connection-info 
params: [':pid', '"3789"', ':style', ':spawn', ':lisp-implementation', [':type', '"Clojure"', ':name', '"clojure"', ':version', '"1.3.0"'], ':package', [':name', '"user"', ':prompt', '"user"'], ':version', '"20100404"']
 Package:user Prompt:user
[---Sent---] 247.4
(:emacs-rex (swank:create-repl nil) "image-processing.gui" t 689)

[-Received-] 247.46
(:indentation-update (("with-bindings" . 0)))
[-Received-] 247.46
(:return (:ok ("user" "user")) 689)
[Actionlist] 247.47
689: finished :create-repl 
params: ['"user"', '"user"']
[---Sent---] 247.47
(:emacs-rex (swank:swank-require 'swank-fuzzy) nil t 690)

[---Sent---] 247.53
(:emacs-rex (swank:listener-eval "(use '[clojure.repl :only (source apropos dir pst doc find-doc)])
(use '[clojure.java.javadoc :only (javadoc)])
(use '[clojure.pprint :only (pp pprint)])
") "image-processing.gui" :repl-thread 691)

[-Received-] 247.54
(:write-string "nil
" :repl-result)
[-Received-] 247.65
(:indentation-update (("with-timeout" . 1) ("with-bindings" . 1)))
[-Received-] 247.65
(:return (:ok nil) 691)
[Actionlist] 247.65
690: pending  :swank-require 
691: finished :listener-eval 
params: nil
[-Received-] 247.65
(:return (:ok nil) 690)
[Actionlist] 247.65
690: finished :swank-require 
691: finished :listener-eval 
params: nil
[---Sent---] 248.4
(:emacs-rex (swank:listener-eval "(ns image-processing.hist-view-gui
    (:import 
      (javax.imageio ImageIO) 
      (java.io File)) 
    (:use 
      [clojure.java.io] 
      [seesaw core make-widget border]))


(def x '(\"test/image_processing/test/1a7r.gif\"
         \"test/image_processing/test/1azc.gif\"))


(defn show-images [imgs]
  (let [imgs-url (map #(as-url (File. %)) imgs)]
    (horizontal-panel :items (vec imgs-url))))


(defn create-frame [] 
  (-> (frame :title \"Hello\",
             :content  (show-images x) ,
             :on-close :exit)
      pack!
      show!)) 

") "user" :repl-thread 692)

[-Received-] 248.63
(:write-string "#'image-processing.hist-view-gui/create-frame
" :repl-result)
[-Received-] 248.67
(:new-package "image-processing.hist-view-gui" "image-processing.hist-view-gui")
[-Received-] 248.73
(:indentation-update (("with-bindings" . 0) ("with-widgets" . 1) ("invoke-now" . 0) ("invoke-soon" . 0) ("signaller" . 1) ("invoke-later" . 0)))
[-Received-] 248.73
(:return (:ok nil) 692)
[Actionlist] 248.73
692: finished :listener-eval 
params: nil
[---Sent---] 249.01
(:emacs-rex (swank:operator-arglist "def" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 693)

[-Received-] 249.01
(:return (:ok nil) 693)
[Actionlist] 249.01
693: finished :operator-arglist 
params: nil
[---Sent---] 249.05
(:emacs-rex (swank:operator-arglist "def" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 694)

[-Received-] 249.05
(:return (:ok nil) 694)
[Actionlist] 249.05
694: finished :operator-arglist 
params: nil
[---Sent---] 249.14
(:emacs-rex (swank:fuzzy-completions "crea" "image-processing.hist-view-gui" :limit 200 :time-limit-in-msec 2000) nil t 695)

[-Received-] 249.15
(:return (:ok ((("create-frame" "40.46" ((0 "crea")) "-f------") ("clojure.main/" "15.16" ((0 "c") (5 "re") (9 "a")) "b------p") ("clojure.walk/" "15.16" ((0 "c") (5 "re") (9 "a")) "b------p") ("clojure.java.io/" "14.88" ((0 "c") (5 "re") (9 "a")) "b------p") ("swank.core.threadmap/" "14.82" ((6 "c") (13 "rea")) "b------p") ("clojure.java.shell/" "14.72" ((0 "c") (5 "re") (9 "a")) "b------p") ("clojure.java.browse/" "14.68" ((0 "c") (5 "re") (9 "a")) "b------p") ("clojure.java.javadoc/" "14.64" ((0 "c") (5 "re") (9 "a")) "b------p") ("swank.util.concurrent.thread/" "14.63" ((11 "c") (24 "rea")) "b------p") ("clojure.contrib.macro-utils/" "14.47" ((0 "c") (5 "re") (17 "a")) "b------p") ("swank.core.debugger-backends/" "12.45" ((6 "c") (8 "re") (21 "a")) "b------p") ("swank.clj-contrib.macroexpand/" "5.43" ((20 "cr") (23 "e") (26 "a")) "b------p") ("swank.util.clj-stacktrace-compat/" "3.34" ((21 "r") (24 "e") (30 "a")) "b------p")) nil)) 695)
[Actionlist] 249.15
695: finished :fuzzy-completions 
params: [[['"create-frame"', '"40.46"', [['0', '"crea"']], '"-f------"'], ['"clojure.main/"', '"15.16"', [['0', '"c"'], ['5', '"re"'], ['9', '"a"']], '"b------p"'], ['"clojure.walk/"', '"15.16"', [['0', '"c"'], ['5', '"re"'], ['9', '"a"']], '"b------p"'], ['"clojure.java.io/"', '"14.88"', [['0', '"c"'], ['5', '"re"'], ['9', '"a"']], '"b------p"'], ['"swank.core.threadmap/"', '"14.82"', [['6', '"c"'], ['13', '"rea"']], '"b------p"'], ['"clojure.java.shell/"', '"14.72"', [['0', '"c"'], ['5', '"re"'], ['9', '"a"']], '"b------p"'], ['"clojure.java.browse/"', '"14.68"', [['0', '"c"'], ['5', '"re"'], ['9', '"a"']], '"b------p"'], ['"clojure.java.javadoc/"', '"14.64"', [['0', '"c"'], ['5', '"re"'], ['9', '"a"']], '"b------p"'], ['"swank.util.concurrent.thread/"', '"14.63"', [['11', '"c"'], ['24', '"rea"']], '"b------p"'], ['"clojure.contrib.macro-utils/"', '"14.47"', [['0', '"c"'], ['5', '"re"'], ['17', '"a"']], '"b------p"'], ['"swank.core.debugger-backends/"', '"12.45"', [['6', '"c"'], ['8', '"re"'], ['21', '"a"']], '"b------p"'], ['"swank.clj-contrib.macroexpand/"', '"5.43"', [['20', '"cr"'], ['23', '"e"'], ['26', '"a"']], '"b------p"'], ['"swank.util.clj-stacktrace-compat/"', '"3.34"', [['21', '"r"'], ['24', '"e"'], ['30', '"a"']], '"b------p"']], 'nil']
[---Sent---] 249.49
(:emacs-rex (swank:listener-eval "(def y (create-frame))
") "image-processing.hist-view-gui" :repl-thread 696)

[-Received-] 249.53
(:write-string "#'image-processing.hist-view-gui/y
" :repl-result)
[-Received-] 249.53
(:return (:ok nil) 696)
[Actionlist] 249.53
696: finished :listener-eval 
params: nil
[---Sent---] 249.8
(:emacs-rex (swank:operator-arglist ":on-close" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 697)

[---Sent---] 252.22
(:emacs-rex (swank:connection-info) nil t 698)

[-Received-] 252.34
(:indentation-update (("dothread-keeping-clj" . 1) ("dothread-keeping" . 1) ("dothread" . 0) ("binding-map" . 1) ("print-length-loop" . 1) ("with-pretty-writer" . 1) ("with-pprint-dispatch" . 1) ("with-connection" . 1) ("with-bindings" . 0) ("with-emacs-package" . 0) ("dothread-swank" . 0) ("with-read-line-support" . 0) ("with-package-tracking" . 0) ("doseq" . 1) ("letfn" . 1) ("cond" . 0) ("with-open" . 1) ("sync" . 1) ("let" . 1) ("dotimes" . 1) ("with-in-str" . 1) ("loop" . 1) ("with-out-str" . 0) ("when-not" . 1) ("with-loading-context" . 0) ("future" . 0) ("with-redefs" . 1) ("when-first" . 1) ("comment" . 0) ("condp" . 2) ("with-local-vars" . 1) ("with-bindings" . 1) ("when-let" . 1) ("while" . 1) ("case" . 1) ("locking" . 1) ("delay" . 0) ("io!" . 0) ("lazy-seq" . 0) ("when" . 1) ("binding" . 1) ("defslimefn" . defun) ("returning" . 1) ("continuously" . 0) ("failing-gracefully" . 0)))
[-Received-] 252.35
(:return (:ok (:pid "3906" :style :spawn :lisp-implementation (:type "Clojure" :name "clojure" :version "1.3.0") :package (:name "user" :prompt "user") :version "20100404")) 698)
[Actionlist] 252.35
698: finished :connection-info 
params: [':pid', '"3906"', ':style', ':spawn', ':lisp-implementation', [':type', '"Clojure"', ':name', '"clojure"', ':version', '"1.3.0"'], ':package', [':name', '"user"', ':prompt', '"user"'], ':version', '"20100404"']
 Package:user Prompt:user
[---Sent---] 252.4
(:emacs-rex (swank:create-repl nil) "image-processing.hist-view-gui" t 699)

[-Received-] 252.43
(:indentation-update (("with-bindings" . 0)))
[-Received-] 252.43
(:return (:ok ("user" "user")) 699)
[Actionlist] 252.43
699: finished :create-repl 
params: ['"user"', '"user"']
[---Sent---] 252.43
(:emacs-rex (swank:swank-require 'swank-fuzzy) nil t 700)

[---Sent---] 252.5
(:emacs-rex (swank:listener-eval "(use '[clojure.repl :only (source apropos dir pst doc find-doc)])
(use '[clojure.java.javadoc :only (javadoc)])
(use '[clojure.pprint :only (pp pprint)])
") "image-processing.hist-view-gui" :repl-thread 701)

[-Received-] 252.55
(:write-string "nil
" :repl-result)
[-Received-] 252.6
(:indentation-update (("with-timeout" . 1) ("with-bindings" . 1)))
[---Sent---] 252.78
(:emacs-rex (swank:operator-arglist "vec" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 702)

[-Received-] 252.79
(:indentation-update (("with-bindings" . 1)))
[-Received-] 252.79
(:return (:ok "([coll])") 702)
[Actionlist] 252.79
702: finished :operator-arglist 
params: "([coll])"
[---Sent---] 252.79
(:emacs-rex (swank:describe-function "vec") "image-processing.hist-view-gui" t 703)

[-Received-] 252.88
(:indentation-update (("with-bindings" . 0)))
[-Received-] 252.88
(:return (:ok "-------------------------
clojure.core/vec
([coll])
  Creates a new vector containing the contents of coll.
") 703)
[Actionlist] 252.88
703: finished :describe-function 
params: "-------------------------
clojure.core/vec
([coll])
  Creates a new vector containing the contents of coll.
"
[---Sent---] 255.31
(:emacs-rex (swank:operator-arglist "defn" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 711)

[-Received-] 255.31
(:indentation-update (("with-bindings" . 0)))
[-Received-] 255.31
(:return (:ok "([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])") 711)
[Actionlist] 255.32
711: finished :operator-arglist 
params: "([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])"
[---Sent---] 258.2
(:emacs-rex (swank:operator-arglist "create-hist-panel" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 715)

[-Received-] 258.21
(:indentation-update (("with-bindings" . 0)))
[-Received-] 258.21
(:return (:ok nil) 715)
[Actionlist] 258.21
715: finished :operator-arglist 
params: nil
[---Sent---] 258.3
(:emacs-rex (swank:listener-eval "(ns image-processing.hist-view-gui
    (:import 
      (javax.imageio ImageIO) 
      (java.io File)) 
    (:use 
      [clojure.java.io] 
      [seesaw core make-widget border]))


(def x '(\"test/image_processing/test/1a7r.gif\"
         \"test/image_processing/test/1azc.gif\"))


(defn create-hist-panel [imgs]
  (let [imgs-url (map #(as-url (File. %)) imgs)]
    (horizontal-panel :items (vec imgs-url))))


(defn create-frame [] 
  (invoke-later (-> (frame :title \"Hello\",
             :content  (create-hist-panel x) ,
             :on-close :exit)
      pack!
      show!))) 

") "image-processing.hist-view-gui" :repl-thread 716)

[-Received-] 258.56
(:write-string "#'image-processing.hist-view-gui/create-frame
" :repl-result)
[-Received-] 258.56
(:new-package "image-processing.hist-view-gui" "image-processing.hist-view-gui")
[-Received-] 258.56
(:indentation-update (("with-bindings" . 1) ("with-widgets" . 1) ("invoke-now" . 0) ("invoke-soon" . 0) ("signaller" . 1) ("invoke-later" . 0)))
[-Received-] 258.56
(:return (:ok nil) 716)
[Actionlist] 258.56
716: finished :listener-eval 
params: nil
[---Sent---] 258.72
(:emacs-rex (swank:fuzzy-completions "crea" "image-processing.hist-view-gui" :limit 200 :time-limit-in-msec 2000) nil t 717)

[-Received-] 258.72
(:return (:ok ((("create-frame" "40.46" ((0 "crea")) "-f------") ("create-hist-panel" "40.06" ((0 "crea")) "-f------") ("clojure.main/" "15.16" ((0 "c") (5 "re") (9 "a")) "b------p") ("clojure.walk/" "15.16" ((0 "c") (5 "re") (9 "a")) "b------p") ("clojure.java.io/" "14.88" ((0 "c") (5 "re") (9 "a")) "b------p") ("swank.core.threadmap/" "14.82" ((6 "c") (13 "rea")) "b------p") ("clojure.java.shell/" "14.72" ((0 "c") (5 "re") (9 "a")) "b------p") ("clojure.java.browse/" "14.68" ((0 "c") (5 "re") (9 "a")) "b------p") ("clojure.java.javadoc/" "14.64" ((0 "c") (5 "re") (9 "a")) "b------p") ("swank.util.concurrent.thread/" "14.63" ((11 "c") (24 "rea")) "b------p") ("clojure.contrib.macro-utils/" "14.47" ((0 "c") (5 "re") (17 "a")) "b------p") ("swank.core.debugger-backends/" "12.45" ((6 "c") (8 "re") (21 "a")) "b------p") ("swank.clj-contrib.macroexpand/" "5.43" ((20 "cr") (23 "e") (26 "a")) "b------p") ("swank.util.clj-stacktrace-compat/" "3.34" ((21 "r") (24 "e") (30 "a")) "b------p")) nil)) 717)
[Actionlist] 258.72
717: finished :fuzzy-completions 
params: [[['"create-frame"', '"40.46"', [['0', '"crea"']], '"-f------"'], ['"create-hist-panel"', '"40.06"', [['0', '"crea"']], '"-f------"'], ['"clojure.main/"', '"15.16"', [['0', '"c"'], ['5', '"re"'], ['9', '"a"']], '"b------p"'], ['"clojure.walk/"', '"15.16"', [['0', '"c"'], ['5', '"re"'], ['9', '"a"']], '"b------p"'], ['"clojure.java.io/"', '"14.88"', [['0', '"c"'], ['5', '"re"'], ['9', '"a"']], '"b------p"'], ['"swank.core.threadmap/"', '"14.82"', [['6', '"c"'], ['13', '"rea"']], '"b------p"'], ['"clojure.java.shell/"', '"14.72"', [['0', '"c"'], ['5', '"re"'], ['9', '"a"']], '"b------p"'], ['"clojure.java.browse/"', '"14.68"', [['0', '"c"'], ['5', '"re"'], ['9', '"a"']], '"b------p"'], ['"clojure.java.javadoc/"', '"14.64"', [['0', '"c"'], ['5', '"re"'], ['9', '"a"']], '"b------p"'], ['"swank.util.concurrent.thread/"', '"14.63"', [['11', '"c"'], ['24', '"rea"']], '"b------p"'], ['"clojure.contrib.macro-utils/"', '"14.47"', [['0', '"c"'], ['5', '"re"'], ['17', '"a"']], '"b------p"'], ['"swank.core.debugger-backends/"', '"12.45"', [['6', '"c"'], ['8', '"re"'], ['21', '"a"']], '"b------p"'], ['"swank.clj-contrib.macroexpand/"', '"5.43"', [['20', '"cr"'], ['23', '"e"'], ['26', '"a"']], '"b------p"'], ['"swank.util.clj-stacktrace-compat/"', '"3.34"', [['21', '"r"'], ['24', '"e"'], ['30', '"a"']], '"b------p"']], 'nil']
[---Sent---] 259.08
(:emacs-rex (swank:listener-eval "(create-frame)
") "image-processing.hist-view-gui" :repl-thread 718)

[-Received-] 259.09
(:write-string "nil
" :repl-result)
[-Received-] 259.09
(:return (:ok nil) 718)
[Actionlist] 259.09
718: finished :listener-eval 
params: nil
[---Sent---] 259.28
(:emacs-rex (swank:operator-arglist "create-hist-panel" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 719)

[---Sent---] 261.37
(:emacs-rex (swank:operator-arglist "frame" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 720)

[---Sent---] 273.59
(:emacs-rex (swank:connection-info) nil t 721)

[-Received-] 273.73
(:indentation-update (("dothread-keeping-clj" . 1) ("dothread-keeping" . 1) ("dothread" . 0) ("binding-map" . 1) ("print-length-loop" . 1) ("with-pretty-writer" . 1) ("with-pprint-dispatch" . 1) ("with-connection" . 1) ("with-bindings" . 0) ("with-emacs-package" . 0) ("dothread-swank" . 0) ("with-read-line-support" . 0) ("with-package-tracking" . 0) ("doseq" . 1) ("letfn" . 1) ("cond" . 0) ("with-open" . 1) ("sync" . 1) ("let" . 1) ("dotimes" . 1) ("with-in-str" . 1) ("loop" . 1) ("with-out-str" . 0) ("when-not" . 1) ("with-loading-context" . 0) ("future" . 0) ("with-redefs" . 1) ("when-first" . 1) ("comment" . 0) ("condp" . 2) ("with-local-vars" . 1) ("with-bindings" . 1) ("when-let" . 1) ("while" . 1) ("case" . 1) ("locking" . 1) ("delay" . 0) ("io!" . 0) ("lazy-seq" . 0) ("when" . 1) ("binding" . 1) ("defslimefn" . defun) ("returning" . 1) ("continuously" . 0) ("failing-gracefully" . 0)))
[-Received-] 273.74
(:return (:ok (:pid "4576" :style :spawn :lisp-implementation (:type "Clojure" :name "clojure" :version "1.3.0") :package (:name "user" :prompt "user") :version "20100404")) 721)
[Actionlist] 273.74
721: finished :connection-info 
params: [':pid', '"4576"', ':style', ':spawn', ':lisp-implementation', [':type', '"Clojure"', ':name', '"clojure"', ':version', '"1.3.0"'], ':package', [':name', '"user"', ':prompt', '"user"'], ':version', '"20100404"']
 Package:user Prompt:user
[---Sent---] 273.78
(:emacs-rex (swank:create-repl nil) "image-processing.hist-view-gui" t 722)

[-Received-] 273.81
(:indentation-update (("with-bindings" . 0)))
[-Received-] 273.81
(:return (:ok ("user" "user")) 722)
[Actionlist] 273.81
722: finished :create-repl 
params: ['"user"', '"user"']
[---Sent---] 273.81
(:emacs-rex (swank:swank-require 'swank-fuzzy) nil t 723)

[---Sent---] 273.87
(:emacs-rex (swank:listener-eval "(use '[clojure.repl :only (source apropos dir pst doc find-doc)])
(use '[clojure.java.javadoc :only (javadoc)])
(use '[clojure.pprint :only (pp pprint)])
") "image-processing.hist-view-gui" :repl-thread 724)

[---Sent---] 273.92
(:emacs-rex (swank:listener-eval "(defn create-hist-panel [img-paths]
  \"Creates a horizontal panel showing the images placed at the input paths.\"
  #^ {:arglists [img-paths]}
  (let [imgs-url (map #(as-url (File. %)) img-paths)]
    (horizontal-panel :items (vec imgs-url))))
") "user" :repl-thread 725)

[-Received-] 273.99
(:write-string "nil
" :repl-result)
[-Received-] 274.1
(:indentation-update (("with-timeout" . 1) ("with-bindings" . 1)))
[-Received-] 274.1
(:return (:ok nil) 724)
[Actionlist] 274.1
723: pending  :swank-require 
724: finished :listener-eval 
725: pending  :listener-eval 
params: nil
[-Received-] 274.1
(:debug 1 1 ("Unable to resolve symbol: as-url in this context" "  [Thrown class java.lang.RuntimeException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "              Util.java:156 clojure.lang.Util.runtimeException" (:restartable nil)) (1 "         Compiler.java:6720 clojure.lang.Compiler.resolveIn" (:restartable nil)) (2 "         Compiler.java:6664 clojure.lang.Compiler.resolve" (:restartable nil)) (3 "         Compiler.java:6625 clojure.lang.Compiler.analyzeSymbol" (:restartable nil)) (4 "         Compiler.java:6198 clojure.lang.Compiler.analyze" (:restartable nil)) (5 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil)) (6 "         Compiler.java:3452 clojure.lang.Compiler$InvokeExpr.parse" (:restartable nil)) (7 "         Compiler.java:6411 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (8 "         Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil)) (9 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil))) (nil))
[-Received-] 274.11
(:debug-activate 1 1 nil)
[-Received-] 274.11
(:indentation-update (("with-bindings" . 0)))
[-Received-] 274.11
(:return (:ok nil) 723)
[Actionlist] 274.11
723: finished :swank-require 
724: finished :listener-eval 
725: pending  :listener-eval 
params: nil
[---Sent---] 274.21
(:emacs-rex (swank:throw-to-toplevel) nil 1 726)

[-Received-] 274.21
(:return (:abort) 726)
[Actionlist] 274.21
725: pending  :listener-eval 
726: finished :throw-to-toplevel 
[-Received-] 274.21
(:debug-return 1 1 nil)
[-Received-] 274.21
(:return (:abort) 725)
[Actionlist] 274.21
725: finished :listener-eval 
726: finished :throw-to-toplevel 
[---Sent---] 274.38
(:emacs-rex (swank:listener-eval "(ns image-processing.hist-view-gui
    (:import 
      (javax.imageio ImageIO) 
      (java.io File)) 
    (:use 
      [clojure.java.io] 
      [seesaw core make-widget border]))
") "image-processing.hist-view-gui" :repl-thread 727)

[-Received-] 274.73
(:indentation-update (("with-bindings" . 1) ("with-widgets" . 1) ("invoke-now" . 0) ("invoke-soon" . 0) ("signaller" . 1) ("invoke-later" . 0)))
[-Received-] 274.73
(:return (:ok nil) 727)
[Actionlist] 274.73
727: finished :listener-eval 
params: nil
[---Sent---] 275.04
(:emacs-rex (swank:listener-eval "(defn create-hist-panel [img-paths]
  \"Creates a horizontal panel showing the images placed at the input paths.\"
  #^ {:arglists [img-paths]}
  (let [imgs-url (map #(as-url (File. %)) img-paths)]
    (horizontal-panel :items (vec imgs-url))))
") "image-processing.hist-view-gui" :repl-thread 728)

[-Received-] 275.04
(:write-string "#'image-processing.hist-view-gui/create-hist-panel
" :repl-result)
[-Received-] 275.1
(:indentation-update (("with-bindings" . 0)))
[-Received-] 275.1
(:return (:ok nil) 728)
[Actionlist] 275.1
728: finished :listener-eval 
params: nil
[---Sent---] 275.3
(:emacs-rex (swank:operator-arglist "doc" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 729)

[-Received-] 275.3
(:indentation-update (("with-bindings" . 1)))
[-Received-] 275.3
(:return (:ok nil) 729)
[Actionlist] 275.3
729: finished :operator-arglist 
params: nil
[---Sent---] 275.46
(:emacs-rex (swank:fuzzy-completions "create-hi" "image-processing.hist-view-gui" :limit 200 :time-limit-in-msec 2000) nil t 730)

[-Received-] 275.47
(:indentation-update (("with-bindings" . 0)))
[-Received-] 275.47
(:return (:ok ((("create-hist-panel" "106.08" ((0 "create-hi")) "-f------")) nil)) 730)
[Actionlist] 275.47
730: finished :fuzzy-completions 
params: [[['"create-hist-panel"', '"106.08"', [['0', '"create-hi"']], '"-f------"']], 'nil']
[---Sent---] 275.52
(:emacs-rex (swank:listener-eval "(doc create-hist-panel)
") "image-processing.hist-view-gui" :repl-thread 731)

[-Received-] 275.52
(:debug 1 1 ("Unable to resolve symbol: doc in this context" "  [Thrown class java.lang.RuntimeException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "              Util.java:156 clojure.lang.Util.runtimeException" (:restartable nil)) (1 "         Compiler.java:6720 clojure.lang.Compiler.resolveIn" (:restartable nil)) (2 "         Compiler.java:6664 clojure.lang.Compiler.resolve" (:restartable nil)) (3 "         Compiler.java:6625 clojure.lang.Compiler.analyzeSymbol" (:restartable nil)) (4 "         Compiler.java:6198 clojure.lang.Compiler.analyze" (:restartable nil)) (5 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil)) (6 "         Compiler.java:3452 clojure.lang.Compiler$InvokeExpr.parse" (:restartable nil)) (7 "         Compiler.java:6411 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (8 "         Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil)) (9 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil))) (nil))
[-Received-] 275.92
(:return (:abort) 731)
[Actionlist] 275.92
731: finished :listener-eval 
[---Sent---] 276.08
(:emacs-rex (swank:operator-arglist "doc" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 733)

[-Received-] 276.08
(:indentation-update (("with-bindings" . 1)))
[-Received-] 276.08
(:return (:ok nil) 733)
[Actionlist] 276.08
733: finished :operator-arglist 
params: nil
[---Sent---] 276.22
(:emacs-rex (swank:listener-eval "(doc map)
") "image-processing.hist-view-gui" :repl-thread 734)

[-Received-] 276.22
(:debug 1 1 ("Unable to resolve symbol: doc in this context" "  [Thrown class java.lang.RuntimeException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "              Util.java:156 clojure.lang.Util.runtimeException" (:restartable nil)) (1 "         Compiler.java:6720 clojure.lang.Compiler.resolveIn" (:restartable nil)) (2 "         Compiler.java:6664 clojure.lang.Compiler.resolve" (:restartable nil)) (3 "         Compiler.java:6625 clojure.lang.Compiler.analyzeSymbol" (:restartable nil)) (4 "         Compiler.java:6198 clojure.lang.Compiler.analyze" (:restartable nil)) (5 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil)) (6 "         Compiler.java:3452 clojure.lang.Compiler$InvokeExpr.parse" (:restartable nil)) (7 "         Compiler.java:6411 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (8 "         Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil)) (9 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil))) (nil))
[-Received-] 276.39
(:debug-return 1 1 nil)
[-Received-] 276.4
(:return (:abort) 734)
[Actionlist] 276.4
734: finished :listener-eval 
[---Sent---] 276.53
(:emacs-rex (swank:operator-arglist "map" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 736)

[-Received-] 276.54
(:indentation-update (("with-bindings" . 0)))
[-Received-] 276.54
(:return (:ok "([f coll] [f c1 c2] [f c1 c2 c3] [f c1 c2 c3 & colls])") 736)
[Actionlist] 276.54
736: finished :operator-arglist 
params: "([f coll] [f c1 c2] [f c1 c2 c3] [f c1 c2 c3 & colls])"
[---Sent---] 276.54
(:emacs-rex (swank:describe-function "map") "image-processing.hist-view-gui" t 737)

[-Received-] 276.54
(:indentation-update (("with-bindings" . 1)))
[-Received-] 276.55
(:return (:ok "-------------------------
clojure.core/map
([f coll] [f c1 c2] [f c1 c2 c3] [f c1 c2 c3 & colls])
  Returns a lazy sequence consisting of the result of applying f to the
  set of first items of each coll, followed by applying f to the set
  of second items in each coll, until any one of the colls is
  exhausted.  Any remaining items in other colls are ignored. Function
  f should accept number-of-colls arguments.
") 737)
[Actionlist] 276.55
737: finished :describe-function 
params: "-------------------------
clojure.core/map
([f coll] [f c1 c2] [f c1 c2 c3] [f c1 c2 c3 & colls])
  Returns a lazy sequence consisting of the result of applying f to the
  set of first items of each coll, followed by applying f to the set
  of second items in each coll, until any one of the colls is
  exhausted.  Any remaining items in other colls are ignored. Function
  f should accept number-of-colls arguments.
"
[---Sent---] 277.16
(:emacs-rex (swank:operator-arglist "invoke-later" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 738)

[-Received-] 277.17
(:indentation-update (("with-bindings" . 0)))
[-Received-] 277.17
(:return (:ok "([& args])") 738)
[Actionlist] 277.17
738: finished :operator-arglist 
params: "([& args])"
[---Sent---] 277.18
(:emacs-rex (swank:describe-function "invoke-later") "image-processing.hist-view-gui" t 739)

[-Received-] 277.18
(:indentation-update (("with-bindings" . 1)))
[-Received-] 277.18
(:return (:ok "-------------------------
seesaw.core/invoke-later
([& args])
Macro
  Alias for seesaw.invoke/invoke-later
") 739)
[Actionlist] 277.18
739: finished :describe-function 
params: "-------------------------
seesaw.core/invoke-later
([& args])
Macro
  Alias for seesaw.invoke/invoke-later
"
[---Sent---] 277.26
(:emacs-rex (swank:operator-arglist "test/image_processing/test/1a7r" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 740)

[-Received-] 277.27
(:indentation-update (("with-bindings" . 0)))
[-Received-] 277.27
(:return (:ok nil) 740)
[Actionlist] 277.27
740: finished :operator-arglist 
params: nil
[---Sent---] 277.33
(:emacs-rex (swank:operator-arglist "invoke-later" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 741)

[-Received-] 277.33
(:indentation-update (("with-bindings" . 1)))
[-Received-] 277.33
(:return (:ok "([& args])") 741)
[Actionlist] 277.33
741: finished :operator-arglist 
params: "([& args])"
[---Sent---] 277.34
(:emacs-rex (swank:describe-function "invoke-later") "image-processing.hist-view-gui" t 742)

[-Received-] 277.34
(:indentation-update (("with-bindings" . 0)))
[-Received-] 277.34
(:return (:ok "-------------------------
seesaw.core/invoke-later
([& args])
Macro
  Alias for seesaw.invoke/invoke-later
") 742)
[Actionlist] 277.34
742: finished :describe-function 
params: "-------------------------
seesaw.core/invoke-later
([& args])
Macro
  Alias for seesaw.invoke/invoke-later
"
[---Sent---] 277.38
(:emacs-rex (swank:operator-arglist "pack!" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 743)

[-Received-] 277.39
(:indentation-update (("with-bindings" . 1)))
[-Received-] 277.39
(:return (:ok "([targets])") 743)
[Actionlist] 277.39
743: finished :operator-arglist 
params: "([targets])"
[---Sent---] 277.39
(:emacs-rex (swank:describe-function "pack!") "image-processing.hist-view-gui" t 744)

[-Received-] 277.39
(:indentation-update (("with-bindings" . 0)))
[-Received-] 277.4
(:return (:ok "-------------------------
seesaw.core/pack!
([targets])
  Pack a frame or window, causing it to resize to accommodate the preferred
  size of its contents.

  Returns its input.

  See:
    http://download.oracle.com/javase/6/docs/api/java/awt/Window.html#pack%28%29
  
") 744)
[Actionlist] 277.4
744: finished :describe-function 
params: "-------------------------
seesaw.core/pack!
([targets])
  Pack a frame or window, causing it to resize to accommodate the preferred
  size of its contents.

  Returns its input.

  See:
    http://download.oracle.com/javase/6/docs/api/java/awt/Window.html#pack%28%29
  
"
[---Sent---] 277.49
(:emacs-rex (swank:operator-arglist "as-url" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 745)

[-Received-] 277.49
(:indentation-update (("with-bindings" . 1)))
[-Received-] 277.49
(:return (:ok "([x])") 745)
[Actionlist] 277.49
745: finished :operator-arglist 
params: "([x])"
[---Sent---] 277.49
(:emacs-rex (swank:describe-function "as-url") "image-processing.hist-view-gui" t 746)

[-Received-] 277.5
(:indentation-update (("with-bindings" . 0)))
[-Received-] 277.5
(:return (:ok "-------------------------
clojure.java.io/as-url
([x])
  Coerce argument to a URL.
") 746)
[Actionlist] 277.5
746: finished :describe-function 
params: "-------------------------
clojure.java.io/as-url
([x])
  Coerce argument to a URL.
"
[---Sent---] 277.8
(:emacs-rex (swank:operator-arglist "invoke-now" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 747)

[-Received-] 277.8
(:indentation-update (("with-bindings" . 1)))
[-Received-] 277.8
(:return (:ok "([& args])") 747)
[Actionlist] 277.8
747: finished :operator-arglist 
params: "([& args])"
[---Sent---] 277.8
(:emacs-rex (swank:describe-function "invoke-now") "image-processing.hist-view-gui" t 748)

[-Received-] 277.81
(:indentation-update (("with-bindings" . 0)))
[-Received-] 277.81
(:return (:ok "-------------------------
seesaw.core/invoke-now
([& args])
Macro
  Alias for seesaw.invoke/invoke-now
") 748)
[Actionlist] 277.81
748: finished :describe-function 
params: "-------------------------
seesaw.core/invoke-now
([& args])
Macro
  Alias for seesaw.invoke/invoke-now
"
[---Sent---] 277.9
(:emacs-rex (swank:operator-arglist "invoke-later" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 749)

[-Received-] 277.9
(:indentation-update (("with-bindings" . 1)))
[-Received-] 277.9
(:return (:ok "([& args])") 749)
[Actionlist] 277.9
749: finished :operator-arglist 
params: "([& args])"
[---Sent---] 277.9
(:emacs-rex (swank:describe-function "invoke-later") "image-processing.hist-view-gui" t 750)

[-Received-] 277.91
(:indentation-update (("with-bindings" . 0)))
[-Received-] 277.91
(:return (:ok "-------------------------
seesaw.core/invoke-later
([& args])
Macro
  Alias for seesaw.invoke/invoke-later
") 750)
[Actionlist] 277.91
750: finished :describe-function 
params: "-------------------------
seesaw.core/invoke-later
([& args])
Macro
  Alias for seesaw.invoke/invoke-later
"
[---Sent---] 278.0
(:emacs-rex (swank:operator-arglist "invoke-later" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 751)

[-Received-] 278.01
(:indentation-update (("with-bindings" . 1)))
[-Received-] 278.01
(:return (:ok "([& args])") 751)
[Actionlist] 278.01
751: finished :operator-arglist 
params: "([& args])"
[---Sent---] 278.01
(:emacs-rex (swank:describe-function "invoke-later") "image-processing.hist-view-gui" t 752)

[-Received-] 278.01
(:indentation-update (("with-bindings" . 0)))
[-Received-] 278.02
(:return (:ok "-------------------------
seesaw.core/invoke-later
([& args])
Macro
  Alias for seesaw.invoke/invoke-later
") 752)
[Actionlist] 278.02
752: finished :describe-function 
params: "-------------------------
seesaw.core/invoke-later
([& args])
Macro
  Alias for seesaw.invoke/invoke-later
"
[---Sent---] 286.37
(:emacs-rex (swank:operator-arglist "test/image_processing/test/1azc" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 756)

[-Received-] 286.38
(:indentation-update (("with-bindings" . 0)))
[-Received-] 286.38
(:return (:ok nil) 756)
[Actionlist] 286.38
756: finished :operator-arglist 
params: nil
[---Sent---] 286.73
(:emacs-rex (swank:operator-arglist "test/image_processing/test/1a7r" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 757)

[-Received-] 286.74
(:indentation-update (("with-bindings" . 1)))
[-Received-] 286.74
(:return (:ok nil) 757)
[Actionlist] 286.74
757: finished :operator-arglist 
params: nil
[---Sent---] 286.84
(:emacs-rex (swank:operator-arglist ":items" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 758)

[-Received-] 286.84
(:indentation-update (("with-bindings" . 0)))
[-Received-] 286.84
(:return (:ok "([map])") 758)
[Actionlist] 286.84
758: finished :operator-arglist 
params: "([map])"
[---Sent---] 286.85
(:emacs-rex (swank:describe-function ":items") "image-processing.hist-view-gui" t 759)

[-Received-] 286.85
(:indentation-update (("with-bindings" . 1)))
[-Received-] 286.85
(:return (:ok nil) 759)
[Actionlist] 286.85
759: finished :describe-function 
params: nil
[---Sent---] 287.06
(:emacs-rex (swank:operator-arglist ":hgap" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 760)

[-Received-] 287.06
(:indentation-update (("with-bindings" . 0)))
[-Received-] 287.06
(:return (:ok "([map])") 760)
[Actionlist] 287.06
760: finished :operator-arglist 
params: "([map])"
[---Sent---] 287.11
(:emacs-rex (swank:operator-arglist ":hgap" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 761)

[-Received-] 287.12
(:indentation-update (("with-bindings" . 1)))
[-Received-] 287.12
(:return (:ok "([map])") 761)
[Actionlist] 287.12
761: finished :operator-arglist 
params: "([map])"
[---Sent---] 287.22
(:emacs-rex (swank:operator-arglist ":hgap" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 762)

[-Received-] 287.22
(:indentation-update (("with-bindings" . 0)))
[-Received-] 287.22
(:return (:ok "([map])") 762)
[Actionlist] 287.22
762: finished :operator-arglist 
params: "([map])"
[---Sent---] 287.46
(:emacs-rex (swank:listener-eval "(ns image-processing.hist-view-gui
    (:import 
      (javax.imageio ImageIO) 
      (java.io File)) 
    (:use 
      [clojure.java.io] 
      [seesaw core make-widget border]))


(defn create-hist-panel [img-paths]
  \"Creates a horizontal panel showing the images placed at the input paths.\"
  #^ {:arglists [img-paths]}
  (let [imgs-url (map #(as-url (File. %)) img-paths)]
    (horizontal-panel
      :items (vec imgs-url)
      :hgap 5 :border 5)))



(def x '(\"test/image_processing/test/1a7r.gif\"
         \"test/image_processing/test/1azc.gif\"))

(defn create-frame [] 
  (invoke-later (-> (frame :title \"Hello\",
             :content  (create-hist-panel x) ,
             :on-close :exit)
      pack!
      show!))) 

") "image-processing.hist-view-gui" :repl-thread 763)

[-Received-] 287.51
(:write-string "#'image-processing.hist-view-gui/create-frame
" :repl-result)
[-Received-] 287.51
(:indentation-update (("with-bindings" . 1)))
[-Received-] 287.51
(:return (:ok nil) 763)
[Actionlist] 287.51
763: finished :listener-eval 
params: nil
[---Sent---] 287.84
(:emacs-rex (swank:fuzzy-completions "crea" "image-processing.hist-view-gui" :limit 200 :time-limit-in-msec 2000) nil t 764)

[-Received-] 287.85
(:indentation-update (("with-bindings" . 0)))
[-Received-] 287.85
(:return (:ok ((("create-frame" "40.46" ((0 "crea")) "-f------") ("create-hist-panel" "40.06" ((0 "crea")) "-f------") ("clojure.main/" "15.16" ((0 "c") (5 "re") (9 "a")) "b------p") ("clojure.walk/" "15.16" ((0 "c") (5 "re") (9 "a")) "b------p") ("clojure.java.io/" "14.88" ((0 "c") (5 "re") (9 "a")) "b------p") ("swank.core.threadmap/" "14.82" ((6 "c") (13 "rea")) "b------p") ("clojure.java.shell/" "14.72" ((0 "c") (5 "re") (9 "a")) "b------p") ("clojure.java.browse/" "14.68" ((0 "c") (5 "re") (9 "a")) "b------p") ("clojure.java.javadoc/" "14.64" ((0 "c") (5 "re") (9 "a")) "b------p") ("swank.util.concurrent.thread/" "14.63" ((11 "c") (24 "rea")) "b------p") ("clojure.contrib.macro-utils/" "14.47" ((0 "c") (5 "re") (17 "a")) "b------p") ("swank.core.debugger-backends/" "12.45" ((6 "c") (8 "re") (21 "a")) "b------p") ("swank.clj-contrib.macroexpand/" "5.43" ((20 "cr") (23 "e") (26 "a")) "b------p") ("swank.util.clj-stacktrace-compat/" "3.34" ((21 "r") (24 "e") (30 "a")) "b------p")) nil)) 764)
[Actionlist] 287.85
764: finished :fuzzy-completions 
params: [[['"create-frame"', '"40.46"', [['0', '"crea"']], '"-f------"'], ['"create-hist-panel"', '"40.06"', [['0', '"crea"']], '"-f------"'], ['"clojure.main/"', '"15.16"', [['0', '"c"'], ['5', '"re"'], ['9', '"a"']], '"b------p"'], ['"clojure.walk/"', '"15.16"', [['0', '"c"'], ['5', '"re"'], ['9', '"a"']], '"b------p"'], ['"clojure.java.io/"', '"14.88"', [['0', '"c"'], ['5', '"re"'], ['9', '"a"']], '"b------p"'], ['"swank.core.threadmap/"', '"14.82"', [['6', '"c"'], ['13', '"rea"']], '"b------p"'], ['"clojure.java.shell/"', '"14.72"', [['0', '"c"'], ['5', '"re"'], ['9', '"a"']], '"b------p"'], ['"clojure.java.browse/"', '"14.68"', [['0', '"c"'], ['5', '"re"'], ['9', '"a"']], '"b------p"'], ['"clojure.java.javadoc/"', '"14.64"', [['0', '"c"'], ['5', '"re"'], ['9', '"a"']], '"b------p"'], ['"swank.util.concurrent.thread/"', '"14.63"', [['11', '"c"'], ['24', '"rea"']], '"b------p"'], ['"clojure.contrib.macro-utils/"', '"14.47"', [['0', '"c"'], ['5', '"re"'], ['17', '"a"']], '"b------p"'], ['"swank.core.debugger-backends/"', '"12.45"', [['6', '"c"'], ['8', '"re"'], ['21', '"a"']], '"b------p"'], ['"swank.clj-contrib.macroexpand/"', '"5.43"', [['20', '"cr"'], ['23', '"e"'], ['26', '"a"']], '"b------p"'], ['"swank.util.clj-stacktrace-compat/"', '"3.34"', [['21', '"r"'], ['24', '"e"'], ['30', '"a"']], '"b------p"']], 'nil']
[---Sent---] 288.06
(:emacs-rex (swank:listener-eval "(create-frame)
") "image-processing.hist-view-gui" :repl-thread 765)

[-Received-] 288.1
(:write-string "nil
" :repl-result)
[-Received-] 288.1
(:indentation-update (("with-bindings" . 1)))
[-Received-] 288.1
(:return (:ok nil) 765)
[Actionlist] 288.1
765: finished :listener-eval 
params: nil
[---Sent---] 288.61
(:emacs-rex (swank:fuzzy-completions "show-op" "image-processing.hist-view-gui" :limit 200 :time-limit-in-msec 2000) nil t 766)

[-Received-] 288.61
(:indentation-update (("with-bindings" . 0)))
[-Received-] 288.61
(:return (:ok ((nil) nil)) 766)
[Actionlist] 288.61
766: finished :fuzzy-completions 
params: [['nil'], 'nil']
[---Sent---] 288.84
(:emacs-rex (swank:operator-arglist "show-options" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 767)

[-Received-] 288.84
(:indentation-update (("with-bindings" . 1)))
[-Received-] 288.84
(:return (:ok nil) 767)
[Actionlist] 288.84
767: finished :operator-arglist 
params: nil
[---Sent---] 289.47
(:emacs-rex (swank:listener-eval "(show-options (horizontal-panel))
") "image-processing.hist-view-gui" :repl-thread 768)

[-Received-] 289.47
(:debug 1 1 ("Unable to resolve symbol: show-options in this context" "  [Thrown class java.lang.RuntimeException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "              Util.java:156 clojure.lang.Util.runtimeException" (:restartable nil)) (1 "         Compiler.java:6720 clojure.lang.Compiler.resolveIn" (:restartable nil)) (2 "         Compiler.java:6664 clojure.lang.Compiler.resolve" (:restartable nil)) (3 "         Compiler.java:6625 clojure.lang.Compiler.analyzeSymbol" (:restartable nil)) (4 "         Compiler.java:6198 clojure.lang.Compiler.analyze" (:restartable nil)) (5 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil)) (6 "         Compiler.java:3452 clojure.lang.Compiler$InvokeExpr.parse" (:restartable nil)) (7 "         Compiler.java:6411 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (8 "         Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil)) (9 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil))) (nil))
[---Sent---] 289.99
(:emacs-rex (swank:operator-arglist "use" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 770)

[-Received-] 289.99
(:indentation-update (("with-bindings" . 0)))
[-Received-] 289.99
(:return (:ok "([& args])") 770)
[Actionlist] 289.99
770: finished :operator-arglist 
params: "([& args])"
[---Sent---] 290.25
(:emacs-rex (swank:listener-eval "(use 'seesaw.dev)
") "image-processing.hist-view-gui" :repl-thread 771)

[-Received-] 290.29
(:write-string "nil
" :repl-result)
[-Received-] 290.29
(:indentation-update (("with-bindings" . 1)))
[-Received-] 290.3
(:return (:ok nil) 771)
[Actionlist] 290.3
771: finished :listener-eval 
params: nil
[---Sent---] 290.44
(:emacs-rex (swank:listener-eval "(show-options (horizontal-panel))
") "image-processing.hist-view-gui" :repl-thread 772)

[-Received-] 290.49
(:write-string "seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523
                    Option  Notes/Examples
--------------------------  --------------
" nil)
[-Received-] 290.5
(:write-string "nil
" :repl-result)
[-Received-] 290.5
(:indentation-update (("with-bindings" . 0)))
[-Received-] 290.5
(:return (:ok nil) 772)
[Actionlist] 290.5
772: finished :listener-eval 
params: nil
[-Received-] 290.5
(:write-string "               :background  :aliceblue
                            \"#f00\"
                            \"#FF0000\"
                            (seesaw.color/color 255 0 0 0 224)
                   :border  5
                            \"Border Title\"
                            [5 \"Compound\" 10]
                            See (seesaw.border/*)
                   :bounds  :preferred
                            [x y w h]
                            Use :* to leave component unchanged:
                            [x :* :* h]
                    :class  :class-name
                            #{:multiple :class-names}
                   :cursor  See (seesaw.cursor/cursor)
            :drag-enabled?  boolean
                 :enabled?  boolean
               :focusable?  boolean
                     :font  ARIAL-BOLD-18
                            :monospaced
                            :serif
                            :sans-serif
                            See (seesaw.font/font)
               :foreground  :aliceblue
                            \"#f00\"
                            \"#FF0000\"
                            (seesaw.color/color 255 0 0 0 224)
                     :icon  See (seesaw.icon/icon)
                       :id  A keyword id for the widget
                    :items  A sequence of widgets to add.
                   :layout  A layout manager.
                   :listen  vector of args for (seesaw.core/listen)
                 :location  See (seesaw.core/move! :to)
       :location-on-screen  java.awt.Point location in global screen coords
             :maximum-size  [640 :by 480]
                            java.awt.Dimension
             :minimum-size  [640 :by 480]
                            java.awt.Dimension
                  :opaque?  boolean
                    :paint  See (seesaw.core/canvas)
                    :popup  javax.swing.JPopupMenu
                            (fn [e]) that returns a seq of menu items
                            See (seesaw.core/popup)
           :preferred-size  [640 :by 480]
                            java.awt.Dimension
                     :size  [640 :by 480]
                            java.awt.Dimension
                     :text  A string
                            Anything accepted by (clojure.core/slurp)
                      :tip  A tooltip string
         :transfer-handler  See (seesaw.dnd/to-transfer-handler)
                :user-data  Anything.
                            Associate arbitrary user-data with a widget.
                            See (seesaw.core/user-data)
                 :visible?  boolean
" nil)
[---Sent---] 290.93
(:emacs-rex (swank:operator-arglist "java.awt.Dimension" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 773)

[-Received-] 290.94
(:indentation-update (("with-bindings" . 1)))
[-Received-] 290.94
(:return (:ok nil) 773)
[Actionlist] 290.94
773: finished :operator-arglist 
params: nil
[---Sent---] 291.59
(:emacs-rex (swank:listener-eval "(create-frame)
") "image-processing.hist-view-gui" :repl-thread 774)

[-Received-] 291.59
(:write-string "nil
" :repl-result)
[-Received-] 291.67
(:indentation-update (("with-bindings" . 0)))
[-Received-] 291.67
(:return (:ok nil) 774)
[Actionlist] 291.67
774: finished :listener-eval 
params: nil
[---Sent---] 291.85
(:emacs-rex (swank:operator-arglist "x" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 775)

[-Received-] 291.87
(:indentation-update (("with-bindings" . 1)))
[-Received-] 291.87
(:return (:ok nil) 775)
[Actionlist] 291.87
775: finished :operator-arglist 
params: nil
[---Sent---] 291.95
(:emacs-rex (swank:listener-eval "(defn create-hist-panel [img-paths]
  \"Creates a horizontal panel showing the images placed at the input paths.\"
  #^ {:arglists [img-paths]}
  (let [imgs-url (map #(as-url (File. %)) img-paths)]
    (horizontal-panel
      :items (vec imgs-url)
      :border 5)))
") "image-processing.hist-view-gui" :repl-thread 776)

[-Received-] 291.95
(:write-string "#'image-processing.hist-view-gui/create-hist-panel
" :repl-result)
[-Received-] 292.03
(:indentation-update (("with-bindings" . 0)))
[-Received-] 292.03
(:return (:ok nil) 776)
[Actionlist] 292.03
776: finished :listener-eval 
params: nil
[---Sent---] 292.21
(:emacs-rex (swank:listener-eval "(create-frame)
") "image-processing.hist-view-gui" :repl-thread 777)

[-Received-] 292.22
(:write-string "nil
" :repl-result)
[-Received-] 292.28
(:indentation-update (("with-bindings" . 1)))
[-Received-] 292.28
(:return (:ok nil) 777)
[Actionlist] 292.28
777: finished :listener-eval 
params: nil
[---Sent---] 293.0
(:emacs-rex (swank:operator-arglist ")))" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 778)

[-Received-] 293.0
(:indentation-update (("with-bindings" . 0)))
[-Received-] 293.0
(:return (:ok nil) 778)
[Actionlist] 293.0
778: finished :operator-arglist 
params: nil
[---Sent---] 293.03
(:emacs-rex (swank:operator-arglist "as-url" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 779)

[-Received-] 293.03
(:indentation-update (("with-bindings" . 1)))
[-Received-] 293.03
(:return (:ok "([x])") 779)
[Actionlist] 293.03
779: finished :operator-arglist 
params: "([x])"
[---Sent---] 293.03
(:emacs-rex (swank:describe-function "as-url") "image-processing.hist-view-gui" t 780)

[-Received-] 293.03
(:indentation-update (("with-bindings" . 0)))
[-Received-] 293.04
(:return (:ok "-------------------------
clojure.java.io/as-url
([x])
  Coerce argument to a URL.
") 780)
[Actionlist] 293.04
780: finished :describe-function 
params: "-------------------------
clojure.java.io/as-url
([x])
  Coerce argument to a URL.
"
[---Sent---] 293.09
(:emacs-rex (swank:operator-arglist "imgs-url" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 781)

[-Received-] 293.11
(:indentation-update (("with-bindings" . 1)))
[-Received-] 293.11
(:return (:ok nil) 781)
[Actionlist] 293.11
781: finished :operator-arglist 
params: nil
[---Sent---] 294.85
(:emacs-rex (swank:operator-arglist "1.4.0" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 782)

[-Received-] 294.86
(:indentation-update (("with-bindings" . 0)))
[-Received-] 294.86
(:return (:ok nil) 782)
[Actionlist] 294.86
782: finished :operator-arglist 
params: nil
[---Sent---] 294.87
(:emacs-rex (swank:operator-arglist "1.4.0" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 783)

[-Received-] 294.87
(:indentation-update (("with-bindings" . 1)))
[-Received-] 294.87
(:return (:ok nil) 783)
[Actionlist] 294.87
783: finished :operator-arglist 
params: nil
[---Sent---] 295.13
(:emacs-rex (swank:operator-arglist "defn" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 784)

[-Received-] 295.14
(:indentation-update (("with-bindings" . 0)))
[-Received-] 295.14
(:return (:ok "([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])") 784)
[Actionlist] 295.14
784: finished :operator-arglist 
params: "([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])"
[---Sent---] 295.14
(:emacs-rex (swank:describe-function "defn") "image-processing.hist-view-gui" t 785)

[-Received-] 295.15
(:indentation-update (("with-bindings" . 1)))
[-Received-] 295.15
(:return (:ok "-------------------------
clojure.core/defn
([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])
Macro
  Same as (def name (fn [params* ] exprs*)) or (def
    name (fn ([params* ] exprs*)+)) with any doc-string or attrs added
    to the var metadata
") 785)
[Actionlist] 295.15
785: finished :describe-function 
params: "-------------------------
clojure.core/defn
([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])
Macro
  Same as (def name (fn [params* ] exprs*)) or (def
    name (fn ([params* ] exprs*)+)) with any doc-string or attrs added
    to the var metadata
"
[---Sent---] 295.54
(:emacs-rex (swank:operator-arglist ":on-close" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 786)

[-Received-] 295.54
(:indentation-update (("with-bindings" . 0)))
[-Received-] 295.54
(:return (:ok "([map])") 786)
[Actionlist] 295.54
786: finished :operator-arglist 
params: "([map])"
[---Sent---] 295.54
(:emacs-rex (swank:describe-function ":on-close") "image-processing.hist-view-gui" t 787)

[-Received-] 295.55
(:indentation-update (("with-bindings" . 1)))
[-Received-] 295.56
(:return (:ok nil) 787)
[Actionlist] 295.56
787: finished :describe-function 
params: nil
[---Sent---] 297.22
(:emacs-rex (swank:connection-info) nil t 788)

[-Received-] 297.24
(:indentation-update (("dothread-keeping-clj" . 1) ("dothread-keeping" . 1) ("dothread" . 0) ("binding-map" . 1) ("print-length-loop" . 1) ("with-pretty-writer" . 1) ("with-pprint-dispatch" . 1) ("with-connection" . 1) ("with-bindings" . 0) ("with-emacs-package" . 0) ("dothread-swank" . 0) ("with-read-line-support" . 0) ("with-package-tracking" . 0) ("doseq" . 1) ("letfn" . 1) ("cond" . 0) ("with-open" . 1) ("sync" . 1) ("let" . 1) ("dotimes" . 1) ("with-in-str" . 1) ("loop" . 1) ("with-out-str" . 0) ("when-not" . 1) ("with-loading-context" . 0) ("future" . 0) ("with-redefs" . 1) ("when-first" . 1) ("comment" . 0) ("condp" . 2) ("with-local-vars" . 1) ("with-bindings" . 1) ("when-let" . 1) ("while" . 1) ("case" . 1) ("locking" . 1) ("delay" . 0) ("io!" . 0) ("lazy-seq" . 0) ("when" . 1) ("binding" . 1) ("defslimefn" . defun) ("returning" . 1) ("continuously" . 0) ("failing-gracefully" . 0)))
[-Received-] 297.25
(:return (:ok (:pid "6406" :style :spawn :lisp-implementation (:type "Clojure" :name "clojure" :version "1.3.0") :package (:name "user" :prompt "user") :version "20100404")) 788)
[Actionlist] 297.25
788: finished :connection-info 
params: [':pid', '"6406"', ':style', ':spawn', ':lisp-implementation', [':type', '"Clojure"', ':name', '"clojure"', ':version', '"1.3.0"'], ':package', [':name', '"user"', ':prompt', '"user"'], ':version', '"20100404"']
 Package:user Prompt:user
[---Sent---] 297.28
(:emacs-rex (swank:create-repl nil) "image-processing.hist-view-gui" t 789)

[-Received-] 297.29
(:indentation-update (("with-bindings" . 0)))
[-Received-] 297.29
(:return (:ok ("user" "user")) 789)
[Actionlist] 297.29
789: finished :create-repl 
params: ['"user"', '"user"']
[---Sent---] 297.29
(:emacs-rex (swank:swank-require 'swank-fuzzy) nil t 790)

[---Sent---] 297.34
(:emacs-rex (swank:listener-eval "(use '[clojure.repl :only (source apropos dir pst doc find-doc)])
(use '[clojure.java.javadoc :only (javadoc)])
(use '[clojure.pprint :only (pp pprint)])
") "image-processing.hist-view-gui" :repl-thread 791)

[---Sent---] 297.38
(:emacs-rex (swank:listener-eval "(ns image-processing.hist-view-gui
    (:import 
      (javax.imageio ImageIO) 
      (java.io File)) 
    (:use 
      [clojure.java.io] 
      [seesaw core make-widget border]))


(defn create-hist-panel [img-paths]
  \"Creates a horizontal panel showing the images placed at the input paths.\"
  #^ {:arglists [img-paths]}
  (let [imgs-url (map #(as-url (File. %)) img-paths)]
    (horizontal-panel
      :items (vec imgs-url)
      :border 5)))



(def x '(\"test/image_processing/test/1a7r.gif\"
         \"test/image_processing/test/1azc.gif\"))

(defn create-frame [] 
  (-> (frame :title \"Hello\",
             :content  (create-hist-panel x))
      ;:on-close :exit)
      pack!
      show!)) 

") "user" :repl-thread 792)

[-Received-] 297.43
(:write-string "nil
" :repl-result)
[-Received-] 297.53
(:indentation-update (("with-timeout" . 1) ("with-bindings" . 1)))
[-Received-] 297.53
(:return (:ok nil) 791)
[Actionlist] 297.53
790: pending  :swank-require 
791: finished :listener-eval 
792: pending  :listener-eval 
params: nil
[-Received-] 297.53
(:indentation-update (("with-timeout" . 1) ("with-bindings" . 1)))
[-Received-] 297.53
(:return (:ok nil) 790)
[Actionlist] 297.53
790: finished :swank-require 
791: finished :listener-eval 
792: pending  :listener-eval 
params: nil
[-Received-] 297.85
(:write-string "#'image-processing.hist-view-gui/create-frame
" :repl-result)
[-Received-] 297.85
(:new-package "image-processing.hist-view-gui" "image-processing.hist-view-gui")
[-Received-] 297.85
(:indentation-update (("with-bindings" . 0) ("with-widgets" . 1) ("invoke-now" . 0) ("invoke-soon" . 0) ("signaller" . 1) ("invoke-later" . 0)))
[-Received-] 297.85
(:return (:ok nil) 792)
[Actionlist] 297.85
792: finished :listener-eval 
params: nil
[---Sent---] 298.26
(:emacs-rex (swank:operator-arglist ":on-close" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 793)

[-Received-] 298.28
(:indentation-update (("with-bindings" . 1)))
[-Received-] 298.28
(:return (:ok "([map])") 793)
[Actionlist] 298.28
793: finished :operator-arglist 
params: "([map])"
[---Sent---] 298.28
(:emacs-rex (swank:describe-function ":on-close") "image-processing.hist-view-gui" t 794)

[-Received-] 298.29
(:indentation-update (("with-bindings" . 0)))
[-Received-] 298.29
(:return (:ok nil) 794)
[Actionlist] 298.29
794: finished :describe-function 
params: nil
[---Sent---] 299.04
(:emacs-rex (swank:operator-arglist ":hgap" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 795)

[-Received-] 299.04
(:indentation-update (("with-bindings" . 1)))
[-Received-] 299.04
(:return (:ok "([map])") 795)
[Actionlist] 299.04
795: finished :operator-arglist 
params: "([map])"
[---Sent---] 299.11
(:emacs-rex (swank:operator-arglist ":hgap" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 796)

[-Received-] 299.11
(:indentation-update (("with-bindings" . 0)))
[-Received-] 299.11
(:return (:ok "([map])") 796)
[Actionlist] 299.11
796: finished :operator-arglist 
params: "([map])"
[---Sent---] 299.2
(:emacs-rex (swank:operator-arglist ":hgap" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 797)

[-Received-] 299.21
(:indentation-update (("with-bindings" . 1)))
[-Received-] 299.21
(:return (:ok "([map])") 797)
[Actionlist] 299.21
797: finished :operator-arglist 
params: "([map])"
[---Sent---] 299.39
(:emacs-rex (swank:operator-arglist ":columns" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 798)

[-Received-] 299.4
(:indentation-update (("with-bindings" . 0)))
[-Received-] 299.4
(:return (:ok "([map])") 798)
[Actionlist] 299.4
798: finished :operator-arglist 
params: "([map])"
[---Sent---] 302.55
(:emacs-rex (swank:operator-arglist ":items" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 799)

[-Received-] 302.56
(:indentation-update (("with-bindings" . 1)))
[-Received-] 302.56
(:return (:ok "([map])") 799)
[Actionlist] 302.56
799: finished :operator-arglist 
params: "([map])"
[---Sent---] 302.64
(:emacs-rex (swank:operator-arglist "vec" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 800)

[-Received-] 302.65
(:indentation-update (("with-bindings" . 0)))
[-Received-] 302.65
(:return (:ok "([coll])") 800)
[Actionlist] 302.65
800: finished :operator-arglist 
params: "([coll])"
[---Sent---] 302.95
(:emacs-rex (swank:listener-eval "(ns image-processing.hist-view-gui
    (:import 
      (javax.imageio ImageIO) 
      (java.io File)) 
    (:use 
      [clojure.java.io] 
      [seesaw core make-widget border]))


(defn create-hist-panel [img-paths]
  \"Creates a horizontal panel showing the images placed at the input paths.\"
  #^ {:arglists [img-paths]}
  (let [imgs-url (map #(as-url (File. %)) img-paths)]
    ;(horizontal-panel
    ;  :items (vec imgs-url)
    ;  :border 5)
    (grid-panel
      :hgap 10 :vgap 10
      :columns 4
      :items (vec imgs-url))))



(def x '(\"test/image_processing/test/1a7r.gif\"
         \"test/image_processing/test/1azc.gif\"))

(defn create-frame [] 
  (-> (frame :title \"Hello\",
             :content  (create-hist-panel x))
      ;:on-close :exit)
      pack!
      show!)) 

") "image-processing.hist-view-gui" :repl-thread 801)

[-Received-] 302.99
(:write-string "#'image-processing.hist-view-gui/create-frame
" :repl-result)
[-Received-] 302.99
(:indentation-update (("with-bindings" . 1)))
[-Received-] 302.99
(:return (:ok nil) 801)
[Actionlist] 302.99
801: finished :listener-eval 
params: nil
[---Sent---] 303.4
(:emacs-rex (swank:listener-eval "(create-frame)
") "image-processing.hist-view-gui" :repl-thread 802)

[-Received-] 303.45
(:write-string "#<JFrame$Tag$a79ba523 seesaw.core.proxy$javax.swing.JFrame$Tag$a79ba523[frame0,0,31,840x120,layout=java.awt.BorderLayout,title=Hello,resizable,normal,defaultCloseOperation=HIDE_ON_CLOSE,rootPane=javax.swing.JRootPane[,5,25,830x90,layout=javax.swing.JRootPane$RootLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=16777673,maximumSize=,minimumSize=,preferredSize=],rootPaneCheckingEnabled=true]>
" :repl-result)
[-Received-] 303.45
(:indentation-update (("with-bindings" . 0)))
[-Received-] 303.45
(:return (:ok nil) 802)
[Actionlist] 303.45
802: finished :listener-eval 
params: nil
[---Sent---] 303.66
(:emacs-rex (swank:operator-arglist "pack!" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 803)

[-Received-] 303.66
(:indentation-update (("with-bindings" . 1)))
[-Received-] 303.66
(:return (:ok "([targets])") 803)
[Actionlist] 303.66
803: finished :operator-arglist 
params: "([targets])"
[---Sent---] 303.66
(:emacs-rex (swank:describe-function "pack!") "image-processing.hist-view-gui" t 804)

[-Received-] 303.67
(:indentation-update (("with-bindings" . 0)))
[-Received-] 303.67
(:return (:ok "-------------------------
seesaw.core/pack!
([targets])
  Pack a frame or window, causing it to resize to accommodate the preferred
  size of its contents.

  Returns its input.

  See:
    http://download.oracle.com/javase/6/docs/api/java/awt/Window.html#pack%28%29
  
") 804)
[Actionlist] 303.67
804: finished :describe-function 
params: "-------------------------
seesaw.core/pack!
([targets])
  Pack a frame or window, causing it to resize to accommodate the preferred
  size of its contents.

  Returns its input.

  See:
    http://download.oracle.com/javase/6/docs/api/java/awt/Window.html#pack%28%29
  
"
[---Sent---] 303.68
(:emacs-rex (swank:operator-arglist "pack!" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 805)

[-Received-] 303.69
(:indentation-update (("with-bindings" . 1)))
[-Received-] 303.69
(:return (:ok "([targets])") 805)
[Actionlist] 303.69
805: finished :operator-arglist 
params: "([targets])"
[---Sent---] 303.69
(:emacs-rex (swank:describe-function "pack!") "image-processing.hist-view-gui" t 806)

[-Received-] 303.7
(:indentation-update (("with-bindings" . 0)))
[-Received-] 303.7
(:return (:ok "-------------------------
seesaw.core/pack!
([targets])
  Pack a frame or window, causing it to resize to accommodate the preferred
  size of its contents.

  Returns its input.

  See:
    http://download.oracle.com/javase/6/docs/api/java/awt/Window.html#pack%28%29
  
") 806)
[Actionlist] 303.7
806: finished :describe-function 
params: "-------------------------
seesaw.core/pack!
([targets])
  Pack a frame or window, causing it to resize to accommodate the preferred
  size of its contents.

  Returns its input.

  See:
    http://download.oracle.com/javase/6/docs/api/java/awt/Window.html#pack%28%29
  
"
[---Sent---] 303.84
(:emacs-rex (swank:operator-arglist ":exit" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 807)

[-Received-] 303.84
(:indentation-update (("with-bindings" . 1)))
[-Received-] 303.85
(:return (:ok "([map])") 807)
[Actionlist] 303.85
807: finished :operator-arglist 
params: "([map])"
[---Sent---] 303.85
(:emacs-rex (swank:describe-function ":exit") "image-processing.hist-view-gui" t 808)

[-Received-] 303.86
(:indentation-update (("with-bindings" . 0)))
[-Received-] 303.86
(:return (:ok nil) 808)
[Actionlist] 303.86
808: finished :describe-function 
params: nil
[---Sent---] 304.0
(:emacs-rex (swank:operator-arglist ":content" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 809)

[-Received-] 304.02
(:indentation-update (("with-bindings" . 1)))
[-Received-] 304.02
(:return (:ok "([map])") 809)
[Actionlist] 304.02
809: finished :operator-arglist 
params: "([map])"
[---Sent---] 304.02
(:emacs-rex (swank:describe-function ":content") "image-processing.hist-view-gui" t 810)

[-Received-] 304.02
(:indentation-update (("with-bindings" . 0)))
[-Received-] 304.02
(:return (:ok nil) 810)
[Actionlist] 304.02
810: finished :describe-function 
params: nil
[---Sent---] 304.03
(:emacs-rex (swank:operator-arglist ":on-close" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 811)

[-Received-] 304.03
(:indentation-update (("with-bindings" . 1)))
[-Received-] 304.04
(:return (:ok "([map])") 811)
[Actionlist] 304.04
811: finished :operator-arglist 
params: "([map])"
[---Sent---] 304.04
(:emacs-rex (swank:describe-function ":on-close") "image-processing.hist-view-gui" t 812)

[-Received-] 304.04
(:indentation-update (("with-bindings" . 0)))
[-Received-] 304.04
(:return (:ok nil) 812)
[Actionlist] 304.04
812: finished :describe-function 
params: nil
[---Sent---] 304.05
(:emacs-rex (swank:operator-arglist ":on-close" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 813)

[-Received-] 304.05
(:indentation-update (("with-bindings" . 1)))
[-Received-] 304.05
(:return (:ok "([map])") 813)
[Actionlist] 304.05
813: finished :operator-arglist 
params: "([map])"
[---Sent---] 304.05
(:emacs-rex (swank:describe-function ":on-close") "image-processing.hist-view-gui" t 814)

[-Received-] 304.06
(:indentation-update (("with-bindings" . 0)))
[-Received-] 304.06
(:return (:ok nil) 814)
[Actionlist] 304.06
814: finished :describe-function 
params: nil
[---Sent---] 304.11
(:emacs-rex (swank:operator-arglist "4" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 815)

[-Received-] 304.11
(:indentation-update (("with-bindings" . 1)))
[-Received-] 304.11
(:return (:ok nil) 815)
[Actionlist] 304.11
815: finished :operator-arglist 
params: nil
[---Sent---] 304.43
(:emacs-rex (swank:operator-arglist ":border" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 816)

[-Received-] 304.43
(:indentation-update (("with-bindings" . 0)))
[-Received-] 304.43
(:return (:ok "([map])") 816)
[Actionlist] 304.43
816: finished :operator-arglist 
params: "([map])"
[---Sent---] 304.53
(:emacs-rex (swank:listener-eval "(defn create-hist-panel [img-paths]
  \"Creates a horizontal panel showing the images placed at the input paths.\"
  #^ {:arglists [img-paths]}
  (let [imgs-url (map #(as-url (File. %)) img-paths)]
    ;(horizontal-panel
    ;  :items (vec imgs-url)
    ;  :border 5)
    (grid-panel
      :border 5
      :hgap 10 :vgap 10
      :columns 4
      :items (vec imgs-url))))
") "image-processing.hist-view-gui" :repl-thread 817)

[-Received-] 304.53
(:write-string "#'image-processing.hist-view-gui/create-hist-panel
" :repl-result)
[-Received-] 304.6
(:indentation-update (("with-bindings" . 1)))
[-Received-] 304.6
(:return (:ok nil) 817)
[Actionlist] 304.6
817: finished :listener-eval 
params: nil
[---Sent---] 304.78
(:emacs-rex (swank:listener-eval "(create-frame)
") "image-processing.hist-view-gui" :repl-thread 818)

[-Received-] 304.82
(:write-string "#<JFrame$Tag$a79ba523 seesaw.core.proxy$javax.swing.JFrame$Tag$a79ba523[frame1,0,31,850x130,layout=java.awt.BorderLayout,title=Hello,resizable,normal,defaultCloseOperation=HIDE_ON_CLOSE,rootPane=javax.swing.JRootPane[,5,25,840x100,layout=javax.swing.JRootPane$RootLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=16777673,maximumSize=,minimumSize=,preferredSize=],rootPaneCheckingEnabled=true]>
" :repl-result)
[-Received-] 304.83
(:indentation-update (("with-bindings" . 0)))
[-Received-] 304.83
(:return (:ok nil) 818)
[Actionlist] 304.83
818: finished :listener-eval 
params: nil
[---Sent---] 305.15
(:emacs-rex (swank:listener-eval "(defn create-hist-panel [img-paths]
  \"Creates a horizontal panel showing the images placed at the input paths.\"
  #^ {:arglists [img-paths]}
  (let [imgs-url (map #(as-url (File. %)) img-paths)]
    ;(horizontal-panel
    ;  :items (vec imgs-url)
    ;  :border 5)
    (grid-panel
      :border 5
      :hgap 10 :vgap 10
      :items (vec imgs-url))))
") "image-processing.hist-view-gui" :repl-thread 819)

[-Received-] 305.15
(:write-string "#'image-processing.hist-view-gui/create-hist-panel
" :repl-result)
[-Received-] 305.21
(:indentation-update (("with-bindings" . 1)))
[-Received-] 305.21
(:return (:ok nil) 819)
[Actionlist] 305.22
819: finished :listener-eval 
params: nil
[---Sent---] 305.4
(:emacs-rex (swank:listener-eval "(create-frame)
") "image-processing.hist-view-gui" :repl-thread 820)

[-Received-] 305.45
(:write-string "#<JFrame$Tag$a79ba523 seesaw.core.proxy$javax.swing.JFrame$Tag$a79ba523[frame2,0,31,220x230,layout=java.awt.BorderLayout,title=Hello,resizable,normal,defaultCloseOperation=HIDE_ON_CLOSE,rootPane=javax.swing.JRootPane[,5,25,210x200,layout=javax.swing.JRootPane$RootLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=16777673,maximumSize=,minimumSize=,preferredSize=],rootPaneCheckingEnabled=true]>
" :repl-result)
[-Received-] 305.45
(:indentation-update (("with-bindings" . 0)))
[-Received-] 305.45
(:return (:ok nil) 820)
[Actionlist] 305.45
820: finished :listener-eval 
params: nil
[---Sent---] 305.86
(:emacs-rex (swank:operator-arglist ":exit" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 821)

[-Received-] 305.87
(:indentation-update (("with-bindings" . 1)))
[-Received-] 305.87
(:return (:ok "([map])") 821)
[Actionlist] 305.87
821: finished :operator-arglist 
params: "([map])"
[---Sent---] 305.87
(:emacs-rex (swank:describe-function ":exit") "image-processing.hist-view-gui" t 822)

[-Received-] 305.87
(:indentation-update (("with-bindings" . 0)))
[-Received-] 305.88
(:return (:ok nil) 822)
[Actionlist] 305.88
822: finished :describe-function 
params: nil
[---Sent---] 306.1
(:emacs-rex (swank:operator-arglist "preferredSize=" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 823)

[-Received-] 306.1
(:indentation-update (("with-bindings" . 1)))
[-Received-] 306.1
(:return (:ok nil) 823)
[Actionlist] 306.1
823: finished :operator-arglist 
params: nil
[---Sent---] 306.31
(:emacs-rex (swank:operator-arglist "use" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 824)

[-Received-] 306.31
(:indentation-update (("with-bindings" . 0)))
[-Received-] 306.31
(:return (:ok "([& args])") 824)
[Actionlist] 306.31
824: finished :operator-arglist 
params: "([& args])"
[---Sent---] 306.69
(:emacs-rex (swank:listener-eval "(use 'seesaw.dev) 
") "image-processing.hist-view-gui" :repl-thread 825)

[-Received-] 306.74
(:write-string "nil
" :repl-result)
[-Received-] 306.74
(:indentation-update (("with-bindings" . 1)))
[-Received-] 306.74
(:return (:ok nil) 825)
[Actionlist] 306.74
825: finished :listener-eval 
params: nil
[---Sent---] 307.05
(:emacs-rex (swank:fuzzy-completions "show-opt" "image-processing.hist-view-gui" :limit 200 :time-limit-in-msec 2000) nil t 826)

[-Received-] 307.06
(:return (:ok ((nil) nil)) 826)
[Actionlist] 307.06
826: finished :fuzzy-completions 
params: [['nil'], 'nil']
[---Sent---] 307.31
(:emacs-rex (swank:operator-arglist "show-options" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 827)

[-Received-] 307.32
(:return (:ok "([v])") 827)
[Actionlist] 307.32
827: finished :operator-arglist 
params: "([v])"
[---Sent---] 307.71
(:emacs-rex (swank:listener-eval "(show-options (grid-panel)) 
") "image-processing.hist-view-gui" :repl-thread 828)

[-Received-] 307.76
(:write-string "nil
" :repl-result)
[-Received-] 307.76
(:return (:ok nil) 828)
[Actionlist] 307.76
828: finished :listener-eval 
params: nil
[-Received-] 307.76
(:write-string "seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523
                    Option  Notes/Examples
--------------------------  --------------
               :background  :aliceblue
                            \"#f00\"
                            \"#FF0000\"
                            (seesaw.color/color 255 0 0 0 224)
                   :border  5
                            \"Border Title\"
                            [5 \"Compound\" 10]
                            See (seesaw.border/*)
                   :bounds  :preferred
                            [x y w h]
                            Use :* to leave component unchanged:
                            [x :* :* h]
                    :class  :class-name
                            #{:multiple :class-names}
                  :columns  Internal use.
                   :cursor  See (seesaw.cursor/cursor)
            :drag-enabled?  boolean
                 :enabled?  boolean
               :focusable?  boolean
                     :font  ARIAL-BOLD-18
                            :monospaced
                            :serif
                            :sans-serif
                            See (seesaw.font/font)
               :foreground  :aliceblue
                            \"#f00\"
                            \"#FF0000\"
                            (seesaw.color/color 255 0 0 0 224)
                     :hgap  Integer pixels
                     :icon  See (seesaw.icon/icon)
                       :id  A keyword id for the widget
                    :items  A sequence of widgets to add.
                   :layout  A layout manager.
                   :listen  vector of args for (seesaw.core/listen)
                 :location  See (seesaw.core/move! :to)
       :location-on-screen  java.awt.Point location in global screen coords
             :maximum-size  [640 :by 480]
                            java.awt.Dimension
             :minimum-size  [640 :by 480]
                            java.awt.Dimension
                  :opaque?  boolean
                    :paint  See (seesaw.core/canvas)
                    :popup  javax.swing.JPopupMenu
                            (fn [e]) that returns a seq of menu items
                            See (seesaw.core/popup)
           :preferred-size  [640 :by 480]
                            java.awt.Dimension
                     :rows  Internal use.
                     :size  [640 :by 480]
                            java.awt.Dimension
                     :text  A string
                            Anything accepted by (clojure.core/slurp)
                      :tip  A tooltip string
         :transfer-handler  See (seesaw.dnd/to-transfer-handler)
                :user-data  Anything.
                            Associate arbitrary user-data with a widget.
                            See (seesaw.core/user-data)
                     :vgap  Integer pixels
                 :visible?  boolean
" nil)
[---Sent---] 307.88
(:emacs-rex (swank:operator-arglist "that" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 829)

[-Received-] 307.88
(:return (:ok nil) 829)
[Actionlist] 307.88
829: finished :operator-arglist 
params: nil
[---Sent---] 308.16
(:emacs-rex (swank:operator-arglist ":sans-serif" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 830)

[-Received-] 308.16
(:return (:ok "([map])") 830)
[Actionlist] 308.16
830: finished :operator-arglist 
params: "([map])"
[---Sent---] 308.16
(:emacs-rex (swank:describe-function ":sans-serif") "image-processing.hist-view-gui" t 831)

[-Received-] 308.17
(:return (:ok nil) 831)
[Actionlist] 308.17
831: finished :describe-function 
params: nil
[---Sent---] 308.23
(:emacs-rex (swank:operator-arglist "seesaw.font/font" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 832)

[-Received-] 308.24
(:return (:ok "([& args])") 832)
[Actionlist] 308.24
832: finished :operator-arglist 
params: "([& args])"
[---Sent---] 308.25
(:emacs-rex (swank:describe-function "seesaw.font/font") "image-processing.hist-view-gui" t 833)

[-Received-] 308.25
(:return (:ok "-------------------------
seesaw.font/font
([& args])
  Create and return a Font.

      (font name)
      (font ... options ...)

  Options are:

    :name   The name of the font. Besides string values, also possible are 
            any of :monospaced, :serif, :sans-serif. See (seesaw.font/font-families)
            to get a system-specific list of all valid values.
    :style  The style. One of :bold, :plain, :italic, or a set of those values
            to combine them. Default: :plain.
    :size   The size of the font. Default: 12.
    :from   A Font from which to derive the new Font.

   Returns a java.awt.Font instance.

  Examples:

    ; Create a font from a font-spec (see JavaDocs)
    (font \"ARIAL-ITALIC-20\")

    ; Create a 12 pt bold and italic monospace
    (font :style #{:bold :italic} :name :monospaced)

  See:
    (seesaw.font/font-families)
    http://download.oracle.com/javase/6/docs/api/java/awt/Font.html
  
") 833)
[Actionlist] 308.25
833: finished :describe-function 
params: "-------------------------
seesaw.font/font
([& args])
  Create and return a Font.

      (font name)
      (font ... options ...)

  Options are:

    :name   The name of the font. Besides string values, also possible are 
            any of :monospaced, :serif, :sans-serif. See (seesaw.font/font-families)
            to get a system-specific list of all valid values.
    :style  The style. One of :bold, :plain, :italic, or a set of those values
            to combine them. Default: :plain.
    :size   The size of the font. Default: 12.
    :from   A Font from which to derive the new Font.

   Returns a java.awt.Font instance.

  Examples:

    ; Create a font from a font-spec (see JavaDocs)
    (font \"ARIAL-ITALIC-20\")

    ; Create a 12 pt bold and italic monospace
    (font :style #{:bold :italic} :name :monospaced)

  See:
    (seesaw.font/font-families)
    http://download.oracle.com/javase/6/docs/api/java/awt/Font.html
  
"
[---Sent---] 308.3
(:emacs-rex (swank:operator-arglist ":columns" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 834)

[-Received-] 308.3
(:return (:ok "([map])") 834)
[Actionlist] 308.3
834: finished :operator-arglist 
params: "([map])"
[---Sent---] 308.3
(:emacs-rex (swank:describe-function ":columns") "image-processing.hist-view-gui" t 835)

[-Received-] 308.31
(:return (:ok nil) 835)
[Actionlist] 308.31
835: finished :describe-function 
params: nil
[---Sent---] 308.37
(:emacs-rex (swank:operator-arglist ":monospaced" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 836)

[-Received-] 308.37
(:return (:ok "([map])") 836)
[Actionlist] 308.37
836: finished :operator-arglist 
params: "([map])"
[---Sent---] 308.37
(:emacs-rex (swank:describe-function ":monospaced") "image-processing.hist-view-gui" t 837)

[-Received-] 308.37
(:return (:ok nil) 837)
[Actionlist] 308.37
837: finished :describe-function 
params: nil
[---Sent---] 308.49
(:emacs-rex (swank:operator-arglist "java.awt" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 838)

[-Received-] 308.49
(:return (:ok nil) 838)
[Actionlist] 308.49
838: finished :operator-arglist 
params: nil
[---Sent---] 310.19
(:emacs-rex (swank:listener-eval "(show-options (combobox))
") "image-processing.hist-view-gui" :repl-thread 839)

[-Received-] 310.23
(:write-string "nil
" :repl-result)
[-Received-] 310.23
(:return (:ok nil) 839)
[Actionlist] 310.23
839: finished :listener-eval 
params: nil
[-Received-] 310.23
(:write-string "seesaw.core.proxy$javax.swing.JComboBox$Tag$a79ba523
                    Option  Notes/Examples
--------------------------  --------------
                   :action  See (seesaw.core/action)
               :background  :aliceblue
                            \"#f00\"
                            \"#FF0000\"
                            (seesaw.color/color 255 0 0 0 224)
                   :border  5
                            \"Border Title\"
                            [5 \"Compound\" 10]
                            See (seesaw.border/*)
                   :bounds  :preferred
                            [x y w h]
                            Use :* to leave component unchanged:
                            [x :* :* h]
                    :class  :class-name
                            #{:multiple :class-names}
                   :cursor  See (seesaw.cursor/cursor)
            :drag-enabled?  boolean
                :editable?  
                 :enabled?  boolean
               :focusable?  boolean
                     :font  ARIAL-BOLD-18
                            :monospaced
                            :serif
                            :sans-serif
                            See (seesaw.font/font)
               :foreground  :aliceblue
                            \"#f00\"
                            \"#FF0000\"
                            (seesaw.color/color 255 0 0 0 224)
                     :icon  See (seesaw.icon/icon)
                       :id  A keyword id for the widget
                   :layout  A layout manager.
                   :listen  vector of args for (seesaw.core/listen)
                 :location  See (seesaw.core/move! :to)
       :location-on-screen  java.awt.Point location in global screen coords
             :maximum-size  [640 :by 480]
                            java.awt.Dimension
             :minimum-size  [640 :by 480]
                            java.awt.Dimension
                    :model  See (seesaw.core/combobox)
                  :opaque?  boolean
                    :paint  See (seesaw.core/canvas)
                    :popup  javax.swing.JPopupMenu
                            (fn [e]) that returns a seq of menu items
                            See (seesaw.core/popup)
           :preferred-size  [640 :by 480]
                            java.awt.Dimension
                 :renderer  
                     :size  [640 :by 480]
                            java.awt.Dimension
                     :text  A string
                            Anything accepted by (clojure.core/slurp)
                      :tip  A tooltip string
         :transfer-handler  See (seesaw.dnd/to-transfer-handler)
                :user-data  Anything.
                            Associate arbitrary user-data with a widget.
                            See (seesaw.core/user-data)
                 :visible?  boolean
" nil)
[---Sent---] 311.19
(:emacs-rex (swank:operator-arglist "as-url" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 840)

[-Received-] 311.19
(:return (:ok "([x])") 840)
[Actionlist] 311.19
840: finished :operator-arglist 
params: "([x])"
[---Sent---] 311.19
(:emacs-rex (swank:describe-function "as-url") "image-processing.hist-view-gui" t 841)

[-Received-] 311.19
(:return (:ok "-------------------------
clojure.java.io/as-url
([x])
  Coerce argument to a URL.
") 841)
[Actionlist] 311.19
841: finished :describe-function 
params: "-------------------------
clojure.java.io/as-url
([x])
  Coerce argument to a URL.
"
[---Sent---] 313.52
(:emacs-rex (swank:operator-arglist "#" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 842)

[-Received-] 313.52
(:return (:ok nil) 842)
[Actionlist] 313.52
842: finished :operator-arglist 
params: nil
[---Sent---] 314.59
(:emacs-rex (swank:operator-arglist "panel" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 843)

[-Received-] 314.59
(:return (:ok nil) 843)
[Actionlist] 314.59
843: finished :operator-arglist 
params: nil
[---Sent---] 314.6
(:emacs-rex (swank:operator-arglist "[" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 844)

[-Received-] 314.6
(:return (:ok nil) 844)
[Actionlist] 314.6
844: finished :operator-arglist 
params: nil
[---Sent---] 315.1
(:emacs-rex (swank:listener-eval "(show-options (radio))
") "image-processing.hist-view-gui" :repl-thread 845)

[-Received-] 315.14
(:write-string "nil
" :repl-result)
[-Received-] 315.14
(:return (:ok nil) 845)
[Actionlist] 315.14
845: finished :listener-eval 
params: nil
[-Received-] 315.14
(:write-string "seesaw.core.proxy$javax.swing.JRadioButton$Tag$a79ba523
                    Option  Notes/Examples
--------------------------  --------------
                   :action  See (seesaw.core/action)
               :background  :aliceblue
                            \"#f00\"
                            \"#FF0000\"
                            (seesaw.color/color 255 0 0 0 224)
                   :border  5
                            \"Border Title\"
                            [5 \"Compound\" 10]
                            See (seesaw.border/*)
                   :bounds  :preferred
                            [x y w h]
                            Use :* to leave component unchanged:
                            [x :* :* h]
                    :class  :class-name
                            #{:multiple :class-names}
                   :cursor  See (seesaw.cursor/cursor)
            :drag-enabled?  boolean
                 :enabled?  boolean
               :focusable?  boolean
                     :font  ARIAL-BOLD-18
                            :monospaced
                            :serif
                            :sans-serif
                            See (seesaw.font/font)
               :foreground  :aliceblue
                            \"#f00\"
                            \"#FF0000\"
                            (seesaw.color/color 255 0 0 0 224)
                    :group  A button group
                   :halign  :center
                            :trailing
                            :leading
                            :right
                            :left
                     :icon  See (seesaw.icon/icon)
                       :id  A keyword id for the widget
                   :layout  A layout manager.
                   :listen  vector of args for (seesaw.core/listen)
                 :location  See (seesaw.core/move! :to)
       :location-on-screen  java.awt.Point location in global screen coords
                   :margin  
             :maximum-size  [640 :by 480]
                            java.awt.Dimension
             :minimum-size  [640 :by 480]
                            java.awt.Dimension
                 :mnemonic  See (seesaw.util/to-mnemonic-keycode)
                    :model  
                  :opaque?  boolean
                    :paint  See (seesaw.core/canvas)
                    :popup  javax.swing.JPopupMenu
                            (fn [e]) that returns a seq of menu items
                            See (seesaw.core/popup)
           :preferred-size  [640 :by 480]
                            java.awt.Dimension
                 :resource  A i18n prefix for a resource with keys
                            [:text :foreground :background :font :icon :tip]
                :selected?  boolean
                     :size  [640 :by 480]
                            java.awt.Dimension
                     :text  A string
                            Anything accepted by (clojure.core/slurp)
                      :tip  A tooltip string
         :transfer-handler  See (seesaw.dnd/to-transfer-handler)
                :user-data  Anything.
                            Associate arbitrary user-data with a widget.
                            See (seesaw.core/user-data)
                   :valign  :bottom
                            :center
                            :top
                 :visible?  boolean
" nil)
[---Sent---] 315.28
(:emacs-rex (swank:operator-arglist ":text" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 846)

[-Received-] 315.28
(:return (:ok "([map])") 846)
[Actionlist] 315.28
846: finished :operator-arglist 
params: "([map])"
[---Sent---] 315.28
(:emacs-rex (swank:describe-function ":text") "image-processing.hist-view-gui" t 847)

[-Received-] 315.28
(:return (:ok nil) 847)
[Actionlist] 315.28
847: finished :describe-function 
params: nil
[---Sent---] 315.32
(:emacs-rex (swank:operator-arglist ":opaque?" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 848)

[-Received-] 315.32
(:return (:ok "([map])") 848)
[Actionlist] 315.32
848: finished :operator-arglist 
params: "([map])"
[---Sent---] 315.33
(:emacs-rex (swank:describe-function ":opaque?") "image-processing.hist-view-gui" t 849)

[-Received-] 315.33
(:return (:ok nil) 849)
[Actionlist] 315.33
849: finished :describe-function 
params: nil
[---Sent---] 315.35
(:emacs-rex (swank:operator-arglist ":mnemonic" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 850)

[-Received-] 315.35
(:return (:ok "([map])") 850)
[Actionlist] 315.35
850: finished :operator-arglist 
params: "([map])"
[---Sent---] 315.35
(:emacs-rex (swank:describe-function ":mnemonic") "image-processing.hist-view-gui" t 851)

[-Received-] 315.35
(:return (:ok nil) 851)
[Actionlist] 315.35
851: finished :describe-function 
params: nil
[---Sent---] 315.66
(:emacs-rex (swank:operator-arglist ":leading" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 852)

[-Received-] 315.67
(:return (:ok "([map])") 852)
[Actionlist] 315.67
852: finished :operator-arglist 
params: "([map])"
[---Sent---] 315.67
(:emacs-rex (swank:describe-function ":leading") "image-processing.hist-view-gui" t 853)

[-Received-] 315.67
(:return (:ok nil) 853)
[Actionlist] 315.67
853: finished :describe-function 
params: nil
[---Sent---] 315.68
(:emacs-rex (swank:operator-arglist ":leading" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 854)

[-Received-] 315.68
(:return (:ok "([map])") 854)
[Actionlist] 315.68
854: finished :operator-arglist 
params: "([map])"
[---Sent---] 315.68
(:emacs-rex (swank:describe-function ":leading") "image-processing.hist-view-gui" t 855)

[-Received-] 315.69
(:return (:ok nil) 855)
[Actionlist] 315.69
855: finished :describe-function 
params: nil
[---Sent---] 315.75
(:emacs-rex (swank:operator-arglist "grid-panel" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 856)

[-Received-] 315.75
(:return (:ok "([& {:keys [rows columns], :as opts}])") 856)
[Actionlist] 315.76
856: finished :operator-arglist 
params: "([& {:keys [rows columns], :as opts}])"
[---Sent---] 315.76
(:emacs-rex (swank:describe-function "grid-panel") "image-processing.hist-view-gui" t 857)

[-Received-] 315.76
(:return (:ok "-------------------------
seesaw.core/grid-panel
([& {:keys [rows columns], :as opts}])
  Create a panel where widgets are arranged horizontally. Options:

    :rows    Number of rows, defaults to 0, i.e. unspecified.
    :columns Number of columns.
    :items   List of widgets (passed through make-widget)
    :hgap    horizontal gap between widgets
    :vgap    vertical gap between widgets

  Note that it's usually sufficient to just give :columns and ignore :rows.

  See http://download.oracle.com/javase/6/docs/api/java/awt/GridLayout.html
  
") 857)
[Actionlist] 315.76
857: finished :describe-function 
params: "-------------------------
seesaw.core/grid-panel
([& {:keys [rows columns], :as opts}])
  Create a panel where widgets are arranged horizontally. Options:

    :rows    Number of rows, defaults to 0, i.e. unspecified.
    :columns Number of columns.
    :items   List of widgets (passed through make-widget)
    :hgap    horizontal gap between widgets
    :vgap    vertical gap between widgets

  Note that it's usually sufficient to just give :columns and ignore :rows.

  See http://download.oracle.com/javase/6/docs/api/java/awt/GridLayout.html
  
"
[---Sent---] 315.95
(:emacs-rex (swank:operator-arglist "imgs-url" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 858)

[-Received-] 315.96
(:return (:ok nil) 858)
[Actionlist] 315.96
858: finished :operator-arglist 
params: nil
[---Sent---] 316.23
(:emacs-rex (swank:operator-arglist "img-group" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 859)

[-Received-] 316.23
(:return (:ok nil) 859)
[Actionlist] 316.23
859: finished :operator-arglist 
params: nil
[---Sent---] 317.21
(:emacs-rex (swank:operator-arglist "radio" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 860)

[-Received-] 317.21
(:return (:ok "([& args])") 860)
[Actionlist] 317.21
860: finished :operator-arglist 
params: "([& args])"
[---Sent---] 317.32
(:emacs-rex (swank:operator-arglist "radio" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 861)

[-Received-] 317.32
(:return (:ok "([& args])") 861)
[Actionlist] 317.32
861: finished :operator-arglist 
params: "([& args])"
[---Sent---] 317.43
(:emacs-rex (swank:fuzzy-completions "img-grou" "image-processing.hist-view-gui" :limit 200 :time-limit-in-msec 2000) nil t 862)

[-Received-] 317.43
(:return (:ok ((nil) nil)) 862)
[Actionlist] 317.43
862: finished :fuzzy-completions 
params: [['nil'], 'nil']
[---Sent---] 317.58
(:emacs-rex (swank:operator-arglist "radio" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 863)

[-Received-] 317.58
(:return (:ok "([& args])") 863)
[Actionlist] 317.58
863: finished :operator-arglist 
params: "([& args])"
[---Sent---] 317.65
(:emacs-rex (swank:operator-arglist "radio" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 864)

[-Received-] 317.66
(:return (:ok "([& args])") 864)
[Actionlist] 317.66
864: finished :operator-arglist 
params: "([& args])"
[---Sent---] 318.28
(:emacs-rex (swank:listener-eval "(ns image-processing.hist-view-gui
    (:import 
      (javax.imageio ImageIO) 
      (java.io File)) 
    (:use 
      [clojure.java.io] 
      [seesaw core make-widget border]))


;; TODO: use radio buttons with group
(defn create-hist-panel 
  [img-paths]
  \"Creates a horizontal panel showing the images placed at the input paths.\"
  #^ {:arglists [img-paths]}
  (let [img-group (buttom-group)
        imgs (map #(radio :group img-group :icon (as-url (File. %))) img-paths)]
    ;(horizontal-panel
    ;  :items (vec imgs-url)
    ;  :border 5)
    (grid-panel
      :border 5
      :hgap 10 :vgap 10
      :items (vec imgs))))



(def x '(\"test/image_processing/test/1a7r.gif\"
         \"test/image_processing/test/1azc.gif\"))

(defn create-frame [] 
  (-> (frame :title \"Hello\",
             :content  (create-hist-panel x))
      ;:on-close :exit)
      pack!
      show!)) 

") "image-processing.hist-view-gui" :repl-thread 865)

[-Received-] 318.31
(:debug 1 1 ("Unable to resolve symbol: buttom-group in this context" "  [Thrown class java.lang.RuntimeException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "              Util.java:156 clojure.lang.Util.runtimeException" (:restartable nil)) (1 "         Compiler.java:6720 clojure.lang.Compiler.resolveIn" (:restartable nil)) (2 "         Compiler.java:6664 clojure.lang.Compiler.resolve" (:restartable nil)) (3 "         Compiler.java:6625 clojure.lang.Compiler.analyzeSymbol" (:restartable nil)) (4 "         Compiler.java:6198 clojure.lang.Compiler.analyze" (:restartable nil)) (5 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil)) (6 "         Compiler.java:3452 clojure.lang.Compiler$InvokeExpr.parse" (:restartable nil)) (7 "         Compiler.java:6411 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (8 "         Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil)) (9 "           Compiler.java:37 clojure.lang.Compiler.access$100" (:restartable nil))) (nil))
[-Received-] 318.31
(:debug-activate 1 1 nil)
[---Sent---] 318.46
(:emacs-rex (swank:throw-to-toplevel) nil 1 866)

[-Received-] 318.46
(:return (:abort) 866)
[Actionlist] 318.47
865: pending  :listener-eval 
866: finished :throw-to-toplevel 
[-Received-] 318.47
(:debug-return 1 1 nil)
[-Received-] 318.47
(:return (:abort) 865)
[Actionlist] 318.47
865: finished :listener-eval 
866: finished :throw-to-toplevel 
[---Sent---] 318.7
(:emacs-rex (swank:listener-eval "(ns image-processing.hist-view-gui
    (:import 
      (javax.imageio ImageIO) 
      (java.io File)) 
    (:use 
      [clojure.java.io] 
      [seesaw core make-widget border]))


;; TODO: use radio buttons with group
(defn create-hist-panel 
  [img-paths]
  \"Creates a horizontal panel showing the images placed at the input paths.\"
  #^ {:arglists [img-paths]}
  (let [img-group (button-group)
        imgs (map #(radio :group img-group :icon (as-url (File. %))) img-paths)]
    ;(horizontal-panel
    ;  :items (vec imgs-url)
    ;  :border 5)
    (grid-panel
      :border 5
      :hgap 10 :vgap 10
      :items (vec imgs))))



(def x '(\"test/image_processing/test/1a7r.gif\"
         \"test/image_processing/test/1azc.gif\"))

(defn create-frame [] 
  (-> (frame :title \"Hello\",
             :content  (create-hist-panel x))
      ;:on-close :exit)
      pack!
      show!)) 

") "image-processing.hist-view-gui" :repl-thread 867)

[-Received-] 318.74
(:write-string "#'image-processing.hist-view-gui/create-frame
" :repl-result)
[-Received-] 318.74
(:return (:ok nil) 867)
[Actionlist] 318.74
867: finished :listener-eval 
params: nil
[---Sent---] 319.08
(:emacs-rex (swank:listener-eval "(create-frame)
") "image-processing.hist-view-gui" :repl-thread 868)

[-Received-] 319.13
(:write-string "#<JFrame$Tag$a79ba523 seesaw.core.proxy$javax.swing.JFrame$Tag$a79ba523[frame3,0,31,228x246,layout=java.awt.BorderLayout,title=Hello,resizable,normal,defaultCloseOperation=HIDE_ON_CLOSE,rootPane=javax.swing.JRootPane[,5,25,218x216,layout=javax.swing.JRootPane$RootLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=16777673,maximumSize=,minimumSize=,preferredSize=],rootPaneCheckingEnabled=true]>
" :repl-result)
[-Received-] 319.13
(:return (:ok nil) 868)
[Actionlist] 319.13
868: finished :listener-eval 
params: nil
[---Sent---] 319.35
(:emacs-rex (swank:operator-arglist "seesaw.dnd/to-transfer-handler" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 869)

[-Received-] 319.35
(:return (:ok "([v])") 869)
[Actionlist] 319.35
869: finished :operator-arglist 
params: "([v])"
[---Sent---] 319.35
(:emacs-rex (swank:describe-function "seesaw.dnd/to-transfer-handler") "image-processing.hist-view-gui" t 870)

[-Received-] 319.35
(:return (:ok "-------------------------
seesaw.dnd/to-transfer-handler
([v])
  nil
") 870)
[Actionlist] 319.35
870: finished :describe-function 
params: "-------------------------
seesaw.dnd/to-transfer-handler
([v])
  nil
"
[---Sent---] 319.49
(:emacs-rex (swank:operator-arglist "as-url" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 871)

[-Received-] 319.49
(:return (:ok "([x])") 871)
[Actionlist] 319.49
871: finished :operator-arglist 
params: "([x])"
[---Sent---] 319.49
(:emacs-rex (swank:describe-function "as-url") "image-processing.hist-view-gui" t 872)

[-Received-] 319.49
(:return (:ok "-------------------------
clojure.java.io/as-url
([x])
  Coerce argument to a URL.
") 872)
[Actionlist] 319.49
872: finished :describe-function 
params: "-------------------------
clojure.java.io/as-url
([x])
  Coerce argument to a URL.
"
[---Sent---] 319.69
(:emacs-rex (swank:listener-eval "(defn create-hist-panel 
  [img-paths]
  \"Creates a horizontal panel showing the images placed at the input paths.\"
  #^ {:arglists [img-paths]}
  (let [img-group (button-group)
        imgs (map #(radio :group img-group :text (as-url (File. %))) img-paths)]
    ;(horizontal-panel
    ;  :items (vec imgs-url)
    ;  :border 5)
    (grid-panel
      :border 5
      :hgap 10 :vgap 10
      :items (vec imgs))))
") "image-processing.hist-view-gui" :repl-thread 873)

[-Received-] 319.69
(:write-string "#'image-processing.hist-view-gui/create-hist-panel
" :repl-result)
[-Received-] 319.69
(:return (:ok nil) 873)
[Actionlist] 319.69
873: finished :listener-eval 
params: nil
[---Sent---] 319.88
(:emacs-rex (swank:listener-eval "(create-frame)
") "image-processing.hist-view-gui" :repl-thread 874)

[-Received-] 319.96
(:write-string "#<JFrame$Tag$a79ba523 seesaw.core.proxy$javax.swing.JFrame$Tag$a79ba523[frame4,0,31,35772x96,layout=java.awt.BorderLayout,title=Hello,resizable,normal,defaultCloseOperation=HIDE_ON_CLOSE,rootPane=javax.swing.JRootPane[,5,25,35762x66,layout=javax.swing.JRootPane$RootLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=16777673,maximumSize=,minimumSize=,preferredSize=],rootPaneCheckingEnabled=true]>
" :repl-result)
[-Received-] 319.96
(:return (:ok nil) 874)
[Actionlist] 319.96
874: finished :listener-eval 
params: nil
[---Sent---] 320.37
(:emacs-rex (swank:operator-arglist "as-url" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 875)

[-Received-] 320.37
(:return (:ok "([x])") 875)
[Actionlist] 320.37
875: finished :operator-arglist 
params: "([x])"
[---Sent---] 320.38
(:emacs-rex (swank:describe-function "as-url") "image-processing.hist-view-gui" t 876)

[-Received-] 320.38
(:return (:ok "-------------------------
clojure.java.io/as-url
([x])
  Coerce argument to a URL.
") 876)
[Actionlist] 320.38
876: finished :describe-function 
params: "-------------------------
clojure.java.io/as-url
([x])
  Coerce argument to a URL.
"
[---Sent---] 320.41
(:emacs-rex (swank:operator-arglist "as-url" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 877)

[-Received-] 320.41
(:return (:ok "([x])") 877)
[Actionlist] 320.41
877: finished :operator-arglist 
params: "([x])"
[---Sent---] 320.41
(:emacs-rex (swank:describe-function "as-url") "image-processing.hist-view-gui" t 878)

[-Received-] 320.42
(:return (:ok "-------------------------
clojure.java.io/as-url
([x])
  Coerce argument to a URL.
") 878)
[Actionlist] 320.42
878: finished :describe-function 
params: "-------------------------
clojure.java.io/as-url
([x])
  Coerce argument to a URL.
"
[---Sent---] 320.81
(:emacs-rex (swank:operator-arglist "as-url" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 879)

[-Received-] 320.81
(:return (:ok "([x])") 879)
[Actionlist] 320.81
879: finished :operator-arglist 
params: "([x])"
[---Sent---] 320.81
(:emacs-rex (swank:describe-function "as-url") "image-processing.hist-view-gui" t 880)

[-Received-] 320.81
(:return (:ok "-------------------------
clojure.java.io/as-url
([x])
  Coerce argument to a URL.
") 880)
[Actionlist] 320.81
880: finished :describe-function 
params: "-------------------------
clojure.java.io/as-url
([x])
  Coerce argument to a URL.
"
[---Sent---] 320.99
(:emacs-rex (swank:listener-eval "(defn create-hist-panel 
  [img-paths]
  \"Creates a horizontal panel showing the images placed at the input paths.\"
  #^ {:arglists [img-paths]}
  (let [img-group (button-group)
        imgs (map #(radio :group img-group :resource (as-url (File. %))) img-paths)]
    ;(horizontal-panel
    ;  :items (vec imgs-url)
    ;  :border 5)
    (grid-panel
      :border 5
      :hgap 10 :vgap 10
      :items (vec imgs))))
") "image-processing.hist-view-gui" :repl-thread 881)

[-Received-] 320.99
(:write-string "#'image-processing.hist-view-gui/create-hist-panel
" :repl-result)
[-Received-] 320.99
(:return (:ok nil) 881)
[Actionlist] 320.99
881: finished :listener-eval 
params: nil
[---Sent---] 321.4
(:emacs-rex (swank:listener-eval "(create-frame)
") "image-processing.hist-view-gui" :repl-thread 882)

[-Received-] 321.4
(:debug 1 1 ("Assert failed: (resource-key? value)" "  [Thrown class java.lang.AssertionError]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "        options.clj:97 seesaw.options/resource-option[fn]" (:restartable nil)) (1 "       options.clj:114 seesaw.options/apply-option" (:restartable nil)) (2 "       options.clj:129 seesaw.options/apply-options*" (:restartable nil)) (3 "       options.clj:136 seesaw.options/apply-options" (:restartable nil)) (4 "         core.clj:1297 seesaw.core/radio" (:restartable nil)) (5 "       RestFn.java:457 clojure.lang.RestFn.invoke" (:restartable nil)) (6 "      NO_SOURCE_FILE:1 image-processing.hist-view-gui/create-hist-panel[fn]" (:restartable nil)) (7 "         core.clj:2432 clojure.core/map[fn]" (:restartable nil)) (8 "       LazySeq.java:42 clojure.lang.LazySeq.sval" (:restartable nil)) (9 "       LazySeq.java:60 clojure.lang.LazySeq.seq" (:restartable nil))) (nil))
[-Received-] 321.41
(:debug-activate 1 1 nil)
[---Sent---] 321.52
(:emacs-rex (swank:throw-to-toplevel) nil 1 883)

[-Received-] 321.52
(:return (:abort) 883)
[Actionlist] 321.52
882: pending  :listener-eval 
883: finished :throw-to-toplevel 
[-Received-] 321.52
(:debug-return 1 1 nil)
[-Received-] 321.52
(:return (:abort) 882)
[Actionlist] 321.53
882: finished :listener-eval 
883: finished :throw-to-toplevel 
[---Sent---] 321.72
(:emacs-rex (swank:operator-arglist "radio" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 884)

[-Received-] 321.73
(:return (:ok "([& args])") 884)
[Actionlist] 321.73
884: finished :operator-arglist 
params: "([& args])"
[---Sent---] 322.08
(:emacs-rex (swank:listener-eval "(defn create-hist-panel 
  [img-paths]
  \"Creates a horizontal panel showing the images placed at the input paths.\"
  #^ {:arglists [img-paths]}
  (let [img-group (button-group)
        imgs (map #(radio :group img-group :resource {:icon (as-url (File. %))}) img-paths)]
    ;(horizontal-panel
    ;  :items (vec imgs-url)
    ;  :border 5)
    (grid-panel
      :border 5
      :hgap 10 :vgap 10
      :items (vec imgs))))
") "image-processing.hist-view-gui" :repl-thread 885)

[-Received-] 322.08
(:write-string "#'image-processing.hist-view-gui/create-hist-panel
" :repl-result)
[-Received-] 322.08
(:return (:ok nil) 885)
[Actionlist] 322.08
885: finished :listener-eval 
params: nil
[---Sent---] 322.31
(:emacs-rex (swank:listener-eval "(create-frame)
") "image-processing.hist-view-gui" :repl-thread 886)

[-Received-] 322.36
(:debug 1 1 ("Assert failed: (resource-key? value)" "  [Thrown class java.lang.AssertionError]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "        options.clj:97 seesaw.options/resource-option[fn]" (:restartable nil)) (1 "       options.clj:114 seesaw.options/apply-option" (:restartable nil)) (2 "       options.clj:129 seesaw.options/apply-options*" (:restartable nil)) (3 "       options.clj:136 seesaw.options/apply-options" (:restartable nil)) (4 "         core.clj:1297 seesaw.core/radio" (:restartable nil)) (5 "       RestFn.java:457 clojure.lang.RestFn.invoke" (:restartable nil)) (6 "      NO_SOURCE_FILE:1 image-processing.hist-view-gui/create-hist-panel[fn]" (:restartable nil)) (7 "         core.clj:2432 clojure.core/map[fn]" (:restartable nil)) (8 "       LazySeq.java:42 clojure.lang.LazySeq.sval" (:restartable nil)) (9 "       LazySeq.java:60 clojure.lang.LazySeq.seq" (:restartable nil))) (nil))
[---Sent---] 323.52
(:emacs-rex (swank:listener-eval "(defn create-hist-panel 
  [img-paths]
  \"Creates a horizontal panel showing the images placed at the input paths.\"
  #^ {:arglists [img-paths]}
  (let [img-group (button-group)
        imgs (map #(radio :group img-group :text (to-widget (as-url (File. %)))) img-paths)]
    ;(horizontal-panel
    ;  :items (vec imgs-url)
    ;  :border 5)
    (grid-panel
      :border 5
      :hgap 10 :vgap 10
      :items (vec imgs))))
") "image-processing.hist-view-gui" :repl-thread 888)

[-Received-] 323.52
(:write-string "#'image-processing.hist-view-gui/create-hist-panel
" :repl-result)
[-Received-] 323.59
(:return (:ok nil) 888)
[Actionlist] 323.59
888: finished :listener-eval 
params: nil
[---Sent---] 323.93
(:emacs-rex (swank:listener-eval "(create-frame)
") "image-processing.hist-view-gui" :repl-thread 889)

[-Received-] 323.98
(:write-string "#<JFrame$Tag$a79ba523 seesaw.core.proxy$javax.swing.JFrame$Tag$a79ba523[frame5,0,31,41x92,layout=java.awt.BorderLayout,title=Hello,resizable,normal,defaultCloseOperation=HIDE_ON_CLOSE,rootPane=javax.swing.JRootPane[,5,25,31x62,layout=javax.swing.JRootPane$RootLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=16777673,maximumSize=,minimumSize=,preferredSize=],rootPaneCheckingEnabled=true]>
" :repl-result)
[-Received-] 323.98
(:return (:ok nil) 889)
[Actionlist] 323.98
889: finished :listener-eval 
params: nil
[---Sent---] 326.81
(:emacs-rex (swank:operator-arglist ":text" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 890)

[-Received-] 326.81
(:return (:ok "([map])") 890)
[Actionlist] 326.81
890: finished :operator-arglist 
params: "([map])"
[---Sent---] 326.81
(:emacs-rex (swank:describe-function ":text") "image-processing.hist-view-gui" t 891)

[-Received-] 326.81
(:return (:ok nil) 891)
[Actionlist] 326.82
891: finished :describe-function 
params: nil
[---Sent---] 326.9
(:emacs-rex (swank:operator-arglist "to-widget" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 892)

[-Received-] 326.91
(:return (:ok "([v])") 892)
[Actionlist] 326.91
892: finished :operator-arglist 
params: "([v])"
[---Sent---] 326.91
(:emacs-rex (swank:describe-function "to-widget") "image-processing.hist-view-gui" t 893)

[-Received-] 326.91
(:return (:ok "-------------------------
seesaw.core/to-widget
([v])
  Try to convert the input argument to a widget based on the following rules:

    nil -> nil
    java.awt.Component -> return argument unchanged
    java.util.EventObject -> return the event source

  See:
    (seeseaw.to-widget)
  
") 893)
[Actionlist] 326.91
893: finished :describe-function 
params: "-------------------------
seesaw.core/to-widget
([v])
  Try to convert the input argument to a widget based on the following rules:

    nil -> nil
    java.awt.Component -> return argument unchanged
    java.util.EventObject -> return the event source

  See:
    (seeseaw.to-widget)
  
"
[---Sent---] 327.01
(:emacs-rex (swank:operator-arglist "))))" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 894)

[-Received-] 327.01
(:return (:ok nil) 894)
[Actionlist] 327.01
894: finished :operator-arglist 
params: nil
[---Sent---] 327.13
(:emacs-rex (swank:operator-arglist "vec" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 895)

[-Received-] 327.13
(:return (:ok "([coll])") 895)
[Actionlist] 327.14
895: finished :operator-arglist 
params: "([coll])"
[---Sent---] 327.22
(:emacs-rex (swank:operator-arglist "map" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 896)

[-Received-] 327.22
(:return (:ok "([f coll] [f c1 c2] [f c1 c2 c3] [f c1 c2 c3 & colls])") 896)
[Actionlist] 327.22
896: finished :operator-arglist 
params: "([f coll] [f c1 c2] [f c1 c2 c3] [f c1 c2 c3 & colls])"
[---Sent---] 327.52
(:emacs-rex (swank:operator-arglist "horizontal-panel" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 897)

[-Received-] 327.52
(:return (:ok "([& opts])") 897)
[Actionlist] 327.52
897: finished :operator-arglist 
params: "([& opts])"
[---Sent---] 327.62
(:emacs-rex (swank:operator-arglist "horizontal-panel" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 898)

[-Received-] 327.62
(:return (:ok "([& opts])") 898)
[Actionlist] 327.63
898: finished :operator-arglist 
params: "([& opts])"
[---Sent---] 327.71
(:emacs-rex (swank:operator-arglist "vec" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 899)

[-Received-] 327.71
(:return (:ok "([coll])") 899)
[Actionlist] 327.71
899: finished :operator-arglist 
params: "([coll])"
[---Sent---] 327.96
(:emacs-rex (swank:operator-arglist "radio" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 900)

[-Received-] 327.96
(:return (:ok "([& args])") 900)
[Actionlist] 327.96
900: finished :operator-arglist 
params: "([& args])"
[---Sent---] 328.06
(:emacs-rex (swank:operator-arglist "radio" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 901)

[-Received-] 328.06
(:return (:ok "([& args])") 901)
[Actionlist] 328.06
901: finished :operator-arglist 
params: "([& args])"
[---Sent---] 328.21
(:emacs-rex (swank:operator-arglist "radio" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 902)

[-Received-] 328.21
(:return (:ok "([& args])") 902)
[Actionlist] 328.21
902: finished :operator-arglist 
params: "([& args])"
[---Sent---] 328.37
(:emacs-rex (swank:operator-arglist "radio" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 903)

[-Received-] 328.38
(:return (:ok "([& args])") 903)
[Actionlist] 328.38
903: finished :operator-arglist 
params: "([& args])"
[---Sent---] 328.55
(:emacs-rex (swank:operator-arglist ")]))))))" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 904)

[-Received-] 328.55
(:return (:ok nil) 904)
[Actionlist] 328.55
904: finished :operator-arglist 
params: nil
[---Sent---] 328.98
(:emacs-rex (swank:operator-arglist "as-url" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 905)

[-Received-] 328.98
(:return (:ok "([x])") 905)
[Actionlist] 328.98
905: finished :operator-arglist 
params: "([x])"
[---Sent---] 329.84
(:emacs-rex (swank:listener-eval "(defn create-hist-panel 
  [img-paths]
  \"Creates a horizontal panel showing the images placed at the input paths.\"
  #^ {:arglists [img-paths]}
  (let [img-group (button-group)]
    ;(horizontal-panel
    ;  :items (vec imgs-url)
    ;  :border 5)
    (grid-panel
      :border 5
      :hgap 10 :vgap 10
      :items (vec (map #(horizontal-panel 
                          :items [(radio :group img-group :user-data %) (as-url (File. %))])
                       img-paths)))))
") "image-processing.hist-view-gui" :repl-thread 906)

[-Received-] 329.84
(:write-string "#'image-processing.hist-view-gui/create-hist-panel
" :repl-result)
[-Received-] 329.84
(:return (:ok nil) 906)
[Actionlist] 329.84
906: finished :listener-eval 
params: nil
[---Sent---] 330.06
(:emacs-rex (swank:listener-eval "(create-frame)
") "image-processing.hist-view-gui" :repl-thread 907)

[-Received-] 330.12
(:write-string "#<JFrame$Tag$a79ba523 seesaw.core.proxy$javax.swing.JFrame$Tag$a79ba523[frame6,0,31,241x230,layout=java.awt.BorderLayout,title=Hello,resizable,normal,defaultCloseOperation=HIDE_ON_CLOSE,rootPane=javax.swing.JRootPane[,5,25,231x200,layout=javax.swing.JRootPane$RootLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=16777673,maximumSize=,minimumSize=,preferredSize=],rootPaneCheckingEnabled=true]>
" :repl-result)
[-Received-] 330.12
(:return (:ok nil) 907)
[Actionlist] 330.12
907: finished :listener-eval 
params: nil
[---Sent---] 330.32
(:emacs-rex (swank:operator-arglist ")))))" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 908)

[-Received-] 330.32
(:return (:ok nil) 908)
[Actionlist] 330.32
908: finished :operator-arglist 
params: nil
[---Sent---] 330.57
(:emacs-rex (swank:operator-arglist "The" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 909)

[-Received-] 330.57
(:return (:ok nil) 909)
[Actionlist] 330.57
909: finished :operator-arglist 
params: nil
[---Sent---] 330.63
(:emacs-rex (swank:operator-arglist "The" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 910)

[-Received-] 330.63
(:return (:ok nil) 910)
[Actionlist] 330.63
910: finished :operator-arglist 
params: nil
[---Sent---] 330.66
(:emacs-rex (swank:operator-arglist "The" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 911)

[-Received-] 330.66
(:return (:ok nil) 911)
[Actionlist] 330.66
911: finished :operator-arglist 
params: nil
[---Sent---] 330.72
(:emacs-rex (swank:operator-arglist "The" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 912)

[-Received-] 330.72
(:return (:ok nil) 912)
[Actionlist] 330.72
912: finished :operator-arglist 
params: nil
[---Sent---] 330.74
(:emacs-rex (swank:operator-arglist "The" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 913)

[-Received-] 330.74
(:return (:ok nil) 913)
[Actionlist] 330.74
913: finished :operator-arglist 
params: nil
[---Sent---] 330.79
(:emacs-rex (swank:operator-arglist "The" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 914)

[-Received-] 330.79
(:return (:ok nil) 914)
[Actionlist] 330.79
914: finished :operator-arglist 
params: nil
[---Sent---] 330.82
(:emacs-rex (swank:operator-arglist "The" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 915)

[-Received-] 330.82
(:return (:ok nil) 915)
[Actionlist] 330.83
915: finished :operator-arglist 
params: nil
[---Sent---] 330.85
(:emacs-rex (swank:operator-arglist "The" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 916)

[-Received-] 330.85
(:return (:ok nil) 916)
[Actionlist] 330.85
916: finished :operator-arglist 
params: nil
[---Sent---] 330.96
(:emacs-rex (swank:operator-arglist "The" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 917)

[-Received-] 330.96
(:return (:ok nil) 917)
[Actionlist] 330.97
917: finished :operator-arglist 
params: nil
[---Sent---] 330.99
(:emacs-rex (swank:operator-arglist "The" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 918)

[-Received-] 330.99
(:return (:ok nil) 918)
[Actionlist] 330.99
918: finished :operator-arglist 
params: nil
[---Sent---] 331.02
(:emacs-rex (swank:operator-arglist "The" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 919)

[-Received-] 331.02
(:return (:ok nil) 919)
[Actionlist] 331.02
919: finished :operator-arglist 
params: nil
[---Sent---] 331.06
(:emacs-rex (swank:operator-arglist "The" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 920)

[-Received-] 331.06
(:return (:ok nil) 920)
[Actionlist] 331.06
920: finished :operator-arglist 
params: nil
[---Sent---] 333.85
(:emacs-rex (swank:operator-arglist "defn" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 922)

[-Received-] 333.85
(:return (:ok "([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])") 922)
[Actionlist] 333.85
922: finished :operator-arglist 
params: "([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])"
[---Sent---] 334.51
(:emacs-rex (swank:operator-arglist "hist-panel" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 923)

[-Received-] 334.51
(:return (:ok nil) 923)
[Actionlist] 334.51
923: finished :operator-arglist 
params: nil
[---Sent---] 335.46
(:emacs-rex (swank:operator-arglist "set-hist-panel" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 924)

[-Received-] 335.46
(:return (:ok nil) 924)
[Actionlist] 335.46
924: finished :operator-arglist 
params: nil
[---Sent---] 335.77
(:emacs-rex (swank:operator-arglist "img-paths" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 925)

[-Received-] 335.77
(:return (:ok nil) 925)
[Actionlist] 335.77
925: finished :operator-arglist 
params: nil
[---Sent---] 335.86
(:emacs-rex (swank:operator-arglist "javax.imageio" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 926)

[-Received-] 335.86
(:return (:ok nil) 926)
[Actionlist] 335.86
926: finished :operator-arglist 
params: nil
[---Sent---] 336.05
(:emacs-rex (swank:operator-arglist "as-url" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 927)

[-Received-] 336.05
(:return (:ok "([x])") 927)
[Actionlist] 336.05
927: finished :operator-arglist 
params: "([x])"
[---Sent---] 336.05
(:emacs-rex (swank:describe-function "as-url") "image-processing.hist-view-gui" t 928)

[-Received-] 336.05
(:return (:ok "-------------------------
clojure.java.io/as-url
([x])
  Coerce argument to a URL.
") 928)
[Actionlist] 336.05
928: finished :describe-function 
params: "-------------------------
clojure.java.io/as-url
([x])
  Coerce argument to a URL.
"
[---Sent---] 336.07
(:emacs-rex (swank:operator-arglist "as-url" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 929)

[-Received-] 336.07
(:return (:ok "([x])") 929)
[Actionlist] 336.07
929: finished :operator-arglist 
params: "([x])"
[---Sent---] 336.07
(:emacs-rex (swank:describe-function "as-url") "image-processing.hist-view-gui" t 930)

[-Received-] 336.08
(:return (:ok "-------------------------
clojure.java.io/as-url
([x])
  Coerce argument to a URL.
") 930)
[Actionlist] 336.08
930: finished :describe-function 
params: "-------------------------
clojure.java.io/as-url
([x])
  Coerce argument to a URL.
"
[---Sent---] 336.14
(:emacs-rex (swank:operator-arglist "img-paths" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 931)

[-Received-] 336.14
(:return (:ok nil) 931)
[Actionlist] 336.14
931: finished :operator-arglist 
params: nil
[---Sent---] 336.54
(:emacs-rex (swank:operator-arglist "File" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 932)

[-Received-] 336.54
(:return (:ok nil) 932)
[Actionlist] 336.54
932: finished :operator-arglist 
params: nil
[---Sent---] 336.8
(:emacs-rex (swank:operator-arglist "ImageIO/read" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 933)

[-Received-] 336.8
(:return (:ok nil) 933)
[Actionlist] 336.8
933: finished :operator-arglist 
params: nil
[---Sent---] 336.99
(:emacs-rex (swank:listener-eval "(defn create-hist-panel 
  [img-paths]
  \"Creates a horizontal panel showing the images placed at the input paths.\"
  #^{:arglists [img-paths]}
  (let [img-group (button-group)]
    (grid-panel
      :border 5
      :hgap 10 :vgap 10
      :items (vec (map #(horizontal-panel
                          ;; The image's path can be retrieved by the user-data of the radio
                          ;; button.
                          :items [(radio :group img-group :user-data %) (ImageIO/read (File. %))])
                       img-paths)))))
") "image-processing.hist-view-gui" :repl-thread 934)

[-Received-] 336.99
(:write-string "#'image-processing.hist-view-gui/create-hist-panel
" :repl-result)
[-Received-] 337.07
(:return (:ok nil) 934)
[Actionlist] 337.07
934: finished :listener-eval 
params: nil
[---Sent---] 337.25
(:emacs-rex (swank:listener-eval "(create-frame)
") "image-processing.hist-view-gui" :repl-thread 935)

[-Received-] 337.31
(:debug 1 1 ("No implementation of method: :make-widget* of protocol: #'seesaw.make-widget/MakeWidget found for class: java.awt.image.BufferedImage" "  [Thrown class java.lang.IllegalArgumentException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "core_deftype.clj:495 clojure.core/-cache-protocol-fn" (:restartable nil)) (1 " make_widget.clj:16 seesaw.make-widget/eval2742[fn]" (:restartable nil)) (2 "      layout.clj:38 seesaw.layout/add-widget" (:restartable nil)) (3 "      layout.clj:36 seesaw.layout/add-widget" (:restartable nil)) (4 "      layout.clj:47 seesaw.layout/add-widgets" (:restartable nil)) (5 "      layout.clj:53 seesaw.layout/fn" (:restartable nil)) (6 "    options.clj:114 seesaw.options/apply-option" (:restartable nil)) (7 "    options.clj:129 seesaw.options/apply-options*" (:restartable nil)) (8 "    options.clj:136 seesaw.options/apply-options" (:restartable nil)) (9 "       core.clj:907 seesaw.core/abstract-panel" (:restartable nil))) (nil))
[-Received-] 337.31
(:debug-activate 1 1 nil)
[---Sent---] 337.52
(:emacs-rex (swank:throw-to-toplevel) nil 1 936)

[-Received-] 337.52
(:return (:abort) 936)
[Actionlist] 337.52
935: pending  :listener-eval 
936: finished :throw-to-toplevel 
[-Received-] 337.53
(:debug-return 1 1 nil)
[-Received-] 337.53
(:return (:abort) 935)
[Actionlist] 337.53
935: finished :listener-eval 
936: finished :throw-to-toplevel 
[---Sent---] 338.07
(:emacs-rex (swank:operator-arglist "radio" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 937)

[-Received-] 338.08
(:return (:ok "([& args])") 937)
[Actionlist] 338.08
937: finished :operator-arglist 
params: "([& args])"
[---Sent---] 338.17
(:emacs-rex (swank:operator-arglist "radio" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 938)

[-Received-] 338.17
(:return (:ok "([& args])") 938)
[Actionlist] 338.17
938: finished :operator-arglist 
params: "([& args])"
[---Sent---] 338.36
(:emacs-rex (swank:listener-eval "(defn create-hist-panel 
  [img-paths]
  \"Creates a horizontal panel showing the images placed at the input paths.\"
  #^{:arglists [img-paths]}
  (let [img-group (button-group)]
    (grid-panel
      :border 5
      :hgap 10 :vgap 10
      :items (vec (map #(horizontal-panel
                          ;; The image's path can be retrieved by the user-data of the radio
                          ;; button.
                          :items [(radio :group img-group :user-data % :icon (ImageIO/read (File. %))) ])
                       img-paths)))))
") "image-processing.hist-view-gui" :repl-thread 939)

[-Received-] 338.36
(:write-string "#'image-processing.hist-view-gui/create-hist-panel
" :repl-result)
[-Received-] 338.36
(:return (:ok nil) 939)
[Actionlist] 338.36
939: finished :listener-eval 
params: nil
[---Sent---] 338.57
(:emacs-rex (swank:listener-eval "(create-frame)
") "image-processing.hist-view-gui" :repl-thread 940)

[-Received-] 338.63
(:write-string "#<JFrame$Tag$a79ba523 seesaw.core.proxy$javax.swing.JFrame$Tag$a79ba523[frame7,0,31,228x246,layout=java.awt.BorderLayout,title=Hello,resizable,normal,defaultCloseOperation=HIDE_ON_CLOSE,rootPane=javax.swing.JRootPane[,5,25,218x216,layout=javax.swing.JRootPane$RootLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=16777673,maximumSize=,minimumSize=,preferredSize=],rootPaneCheckingEnabled=true]>
" :repl-result)
[-Received-] 338.63
(:return (:ok nil) 940)
[Actionlist] 338.63
940: finished :listener-eval 
params: nil
[---Sent---] 338.87
(:emacs-rex (swank:operator-arglist ":icon" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 941)

[-Received-] 338.87
(:return (:ok "([map])") 941)
[Actionlist] 338.88
941: finished :operator-arglist 
params: "([map])"
[---Sent---] 338.88
(:emacs-rex (swank:describe-function ":icon") "image-processing.hist-view-gui" t 942)

[-Received-] 338.88
(:return (:ok nil) 942)
[Actionlist] 338.88
942: finished :describe-function 
params: nil
[---Sent---] 339.35
(:emacs-rex (swank:listener-eval "(defn create-hist-panel 
  [img-paths]
  \"Creates a horizontal panel showing the images placed at the input paths.\"
  #^{:arglists [img-paths]}
  (let [img-group (button-group)]
    (grid-panel
      :border 5
      :hgap 10 :vgap 10
      :items (vec (map #(horizontal-panel
                          ;; The image's path can be retrieved by the user-data of the radio
                          ;; button.
                          :items [(radio :group img-group :user-data %) (to-widget (ImageIO/read (File. %)))])
                       img-paths)))))
") "image-processing.hist-view-gui" :repl-thread 943)

[-Received-] 339.35
(:write-string "#'image-processing.hist-view-gui/create-hist-panel
" :repl-result)
[-Received-] 339.35
(:return (:ok nil) 943)
[Actionlist] 339.35
943: finished :listener-eval 
params: nil
[---Sent---] 339.55
(:emacs-rex (swank:listener-eval "(create-frame)
") "image-processing.hist-view-gui" :repl-thread 944)

[-Received-] 339.61
(:debug 1 1 ("Can't add nil widget. Original was ()" "  [Thrown class java.lang.IllegalArgumentException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "        util.clj:23 seesaw.util/check-args" (:restartable nil)) (1 "      layout.clj:39 seesaw.layout/add-widget" (:restartable nil)) (2 "      layout.clj:36 seesaw.layout/add-widget" (:restartable nil)) (3 "      layout.clj:47 seesaw.layout/add-widgets" (:restartable nil)) (4 "      layout.clj:53 seesaw.layout/fn" (:restartable nil)) (5 "    options.clj:114 seesaw.options/apply-option" (:restartable nil)) (6 "    options.clj:129 seesaw.options/apply-options*" (:restartable nil)) (7 "    options.clj:136 seesaw.options/apply-options" (:restartable nil)) (8 "       core.clj:907 seesaw.core/abstract-panel" (:restartable nil)) (9 "       core.clj:910 seesaw.core/abstract-panel" (:restartable nil))) (nil))
[-Received-] 339.61
(:debug-activate 1 1 nil)
[---Sent---] 339.81
(:emacs-rex (swank:throw-to-toplevel) nil 1 945)

[-Received-] 339.81
(:return (:abort) 945)
[Actionlist] 339.81
944: pending  :listener-eval 
945: finished :throw-to-toplevel 
[-Received-] 339.81
(:debug-return 1 1 nil)
[-Received-] 339.81
(:return (:abort) 944)
[Actionlist] 339.81
944: finished :listener-eval 
945: finished :throw-to-toplevel 
[---Sent---] 340.09
(:emacs-rex (swank:operator-arglist "label" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 946)

[-Received-] 340.09
(:return (:ok "([& args])") 946)
[Actionlist] 340.09
946: finished :operator-arglist 
params: "([& args])"
[---Sent---] 340.18
(:emacs-rex (swank:operator-arglist "label" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 947)

[-Received-] 340.18
(:return (:ok "([& args])") 947)
[Actionlist] 340.18
947: finished :operator-arglist 
params: "([& args])"
[---Sent---] 340.26
(:emacs-rex (swank:listener-eval "(defn create-hist-panel 
  [img-paths]
  \"Creates a horizontal panel showing the images placed at the input paths.\"
  #^{:arglists [img-paths]}
  (let [img-group (button-group)]
    (grid-panel
      :border 5
      :hgap 10 :vgap 10
      :items (vec (map #(horizontal-panel
                          ;; The image's path can be retrieved by the user-data of the radio
                          ;; button.
                          :items [(radio :group img-group :user-data %) (label :icon (ImageIO/read (File. %)))])
                       img-paths)))))
") "image-processing.hist-view-gui" :repl-thread 948)

[-Received-] 340.27
(:write-string "#'image-processing.hist-view-gui/create-hist-panel
" :repl-result)
[-Received-] 340.27
(:return (:ok nil) 948)
[Actionlist] 340.27
948: finished :listener-eval 
params: nil
[---Sent---] 340.45
(:emacs-rex (swank:listener-eval "(create-frame)
") "image-processing.hist-view-gui" :repl-thread 949)

[-Received-] 340.51
(:write-string "#<JFrame$Tag$a79ba523 seesaw.core.proxy$javax.swing.JFrame$Tag$a79ba523[frame8,0,31,241x230,layout=java.awt.BorderLayout,title=Hello,resizable,normal,defaultCloseOperation=HIDE_ON_CLOSE,rootPane=javax.swing.JRootPane[,5,25,231x200,layout=javax.swing.JRootPane$RootLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=16777673,maximumSize=,minimumSize=,preferredSize=],rootPaneCheckingEnabled=true]>
" :repl-result)
[-Received-] 340.51
(:return (:ok nil) 949)
[Actionlist] 340.51
949: finished :listener-eval 
params: nil
[---Sent---] 340.96
(:emacs-rex (swank:operator-arglist "button" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 950)

[-Received-] 340.96
(:return (:ok "([& args])") 950)
[Actionlist] 340.96
950: finished :operator-arglist 
params: "([& args])"
[---Sent---] 340.96
(:emacs-rex (swank:describe-function "button") "image-processing.hist-view-gui" t 951)

[-Received-] 340.96
(:return (:ok "-------------------------
seesaw.core/button
([& args])
  Construct a generic button. In addition to default widget options, supports
  the following:

      :halign    Horizontal alignment. One of :left, :right, :leading, :trailing,
                 :center
      :valign    Vertical alignment. One of :top, :center, :bottom
      :selected? Whether the button is initially selected. Mostly for checked
                 and radio buttons/menu-items.
      :margin    The button margins as insets. See (seesaw.util/to-insets)
      :group     A button-group that the button should be added to.
      :resource  A resource prefix (see below).
      :mnemonic  The mnemonic for the button, either a character or a keycode.
                  Usually allows the user to activate the button with alt-mnemonic.
                  See (seesaw.util/to-mnemonic-keycode).

  Resources and i18n:

    A button's base properties can be set from a resource prefix, i.e. a namespace-
    qualified keyword that refers to a resource bundle loadable by j18n.

  Examples:

    ; Create a button with text \"Next\" with alt-N mnemonic shortcut that shows
    ; an alert when clicked.
    (button :text \"Next\"
            :mnemonic \\N
            :listen [:action #(alert \"NEXT!\")])

  See:
    http://download.oracle.com/javase/6/docs/api/javax/swing/JButton.html
    (seesaw.core/button-group)
") 951)
[Actionlist] 340.96
951: finished :describe-function 
params: "-------------------------
seesaw.core/button
([& args])
  Construct a generic button. In addition to default widget options, supports
  the following:

      :halign    Horizontal alignment. One of :left, :right, :leading, :trailing,
                 :center
      :valign    Vertical alignment. One of :top, :center, :bottom
      :selected? Whether the button is initially selected. Mostly for checked
                 and radio buttons/menu-items.
      :margin    The button margins as insets. See (seesaw.util/to-insets)
      :group     A button-group that the button should be added to.
      :resource  A resource prefix (see below).
      :mnemonic  The mnemonic for the button, either a character or a keycode.
                  Usually allows the user to activate the button with alt-mnemonic.
                  See (seesaw.util/to-mnemonic-keycode).

  Resources and i18n:

    A button's base properties can be set from a resource prefix, i.e. a namespace-
    qualified keyword that refers to a resource bundle loadable by j18n.

  Examples:

    ; Create a button with text \"Next\" with alt-N mnemonic shortcut that shows
    ; an alert when clicked.
    (button :text \"Next\"
            :mnemonic \\N
            :listen [:action #(alert \"NEXT!\")])

  See:
    http://download.oracle.com/javase/6/docs/api/javax/swing/JButton.html
    (seesaw.core/button-group)
"
[---Sent---] 341.11
(:emacs-rex (swank:operator-arglist "horizontal" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 952)

[-Received-] 341.11
(:return (:ok nil) 952)
[Actionlist] 341.11
952: finished :operator-arglist 
params: nil
[---Sent---] 341.2
(:emacs-rex (swank:operator-arglist "Creates" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 953)

[-Received-] 341.2
(:return (:ok nil) 953)
[Actionlist] 341.2
953: finished :operator-arglist 
params: nil
[---Sent---] 341.27
(:emacs-rex (swank:operator-arglist "Creates" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 954)

[-Received-] 341.27
(:return (:ok nil) 954)
[Actionlist] 341.27
954: finished :operator-arglist 
params: nil
[---Sent---] 341.37
(:emacs-rex (swank:operator-arglist "Creates" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 955)

[-Received-] 341.37
(:return (:ok nil) 955)
[Actionlist] 341.37
955: finished :operator-arglist 
params: nil
[---Sent---] 341.74
(:emacs-rex (swank:operator-arglist "Creates" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 956)

[-Received-] 341.74
(:return (:ok nil) 956)
[Actionlist] 341.74
956: finished :operator-arglist 
params: nil
[---Sent---] 341.84
(:emacs-rex (swank:operator-arglist "Creates" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 957)

[-Received-] 341.84
(:return (:ok nil) 957)
[Actionlist] 341.84
957: finished :operator-arglist 
params: nil
[---Sent---] 341.88
(:emacs-rex (swank:operator-arglist "Creates" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 958)

[-Received-] 341.88
(:return (:ok nil) 958)
[Actionlist] 341.88
958: finished :operator-arglist 
params: nil
[---Sent---] 342.13
(:emacs-rex (swank:operator-arglist "Creates" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 959)

[-Received-] 342.13
(:return (:ok nil) 959)
[Actionlist] 342.13
959: finished :operator-arglist 
params: nil
[---Sent---] 342.16
(:emacs-rex (swank:operator-arglist "Creates" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 960)

[-Received-] 342.16
(:return (:ok nil) 960)
[Actionlist] 342.16
960: finished :operator-arglist 
params: nil
[---Sent---] 342.19
(:emacs-rex (swank:operator-arglist "Creates" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 961)

[-Received-] 342.19
(:return (:ok nil) 961)
[Actionlist] 342.19
961: finished :operator-arglist 
params: nil
[---Sent---] 344.54
(:emacs-rex (swank:operator-arglist "show-options" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 962)

[-Received-] 344.55
(:return (:ok "([v])") 962)
[Actionlist] 344.55
962: finished :operator-arglist 
params: "([v])"
[---Sent---] 344.89
(:emacs-rex (swank:listener-eval "(show-options (grid-panel))
") "image-processing.hist-view-gui" :repl-thread 963)

[-Received-] 344.89
(:write-string "nil
" :repl-result)
[-Received-] 344.89
(:return (:ok nil) 963)
[Actionlist] 344.89
963: finished :listener-eval 
params: nil
[-Received-] 344.98
(:write-string "seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523
                    Option  Notes/Examples
--------------------------  --------------
               :background  :aliceblue
                            \"#f00\"
                            \"#FF0000\"
                            (seesaw.color/color 255 0 0 0 224)
                   :border  5
                            \"Border Title\"
                            [5 \"Compound\" 10]
                            See (seesaw.border/*)
                   :bounds  :preferred
                            [x y w h]
                            Use :* to leave component unchanged:
                            [x :* :* h]
                    :class  :class-name
                            #{:multiple :class-names}
                  :columns  Internal use.
                   :cursor  See (seesaw.cursor/cursor)
            :drag-enabled?  boolean
                 :enabled?  boolean
               :focusable?  boolean
                     :font  ARIAL-BOLD-18
                            :monospaced
                            :serif
                            :sans-serif
                            See (seesaw.font/font)
               :foreground  :aliceblue
                            \"#f00\"
                            \"#FF0000\"
                            (seesaw.color/color 255 0 0 0 224)
                     :hgap  Integer pixels
                     :icon  See (seesaw.icon/icon)
                       :id  A keyword id for the widget
                    :items  A sequence of widgets to add.
                   :layout  A layout manager.
                   :listen  vector of args for (seesaw.core/listen)
                 :location  See (seesaw.core/move! :to)
       :location-on-screen  java.awt.Point location in global screen coords
             :maximum-size  [640 :by 480]
                            java.awt.Dimension
             :minimum-size  [640 :by 480]
                            java.awt.Dimension
                  :opaque?  boolean
                    :paint  See (seesaw.core/canvas)
                    :popup  javax.swing.JPopupMenu
                            (fn [e]) that returns a seq of menu items
                            See (seesaw.core/popup)
           :preferred-size  [640 :by 480]
                            java.awt.Dimension
                     :rows  Internal use.
                     :size  [640 :by 480]
                            java.awt.Dimension
                     :text  A string
                            Anything accepted by (clojure.core/slurp)
                      :tip  A tooltip string
         :transfer-handler  See (seesaw.dnd/to-transfer-handler)
                :user-data  Anything.
                            Associate arbitrary user-data with a widget.
                            See (seesaw.core/user-data)
                     :vgap  Integer pixels
                 :visible?  boolean
" nil)
[---Sent---] 345.45
(:emacs-rex (swank:operator-arglist ":columns" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 964)

[-Received-] 345.45
(:return (:ok "([map])") 964)
[Actionlist] 345.45
964: finished :operator-arglist 
params: "([map])"
[---Sent---] 345.63
(:emacs-rex (swank:operator-arglist "if" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 965)

[-Received-] 345.63
(:return (:ok nil) 965)
[Actionlist] 345.63
965: finished :operator-arglist 
params: nil
[---Sent---] 345.9
(:emacs-rex (swank:operator-arglist "n-imgs" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 966)

[-Received-] 345.9
(:return (:ok nil) 966)
[Actionlist] 345.9
966: finished :operator-arglist 
params: nil
[---Sent---] 346.05
(:emacs-rex (swank:operator-arglist "count" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 967)

[-Received-] 346.05
(:return (:ok "([coll])") 967)
[Actionlist] 346.05
967: finished :operator-arglist 
params: "([coll])"
[---Sent---] 346.23
(:emacs-rex (swank:fuzzy-completions "n-im" "image-processing.hist-view-gui" :limit 200 :time-limit-in-msec 2000) nil t 968)

[-Received-] 346.23
(:return (:ok ((("swank.clj-contrib.macroexpand/" "10.38" ((9 "-") (15 "i") (18 "m")) "b------p")) nil)) 968)
[Actionlist] 346.23
968: finished :fuzzy-completions 
params: [[['"swank.clj-contrib.macroexpand/"', '"10.38"', [['9', '"-"'], ['15', '"i"'], ['18', '"m"']], '"b------p"']], 'nil']
[---Sent---] 346.65
(:emacs-rex (swank:fuzzy-completions "swa" "image-processing.hist-view-gui" :limit 200 :time-limit-in-msec 2000) nil t 969)

[-Received-] 346.66
(:return (:ok ((("swank.rpc/" "30.81" ((0 "swa")) "b------p") ("swank.core/" "30.63" ((0 "swa")) "b------p") ("swank.util/" "30.63" ((0 "swa")) "b------p") ("swank.swank/" "30.50" ((0 "swa")) "b------p") ("swank.util.io/" "30.29" ((0 "swa")) "b------p") ("swank.commands/" "30.22" ((0 "swa")) "b------p") ("swank.util.sys/" "30.22" ((0 "swa")) "b------p") ("swank.util.java/" "30.15" ((0 "swa")) "b------p") ("swank.core.hooks/" "30.10" ((0 "swa")) "b------p") ("swank.util.hooks/" "30.10" ((0 "swa")) "b------p") ("swank.core.server/" "30.05" ((0 "swa")) "b------p") ("swank.util.string/" "30.05" ((0 "swa")) "b------p") ("swank.util.clojure/" "30.01" ((0 "swa")) "b------p") ("swank.core.protocol/" "29.97" ((0 "swa")) "b------p") ("swank.commands.basic/" "29.94" ((0 "swa")) "b------p") ("swank.core.threadmap/" "29.94" ((0 "swa")) "b------p") ("swank.commands.indent/" "29.91" ((0 "swa")) "b------p") ("swank.core.connection/" "29.91" ((0 "swa")) "b------p") ("swank.commands.contrib/" "29.88" ((0 "swa")) "b------p") ("swank.util.net.sockets/" "29.88" ((0 "swa")) "b------p") ("swank.util.class-browse/" "29.86" ((0 "swa")) "b------p") ("swank.clj-contrib.pprint/" "29.84" ((0 "swa")) "b------p") ("swank.commands.inspector/" "29.84" ((0 "swa")) "b------p") ("swank.commands.completion/" "29.82" ((0 "swa")) "b------p") ("swank.util.concurrent.mbox/" "29.80" ((0 "swa")) "b------p") ("swank.core.debugger-backends/" "29.77" ((0 "swa")) "b------p") ("swank.util.concurrent.thread/" "29.77" ((0 "swa")) "b------p") ("swank.clj-contrib.macroexpand/" "29.76" ((0 "swa")) "b------p") ("swank.util.clj-stacktrace-compat/" "29.72" ((0 "swa")) "b------p") ("swank.commands.contrib.swank-fuzzy/" "29.70" ((0 "swa")) "b------p") ("seesaw.action/" "19.91" ((0 "s") (5 "w") (7 "a")) "b------p") ("seesaw.meta/" "18.11" ((0 "s") (5 "w") (10 "a")) "b------p") ("seesaw.table/" "13.00" ((0 "s") (5 "w") (8 "a")) "b------p") ("seesaw.value/" "13.00" ((0 "s") (5 "w") (8 "a")) "b------p") ("seesaw.layout/" "12.91" ((0 "s") (5 "w") (8 "a")) "b------p") ("seesaw.graphics/" "12.77" ((0 "s") (5 "w") (9 "a")) "b------p") ("seesaw.make-widget/" "12.63" ((0 "s") (5 "w") (8 "a")) "b------p")) nil)) 969)
[Actionlist] 346.67
969: finished :fuzzy-completions 
params: [[['"swank.rpc/"', '"30.81"', [['0', '"swa"']], '"b------p"'], ['"swank.core/"', '"30.63"', [['0', '"swa"']], '"b------p"'], ['"swank.util/"', '"30.63"', [['0', '"swa"']], '"b------p"'], ['"swank.swank/"', '"30.50"', [['0', '"swa"']], '"b------p"'], ['"swank.util.io/"', '"30.29"', [['0', '"swa"']], '"b------p"'], ['"swank.commands/"', '"30.22"', [['0', '"swa"']], '"b------p"'], ['"swank.util.sys/"', '"30.22"', [['0', '"swa"']], '"b------p"'], ['"swank.util.java/"', '"30.15"', [['0', '"swa"']], '"b------p"'], ['"swank.core.hooks/"', '"30.10"', [['0', '"swa"']], '"b------p"'], ['"swank.util.hooks/"', '"30.10"', [['0', '"swa"']], '"b------p"'], ['"swank.core.server/"', '"30.05"', [['0', '"swa"']], '"b------p"'], ['"swank.util.string/"', '"30.05"', [['0', '"swa"']], '"b------p"'], ['"swank.util.clojure/"', '"30.01"', [['0', '"swa"']], '"b------p"'], ['"swank.core.protocol/"', '"29.97"', [['0', '"swa"']], '"b------p"'], ['"swank.commands.basic/"', '"29.94"', [['0', '"swa"']], '"b------p"'], ['"swank.core.threadmap/"', '"29.94"', [['0', '"swa"']], '"b------p"'], ['"swank.commands.indent/"', '"29.91"', [['0', '"swa"']], '"b------p"'], ['"swank.core.connection/"', '"29.91"', [['0', '"swa"']], '"b------p"'], ['"swank.commands.contrib/"', '"29.88"', [['0', '"swa"']], '"b------p"'], ['"swank.util.net.sockets/"', '"29.88"', [['0', '"swa"']], '"b------p"'], ['"swank.util.class-browse/"', '"29.86"', [['0', '"swa"']], '"b------p"'], ['"swank.clj-contrib.pprint/"', '"29.84"', [['0', '"swa"']], '"b------p"'], ['"swank.commands.inspector/"', '"29.84"', [['0', '"swa"']], '"b------p"'], ['"swank.commands.completion/"', '"29.82"', [['0', '"swa"']], '"b------p"'], ['"swank.util.concurrent.mbox/"', '"29.80"', [['0', '"swa"']], '"b------p"'], ['"swank.core.debugger-backends/"', '"29.77"', [['0', '"swa"']], '"b------p"'], ['"swank.util.concurrent.thread/"', '"29.77"', [['0', '"swa"']], '"b------p"'], ['"swank.clj-contrib.macroexpand/"', '"29.76"', [['0', '"swa"']], '"b------p"'], ['"swank.util.clj-stacktrace-compat/"', '"29.72"', [['0', '"swa"']], '"b------p"'], ['"swank.commands.contrib.swank-fuzzy/"', '"29.70"', [['0', '"swa"']], '"b------p"'], ['"seesaw.action/"', '"19.91"', [['0', '"s"'], ['5', '"w"'], ['7', '"a"']], '"b------p"'], ['"seesaw.meta/"', '"18.11"', [['0', '"s"'], ['5', '"w"'], ['10', '"a"']], '"b------p"'], ['"seesaw.table/"', '"13.00"', [['0', '"s"'], ['5', '"w"'], ['8', '"a"']], '"b------p"'], ['"seesaw.value/"', '"13.00"', [['0', '"s"'], ['5', '"w"'], ['8', '"a"']], '"b------p"'], ['"seesaw.layout/"', '"12.91"', [['0', '"s"'], ['5', '"w"'], ['8', '"a"']], '"b------p"'], ['"seesaw.graphics/"', '"12.77"', [['0', '"s"'], ['5', '"w"'], ['9', '"a"']], '"b------p"'], ['"seesaw.make-widget/"', '"12.63"', [['0', '"s"'], ['5', '"w"'], ['8', '"a"']], '"b------p"']], 'nil']
[---Sent---] 346.75
(:emacs-rex (swank:operator-arglist "if" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 970)

[-Received-] 346.75
(:return (:ok nil) 970)
[Actionlist] 346.75
970: finished :operator-arglist 
params: nil
[---Sent---] 347.27
(:emacs-rex (swank:operator-arglist "buff-imgs" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 971)

[-Received-] 347.27
(:return (:ok nil) 971)
[Actionlist] 347.27
971: finished :operator-arglist 
params: nil
[---Sent---] 347.36
(:emacs-rex (swank:operator-arglist "map" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 972)

[-Received-] 347.37
(:return (:ok "([f coll] [f c1 c2] [f c1 c2 c3] [f c1 c2 c3 & colls])") 972)
[Actionlist] 347.37
972: finished :operator-arglist 
params: "([f coll] [f c1 c2] [f c1 c2 c3] [f c1 c2 c3 & colls])"
[---Sent---] 347.37
(:emacs-rex (swank:describe-function "map") "image-processing.hist-view-gui" t 973)

[-Received-] 347.37
(:return (:ok "-------------------------
clojure.core/map
([f coll] [f c1 c2] [f c1 c2 c3] [f c1 c2 c3 & colls])
  Returns a lazy sequence consisting of the result of applying f to the
  set of first items of each coll, followed by applying f to the set
  of second items in each coll, until any one of the colls is
  exhausted.  Any remaining items in other colls are ignored. Function
  f should accept number-of-colls arguments.
") 973)
[Actionlist] 347.37
973: finished :describe-function 
params: "-------------------------
clojure.core/map
([f coll] [f c1 c2] [f c1 c2 c3] [f c1 c2 c3 & colls])
  Returns a lazy sequence consisting of the result of applying f to the
  set of first items of each coll, followed by applying f to the set
  of second items in each coll, until any one of the colls is
  exhausted.  Any remaining items in other colls are ignored. Function
  f should accept number-of-colls arguments.
"
[---Sent---] 347.62
(:emacs-rex (swank:operator-arglist "<" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 974)

[-Received-] 347.62
(:return (:ok "([x] [x y] [x y & more])") 974)
[Actionlist] 347.62
974: finished :operator-arglist 
params: "([x] [x y] [x y & more])"
[---Sent---] 347.74
(:emacs-rex (swank:operator-arglist "<" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 975)

[-Received-] 347.74
(:return (:ok "([x] [x y] [x y & more])") 975)
[Actionlist] 347.74
975: finished :operator-arglist 
params: "([x] [x y] [x y & more])"
[---Sent---] 347.98
(:emacs-rex (swank:operator-arglist "if" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 976)

[-Received-] 347.98
(:return (:ok nil) 976)
[Actionlist] 347.98
976: finished :operator-arglist 
params: nil
[---Sent---] 348.13
(:emacs-rex (swank:listener-eval "(defn create-hist-panel 
  [buff-imgs]
  \"Creates and returns a horizontal panel showing the images represented by a list of
  BufferedImages.\"
  #^{:arglists [buff-imgs]}
  (let [img-group (button-group)
        n-imgs (count buff-imgs)]
    (grid-panel
      :border 5
      :hgap 10 :vgap 10
      :columns (if (< n-imgs 3) n-imgs 3)
      :items (vec (map #(horizontal-panel
                          ;; The image's path can be retrieved by the user-data of the radio
                          ;; button.
                          :items [(radio :group img-group :user-data %) (label :icon %)])
                       buff-imgs)))))
") "image-processing.hist-view-gui" :repl-thread 977)

[-Received-] 348.13
(:write-string "#'image-processing.hist-view-gui/create-hist-panel
" :repl-result)
[-Received-] 348.13
(:return (:ok nil) 977)
[Actionlist] 348.13
977: finished :listener-eval 
params: nil
[---Sent---] 348.63
(:emacs-rex (swank:operator-arglist "map" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 978)

[-Received-] 348.63
(:return (:ok "([f coll] [f c1 c2] [f c1 c2 c3] [f c1 c2 c3 & colls])") 978)
[Actionlist] 348.63
978: finished :operator-arglist 
params: "([f coll] [f c1 c2] [f c1 c2 c3] [f c1 c2 c3 & colls])"
[---Sent---] 348.86
(:emacs-rex (swank:operator-arglist "ImageIO/read" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 979)

[-Received-] 348.86
(:return (:ok nil) 979)
[Actionlist] 348.86
979: finished :operator-arglist 
params: nil
[---Sent---] 349.41
(:emacs-rex (swank:listener-eval "(ns image-processing.hist-view-gui
    (:import 
      (javax.imageio ImageIO) 
      (java.io File)
      (java.awt.image BufferedImage)) 
    (:use 
      [clojure.java.io] 
      [seesaw core make-widget border]))


(defn create-hist-panel 
  [buff-imgs]
  \"Creates and returns a horizontal panel showing the images represented by a list of
  BufferedImages.\"
  #^{:arglists [buff-imgs]}
  (let [img-group (button-group)
        n-imgs (count buff-imgs)]
    (grid-panel
      :border 5
      :hgap 10 :vgap 10
      :columns (if (< n-imgs 3) n-imgs 3)
      :items (vec (map #(horizontal-panel
                          ;; The image's path can be retrieved by the user-data of the radio
                          ;; button.
                          :items [(radio :group img-group :user-data %) (label :icon %)])
                       buff-imgs)))))


(defn set-hist-panel
  \"Doc\"
  #^{:arglists [hist-panel buff-imgs]}
  [hist-panel buff-imgs]
  code)



(def x (map #(ImageIO/read (File. %)) 
            '(\"test/image_processing/test/1a7r.gif\" 
              \"test/image_processing/test/1azc.gif\")))

(defn create-frame [] 
  (-> (frame :title \"Hello\",
             :content  (create-hist-panel x))
      ;:on-close :exit)
      pack!
      show!)) 

") "image-processing.hist-view-gui" :repl-thread 980)

[-Received-] 349.47
(:debug 1 1 ("Unable to resolve symbol: code in this context" "  [Thrown class java.lang.RuntimeException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "              Util.java:156 clojure.lang.Util.runtimeException" (:restartable nil)) (1 "         Compiler.java:6720 clojure.lang.Compiler.resolveIn" (:restartable nil)) (2 "         Compiler.java:6664 clojure.lang.Compiler.resolve" (:restartable nil)) (3 "         Compiler.java:6625 clojure.lang.Compiler.analyzeSymbol" (:restartable nil)) (4 "         Compiler.java:6198 clojure.lang.Compiler.analyze" (:restartable nil)) (5 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil)) (6 "         Compiler.java:5572 clojure.lang.Compiler$BodyExpr$Parser.parse" (:restartable nil)) (7 "         Compiler.java:5008 clojure.lang.Compiler$FnMethod.parse" (:restartable nil)) (8 "         Compiler.java:3629 clojure.lang.Compiler$FnExpr.parse" (:restartable nil)) (9 "         Compiler.java:6407 clojure.lang.Compiler.analyzeSeq" (:restartable nil))) (nil))
[-Received-] 349.47
(:debug-activate 1 1 nil)
[---Sent---] 349.74
(:emacs-rex (swank:throw-to-toplevel) nil 1 981)

[-Received-] 349.74
(:return (:abort) 981)
[Actionlist] 349.74
980: pending  :listener-eval 
981: finished :throw-to-toplevel 
[-Received-] 349.85
(:debug-return 1 1 nil)
[-Received-] 349.85
(:return (:abort) 980)
[Actionlist] 349.85
980: finished :listener-eval 
[---Sent---] 350.04
(:emacs-rex (swank:listener-eval "(def x (map #(ImageIO/read (File. %)) 
            '(\"test/image_processing/test/1a7r.gif\" 
              \"test/image_processing/test/1azc.gif\")))
") "image-processing.hist-view-gui" :repl-thread 982)

[-Received-] 350.04
(:write-string "#'image-processing.hist-view-gui/x
" :repl-result)
[-Received-] 350.04
(:return (:ok nil) 982)
[Actionlist] 350.04
982: finished :listener-eval 
params: nil
[---Sent---] 350.35
(:emacs-rex (swank:listener-eval "(defn create-hist-panel 
  [buff-imgs]
  \"Creates and returns a horizontal panel showing the images represented by a list of
  BufferedImages.\"
  #^{:arglists [buff-imgs]}
  (let [img-group (button-group)
        n-imgs (count buff-imgs)]
    (grid-panel
      :border 5
      :hgap 10 :vgap 10
      :columns (if (< n-imgs 3) n-imgs 3)
      :items (vec (map #(horizontal-panel
                          ;; The image's path can be retrieved by the user-data of the radio
                          ;; button.
                          :items [(radio :group img-group :user-data %) (label :icon %)])
                       buff-imgs)))))
") "image-processing.hist-view-gui" :repl-thread 983)

[-Received-] 350.35
(:write-string "#'image-processing.hist-view-gui/create-hist-panel
" :repl-result)
[-Received-] 350.35
(:return (:ok nil) 983)
[Actionlist] 350.35
983: finished :listener-eval 
params: nil
[---Sent---] 350.56
(:emacs-rex (swank:listener-eval "(create-frame)
") "image-processing.hist-view-gui" :repl-thread 984)

[-Received-] 350.63
(:write-string "#<JFrame$Tag$a79ba523 seesaw.core.proxy$javax.swing.JFrame$Tag$a79ba523[frame9,0,31,472x130,layout=java.awt.BorderLayout,title=Hello,resizable,normal,defaultCloseOperation=HIDE_ON_CLOSE,rootPane=javax.swing.JRootPane[,5,25,462x100,layout=javax.swing.JRootPane$RootLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=16777673,maximumSize=,minimumSize=,preferredSize=],rootPaneCheckingEnabled=true]>
" :repl-result)
[-Received-] 350.63
(:return (:ok nil) 984)
[Actionlist] 350.63
984: finished :listener-eval 
params: nil
[---Sent---] 351.5
(:emacs-rex (swank:listener-eval "(create-frame)
") "image-processing.hist-view-gui" :repl-thread 985)

[-Received-] 351.56
(:write-string "#<JFrame$Tag$a79ba523 seesaw.core.proxy$javax.swing.JFrame$Tag$a79ba523[frame10,486,402,468x126,layout=java.awt.BorderLayout,title=Hello,resizable,normal,defaultCloseOperation=HIDE_ON_CLOSE,rootPane=javax.swing.JRootPane[,3,23,462x100,layout=javax.swing.JRootPane$RootLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=16777673,maximumSize=,minimumSize=,preferredSize=],rootPaneCheckingEnabled=true]>
" :repl-result)
[-Received-] 351.56
(:return (:ok nil) 985)
[Actionlist] 351.57
985: finished :listener-eval 
params: nil
[---Sent---] 352.05
(:emacs-rex (swank:operator-arglist "radio" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 986)

[-Received-] 352.05
(:return (:ok "([& args])") 986)
[Actionlist] 352.05
986: finished :operator-arglist 
params: "([& args])"
[---Sent---] 352.05
(:emacs-rex (swank:describe-function "radio") "image-processing.hist-view-gui" t 987)

[-Received-] 352.05
(:return (:ok "-------------------------
seesaw.core/radio
([& args])
  Same as (seesaw.core/button), but creates a radio button. Use :selected? option
  to set initial state.

  See:
    (seesaw.core/button)
") 987)
[Actionlist] 352.05
987: finished :describe-function 
params: "-------------------------
seesaw.core/radio
([& args])
  Same as (seesaw.core/button), but creates a radio button. Use :selected? option
  to set initial state.

  See:
    (seesaw.core/button)
"
[---Sent---] 352.12
(:emacs-rex (swank:operator-arglist "3" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 988)

[-Received-] 352.13
(:return (:ok nil) 988)
[Actionlist] 352.13
988: finished :operator-arglist 
params: nil
[---Sent---] 352.16
(:emacs-rex (swank:operator-arglist "buff-imgs" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 989)

[-Received-] 352.16
(:return (:ok nil) 989)
[Actionlist] 352.16
989: finished :operator-arglist 
params: nil
[---Sent---] 352.17
(:emacs-rex (swank:operator-arglist "buff-imgs" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 990)

[-Received-] 352.17
(:return (:ok nil) 990)
[Actionlist] 352.17
990: finished :operator-arglist 
params: nil
[---Sent---] 352.43
(:emacs-rex (swank:operator-arglist "buff-imgs" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 991)

[-Received-] 352.43
(:return (:ok nil) 991)
[Actionlist] 352.43
991: finished :operator-arglist 
params: nil
[---Sent---] 352.71
(:emacs-rex (swank:operator-arglist "horizontal" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 992)

[-Received-] 352.71
(:return (:ok nil) 992)
[Actionlist] 352.71
992: finished :operator-arglist 
params: nil
[---Sent---] 352.95
(:emacs-rex (swank:operator-arglist "and" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 993)

[-Received-] 352.95
(:return (:ok "([] [x] [x & next])") 993)
[Actionlist] 352.95
993: finished :operator-arglist 
params: "([] [x] [x & next])"
[---Sent---] 352.95
(:emacs-rex (swank:describe-function "and") "image-processing.hist-view-gui" t 994)

[-Received-] 352.95
(:return (:ok "-------------------------
clojure.core/and
([] [x] [x & next])
Macro
  Evaluates exprs one at a time, from left to right. If a form
  returns logical false (nil or false), and returns that value and
  doesn't evaluate any of the other expressions, otherwise it returns
  the value of the last expr. (and) returns true.
") 994)
[Actionlist] 352.95
994: finished :describe-function 
params: "-------------------------
clojure.core/and
([] [x] [x & next])
Macro
  Evaluates exprs one at a time, from left to right. If a form
  returns logical false (nil or false), and returns that value and
  doesn't evaluate any of the other expressions, otherwise it returns
  the value of the last expr. (and) returns true.
"
[---Sent---] 353.03
(:emacs-rex (swank:operator-arglist "and" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 995)

[-Received-] 353.03
(:return (:ok "([] [x] [x & next])") 995)
[Actionlist] 353.03
995: finished :operator-arglist 
params: "([] [x] [x & next])"
[---Sent---] 353.04
(:emacs-rex (swank:describe-function "and") "image-processing.hist-view-gui" t 996)

[-Received-] 353.04
(:return (:ok "-------------------------
clojure.core/and
([] [x] [x & next])
Macro
  Evaluates exprs one at a time, from left to right. If a form
  returns logical false (nil or false), and returns that value and
  doesn't evaluate any of the other expressions, otherwise it returns
  the value of the last expr. (and) returns true.
") 996)
[Actionlist] 353.04
996: finished :describe-function 
params: "-------------------------
clojure.core/and
([] [x] [x & next])
Macro
  Evaluates exprs one at a time, from left to right. If a form
  returns logical false (nil or false), and returns that value and
  doesn't evaluate any of the other expressions, otherwise it returns
  the value of the last expr. (and) returns true.
"
[---Sent---] 353.18
(:emacs-rex (swank:operator-arglist "horizontal" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 997)

[-Received-] 353.18
(:return (:ok nil) 997)
[Actionlist] 353.18
997: finished :operator-arglist 
params: nil
[---Sent---] 353.27
(:emacs-rex (swank:operator-arglist "]}" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 998)

[-Received-] 353.27
(:return (:ok nil) 998)
[Actionlist] 353.27
998: finished :operator-arglist 
params: nil
[---Sent---] 353.27
(:emacs-rex (swank:operator-arglist "[" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 999)

[-Received-] 353.27
(:return (:ok nil) 999)
[Actionlist] 353.27
999: finished :operator-arglist 
params: nil
[---Sent---] 353.28
(:emacs-rex (swank:operator-arglist "buff-imgs" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1000)

[-Received-] 353.3
(:return (:ok nil) 1000)
[Actionlist] 353.3
1000: finished :operator-arglist 
params: nil
[---Sent---] 353.44
(:emacs-rex (swank:operator-arglist "BufferedImages" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1001)

[-Received-] 353.44
(:return (:ok nil) 1001)
[Actionlist] 353.44
1001: finished :operator-arglist 
params: nil
[---Sent---] 353.49
(:emacs-rex (swank:operator-arglist "BufferedImages" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1002)

[-Received-] 353.49
(:return (:ok nil) 1002)
[Actionlist] 353.49
1002: finished :operator-arglist 
params: nil
[---Sent---] 353.51
(:emacs-rex (swank:operator-arglist "BufferedImages" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1003)

[-Received-] 353.51
(:return (:ok nil) 1003)
[Actionlist] 353.51
1003: finished :operator-arglist 
params: nil
[---Sent---] 353.64
(:emacs-rex (swank:operator-arglist "BufferedImages" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1004)

[-Received-] 353.64
(:return (:ok nil) 1004)
[Actionlist] 353.64
1004: finished :operator-arglist 
params: nil
[---Sent---] 353.77
(:emacs-rex (swank:operator-arglist "buff-imgs" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1005)

[-Received-] 353.77
(:return (:ok nil) 1005)
[Actionlist] 353.77
1005: finished :operator-arglist 
params: nil
[---Sent---] 354.06
(:emacs-rex (swank:operator-arglist "BufferedImages" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1006)

[-Received-] 354.06
(:return (:ok nil) 1006)
[Actionlist] 354.06
1006: finished :operator-arglist 
params: nil
[---Sent---] 354.2
(:emacs-rex (swank:operator-arglist "BufferedImages" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1007)

[-Received-] 354.2
(:return (:ok nil) 1007)
[Actionlist] 354.2
1007: finished :operator-arglist 
params: nil
[---Sent---] 354.22
(:emacs-rex (swank:operator-arglist "BufferedImages" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1008)

[-Received-] 354.22
(:return (:ok nil) 1008)
[Actionlist] 354.22
1008: finished :operator-arglist 
params: nil
[---Sent---] 354.32
(:emacs-rex (swank:operator-arglist "#^" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1009)

[-Received-] 354.33
(:return (:ok nil) 1009)
[Actionlist] 354.33
1009: finished :operator-arglist 
params: nil
[---Sent---] 355.89
(:emacs-rex (swank:fuzzy-completions "create-hi" "image-processing.hist-view-gui" :limit 200 :time-limit-in-msec 2000) nil t 1010)

[-Received-] 355.89
(:return (:ok ((("create-hist-panel" "106.08" ((0 "create-hi")) "-f------")) nil)) 1010)
[Actionlist] 355.9
1010: finished :fuzzy-completions 
params: [[['"create-hist-panel"', '"106.08"', [['0', '"create-hi"']], '"-f------"']], 'nil']
[---Sent---] 355.91
(:emacs-rex (swank:operator-arglist "create-hist-panel" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1011)

[-Received-] 355.91
(:return (:ok "([buff-imgs])") 1011)
[Actionlist] 355.91
1011: finished :operator-arglist 
params: "([buff-imgs])"
[---Sent---] 356.55
(:emacs-rex (swank:fuzzy-completions "n-col" "image-processing.hist-view-gui" :limit 200 :time-limit-in-msec 2000) nil t 1012)

[-Received-] 356.55
(:return (:ok ((nil) nil)) 1012)
[Actionlist] 356.55
1012: finished :fuzzy-completions 
params: [['nil'], 'nil']
[---Sent---] 356.94
(:emacs-rex (swank:listener-eval "(defn create-hist-panel
  ([buff-imgs] (create-hist-panel 3)) 
  ([buff-imgs n-columns]
   \"Creates and returns a grid-panel showing the images represented by a list of
   BufferedImages. The default number of columns is 3.\"
   #^{:arglists [buff-imgs n-columns] [buff-imgs]}
   (let [img-group (button-group)
         n-imgs (count buff-imgs)]
     (grid-panel
       :border 5
       :hgap 10 :vgap 10
       :columns (if (< n-imgs n-columns) n-imgs n-columns)
       :items (vec (map #(horizontal-panel
                           ;; The image's path can be retrieved by the user-data of the radio
                           ;; button.
                           :items [(radio :group img-group :user-data %) (label :icon %)])
                        buff-imgs))))))
") "image-processing.hist-view-gui" :repl-thread 1013)

[-Received-] 356.94
(:debug 1 1 ("Map literal must contain an even number of forms" "  [Thrown class java.lang.RuntimeException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "                Util.java:156 clojure.lang.Util.runtimeException" (:restartable nil)) (1 "         LispReader.java:1071 clojure.lang.LispReader$MapReader.invoke" (:restartable nil)) (2 "          LispReader.java:180 clojure.lang.LispReader.read" (:restartable nil)) (3 "          LispReader.java:714 clojure.lang.LispReader$MetaReader.invoke" (:restartable nil)) (4 "          LispReader.java:618 clojure.lang.LispReader$DispatchReader.invoke" (:restartable nil)) (5 "         LispReader.java:1126 clojure.lang.LispReader.readDelimitedList" (:restartable nil)) (6 "          LispReader.java:962 clojure.lang.LispReader$ListReader.invoke" (:restartable nil)) (7 "         LispReader.java:1126 clojure.lang.LispReader.readDelimitedList" (:restartable nil)) (8 "          LispReader.java:962 clojure.lang.LispReader$ListReader.invoke" (:restartable nil)) (9 "          LispReader.java:180 clojure.lang.LispReader.read" (:restartable nil))) (nil))
[-Received-] 356.94
(:debug-activate 1 1 nil)
[---Sent---] 357.14
(:emacs-rex (swank:throw-to-toplevel) nil 1 1014)

[-Received-] 357.14
(:return (:abort) 1014)
[Actionlist] 357.14
1013: pending  :listener-eval 
1014: finished :throw-to-toplevel 
[-Received-] 357.14
(:debug-return 1 1 nil)
[-Received-] 357.14
(:return (:abort) 1013)
[Actionlist] 357.14
1013: finished :listener-eval 
1014: finished :throw-to-toplevel 
[---Sent---] 358.05
(:emacs-rex (swank:listener-eval "(defn create-hist-panel
  ([buff-imgs] (create-hist-panel 3)) 
  ([buff-imgs n-columns]
   \"Creates and returns a grid-panel showing the images represented by a list of
   BufferedImages. The default number of columns is 3.\"
   #^{:arglists [buff-imgs n-columns]}
   (let [img-group (button-group)
         n-imgs (count buff-imgs)]
     (grid-panel
       :border 5
       :hgap 10 :vgap 10
       :columns (if (< n-imgs n-columns) n-imgs n-columns)
       :items (vec (map #(horizontal-panel
                           ;; The image's path can be retrieved by the user-data of the radio
                           ;; button.
                           :items [(radio :group img-group :user-data %) (label :icon %)])
                        buff-imgs))))))
") "image-processing.hist-view-gui" :repl-thread 1015)

[-Received-] 358.05
(:write-string "#'image-processing.hist-view-gui/create-hist-panel
" :repl-result)
[-Received-] 358.05
(:return (:ok nil) 1015)
[Actionlist] 358.05
1015: finished :listener-eval 
params: nil
[---Sent---] 358.26
(:emacs-rex (swank:listener-eval "(create-frame)
") "image-processing.hist-view-gui" :repl-thread 1016)

[-Received-] 358.33
(:debug 1 1 ("No message." "  [Thrown class java.lang.StackOverflowError]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "NO_SOURCE_FILE:1 image-processing.hist-view-gui/create-hist-panel" (:restartable nil)) (1 "NO_SOURCE_FILE:1 image-processing.hist-view-gui/create-hist-panel" (:restartable nil)) (2 "NO_SOURCE_FILE:1 image-processing.hist-view-gui/create-hist-panel" (:restartable nil)) (3 "NO_SOURCE_FILE:1 image-processing.hist-view-gui/create-hist-panel" (:restartable nil)) (4 "NO_SOURCE_FILE:1 image-processing.hist-view-gui/create-hist-panel" (:restartable nil)) (5 "NO_SOURCE_FILE:1 image-processing.hist-view-gui/create-hist-panel" (:restartable nil)) (6 "NO_SOURCE_FILE:1 image-processing.hist-view-gui/create-hist-panel" (:restartable nil)) (7 "NO_SOURCE_FILE:1 image-processing.hist-view-gui/create-hist-panel" (:restartable nil)) (8 "NO_SOURCE_FILE:1 image-processing.hist-view-gui/create-hist-panel" (:restartable nil)) (9 "NO_SOURCE_FILE:1 image-processing.hist-view-gui/create-hist-panel" (:restartable nil))) (nil))
[-Received-] 358.33
(:debug-activate 1 1 nil)
[---Sent---] 358.54
(:emacs-rex (swank:throw-to-toplevel) nil 1 1017)

[-Received-] 358.54
(:return (:abort) 1017)
[Actionlist] 358.54
1016: pending  :listener-eval 
1017: finished :throw-to-toplevel 
[-Received-] 358.54
(:debug-return 1 1 nil)
[-Received-] 358.54
(:return (:abort) 1016)
[Actionlist] 358.54
1016: finished :listener-eval 
1017: finished :throw-to-toplevel 
[---Sent---] 358.9
(:emacs-rex (swank:operator-arglist "create-hist-panel" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1018)

[-Received-] 358.9
(:return (:ok "([buff-imgs] [buff-imgs n-columns])") 1018)
[Actionlist] 358.9
1018: finished :operator-arglist 
params: "([buff-imgs] [buff-imgs n-columns])"
[---Sent---] 359.0
(:emacs-rex (swank:listener-eval "(defn create-hist-panel
  ([buff-imgs] (create-hist-panel buff-imgs 3)) 
  ([buff-imgs n-columns]
   \"Creates and returns a grid-panel showing the images represented by a list of
   BufferedImages. The default number of columns is 3.\"
   #^{:arglists [buff-imgs n-columns]}
   (let [img-group (button-group)
         n-imgs (count buff-imgs)]
     (grid-panel
       :border 5
       :hgap 10 :vgap 10
       :columns (if (< n-imgs n-columns) n-imgs n-columns)
       :items (vec (map #(horizontal-panel
                           ;; The image's path can be retrieved by the user-data of the radio
                           ;; button.
                           :items [(radio :group img-group :user-data %) (label :icon %)])
                        buff-imgs))))))
") "image-processing.hist-view-gui" :repl-thread 1019)

[-Received-] 359.0
(:write-string "#'image-processing.hist-view-gui/create-hist-panel
" :repl-result)
[-Received-] 359.0
(:return (:ok nil) 1019)
[Actionlist] 359.0
1019: finished :listener-eval 
params: nil
[---Sent---] 359.22
(:emacs-rex (swank:listener-eval "(create-frame)
") "image-processing.hist-view-gui" :repl-thread 1020)

[-Received-] 359.29
(:write-string "#<JFrame$Tag$a79ba523 seesaw.core.proxy$javax.swing.JFrame$Tag$a79ba523[frame11,486,402,468x126,invalid,layout=java.awt.BorderLayout,title=Hello,resizable,normal,defaultCloseOperation=HIDE_ON_CLOSE,rootPane=javax.swing.JRootPane[,3,23,462x100,layout=javax.swing.JRootPane$RootLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=16777673,maximumSize=,minimumSize=,preferredSize=],rootPaneCheckingEnabled=true]>
" :repl-result)
[-Received-] 359.29
(:return (:ok nil) 1020)
[Actionlist] 359.29
1020: finished :listener-eval 
params: nil
[---Sent---] 359.52
(:emacs-rex (swank:operator-arglist "))" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1021)

[-Received-] 359.53
(:return (:ok nil) 1021)
[Actionlist] 359.53
1021: finished :operator-arglist 
params: nil
[---Sent---] 359.56
(:emacs-rex (swank:operator-arglist "create-hist-panel" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1022)

[-Received-] 359.56
(:return (:ok "([buff-imgs] [buff-imgs n-columns])") 1022)
[Actionlist] 359.56
1022: finished :operator-arglist 
params: "([buff-imgs] [buff-imgs n-columns])"
[---Sent---] 359.67
(:emacs-rex (swank:listener-eval "(defn create-frame [] 
  (-> (frame :title \"Hello\",
             :content  (create-hist-panel x 5))
      ;:on-close :exit)
      pack!
      show!)
") "image-processing.hist-view-gui" :repl-thread 1023)

[-Received-] 359.67
(:debug 1 1 ("EOF while reading, starting at line 1" "  [Thrown class java.lang.RuntimeException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "      Util.java:156 clojure.lang.Util.runtimeException" (:restartable nil)) (1 "LispReader.java:1117 clojure.lang.LispReader.readDelimitedList" (:restartable nil)) (2 "LispReader.java:962 clojure.lang.LispReader$ListReader.invoke" (:restartable nil)) (3 "LispReader.java:180 clojure.lang.LispReader.read" (:restartable nil)) (4 "      core.clj:3344 clojure.core/read" (:restartable nil)) (5 "      core.clj:3342 clojure.core/read" (:restartable nil)) (6 "       basic.clj:51 swank.commands.basic/eval-region" (:restartable nil)) (7 "       basic.clj:45 swank.commands.basic/eval-region" (:restartable nil)) (8 "       basic.clj:79 swank.commands.basic/eval1101[fn]" (:restartable nil)) (9 "       Var.java:401 clojure.lang.Var.invoke" (:restartable nil))) (nil))
[-Received-] 359.67
(:debug-activate 1 1 nil)
[---Sent---] 359.92
(:emacs-rex (swank:throw-to-toplevel) nil 1 1024)

[-Received-] 359.92
(:return (:abort) 1024)
[Actionlist] 359.92
1023: pending  :listener-eval 
1024: finished :throw-to-toplevel 
[-Received-] 359.92
(:debug-return 1 1 nil)
[-Received-] 359.92
(:return (:abort) 1023)
[Actionlist] 359.92
1023: finished :listener-eval 
1024: finished :throw-to-toplevel 
[---Sent---] 360.1
(:emacs-rex (swank:listener-eval "(defn create-frame [] 
  (-> (frame :title \"Hello\",
             :content  (create-hist-panel x 5))
      ;:on-close :exit)
      pack!
      show!)
") "image-processing.hist-view-gui" :repl-thread 1025)

[-Received-] 360.1
(:debug 1 1 ("EOF while reading, starting at line 1" "  [Thrown class java.lang.RuntimeException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "      Util.java:156 clojure.lang.Util.runtimeException" (:restartable nil)) (1 "LispReader.java:1117 clojure.lang.LispReader.readDelimitedList" (:restartable nil)) (2 "LispReader.java:962 clojure.lang.LispReader$ListReader.invoke" (:restartable nil)) (3 "LispReader.java:180 clojure.lang.LispReader.read" (:restartable nil)) (4 "      core.clj:3344 clojure.core/read" (:restartable nil)) (5 "      core.clj:3342 clojure.core/read" (:restartable nil)) (6 "       basic.clj:51 swank.commands.basic/eval-region" (:restartable nil)) (7 "       basic.clj:45 swank.commands.basic/eval-region" (:restartable nil)) (8 "       basic.clj:79 swank.commands.basic/eval1101[fn]" (:restartable nil)) (9 "       Var.java:401 clojure.lang.Var.invoke" (:restartable nil))) (nil))
[-Received-] 360.11
(:debug-activate 1 1 nil)
[---Sent---] 360.37
(:emacs-rex (swank:throw-to-toplevel) nil 1 1026)

[-Received-] 360.37
(:return (:abort) 1026)
[Actionlist] 360.37
1025: pending  :listener-eval 
1026: finished :throw-to-toplevel 
[-Received-] 360.37
(:debug-return 1 1 nil)
[-Received-] 360.37
(:return (:abort) 1025)
[Actionlist] 360.37
1025: finished :listener-eval 
1026: finished :throw-to-toplevel 
[---Sent---] 360.72
(:emacs-rex (swank:listener-eval "(defn create-frame [] 
  (-> (frame :title \"Hello\",
             :content  (create-hist-panel x 5))
      ;:on-close :exit)
      pack!
      show!)
") "image-processing.hist-view-gui" :repl-thread 1027)

[-Received-] 360.72
(:debug 1 1 ("EOF while reading, starting at line 1" "  [Thrown class java.lang.RuntimeException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "      Util.java:156 clojure.lang.Util.runtimeException" (:restartable nil)) (1 "LispReader.java:1117 clojure.lang.LispReader.readDelimitedList" (:restartable nil)) (2 "LispReader.java:962 clojure.lang.LispReader$ListReader.invoke" (:restartable nil)) (3 "LispReader.java:180 clojure.lang.LispReader.read" (:restartable nil)) (4 "      core.clj:3344 clojure.core/read" (:restartable nil)) (5 "      core.clj:3342 clojure.core/read" (:restartable nil)) (6 "       basic.clj:51 swank.commands.basic/eval-region" (:restartable nil)) (7 "       basic.clj:45 swank.commands.basic/eval-region" (:restartable nil)) (8 "       basic.clj:79 swank.commands.basic/eval1101[fn]" (:restartable nil)) (9 "       Var.java:401 clojure.lang.Var.invoke" (:restartable nil))) (nil))
[-Received-] 360.73
(:debug-activate 1 1 nil)
[---Sent---] 361.05
(:emacs-rex (swank:throw-to-toplevel) nil 1 1028)

[-Received-] 361.05
(:return (:abort) 1028)
[Actionlist] 361.05
1027: pending  :listener-eval 
1028: finished :throw-to-toplevel 
[-Received-] 361.05
(:debug-return 1 1 nil)
[-Received-] 361.05
(:return (:abort) 1027)
[Actionlist] 361.05
1027: finished :listener-eval 
1028: finished :throw-to-toplevel 
[---Sent---] 361.59
(:emacs-rex (swank:listener-eval "(defn create-hist-panel
  ([buff-imgs] (create-hist-panel buff-imgs 3)) 
  ([buff-imgs n-columns]
   \"Creates and returns a grid-panel showing the images represented by a list of
   BufferedImages. The default number of columns is 3.\"
   #^{:arglists [buff-imgs n-columns]}
   (let [img-group (button-group)
         n-imgs (count buff-imgs)]
     (grid-panel
       :border 5
       :hgap 10 :vgap 10
       :columns (if (< n-imgs n-columns) n-imgs n-columns)
       :items (vec (map #(horizontal-panel
                           ;; The image's path can be retrieved by the user-data of the radio
                           ;; button.
                           :items [(radio :group img-group :user-data %) (label :icon %)])
                        buff-imgs))))))
") "image-processing.hist-view-gui" :repl-thread 1029)

[-Received-] 361.59
(:write-string "#'image-processing.hist-view-gui/create-hist-panel
" :repl-result)
[-Received-] 361.59
(:return (:ok nil) 1029)
[Actionlist] 361.59
1029: finished :listener-eval 
params: nil
[---Sent---] 361.85
(:emacs-rex (swank:listener-eval "(defn create-frame [] 
  (-> (frame :title \"Hello\",
             :content  (create-hist-panel x 5))
      ;:on-close :exit)
      pack!
      show!)
") "image-processing.hist-view-gui" :repl-thread 1030)

[-Received-] 361.85
(:debug 1 1 ("EOF while reading, starting at line 1" "  [Thrown class java.lang.RuntimeException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "      Util.java:156 clojure.lang.Util.runtimeException" (:restartable nil)) (1 "LispReader.java:1117 clojure.lang.LispReader.readDelimitedList" (:restartable nil)) (2 "LispReader.java:962 clojure.lang.LispReader$ListReader.invoke" (:restartable nil)) (3 "LispReader.java:180 clojure.lang.LispReader.read" (:restartable nil)) (4 "      core.clj:3344 clojure.core/read" (:restartable nil)) (5 "      core.clj:3342 clojure.core/read" (:restartable nil)) (6 "       basic.clj:51 swank.commands.basic/eval-region" (:restartable nil)) (7 "       basic.clj:45 swank.commands.basic/eval-region" (:restartable nil)) (8 "       basic.clj:79 swank.commands.basic/eval1101[fn]" (:restartable nil)) (9 "       Var.java:401 clojure.lang.Var.invoke" (:restartable nil))) (nil))
[-Received-] 361.85
(:debug-activate 1 1 nil)
[---Sent---] 362.1
(:emacs-rex (swank:invoke-nth-restart-for-emacs 1 0) nil 1 1031)

[-Received-] 362.14
(:return (:abort) 1031)
[Actionlist] 362.14
1030: pending  :listener-eval 
1031: finished :invoke-nth-restart-for-emacs 
[-Received-] 362.14
(:debug-return 1 1 nil)
[-Received-] 362.14
(:return (:abort) 1030)
[Actionlist] 362.14
1030: finished :listener-eval 
1031: finished :invoke-nth-restart-for-emacs 
[---Sent---] 362.48
(:emacs-rex (swank:listener-eval "(ns image-processing.hist-view-gui
    (:import 
      (javax.imageio ImageIO) 
      (java.io File)
      (java.awt.image BufferedImage)) 
    (:use 
      [clojure.java.io] 
      [seesaw core make-widget border]))


(defn create-hist-panel
  ([buff-imgs] (create-hist-panel buff-imgs 3)) 
  ([buff-imgs n-columns]
   \"Creates and returns a grid-panel showing the images represented by a list of
   BufferedImages. The default number of columns is 3.\"
   #^{:arglists [buff-imgs n-columns]}
   (let [img-group (button-group)
         n-imgs (count buff-imgs)]
     (grid-panel
       :border 5
       :hgap 10 :vgap 10
       :columns (if (< n-imgs n-columns) n-imgs n-columns)
       :items (vec (map #(horizontal-panel
                           ;; The image's path can be retrieved by the user-data of the radio
                           ;; button.
                           :items [(radio :group img-group :user-data %) (label :icon %)])
                        buff-imgs))))))


;(defn set-hist-panel
;  \"Doc\"
;  #^{:arglists [hist-panel buff-imgs]}
;  [hist-panel buff-imgs]
;  code)



(def x (map #(ImageIO/read (File. %)) 
            '(\"test/image_processing/test/1a7r.gif\" 
              \"test/image_processing/test/1azc.gif\")))

(defn create-frame [] 
  (-> (frame :title \"Hello\",
             :content  (create-hist-panel x 5))
      ;:on-close :exit)
      pack!
      show!)) 

") "image-processing.hist-view-gui" :repl-thread 1032)

[-Received-] 362.53
(:write-string "#'image-processing.hist-view-gui/create-frame
" :repl-result)
[-Received-] 362.53
(:return (:ok nil) 1032)
[Actionlist] 362.53
1032: finished :listener-eval 
params: nil
[---Sent---] 362.77
(:emacs-rex (swank:listener-eval "(defn create-frame [] 
  (-> (frame :title \"Hello\",
             :content  (create-hist-panel x 5))
      ;:on-close :exit)
      pack!
      show!)
") "image-processing.hist-view-gui" :repl-thread 1033)

[-Received-] 362.77
(:debug 1 1 ("EOF while reading, starting at line 1" "  [Thrown class java.lang.RuntimeException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "      Util.java:156 clojure.lang.Util.runtimeException" (:restartable nil)) (1 "LispReader.java:1117 clojure.lang.LispReader.readDelimitedList" (:restartable nil)) (2 "LispReader.java:962 clojure.lang.LispReader$ListReader.invoke" (:restartable nil)) (3 "LispReader.java:180 clojure.lang.LispReader.read" (:restartable nil)) (4 "      core.clj:3344 clojure.core/read" (:restartable nil)) (5 "      core.clj:3342 clojure.core/read" (:restartable nil)) (6 "       basic.clj:51 swank.commands.basic/eval-region" (:restartable nil)) (7 "       basic.clj:45 swank.commands.basic/eval-region" (:restartable nil)) (8 "       basic.clj:79 swank.commands.basic/eval1101[fn]" (:restartable nil)) (9 "       Var.java:401 clojure.lang.Var.invoke" (:restartable nil))) (nil))
[-Received-] 362.78
(:debug-activate 1 1 nil)
[---Sent---] 362.87
(:emacs-rex (swank:throw-to-toplevel) nil 1 1034)

[-Received-] 362.88
(:return (:abort) 1034)
[Actionlist] 362.88
1033: pending  :listener-eval 
1034: finished :throw-to-toplevel 
[-Received-] 362.88
(:debug-return 1 1 nil)
[-Received-] 362.88
(:return (:abort) 1033)
[Actionlist] 362.88
1033: finished :listener-eval 
1034: finished :throw-to-toplevel 
[---Sent---] 363.12
(:emacs-rex (swank:listener-eval "(create-frame)
") "image-processing.hist-view-gui" :repl-thread 1035)

[-Received-] 363.18
(:write-string "#<JFrame$Tag$a79ba523 seesaw.core.proxy$javax.swing.JFrame$Tag$a79ba523[frame12,0,31,472x130,layout=java.awt.BorderLayout,title=Hello,resizable,normal,defaultCloseOperation=HIDE_ON_CLOSE,rootPane=javax.swing.JRootPane[,5,25,462x100,layout=javax.swing.JRootPane$RootLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=16777673,maximumSize=,minimumSize=,preferredSize=],rootPaneCheckingEnabled=true]>
" :repl-result)
[-Received-] 363.18
(:return (:ok nil) 1035)
[Actionlist] 363.18
1035: finished :listener-eval 
params: nil
[---Sent---] 363.61
(:emacs-rex (swank:operator-arglist "doc" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1036)

[-Received-] 363.61
(:return (:ok nil) 1036)
[Actionlist] 363.62
1036: finished :operator-arglist 
params: nil
[---Sent---] 364.01
(:emacs-rex (swank:listener-eval "(doc create-hist-panel)
") "image-processing.hist-view-gui" :repl-thread 1037)

[-Received-] 364.01
(:debug 1 1 ("Unable to resolve symbol: doc in this context" "  [Thrown class java.lang.RuntimeException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "              Util.java:156 clojure.lang.Util.runtimeException" (:restartable nil)) (1 "         Compiler.java:6720 clojure.lang.Compiler.resolveIn" (:restartable nil)) (2 "         Compiler.java:6664 clojure.lang.Compiler.resolve" (:restartable nil)) (3 "         Compiler.java:6625 clojure.lang.Compiler.analyzeSymbol" (:restartable nil)) (4 "         Compiler.java:6198 clojure.lang.Compiler.analyze" (:restartable nil)) (5 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil)) (6 "         Compiler.java:3452 clojure.lang.Compiler$InvokeExpr.parse" (:restartable nil)) (7 "         Compiler.java:6411 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (8 "         Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil)) (9 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil))) (nil))
[-Received-] 364.01
(:debug-activate 1 1 nil)
[---Sent---] 364.16
(:emacs-rex (swank:throw-to-toplevel) nil 1 1038)

[-Received-] 364.16
(:return (:abort) 1038)
[Actionlist] 364.16
1037: pending  :listener-eval 
1038: finished :throw-to-toplevel 
[-Received-] 364.16
(:debug-return 1 1 nil)
[-Received-] 364.16
(:return (:abort) 1037)
[Actionlist] 364.16
1037: finished :listener-eval 
1038: finished :throw-to-toplevel 
[---Sent---] 364.56
(:emacs-rex (swank:operator-arglist "show!" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1039)

[-Received-] 364.57
(:return (:ok "([targets])") 1039)
[Actionlist] 364.57
1039: finished :operator-arglist 
params: "([targets])"
[---Sent---] 364.57
(:emacs-rex (swank:describe-function "show!") "image-processing.hist-view-gui" t 1040)

[-Received-] 364.58
(:return (:ok "-------------------------
seesaw.core/show!
([targets])
  Show a frame, dialog or widget.

   If target is a modal dialog, the call will block and show! will return the
   dialog's result. See (seesaw.core/return-from-dialog).

   Returns its input.

  See:
    http://download.oracle.com/javase/6/docs/api/java/awt/Window.html#setVisible%28boolean%29
  
") 1040)
[Actionlist] 364.58
1040: finished :describe-function 
params: "-------------------------
seesaw.core/show!
([targets])
  Show a frame, dialog or widget.

   If target is a modal dialog, the call will block and show! will return the
   dialog's result. See (seesaw.core/return-from-dialog).

   Returns its input.

  See:
    http://download.oracle.com/javase/6/docs/api/java/awt/Window.html#setVisible%28boolean%29
  
"
[---Sent---] 364.61
(:emacs-rex (swank:operator-arglist "show!" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1041)

[-Received-] 364.62
(:return (:ok "([targets])") 1041)
[Actionlist] 364.62
1041: finished :operator-arglist 
params: "([targets])"
[---Sent---] 364.62
(:emacs-rex (swank:describe-function "show!") "image-processing.hist-view-gui" t 1042)

[-Received-] 364.62
(:return (:ok "-------------------------
seesaw.core/show!
([targets])
  Show a frame, dialog or widget.

   If target is a modal dialog, the call will block and show! will return the
   dialog's result. See (seesaw.core/return-from-dialog).

   Returns its input.

  See:
    http://download.oracle.com/javase/6/docs/api/java/awt/Window.html#setVisible%28boolean%29
  
") 1042)
[Actionlist] 364.62
1042: finished :describe-function 
params: "-------------------------
seesaw.core/show!
([targets])
  Show a frame, dialog or widget.

   If target is a modal dialog, the call will block and show! will return the
   dialog's result. See (seesaw.core/return-from-dialog).

   Returns its input.

  See:
    http://download.oracle.com/javase/6/docs/api/java/awt/Window.html#setVisible%28boolean%29
  
"
[---Sent---] 364.79
(:emacs-rex (swank:operator-arglist "create-hist-panel" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1043)

[-Received-] 364.79
(:return (:ok "([buff-imgs] [buff-imgs n-columns])") 1043)
[Actionlist] 364.79
1043: finished :operator-arglist 
params: "([buff-imgs] [buff-imgs n-columns])"
[---Sent---] 364.8
(:emacs-rex (swank:describe-function "create-hist-panel") "image-processing.hist-view-gui" t 1044)

[-Received-] 364.8
(:return (:ok "-------------------------
image-processing.hist-view-gui/create-hist-panel
([buff-imgs] [buff-imgs n-columns])
  nil
") 1044)
[Actionlist] 364.8
1044: finished :describe-function 
params: "-------------------------
image-processing.hist-view-gui/create-hist-panel
([buff-imgs] [buff-imgs n-columns])
  nil
"
[---Sent---] 364.86
(:emacs-rex (swank:operator-arglist ":arglists" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1045)

[-Received-] 364.86
(:return (:ok "([map])") 1045)
[Actionlist] 364.86
1045: finished :operator-arglist 
params: "([map])"
[---Sent---] 364.86
(:emacs-rex (swank:describe-function ":arglists") "image-processing.hist-view-gui" t 1046)

[-Received-] 364.86
(:return (:ok nil) 1046)
[Actionlist] 364.86
1046: finished :describe-function 
params: nil
[---Sent---] 365.09
(:emacs-rex (swank:listener-eval "(defn create-hist-panel
   \"Creates and returns a grid-panel showing the images represented by a list of
   BufferedImages. The default number of columns is 3.\"
   #^{:arglists [buff-imgs n-columns]}
  ([buff-imgs] (create-hist-panel buff-imgs 3)) 
  ([buff-imgs n-columns]
   (let [img-group (button-group)
         n-imgs (count buff-imgs)]
     (grid-panel
       :border 5
       :hgap 10 :vgap 10
       :columns (if (< n-imgs n-columns) n-imgs n-columns)
       :items (vec (map #(horizontal-panel
                           ;; The image's path can be retrieved by the user-data of the radio
                           ;; button.
                           :items [(radio :group img-group :user-data %) (label :icon %)])
                        buff-imgs))))))
") "image-processing.hist-view-gui" :repl-thread 1047)

[-Received-] 365.09
(:write-string "#'image-processing.hist-view-gui/create-hist-panel
" :repl-result)
[-Received-] 365.09
(:return (:ok nil) 1047)
[Actionlist] 365.09
1047: finished :listener-eval 
params: nil
[---Sent---] 365.24
(:emacs-rex (swank:operator-arglist "create-hist-panel" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1048)

[-Received-] 365.24
(:return (:ok "([buff-imgs] [buff-imgs n-columns])") 1048)
[Actionlist] 365.24
1048: finished :operator-arglist 
params: "([buff-imgs] [buff-imgs n-columns])"
[---Sent---] 365.24
(:emacs-rex (swank:describe-function "create-hist-panel") "image-processing.hist-view-gui" t 1049)

[-Received-] 365.24
(:return (:ok "-------------------------
image-processing.hist-view-gui/create-hist-panel
([buff-imgs] [buff-imgs n-columns])
  Creates and returns a grid-panel showing the images represented by a list of
   BufferedImages. The default number of columns is 3.
") 1049)
[Actionlist] 365.24
1049: finished :describe-function 
params: "-------------------------
image-processing.hist-view-gui/create-hist-panel
([buff-imgs] [buff-imgs n-columns])
  Creates and returns a grid-panel showing the images represented by a list of
   BufferedImages. The default number of columns is 3.
"
[---Sent---] 365.3
(:emacs-rex (swank:operator-arglist "n-columns" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1050)

[-Received-] 365.3
(:return (:ok nil) 1050)
[Actionlist] 365.3
1050: finished :operator-arglist 
params: nil
[---Sent---] 365.43
(:emacs-rex (swank:listener-eval "(defn create-frame [] 
  (-> (frame :title \"Hello\",
             :content  (create-hist-panel x 5))
      ;:on-close :exit)
      pack!
      show!)
") "image-processing.hist-view-gui" :repl-thread 1051)

[-Received-] 365.43
(:debug 1 1 ("EOF while reading, starting at line 1" "  [Thrown class java.lang.RuntimeException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "      Util.java:156 clojure.lang.Util.runtimeException" (:restartable nil)) (1 "LispReader.java:1117 clojure.lang.LispReader.readDelimitedList" (:restartable nil)) (2 "LispReader.java:962 clojure.lang.LispReader$ListReader.invoke" (:restartable nil)) (3 "LispReader.java:180 clojure.lang.LispReader.read" (:restartable nil)) (4 "      core.clj:3344 clojure.core/read" (:restartable nil)) (5 "      core.clj:3342 clojure.core/read" (:restartable nil)) (6 "       basic.clj:51 swank.commands.basic/eval-region" (:restartable nil)) (7 "       basic.clj:45 swank.commands.basic/eval-region" (:restartable nil)) (8 "       basic.clj:79 swank.commands.basic/eval1101[fn]" (:restartable nil)) (9 "       Var.java:401 clojure.lang.Var.invoke" (:restartable nil))) (nil))
[-Received-] 365.44
(:debug-activate 1 1 nil)
[---Sent---] 365.54
(:emacs-rex (swank:throw-to-toplevel) nil 1 1052)

[-Received-] 365.54
(:return (:abort) 1052)
[Actionlist] 365.54
1051: pending  :listener-eval 
1052: finished :throw-to-toplevel 
[-Received-] 365.54
(:debug-return 1 1 nil)
[-Received-] 365.54
(:return (:abort) 1051)
[Actionlist] 365.54
1051: finished :listener-eval 
1052: finished :throw-to-toplevel 
[---Sent---] 365.68
(:emacs-rex (swank:listener-eval "(ns image-processing.hist-view-gui
    (:import 
      (javax.imageio ImageIO) 
      (java.io File)
      (java.awt.image BufferedImage)) 
    (:use 
      [clojure.java.io] 
      [seesaw core make-widget border]))


(defn create-hist-panel
   \"Creates and returns a grid-panel showing the images represented by a list of
   BufferedImages. The default number of columns is 3.\"
   #^{:arglists [buff-imgs n-columns]}
  ([buff-imgs] (create-hist-panel buff-imgs 3)) 
  ([buff-imgs n-columns]
   (let [img-group (button-group)
         n-imgs (count buff-imgs)]
     (grid-panel
       :border 5
       :hgap 10 :vgap 10
       :columns (if (< n-imgs n-columns) n-imgs n-columns)
       :items (vec (map #(horizontal-panel
                           ;; The image's path can be retrieved by the user-data of the radio
                           ;; button.
                           :items [(radio :group img-group :user-data %) (label :icon %)])
                        buff-imgs))))))


;(defn set-hist-panel
;  \"Doc\"
;  #^{:arglists [hist-panel buff-imgs]}
;  [hist-panel buff-imgs]
;  code)



(def x (map #(ImageIO/read (File. %)) 
            '(\"test/image_processing/test/1a7r.gif\" 
              \"test/image_processing/test/1azc.gif\")))

(defn create-frame [] 
  (-> (frame :title \"Hello\",
             :content  (create-hist-panel x 5))
      ;:on-close :exit)
      pack!
      show!)) 

") "image-processing.hist-view-gui" :repl-thread 1053)

[-Received-] 365.74
(:write-string "#'image-processing.hist-view-gui/create-frame
" :repl-result)
[-Received-] 365.74
(:return (:ok nil) 1053)
[Actionlist] 365.74
1053: finished :listener-eval 
params: nil
[---Sent---] 365.97
(:emacs-rex (swank:listener-eval "(create-frame)
") "image-processing.hist-view-gui" :repl-thread 1054)

[-Received-] 366.02
(:write-string "#<JFrame$Tag$a79ba523 seesaw.core.proxy$javax.swing.JFrame$Tag$a79ba523[frame13,0,31,472x130,layout=java.awt.BorderLayout,title=Hello,resizable,normal,defaultCloseOperation=HIDE_ON_CLOSE,rootPane=javax.swing.JRootPane[,5,25,462x100,layout=javax.swing.JRootPane$RootLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=16777673,maximumSize=,minimumSize=,preferredSize=],rootPaneCheckingEnabled=true]>
" :repl-result)
[-Received-] 366.02
(:return (:ok nil) 1054)
[Actionlist] 366.02
1054: finished :listener-eval 
params: nil
[---Sent---] 366.24
(:emacs-rex (swank:operator-arglist "image" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1055)

[-Received-] 366.24
(:return (:ok nil) 1055)
[Actionlist] 366.24
1055: finished :operator-arglist 
params: nil
[---Sent---] 369.41
(:emacs-rex (swank:operator-arglist "defn" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1056)

[-Received-] 369.42
(:return (:ok "([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])") 1056)
[Actionlist] 369.42
1056: finished :operator-arglist 
params: "([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])"
[---Sent---] 369.42
(:emacs-rex (swank:describe-function "defn") "image-processing.hist-view-gui" t 1057)

[-Received-] 369.42
(:return (:ok "-------------------------
clojure.core/defn
([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])
Macro
  Same as (def name (fn [params* ] exprs*)) or (def
    name (fn ([params* ] exprs*)+)) with any doc-string or attrs added
    to the var metadata
") 1057)
[Actionlist] 369.42
1057: finished :describe-function 
params: "-------------------------
clojure.core/defn
([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])
Macro
  Same as (def name (fn [params* ] exprs*)) or (def
    name (fn ([params* ] exprs*)+)) with any doc-string or attrs added
    to the var metadata
"
[---Sent---] 369.47
(:emacs-rex (swank:operator-arglist "Doc" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1058)

[-Received-] 369.47
(:return (:ok nil) 1058)
[Actionlist] 369.47
1058: finished :operator-arglist 
params: nil
[---Sent---] 369.83
(:emacs-rex (swank:operator-arglist "hist-panel" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1059)

[-Received-] 369.83
(:return (:ok nil) 1059)
[Actionlist] 369.83
1059: finished :operator-arglist 
params: nil
[---Sent---] 370.12
(:emacs-rex (swank:operator-arglist ")" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1060)

[-Received-] 370.12
(:return (:ok nil) 1060)
[Actionlist] 370.12
1060: finished :operator-arglist 
params: nil
[---Sent---] 370.12
(:emacs-rex (swank:operator-arglist ")" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1061)

[-Received-] 370.12
(:return (:ok nil) 1061)
[Actionlist] 370.12
1061: finished :operator-arglist 
params: nil
[---Sent---] 370.16
(:emacs-rex (swank:operator-arglist ")" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1062)

[-Received-] 370.17
(:return (:ok nil) 1062)
[Actionlist] 370.17
1062: finished :operator-arglist 
params: nil
[---Sent---] 371.2
(:emacs-rex (swank:operator-arglist "config" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1063)

[-Received-] 371.2
(:return (:ok nil) 1063)
[Actionlist] 371.2
1063: finished :operator-arglist 
params: nil
[---Sent---] 371.36
(:emacs-rex (swank:operator-arglist "config" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1064)

[-Received-] 371.36
(:return (:ok nil) 1064)
[Actionlist] 371.36
1064: finished :operator-arglist 
params: nil
[---Sent---] 371.79
(:emacs-rex (swank:operator-arglist "let" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1065)

[-Received-] 371.79
(:return (:ok "([bindings & body])") 1065)
[Actionlist] 371.79
1065: finished :operator-arglist 
params: "([bindings & body])"
[---Sent---] 372.01
(:emacs-rex (swank:operator-arglist "let" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1066)

[-Received-] 372.01
(:return (:ok "([bindings & body])") 1066)
[Actionlist] 372.01
1066: finished :operator-arglist 
params: "([bindings & body])"
[---Sent---] 372.41
(:emacs-rex (swank:operator-arglist "if" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1067)

[-Received-] 372.41
(:return (:ok nil) 1067)
[Actionlist] 372.41
1067: finished :operator-arglist 
params: nil
[---Sent---] 372.52
(:emacs-rex (swank:operator-arglist "if-not" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1068)

[-Received-] 372.52
(:return (:ok "([test then] [test then else])") 1068)
[Actionlist] 372.53
1068: finished :operator-arglist 
params: "([test then] [test then else])"
[---Sent---] 372.61
(:emacs-rex (swank:operator-arglist "if-not" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1069)

[-Received-] 372.61
(:return (:ok "([test then] [test then else])") 1069)
[Actionlist] 372.61
1069: finished :operator-arglist 
params: "([test then] [test then else])"
[---Sent---] 372.61
(:emacs-rex (swank:describe-function "if-not") "image-processing.hist-view-gui" t 1070)

[-Received-] 372.61
(:return (:ok "-------------------------
clojure.core/if-not
([test then] [test then else])
Macro
  Evaluates test. If logical false, evaluates and returns then expr, 
  otherwise else expr, if supplied, else nil.
") 1070)
[Actionlist] 372.62
1070: finished :describe-function 
params: "-------------------------
clojure.core/if-not
([test then] [test then else])
Macro
  Evaluates test. If logical false, evaluates and returns then expr, 
  otherwise else expr, if supplied, else nil.
"
[---Sent---] 373.09
(:emacs-rex (swank:operator-arglist "=" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1071)

[-Received-] 373.09
(:return (:ok "([x] [x y] [x y & more])") 1071)
[Actionlist] 373.09
1071: finished :operator-arglist 
params: "([x] [x y] [x y & more])"
[---Sent---] 373.16
(:emacs-rex (swank:operator-arglist "=" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1072)

[-Received-] 373.16
(:return (:ok "([x] [x y] [x y & more])") 1072)
[Actionlist] 373.16
1072: finished :operator-arglist 
params: "([x] [x y] [x y & more])"
[---Sent---] 373.26
(:emacs-rex (swank:listener-eval "(= nil nil)
") "image-processing.hist-view-gui" :repl-thread 1073)

[-Received-] 373.26
(:write-string "true
" :repl-result)
[-Received-] 373.26
(:return (:ok nil) 1073)
[Actionlist] 373.26
1073: finished :listener-eval 
params: nil
[---Sent---] 373.48
(:emacs-rex (swank:listener-eval "(= nil 0)
") "image-processing.hist-view-gui" :repl-thread 1074)

[-Received-] 373.48
(:write-string "false
" :repl-result)
[-Received-] 373.48
(:return (:ok nil) 1074)
[Actionlist] 373.48
1074: finished :listener-eval 
params: nil
[---Sent---] 373.68
(:emacs-rex (swank:operator-arglist "=" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1075)

[-Received-] 373.68
(:return (:ok "([x] [x y] [x y & more])") 1075)
[Actionlist] 373.68
1075: finished :operator-arglist 
params: "([x] [x y] [x y & more])"
[---Sent---] 373.76
(:emacs-rex (swank:operator-arglist "=" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1076)

[-Received-] 373.76
(:return (:ok "([x] [x y] [x y & more])") 1076)
[Actionlist] 373.76
1076: finished :operator-arglist 
params: "([x] [x y] [x y & more])"
[---Sent---] 373.88
(:emacs-rex (swank:operator-arglist "first" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1077)

[-Received-] 373.89
(:return (:ok "([coll])") 1077)
[Actionlist] 373.89
1077: finished :operator-arglist 
params: "([coll])"
[---Sent---] 374.01
(:emacs-rex (swank:listener-eval "(= nil (first []))
") "image-processing.hist-view-gui" :repl-thread 1078)

[-Received-] 374.01
(:write-string "true
" :repl-result)
[-Received-] 374.01
(:return (:ok nil) 1078)
[Actionlist] 374.01
1078: finished :listener-eval 
params: nil
[---Sent---] 374.22
(:emacs-rex (swank:listener-eval "(= nil (first [1]))
") "image-processing.hist-view-gui" :repl-thread 1079)

[-Received-] 374.22
(:write-string "false
" :repl-result)
[-Received-] 374.22
(:return (:ok nil) 1079)
[Actionlist] 374.22
1079: finished :listener-eval 
params: nil
[---Sent---] 374.38
(:emacs-rex (swank:operator-arglist "=" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1080)

[-Received-] 374.39
(:return (:ok "([x] [x y] [x y & more])") 1080)
[Actionlist] 374.39
1080: finished :operator-arglist 
params: "([x] [x y] [x y & more])"
[---Sent---] 374.46
(:emacs-rex (swank:operator-arglist "=" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1081)

[-Received-] 374.47
(:return (:ok "([x] [x y] [x y & more])") 1081)
[Actionlist] 374.47
1081: finished :operator-arglist 
params: "([x] [x y] [x y & more])"
[---Sent---] 374.82
(:emacs-rex (swank:operator-arglist "config" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1082)

[-Received-] 374.82
(:return (:ok nil) 1082)
[Actionlist] 374.82
1082: finished :operator-arglist 
params: nil
[---Sent---] 374.98
(:emacs-rex (swank:operator-arglist "config" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1083)

[-Received-] 374.98
(:return (:ok nil) 1083)
[Actionlist] 374.98
1083: finished :operator-arglist 
params: nil
[---Sent---] 375.35
(:emacs-rex (swank:operator-arglist "0" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1084)

[-Received-] 375.36
(:return (:ok nil) 1084)
[Actionlist] 375.36
1084: finished :operator-arglist 
params: nil
[---Sent---] 375.44
(:emacs-rex (swank:operator-arglist "0" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1085)

[-Received-] 375.44
(:return (:ok nil) 1085)
[Actionlist] 375.44
1085: finished :operator-arglist 
params: nil
[---Sent---] 375.51
(:emacs-rex (swank:listener-eval "(0 [1 2])
") "image-processing.hist-view-gui" :repl-thread 1086)

[-Received-] 375.51
(:debug 1 1 ("java.lang.Long cannot be cast to clojure.lang.IFn" "  [Thrown class java.lang.ClassCastException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "      NO_SOURCE_FILE:1 image-processing.hist-view-gui/eval8178" (:restartable nil)) (1 "    Compiler.java:6465 clojure.lang.Compiler.eval" (:restartable nil)) (2 "    Compiler.java:6431 clojure.lang.Compiler.eval" (:restartable nil)) (3 "         core.clj:2795 clojure.core/eval" (:restartable nil)) (4 "          core.clj:534 swank.core/eval825[fn]" (:restartable nil)) (5 "      MultiFn.java:163 clojure.lang.MultiFn.invoke" (:restartable nil)) (6 "          basic.clj:55 swank.commands.basic/eval-region" (:restartable nil)) (7 "          basic.clj:45 swank.commands.basic/eval-region" (:restartable nil)) (8 "          basic.clj:79 swank.commands.basic/eval1101[fn]" (:restartable nil)) (9 "          Var.java:401 clojure.lang.Var.invoke" (:restartable nil))) (nil))
[-Received-] 375.52
(:debug-activate 1 1 nil)
[---Sent---] 375.61
(:emacs-rex (swank:throw-to-toplevel) nil 1 1087)

[-Received-] 375.61
(:return (:abort) 1087)
[Actionlist] 375.61
1086: pending  :listener-eval 
1087: finished :throw-to-toplevel 
[-Received-] 375.61
(:debug-return 1 1 nil)
[-Received-] 375.61
(:return (:abort) 1086)
[Actionlist] 375.61
1086: finished :listener-eval 
1087: finished :throw-to-toplevel 
[---Sent---] 375.95
(:emacs-rex (swank:listener-eval "(1 [1 2])
") "image-processing.hist-view-gui" :repl-thread 1088)

[-Received-] 375.95
(:debug 1 1 ("java.lang.Long cannot be cast to clojure.lang.IFn" "  [Thrown class java.lang.ClassCastException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "      NO_SOURCE_FILE:1 image-processing.hist-view-gui/eval8184" (:restartable nil)) (1 "    Compiler.java:6465 clojure.lang.Compiler.eval" (:restartable nil)) (2 "    Compiler.java:6431 clojure.lang.Compiler.eval" (:restartable nil)) (3 "         core.clj:2795 clojure.core/eval" (:restartable nil)) (4 "          core.clj:534 swank.core/eval825[fn]" (:restartable nil)) (5 "      MultiFn.java:163 clojure.lang.MultiFn.invoke" (:restartable nil)) (6 "          basic.clj:55 swank.commands.basic/eval-region" (:restartable nil)) (7 "          basic.clj:45 swank.commands.basic/eval-region" (:restartable nil)) (8 "          basic.clj:79 swank.commands.basic/eval1101[fn]" (:restartable nil)) (9 "          Var.java:401 clojure.lang.Var.invoke" (:restartable nil))) (nil))
[-Received-] 375.96
(:debug-activate 1 1 nil)
[---Sent---] 376.06
(:emacs-rex (swank:throw-to-toplevel) nil 1 1089)

[-Received-] 376.06
(:return (:abort) 1089)
[Actionlist] 376.06
1088: pending  :listener-eval 
1089: finished :throw-to-toplevel 
[-Received-] 376.06
(:debug-return 1 1 nil)
[-Received-] 376.06
(:return (:abort) 1088)
[Actionlist] 376.06
1088: finished :listener-eval 
1089: finished :throw-to-toplevel 
[---Sent---] 376.26
(:emacs-rex (swank:operator-arglist "1" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1090)

[-Received-] 376.26
(:return (:ok nil) 1090)
[Actionlist] 376.26
1090: finished :operator-arglist 
params: nil
[---Sent---] 376.45
(:emacs-rex (swank:listener-eval "([1 2] 0)
") "image-processing.hist-view-gui" :repl-thread 1091)

[-Received-] 376.45
(:write-string "1
" :repl-result)
[-Received-] 376.45
(:return (:ok nil) 1091)
[Actionlist] 376.45
1091: finished :listener-eval 
params: nil
[---Sent---] 376.66
(:emacs-rex (swank:listener-eval "([1 2] 1)
") "image-processing.hist-view-gui" :repl-thread 1092)

[-Received-] 376.66
(:write-string "2
" :repl-result)
[-Received-] 376.74
(:return (:ok nil) 1092)
[Actionlist] 376.74
1092: finished :listener-eval 
params: nil
[---Sent---] 377.06
(:emacs-rex (swank:operator-arglist "config" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1093)

[-Received-] 377.06
(:return (:ok nil) 1093)
[Actionlist] 377.06
1093: finished :operator-arglist 
params: nil
[---Sent---] 377.39
(:emacs-rex (swank:listener-eval "(defn get-radio-group
  \"Doc\"
  #^{:arglists [hist-panel]}
  [hist-panel]
  (let [radio-img (first (config hist-panel :items))]
    (if-not (= nil radio-img)
            (config (first (config radio-img :items)) :group))))
") "image-processing.hist-view-gui" :repl-thread 1094)

[-Received-] 377.39
(:write-string "#'image-processing.hist-view-gui/get-radio-group
" :repl-result)
[-Received-] 377.39
(:return (:ok nil) 1094)
[Actionlist] 377.39
1094: finished :listener-eval 
params: nil
[---Sent---] 378.14
(:emacs-rex (swank:fuzzy-completions "get-" "image-processing.hist-view-gui" :limit 200 :time-limit-in-msec 2000) nil t 1095)

[-Received-] 378.14
(:return (:ok ((("get-radio-group" "40.18" ((0 "get-")) "-f------") ("seesaw.widget-options/" "11.22" ((10 "get-")) "b------p") ("image-processing.hist-view-gui/" "6.47" ((3 "ge") (20 "t-")) "b------p")) nil)) 1095)
[Actionlist] 378.14
1095: finished :fuzzy-completions 
params: [[['"get-radio-group"', '"40.18"', [['0', '"get-"']], '"-f------"'], ['"seesaw.widget-options/"', '"11.22"', [['10', '"get-"']], '"b------p"'], ['"image-processing.hist-view-gui/"', '"6.47"', [['3', '"ge"'], ['20', '"t-"']], '"b------p"']], 'nil']
[---Sent---] 378.28
(:emacs-rex (swank:operator-arglist "get-radio-group" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1096)

[-Received-] 378.28
(:return (:ok "([hist-panel])") 1096)
[Actionlist] 378.28
1096: finished :operator-arglist 
params: "([hist-panel])"
[---Sent---] 378.75
(:emacs-rex (swank:operator-arglist "create-hist-panel" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1097)

[-Received-] 378.75
(:return (:ok "([buff-imgs] [buff-imgs n-columns])") 1097)
[Actionlist] 378.76
1097: finished :operator-arglist 
params: "([buff-imgs] [buff-imgs n-columns])"
[---Sent---] 378.85
(:emacs-rex (swank:listener-eval "(get-radio-group (create-hist-panel x))
") "image-processing.hist-view-gui" :repl-thread 1098)

[-Received-] 378.91
(:debug 1 1 ("Option :group cannot be read from class seesaw.core.proxy$javax.swing.JRadioButton$Tag$a79ba523" "  [Thrown class java.lang.IllegalArgumentException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "        util.clj:19 seesaw.util/illegal-argument" (:restartable nil)) (1 "    RestFn.java:439 clojure.lang.RestFn.invoke" (:restartable nil)) (2 "    options.clj:167 seesaw.options/get-option-value" (:restartable nil)) (3 "    options.clj:161 seesaw.options/get-option-value" (:restartable nil)) (4 "       core.clj:880 seesaw.core/eval6154[fn]" (:restartable nil)) (5 "      config.clj:16 seesaw.config/eval2353[fn]" (:restartable nil)) (6 "      config.clj:45 seesaw.config/config" (:restartable nil)) (7 "   NO_SOURCE_FILE:1 image-processing.hist-view-gui/get-radio-group" (:restartable nil)) (8 "   NO_SOURCE_FILE:1 image-processing.hist-view-gui/eval8211" (:restartable nil)) (9 " Compiler.java:6465 clojure.lang.Compiler.eval" (:restartable nil))) (nil))
[-Received-] 378.92
(:debug-activate 1 1 nil)
[---Sent---] 379.17
(:emacs-rex (swank:throw-to-toplevel) nil 1 1099)

[-Received-] 379.17
(:return (:abort) 1099)
[Actionlist] 379.17
1098: pending  :listener-eval 
1099: finished :throw-to-toplevel 
[-Received-] 379.17
(:debug-return 1 1 nil)
[-Received-] 379.17
(:return (:abort) 1098)
[Actionlist] 379.17
1098: finished :listener-eval 
1099: finished :throw-to-toplevel 
[---Sent---] 379.29
(:emacs-rex (swank:listener-eval "
") "image-processing.hist-view-gui" :repl-thread 1100)

[-Received-] 379.29
(:write-string "nil
" :repl-result)
[-Received-] 379.29
(:return (:ok nil) 1100)
[Actionlist] 379.29
1100: finished :listener-eval 
params: nil
[---Sent---] 380.21
(:emacs-rex (swank:operator-arglist "def" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1101)

[-Received-] 380.22
(:return (:ok nil) 1101)
[Actionlist] 380.22
1101: finished :operator-arglist 
params: nil
[---Sent---] 380.28
(:emacs-rex (swank:operator-arglist "def" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1102)

[-Received-] 380.28
(:return (:ok nil) 1102)
[Actionlist] 380.28
1102: finished :operator-arglist 
params: nil
[---Sent---] 380.66
(:emacs-rex (swank:operator-arglist "create-hist-panel" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1103)

[-Received-] 380.66
(:return (:ok "([buff-imgs] [buff-imgs n-columns])") 1103)
[Actionlist] 380.66
1103: finished :operator-arglist 
params: "([buff-imgs] [buff-imgs n-columns])"
[---Sent---] 380.76
(:emacs-rex (swank:listener-eval "(def z (create-hist-panel x))
") "image-processing.hist-view-gui" :repl-thread 1104)

[-Received-] 380.76
(:write-string "#'image-processing.hist-view-gui/z
" :repl-result)
[-Received-] 380.76
(:return (:ok nil) 1104)
[Actionlist] 380.76
1104: finished :listener-eval 
params: nil
[---Sent---] 380.99
(:emacs-rex (swank:operator-arglist "config" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1105)

[-Received-] 380.99
(:return (:ok nil) 1105)
[Actionlist] 380.99
1105: finished :operator-arglist 
params: nil
[---Sent---] 381.05
(:emacs-rex (swank:operator-arglist "config" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1106)

[-Received-] 381.05
(:return (:ok nil) 1106)
[Actionlist] 381.05
1106: finished :operator-arglist 
params: nil
[---Sent---] 381.23
(:emacs-rex (swank:listener-eval "(config z :items)
") "image-processing.hist-view-gui" :repl-thread 1107)

[-Received-] 381.23
(:write-string "(#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,0,0,0x0,invalid,layout=javax.swing.BoxLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]> #<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,0,0,0x0,invalid,layout=javax.swing.BoxLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]>)
" :repl-result)
[-Received-] 381.24
(:return (:ok nil) 1107)
[Actionlist] 381.24
1107: finished :listener-eval 
params: nil
[---Sent---] 381.4
(:emacs-rex (swank:listener-eval "z
") "image-processing.hist-view-gui" :repl-thread 1108)

[-Received-] 381.4
(:write-string "#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,0,0,0x0,invalid,layout=java.awt.GridLayout,alignmentX=0.0,alignmentY=0.0,border=javax.swing.border.EmptyBorder@610747,flags=9,maximumSize=,minimumSize=,preferredSize=]>
" :repl-result)
[-Received-] 381.41
(:return (:ok nil) 1108)
[Actionlist] 381.41
1108: finished :listener-eval 
params: nil
[---Sent---] 381.91
(:emacs-rex (swank:listener-eval "(config z :hgap)
") "image-processing.hist-view-gui" :repl-thread 1109)

[-Received-] 381.91
(:debug 1 1 ("Option :hgap cannot be read from class seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523" "  [Thrown class java.lang.IllegalArgumentException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "        util.clj:19 seesaw.util/illegal-argument" (:restartable nil)) (1 "    RestFn.java:439 clojure.lang.RestFn.invoke" (:restartable nil)) (2 "    options.clj:167 seesaw.options/get-option-value" (:restartable nil)) (3 "    options.clj:161 seesaw.options/get-option-value" (:restartable nil)) (4 "       core.clj:880 seesaw.core/eval6154[fn]" (:restartable nil)) (5 "      config.clj:16 seesaw.config/eval2353[fn]" (:restartable nil)) (6 "      config.clj:45 seesaw.config/config" (:restartable nil)) (7 "   NO_SOURCE_FILE:1 image-processing.hist-view-gui/eval8237" (:restartable nil)) (8 " Compiler.java:6465 clojure.lang.Compiler.eval" (:restartable nil)) (9 " Compiler.java:6431 clojure.lang.Compiler.eval" (:restartable nil))) (nil))
[-Received-] 381.93
(:debug-activate 1 1 nil)
[---Sent---] 382.08
(:emacs-rex (swank:throw-to-toplevel) nil 1 1110)

[-Received-] 382.08
(:return (:abort) 1110)
[Actionlist] 382.08
1109: pending  :listener-eval 
1110: finished :throw-to-toplevel 
[-Received-] 382.08
(:debug-return 1 1 nil)
[-Received-] 382.17
(:return (:abort) 1109)
[Actionlist] 382.17
1109: finished :listener-eval 
[---Sent---] 382.34
(:emacs-rex (swank:listener-eval "z
") "image-processing.hist-view-gui" :repl-thread 1111)

[-Received-] 382.34
(:write-string "#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,0,0,0x0,invalid,layout=java.awt.GridLayout,alignmentX=0.0,alignmentY=0.0,border=javax.swing.border.EmptyBorder@610747,flags=9,maximumSize=,minimumSize=,preferredSize=]>
" :repl-result)
[-Received-] 382.34
(:return (:ok nil) 1111)
[Actionlist] 382.34
1111: finished :listener-eval 
params: nil
[---Sent---] 382.56
(:emacs-rex (swank:listener-eval "(config z :items)
") "image-processing.hist-view-gui" :repl-thread 1112)

[-Received-] 382.56
(:write-string "(#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,0,0,0x0,invalid,layout=javax.swing.BoxLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]> #<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,0,0,0x0,invalid,layout=javax.swing.BoxLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]>)
" :repl-result)
[-Received-] 382.56
(:return (:ok nil) 1112)
[Actionlist] 382.56
1112: finished :listener-eval 
params: nil
[---Sent---] 383.04
(:emacs-rex (swank:listener-eval "(config z :hgap)
") "image-processing.hist-view-gui" :repl-thread 1113)

[-Received-] 383.04
(:debug 1 1 ("Option :hgap cannot be read from class seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523" "  [Thrown class java.lang.IllegalArgumentException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "        util.clj:19 seesaw.util/illegal-argument" (:restartable nil)) (1 "    RestFn.java:439 clojure.lang.RestFn.invoke" (:restartable nil)) (2 "    options.clj:167 seesaw.options/get-option-value" (:restartable nil)) (3 "    options.clj:161 seesaw.options/get-option-value" (:restartable nil)) (4 "       core.clj:880 seesaw.core/eval6154[fn]" (:restartable nil)) (5 "      config.clj:16 seesaw.config/eval2353[fn]" (:restartable nil)) (6 "      config.clj:45 seesaw.config/config" (:restartable nil)) (7 "   NO_SOURCE_FILE:1 image-processing.hist-view-gui/eval8249" (:restartable nil)) (8 " Compiler.java:6465 clojure.lang.Compiler.eval" (:restartable nil)) (9 " Compiler.java:6431 clojure.lang.Compiler.eval" (:restartable nil))) (nil))
[-Received-] 383.04
(:debug-activate 1 1 nil)
[---Sent---] 383.22
(:emacs-rex (swank:throw-to-toplevel) nil 1 1114)

[-Received-] 383.22
(:return (:abort) 1114)
[Actionlist] 383.22
1113: pending  :listener-eval 
1114: finished :throw-to-toplevel 
[-Received-] 383.22
(:debug-return 1 1 nil)
[-Received-] 383.22
(:return (:abort) 1113)
[Actionlist] 383.22
1113: finished :listener-eval 
1114: finished :throw-to-toplevel 
[---Sent---] 383.76
(:emacs-rex (swank:listener-eval "(config* z :hgap)
") "image-processing.hist-view-gui" :repl-thread 1115)

[-Received-] 383.76
(:debug 1 1 ("Unable to resolve symbol: config* in this context" "  [Thrown class java.lang.RuntimeException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "              Util.java:156 clojure.lang.Util.runtimeException" (:restartable nil)) (1 "         Compiler.java:6720 clojure.lang.Compiler.resolveIn" (:restartable nil)) (2 "         Compiler.java:6664 clojure.lang.Compiler.resolve" (:restartable nil)) (3 "         Compiler.java:6625 clojure.lang.Compiler.analyzeSymbol" (:restartable nil)) (4 "         Compiler.java:6198 clojure.lang.Compiler.analyze" (:restartable nil)) (5 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil)) (6 "         Compiler.java:3452 clojure.lang.Compiler$InvokeExpr.parse" (:restartable nil)) (7 "         Compiler.java:6411 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (8 "         Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil)) (9 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil))) (nil))
[-Received-] 383.76
(:debug-activate 1 1 nil)
[---Sent---] 383.92
(:emacs-rex (swank:throw-to-toplevel) nil 1 1116)

[-Received-] 383.93
(:return (:abort) 1116)
[Actionlist] 383.93
1115: pending  :listener-eval 
1116: finished :throw-to-toplevel 
[-Received-] 383.93
(:debug-return 1 1 nil)
[-Received-] 383.93
(:return (:abort) 1115)
[Actionlist] 383.93
1115: finished :listener-eval 
1116: finished :throw-to-toplevel 
[---Sent---] 384.27
(:emacs-rex (swank:operator-arglist "core" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1117)

[-Received-] 384.28
(:return (:ok nil) 1117)
[Actionlist] 384.28
1117: finished :operator-arglist 
params: nil
[---Sent---] 384.37
(:emacs-rex (swank:operator-arglist "seesaw" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1118)

[-Received-] 384.37
(:return (:ok nil) 1118)
[Actionlist] 384.37
1118: finished :operator-arglist 
params: nil
[---Sent---] 384.54
(:emacs-rex (swank:listener-eval "(ns image-processing.hist-view-gui
    (:import 
      (javax.imageio ImageIO) 
      (java.io File)
      (java.awt.image BufferedImage)) 
    (:use 
      [clojure.java.io] 
      [seesaw core make-widget border config]))
") "image-processing.hist-view-gui" :repl-thread 1119)

[-Received-] 384.59
(:debug 1 1 ("config! already refers to: #'seesaw.core/config! in namespace: image-processing.hist-view-gui" "  [Thrown class java.lang.IllegalStateException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "     Namespace.java:88 clojure.lang.Namespace.warnOrFailOnReplace" (:restartable nil)) (1 "    Namespace.java:110 clojure.lang.Namespace.reference" (:restartable nil)) (2 "    Namespace.java:168 clojure.lang.Namespace.refer" (:restartable nil)) (3 "         core.clj:3775 clojure.core/refer" (:restartable nil)) (4 "       RestFn.java:410 clojure.lang.RestFn.invoke" (:restartable nil)) (5 "          AFn.java:161 clojure.lang.AFn.applyToHelper" (:restartable nil)) (6 "       RestFn.java:132 clojure.lang.RestFn.applyTo" (:restartable nil)) (7 "          core.clj:602 clojure.core/apply" (:restartable nil)) (8 "         core.clj:5252 clojure.core/load-lib" (:restartable nil)) (9 "       RestFn.java:142 clojure.lang.RestFn.applyTo" (:restartable nil))) (nil))
[-Received-] 384.59
(:debug-activate 1 1 nil)
[---Sent---] 384.78
(:emacs-rex (swank:throw-to-toplevel) nil 1 1120)

[-Received-] 384.78
(:return (:abort) 1120)
[Actionlist] 384.78
1119: pending  :listener-eval 
1120: finished :throw-to-toplevel 
[-Received-] 384.78
(:debug-return 1 1 nil)
[-Received-] 384.78
(:return (:abort) 1119)
[Actionlist] 384.78
1119: finished :listener-eval 
1120: finished :throw-to-toplevel 
[---Sent---] 385.01
(:emacs-rex (swank:listener-eval "(ns image-processing.hist-view-gui
    (:import 
      (javax.imageio ImageIO) 
      (java.io File)
      (java.awt.image BufferedImage)) 
    (:use 
      [clojure.java.io] 
      [seesaw core make-widget border]))
") "image-processing.hist-view-gui" :repl-thread 1121)

[-Received-] 385.01
(:write-string "nil
" :repl-result)
[-Received-] 385.01
(:return (:ok nil) 1121)
[Actionlist] 385.01
1121: finished :listener-eval 
params: nil
[---Sent---] 385.61
(:emacs-rex (swank:listener-eval "(z)
") "image-processing.hist-view-gui" :repl-thread 1122)

[-Received-] 385.67
(:debug 1 1 ("seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523 cannot be cast to clojure.lang.IFn" "  [Thrown class java.lang.ClassCastException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "      NO_SOURCE_FILE:1 image-processing.hist-view-gui/eval8282" (:restartable nil)) (1 "    Compiler.java:6465 clojure.lang.Compiler.eval" (:restartable nil)) (2 "    Compiler.java:6431 clojure.lang.Compiler.eval" (:restartable nil)) (3 "         core.clj:2795 clojure.core/eval" (:restartable nil)) (4 "          core.clj:534 swank.core/eval825[fn]" (:restartable nil)) (5 "      MultiFn.java:163 clojure.lang.MultiFn.invoke" (:restartable nil)) (6 "          basic.clj:55 swank.commands.basic/eval-region" (:restartable nil)) (7 "          basic.clj:45 swank.commands.basic/eval-region" (:restartable nil)) (8 "          basic.clj:79 swank.commands.basic/eval1101[fn]" (:restartable nil)) (9 "          Var.java:401 clojure.lang.Var.invoke" (:restartable nil))) (nil))
[-Received-] 385.67
(:debug-activate 1 1 nil)
[---Sent---] 385.82
(:emacs-rex (swank:throw-to-toplevel) nil 1 1123)

[-Received-] 385.82
(:return (:abort) 1123)
[Actionlist] 385.82
1122: pending  :listener-eval 
1123: finished :throw-to-toplevel 
[-Received-] 385.82
(:debug-return 1 1 nil)
[-Received-] 385.82
(:return (:abort) 1122)
[Actionlist] 385.82
1122: finished :listener-eval 
1123: finished :throw-to-toplevel 
[---Sent---] 385.97
(:emacs-rex (swank:listener-eval "
") "image-processing.hist-view-gui" :repl-thread 1124)

[-Received-] 385.97
(:write-string "nil
" :repl-result)
[-Received-] 386.04
(:return (:ok nil) 1124)
[Actionlist] 386.04
1124: finished :listener-eval 
params: nil
[---Sent---] 386.16
(:emacs-rex (swank:listener-eval "z 
") "image-processing.hist-view-gui" :repl-thread 1125)

[-Received-] 386.16
(:write-string "#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,0,0,0x0,invalid,layout=java.awt.GridLayout,alignmentX=0.0,alignmentY=0.0,border=javax.swing.border.EmptyBorder@610747,flags=9,maximumSize=,minimumSize=,preferredSize=]>
" :repl-result)
[-Received-] 386.16
(:return (:ok nil) 1125)
[Actionlist] 386.16
1125: finished :listener-eval 
params: nil
[---Sent---] 386.48
(:emacs-rex (swank:operator-arglist "show-options" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1126)

[-Received-] 386.48
(:return (:ok "([v])") 1126)
[Actionlist] 386.48
1126: finished :operator-arglist 
params: "([v])"
[---Sent---] 386.57
(:emacs-rex (swank:listener-eval "(show-options z)
") "image-processing.hist-view-gui" :repl-thread 1127)

[-Received-] 386.57
(:write-string "nil
" :repl-result)
[-Received-] 386.57
(:return (:ok nil) 1127)
[Actionlist] 386.57
1127: finished :listener-eval 
params: nil
[-Received-] 386.64
(:write-string "seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523
                    Option  Notes/Examples
--------------------------  --------------
               :background  :aliceblue
                            \"#f00\"
                            \"#FF0000\"
                            (seesaw.color/color 255 0 0 0 224)
                   :border  5
                            \"Border Title\"
                            [5 \"Compound\" 10]
                            See (seesaw.border/*)
                   :bounds  :preferred
                            [x y w h]
                            Use :* to leave component unchanged:
                            [x :* :* h]
                    :class  :class-name
                            #{:multiple :class-names}
                  :columns  Internal use.
                   :cursor  See (seesaw.cursor/cursor)
            :drag-enabled?  boolean
                 :enabled?  boolean
               :focusable?  boolean
                     :font  ARIAL-BOLD-18
                            :monospaced
                            :serif
                            :sans-serif
                            See (seesaw.font/font)
               :foreground  :aliceblue
                            \"#f00\"
                            \"#FF0000\"
                            (seesaw.color/color 255 0 0 0 224)
                     :hgap  Integer pixels
                     :icon  See (seesaw.icon/icon)
                       :id  A keyword id for the widget
                    :items  A sequence of widgets to add.
                   :layout  A layout manager.
                   :listen  vector of args for (seesaw.core/listen)
                 :location  See (seesaw.core/move! :to)
       :location-on-screen  java.awt.Point location in global screen coords
             :maximum-size  [640 :by 480]
                            java.awt.Dimension
             :minimum-size  [640 :by 480]
                            java.awt.Dimension
                  :opaque?  boolean
                    :paint  See (seesaw.core/canvas)
                    :popup  javax.swing.JPopupMenu
                            (fn [e]) that returns a seq of menu items
                            See (seesaw.core/popup)
           :preferred-size  [640 :by 480]
                            java.awt.Dimension
                     :rows  Internal use.
                     :size  [640 :by 480]
                            java.awt.Dimension
                     :text  A string
                            Anything accepted by (clojure.core/slurp)
                      :tip  A tooltip string
         :transfer-handler  See (seesaw.dnd/to-transfer-handler)
                :user-data  Anything.
                            Associate arbitrary user-data with a widget.
                            See (seesaw.core/user-data)
                     :vgap  Integer pixels
                 :visible?  boolean
" nil)
[---Sent---] 387.45
(:emacs-rex (swank:operator-arglist "config" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1128)

[-Received-] 387.45
(:return (:ok nil) 1128)
[Actionlist] 387.45
1128: finished :operator-arglist 
params: nil
[---Sent---] 387.49
(:emacs-rex (swank:operator-arglist "config" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1129)

[-Received-] 387.49
(:return (:ok nil) 1129)
[Actionlist] 387.49
1129: finished :operator-arglist 
params: nil
[---Sent---] 387.7
(:emacs-rex (swank:listener-eval "(config z :columns)
") "image-processing.hist-view-gui" :repl-thread 1130)

[-Received-] 387.7
(:debug 1 1 ("Wrong number of args (1) passed to: options$ignore-option$fn" "  [Thrown class clojure.lang.ArityException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "       AFn.java:437 clojure.lang.AFn.throwArity" (:restartable nil)) (1 "        AFn.java:39 clojure.lang.AFn.invoke" (:restartable nil)) (2 "    options.clj:166 seesaw.options/get-option-value" (:restartable nil)) (3 "    options.clj:161 seesaw.options/get-option-value" (:restartable nil)) (4 "       core.clj:880 seesaw.core/eval6154[fn]" (:restartable nil)) (5 "      config.clj:16 seesaw.config/eval2353[fn]" (:restartable nil)) (6 "      config.clj:45 seesaw.config/config" (:restartable nil)) (7 "   NO_SOURCE_FILE:1 image-processing.hist-view-gui/eval8302" (:restartable nil)) (8 " Compiler.java:6465 clojure.lang.Compiler.eval" (:restartable nil)) (9 " Compiler.java:6431 clojure.lang.Compiler.eval" (:restartable nil))) (nil))
[-Received-] 387.71
(:debug-activate 1 1 nil)
[---Sent---] 388.09
(:emacs-rex (swank:throw-to-toplevel) nil 1 1131)

[-Received-] 388.09
(:return (:abort) 1131)
[Actionlist] 388.09
1130: pending  :listener-eval 
1131: finished :throw-to-toplevel 
[-Received-] 388.09
(:debug-return 1 1 nil)
[-Received-] 388.09
(:return (:abort) 1130)
[Actionlist] 388.09
1130: finished :listener-eval 
1131: finished :throw-to-toplevel 
[---Sent---] 388.27
(:emacs-rex (swank:listener-eval "(config z :columns)
") "image-processing.hist-view-gui" :repl-thread 1132)

[-Received-] 388.27
(:debug 1 1 ("Wrong number of args (1) passed to: options$ignore-option$fn" "  [Thrown class clojure.lang.ArityException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "       AFn.java:437 clojure.lang.AFn.throwArity" (:restartable nil)) (1 "        AFn.java:39 clojure.lang.AFn.invoke" (:restartable nil)) (2 "    options.clj:166 seesaw.options/get-option-value" (:restartable nil)) (3 "    options.clj:161 seesaw.options/get-option-value" (:restartable nil)) (4 "       core.clj:880 seesaw.core/eval6154[fn]" (:restartable nil)) (5 "      config.clj:16 seesaw.config/eval2353[fn]" (:restartable nil)) (6 "      config.clj:45 seesaw.config/config" (:restartable nil)) (7 "   NO_SOURCE_FILE:1 image-processing.hist-view-gui/eval8308" (:restartable nil)) (8 " Compiler.java:6465 clojure.lang.Compiler.eval" (:restartable nil)) (9 " Compiler.java:6431 clojure.lang.Compiler.eval" (:restartable nil))) (nil))
[-Received-] 388.28
(:debug-activate 1 1 nil)
[---Sent---] 388.47
(:emacs-rex (swank:throw-to-toplevel) nil 1 1133)

[-Received-] 388.47
(:return (:abort) 1133)
[Actionlist] 388.47
1132: pending  :listener-eval 
1133: finished :throw-to-toplevel 
[-Received-] 388.47
(:debug-return 1 1 nil)
[-Received-] 388.47
(:return (:abort) 1132)
[Actionlist] 388.47
1132: finished :listener-eval 
1133: finished :throw-to-toplevel 
[---Sent---] 389.05
(:emacs-rex (swank:listener-eval "(config z :items)
") "image-processing.hist-view-gui" :repl-thread 1134)

[-Received-] 389.05
(:write-string "(#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,0,0,0x0,invalid,layout=javax.swing.BoxLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]> #<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,0,0,0x0,invalid,layout=javax.swing.BoxLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]>)
" :repl-result)
[-Received-] 389.05
(:return (:ok nil) 1134)
[Actionlist] 389.05
1134: finished :listener-eval 
params: nil
[---Sent---] 389.52
(:emacs-rex (swank:listener-eval "(first (config z :items)) 
") "image-processing.hist-view-gui" :repl-thread 1135)

[-Received-] 389.52
(:write-string "#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,0,0,0x0,invalid,layout=javax.swing.BoxLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]>
" :repl-result)
[-Received-] 389.52
(:return (:ok nil) 1135)
[Actionlist] 389.52
1135: finished :listener-eval 
params: nil
[---Sent---] 390.17
(:emacs-rex (swank:listener-eval "(show-options (first (config z :items))) 
") "image-processing.hist-view-gui" :repl-thread 1136)

[-Received-] 390.17
(:write-string "nil
" :repl-result)
[-Received-] 390.17
(:return (:ok nil) 1136)
[Actionlist] 390.17
1136: finished :listener-eval 
params: nil
[-Received-] 390.25
(:write-string "seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523
                    Option  Notes/Examples
--------------------------  --------------
               :background  :aliceblue
                            \"#f00\"
                            \"#FF0000\"
                            (seesaw.color/color 255 0 0 0 224)
                   :border  5
                            \"Border Title\"
                            [5 \"Compound\" 10]
                            See (seesaw.border/*)
                   :bounds  :preferred
                            [x y w h]
                            Use :* to leave component unchanged:
                            [x :* :* h]
                    :class  :class-name
                            #{:multiple :class-names}
                   :cursor  See (seesaw.cursor/cursor)
            :drag-enabled?  boolean
                 :enabled?  boolean
               :focusable?  boolean
                     :font  ARIAL-BOLD-18
                            :monospaced
                            :serif
                            :sans-serif
                            See (seesaw.font/font)
               :foreground  :aliceblue
                            \"#f00\"
                            \"#FF0000\"
                            (seesaw.color/color 255 0 0 0 224)
                     :icon  See (seesaw.icon/icon)
                       :id  A keyword id for the widget
                    :items  A sequence of widgets to add.
                   :layout  A layout manager.
                   :listen  vector of args for (seesaw.core/listen)
                 :location  See (seesaw.core/move! :to)
       :location-on-screen  java.awt.Point location in global screen coords
             :maximum-size  [640 :by 480]
                            java.awt.Dimension
             :minimum-size  [640 :by 480]
                            java.awt.Dimension
                  :opaque?  boolean
                    :paint  See (seesaw.core/canvas)
                    :popup  javax.swing.JPopupMenu
                            (fn [e]) that returns a seq of menu items
                            See (seesaw.core/popup)
           :preferred-size  [640 :by 480]
                            java.awt.Dimension
                     :size  [640 :by 480]
                            java.awt.Dimension
                     :text  A string
                            Anything accepted by (clojure.core/slurp)
                      :tip  A tooltip string
         :transfer-handler  See (seesaw.dnd/to-transfer-handler)
                :user-data  Anything.
                            Associate arbitrary user-data with a widget.
                            See (seesaw.core/user-data)
                 :visible?  boolean
" nil)
[---Sent---] 390.49
(:emacs-rex (swank:operator-arglist "Use" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1137)

[-Received-] 390.49
(:return (:ok nil) 1137)
[Actionlist] 390.49
1137: finished :operator-arglist 
params: nil
[---Sent---] 391.25
(:emacs-rex (swank:listener-eval "(config (first (config z :items)) :items) 
") "image-processing.hist-view-gui" :repl-thread 1138)

[-Received-] 391.25
(:write-string "(#<JRadioButton$Tag$a79ba523 seesaw.core.proxy$javax.swing.JRadioButton$Tag$a79ba523[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.5,border=javax.swing.plaf.BorderUIResource$CompoundBorderUIResource@f4109e,flags=296,maximumSize=,minimumSize=,preferredSize=,defaultIcon=,disabledIcon=,disabledSelectedIcon=,margin=javax.swing.plaf.InsetsUIResource[top=2,left=2,bottom=2,right=2],paintBorder=false,paintFocus=true,pressedIcon=,rolloverEnabled=true,rolloverIcon=,rolloverSelectedIcon=,selectedIcon=,text=]> #<JLabel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JLabel$Tag$a79ba523[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.0,border=,flags=8388608,maximumSize=,minimumSize=,preferredSize=,defaultIcon=javax.swing.ImageIcon@11e0544,disabledIcon=,horizontalAlignment=LEADING,horizontalTextPosition=TRAILING,iconTextGap=4,labelFor=,text=,verticalAlignment=CENTER,verticalTextPosition=CENTER]>)
" :repl-result)
[-Received-] 391.34
(:return (:ok nil) 1138)
[Actionlist] 391.34
1138: finished :listener-eval 
params: nil
[---Sent---] 391.84
(:emacs-rex (swank:listener-eval "(first (config (first (config z :items)) :items)) 
") "image-processing.hist-view-gui" :repl-thread 1139)

[-Received-] 391.84
(:write-string "#<JRadioButton$Tag$a79ba523 seesaw.core.proxy$javax.swing.JRadioButton$Tag$a79ba523[,0,0,0x0,invalid,alignmentX=0.0,alignmentY=0.5,border=javax.swing.plaf.BorderUIResource$CompoundBorderUIResource@f4109e,flags=296,maximumSize=,minimumSize=,preferredSize=,defaultIcon=,disabledIcon=,disabledSelectedIcon=,margin=javax.swing.plaf.InsetsUIResource[top=2,left=2,bottom=2,right=2],paintBorder=false,paintFocus=true,pressedIcon=,rolloverEnabled=true,rolloverIcon=,rolloverSelectedIcon=,selectedIcon=,text=]>
" :repl-result)
[-Received-] 391.84
(:return (:ok nil) 1139)
[Actionlist] 391.84
1139: finished :listener-eval 
params: nil
[---Sent---] 392.57
(:emacs-rex (swank:operator-arglist "config" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1140)

[-Received-] 392.58
(:return (:ok nil) 1140)
[Actionlist] 392.58
1140: finished :operator-arglist 
params: nil
[---Sent---] 392.96
(:emacs-rex (swank:listener-eval "(config  (first (config (first (config z :items)) :items)) :group) 
") "image-processing.hist-view-gui" :repl-thread 1141)

[-Received-] 392.96
(:debug 1 1 ("Option :group cannot be read from class seesaw.core.proxy$javax.swing.JRadioButton$Tag$a79ba523" "  [Thrown class java.lang.IllegalArgumentException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "        util.clj:19 seesaw.util/illegal-argument" (:restartable nil)) (1 "    RestFn.java:439 clojure.lang.RestFn.invoke" (:restartable nil)) (2 "    options.clj:167 seesaw.options/get-option-value" (:restartable nil)) (3 "    options.clj:161 seesaw.options/get-option-value" (:restartable nil)) (4 "       core.clj:880 seesaw.core/eval6154[fn]" (:restartable nil)) (5 "      config.clj:16 seesaw.config/eval2353[fn]" (:restartable nil)) (6 "      config.clj:45 seesaw.config/config" (:restartable nil)) (7 "   NO_SOURCE_FILE:1 image-processing.hist-view-gui/eval8338" (:restartable nil)) (8 " Compiler.java:6465 clojure.lang.Compiler.eval" (:restartable nil)) (9 " Compiler.java:6431 clojure.lang.Compiler.eval" (:restartable nil))) (nil))
[-Received-] 392.97
(:debug-activate 1 1 nil)
[---Sent---] 393.26
(:emacs-rex (swank:throw-to-toplevel) nil 1 1142)

[-Received-] 393.26
(:return (:abort) 1142)
[Actionlist] 393.26
1141: pending  :listener-eval 
1142: finished :throw-to-toplevel 
[-Received-] 393.26
(:debug-return 1 1 nil)
[-Received-] 393.26
(:return (:abort) 1141)
[Actionlist] 393.26
1141: finished :listener-eval 
1142: finished :throw-to-toplevel 
[---Sent---] 393.7
(:emacs-rex (swank:operator-arglist "def" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1143)

[-Received-] 393.7
(:return (:ok nil) 1143)
[Actionlist] 393.7
1143: finished :operator-arglist 
params: nil
[---Sent---] 393.86
(:emacs-rex (swank:operator-arglist "def" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1144)

[-Received-] 393.86
(:return (:ok nil) 1144)
[Actionlist] 393.86
1144: finished :operator-arglist 
params: nil
[---Sent---] 395.54
(:emacs-rex (swank:operator-arglist "[" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1145)

[-Received-] 395.54
(:return (:ok nil) 1145)
[Actionlist] 395.54
1145: finished :operator-arglist 
params: nil
[---Sent---] 395.8
(:emacs-rex (swank:operator-arglist "config!" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1146)

[-Received-] 395.81
(:return (:ok nil) 1146)
[Actionlist] 395.81
1146: finished :operator-arglist 
params: nil
[---Sent---] 395.97
(:emacs-rex (swank:operator-arglist "let" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1147)

[-Received-] 395.97
(:return (:ok "([bindings & body])") 1147)
[Actionlist] 395.97
1147: finished :operator-arglist 
params: "([bindings & body])"
[---Sent---] 396.18
(:emacs-rex (swank:operator-arglist "let" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1148)

[-Received-] 396.18
(:return (:ok "([bindings & body])") 1148)
[Actionlist] 396.18
1148: finished :operator-arglist 
params: "([bindings & body])"
[---Sent---] 396.33
(:emacs-rex (swank:operator-arglist "config" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1149)

[-Received-] 396.33
(:return (:ok nil) 1149)
[Actionlist] 396.33
1149: finished :operator-arglist 
params: nil
[---Sent---] 396.46
(:emacs-rex (swank:fuzzy-completions "hist-pa" "image-processing.hist-view-gui" :limit 200 :time-limit-in-msec 2000) nil t 1150)

[-Received-] 396.46
(:return (:ok ((("set-hist-panel" "66.24" ((4 "hist-pa")) "-f------") ("create-hist-panel" "65.90" ((7 "hist-pa")) "-f------")) nil)) 1150)
[Actionlist] 396.46
1150: finished :fuzzy-completions 
params: [[['"set-hist-panel"', '"66.24"', [['4', '"hist-pa"']], '"-f------"'], ['"create-hist-panel"', '"65.90"', [['7', '"hist-pa"']], '"-f------"']], 'nil']
[---Sent---] 396.81
(:emacs-rex (swank:operator-arglist "defn" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1151)

[-Received-] 396.81
(:return (:ok "([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])") 1151)
[Actionlist] 396.81
1151: finished :operator-arglist 
params: "([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])"
[---Sent---] 397.85
(:emacs-rex (swank:operator-arglist "defn" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1152)

[-Received-] 397.85
(:return (:ok "([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])") 1152)
[Actionlist] 397.85
1152: finished :operator-arglist 
params: "([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])"
[---Sent---] 398.47
(:emacs-rex (swank:operator-arglist "code" "(ns") "(ns" t 1153)

[-Received-] 398.48
(:return (:ok nil) 1153)
[Actionlist] 398.48
1153: finished :operator-arglist 
params: nil
[---Sent---] 398.61
(:emacs-rex (swank:operator-arglist "img-group" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1154)

[-Received-] 398.61
(:return (:ok nil) 1154)
[Actionlist] 398.62
1154: finished :operator-arglist 
params: nil
[---Sent---] 398.77
(:emacs-rex (swank:operator-arglist "create-radio-img" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1155)

[-Received-] 398.77
(:return (:ok nil) 1155)
[Actionlist] 398.77
1155: finished :operator-arglist 
params: nil
[---Sent---] 401.47
(:emacs-rex (swank:fuzzy-completions "create" "image-processing.hist-view-gui" :limit 200 :time-limit-in-msec 2000) nil t 1156)

[-Received-] 401.47
(:return (:ok ((("create-frame" "62.76" ((0 "create")) "-f------") ("create-hist-panel" "62.17" ((0 "create")) "-f------")) nil)) 1156)
[Actionlist] 401.47
1156: finished :fuzzy-completions 
params: [[['"create-frame"', '"62.76"', [['0', '"create"']], '"-f------"'], ['"create-hist-panel"', '"62.17"', [['0', '"create"']], '"-f------"']], 'nil']
[---Sent---] 401.65
(:emacs-rex (swank:operator-arglist "map" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1157)

[-Received-] 401.65
(:return (:ok "([f coll] [f c1 c2] [f c1 c2 c3] [f c1 c2 c3 & colls])") 1157)
[Actionlist] 401.65
1157: finished :operator-arglist 
params: "([f coll] [f c1 c2] [f c1 c2 c3] [f c1 c2 c3 & colls])"
[---Sent---] 401.85
(:emacs-rex (swank:operator-arglist "config!" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1158)

[-Received-] 401.85
(:return (:ok nil) 1158)
[Actionlist] 401.85
1158: finished :operator-arglist 
params: nil
[---Sent---] 402.09
(:emacs-rex (swank:operator-arglist "config!" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1159)

[-Received-] 402.09
(:return (:ok nil) 1159)
[Actionlist] 402.09
1159: finished :operator-arglist 
params: nil
[---Sent---] 402.16
(:emacs-rex (swank:operator-arglist "vec" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1160)

[-Received-] 402.16
(:return (:ok "([coll])") 1160)
[Actionlist] 402.17
1160: finished :operator-arglist 
params: "([coll])"
[---Sent---] 402.29
(:emacs-rex (swank:operator-arglist "vec" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1161)

[-Received-] 402.3
(:return (:ok "([coll])") 1161)
[Actionlist] 402.3
1161: finished :operator-arglist 
params: "([coll])"
[---Sent---] 402.43
(:emacs-rex (swank:operator-arglist "create-radio-img" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1162)

[-Received-] 402.43
(:return (:ok nil) 1162)
[Actionlist] 402.43
1162: finished :operator-arglist 
params: nil
[---Sent---] 402.71
(:emacs-rex (swank:operator-arglist "#^" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1163)

[-Received-] 402.71
(:return (:ok nil) 1163)
[Actionlist] 402.71
1163: finished :operator-arglist 
params: nil
[---Sent---] 402.9
(:emacs-rex (swank:operator-arglist "reduce" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1164)

[-Received-] 402.9
(:return (:ok "([f coll] [f val coll])") 1164)
[Actionlist] 402.9
1164: finished :operator-arglist 
params: "([f coll] [f val coll])"
[---Sent---] 403.13
(:emacs-rex (swank:operator-arglist "new-imgs" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1165)

[-Received-] 403.13
(:return (:ok nil) 1165)
[Actionlist] 403.13
1165: finished :operator-arglist 
params: nil
[---Sent---] 403.24
(:emacs-rex (swank:operator-arglist "reduce" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1166)

[-Received-] 403.25
(:return (:ok "([f coll] [f val coll])") 1166)
[Actionlist] 403.25
1166: finished :operator-arglist 
params: "([f coll] [f val coll])"
[---Sent---] 403.38
(:emacs-rex (swank:operator-arglist "create-radio-img" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1167)

[-Received-] 403.38
(:return (:ok nil) 1167)
[Actionlist] 403.38
1167: finished :operator-arglist 
params: nil
[---Sent---] 403.61
(:emacs-rex (swank:operator-arglist "reduce" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1168)

[-Received-] 403.61
(:return (:ok "([f coll] [f val coll])") 1168)
[Actionlist] 403.61
1168: finished :operator-arglist 
params: "([f coll] [f val coll])"
[---Sent---] 404.97
(:emacs-rex (swank:operator-arglist ":content" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1169)

[-Received-] 404.97
(:return (:ok "([map])") 1169)
[Actionlist] 404.97
1169: finished :operator-arglist 
params: "([map])"
[---Sent---] 404.97
(:emacs-rex (swank:describe-function ":content") "image-processing.hist-view-gui" t 1170)

[-Received-] 404.97
(:return (:ok nil) 1170)
[Actionlist] 404.97
1170: finished :describe-function 
params: nil
[---Sent---] 405.12
(:emacs-rex (swank:operator-arglist ":on-close" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1171)

[-Received-] 405.12
(:return (:ok "([map])") 1171)
[Actionlist] 405.12
1171: finished :operator-arglist 
params: "([map])"
[---Sent---] 405.12
(:emacs-rex (swank:describe-function ":on-close") "image-processing.hist-view-gui" t 1172)

[-Received-] 405.13
(:return (:ok nil) 1172)
[Actionlist] 405.13
1172: finished :describe-function 
params: nil
[---Sent---] 405.17
(:emacs-rex (swank:operator-arglist ":content" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1173)

[-Received-] 405.17
(:return (:ok "([map])") 1173)
[Actionlist] 405.17
1173: finished :operator-arglist 
params: "([map])"
[---Sent---] 405.18
(:emacs-rex (swank:describe-function ":content") "image-processing.hist-view-gui" t 1174)

[-Received-] 405.18
(:return (:ok nil) 1174)
[Actionlist] 405.18
1174: finished :describe-function 
params: nil
[---Sent---] 405.2
(:emacs-rex (swank:operator-arglist ":title" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1175)

[-Received-] 405.21
(:return (:ok "([map])") 1175)
[Actionlist] 405.21
1175: finished :operator-arglist 
params: "([map])"
[---Sent---] 405.21
(:emacs-rex (swank:describe-function ":title") "image-processing.hist-view-gui" t 1176)

[-Received-] 405.21
(:return (:ok nil) 1176)
[Actionlist] 405.21
1176: finished :describe-function 
params: nil
[---Sent---] 405.25
(:emacs-rex (swank:listener-eval "(ns image-processing.hist-view-gui
    (:import 
      (javax.imageio ImageIO) 
      (java.io File)
      (java.awt.image BufferedImage)) 
    (:use 
      [clojure.java.io] 
      [seesaw core make-widget border]))


(def *img-group* (button-group))


(defn create-radio-img
  \"Doc\"
  #^{:arglists [buff-img]}
  [buff-img]
  (horizontal-panel
    ;; The image's path can be retrieved by the user-data of the radio
    ;; button.
    :items [(radio :group *img-group* :user-data buff-img) (label :icon buff-img)]))


(defn create-hist-panel
   \"Creates and returns a grid-panel showing the images represented by a list of
   BufferedImages. The default number of columns is 3.\"
   #^{:arglists [buff-imgs n-columns]}
  ([buff-imgs] (create-hist-panel buff-imgs 3)) 
  ([buff-imgs n-columns]
   (let [n-imgs (count buff-imgs)]
     (grid-panel
       :border 5
       :hgap 10 :vgap 10
       :columns (if (< n-imgs n-columns) n-imgs n-columns)
       :items (vec (map create-radio-img buff-imgs))))))


(defn add-imgs
  \"Doc\"
  #^{:arglists [hist-panel & buff-imgs]}
  [hist-panel buff-img]
  (let [previous-imgs (config hist-panel)
        new-imgs (reduce create-radio-img buff-imgs)]
    (config! hist-panel :items (vec previous-imgs new-imgs))))


(def x (map #(ImageIO/read (File. %)) 
            '(\"test/image_processing/test/1a7r.gif\" 
              \"test/image_processing/test/1azc.gif\")))

(defn create-frame [] 
  (-> (frame :title \"Hello\",
             :content  (create-hist-panel x 5))
      ;:on-close :exit)
      pack!
      show!)) 

") "image-processing.hist-view-gui" :repl-thread 1177)

[-Received-] 405.3
(:debug 1 1 ("Unable to resolve symbol: buff-imgs in this context" "  [Thrown class java.lang.RuntimeException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "              Util.java:156 clojure.lang.Util.runtimeException" (:restartable nil)) (1 "         Compiler.java:6720 clojure.lang.Compiler.resolveIn" (:restartable nil)) (2 "         Compiler.java:6664 clojure.lang.Compiler.resolve" (:restartable nil)) (3 "         Compiler.java:6625 clojure.lang.Compiler.analyzeSymbol" (:restartable nil)) (4 "         Compiler.java:6198 clojure.lang.Compiler.analyze" (:restartable nil)) (5 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil)) (6 "         Compiler.java:3503 clojure.lang.Compiler$InvokeExpr.parse" (:restartable nil)) (7 "         Compiler.java:6411 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (8 "         Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil)) (9 "           Compiler.java:37 clojure.lang.Compiler.access$100" (:restartable nil))) (nil))
[-Received-] 405.31
(:debug-activate 1 1 nil)
[-Received-] 405.31
(:write-string "Warning: *img-group* not declared dynamic and thus is not dynamically rebindable, but its name suggests otherwise. Please either indicate ^:dynamic *img-group* or change the name.
" nil)
[---Sent---] 405.46
(:emacs-rex (swank:throw-to-toplevel) nil 1 1178)

[-Received-] 405.47
(:return (:abort) 1178)
[Actionlist] 405.47
1177: pending  :listener-eval 
1178: finished :throw-to-toplevel 
[-Received-] 405.47
(:debug-return 1 1 nil)
[-Received-] 405.47
(:return (:abort) 1177)
[Actionlist] 405.47
1177: finished :listener-eval 
1178: finished :throw-to-toplevel 
[---Sent---] 405.72
(:emacs-rex (swank:operator-arglist "buff-imgs" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1179)

[-Received-] 405.72
(:return (:ok nil) 1179)
[Actionlist] 405.72
1179: finished :operator-arglist 
params: nil
[---Sent---] 405.76
(:emacs-rex (swank:operator-arglist "[" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1180)

[-Received-] 405.76
(:return (:ok nil) 1180)
[Actionlist] 405.76
1180: finished :operator-arglist 
params: nil
[---Sent---] 405.82
(:emacs-rex (swank:operator-arglist "buff-img" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1181)

[-Received-] 405.82
(:return (:ok nil) 1181)
[Actionlist] 405.82
1181: finished :operator-arglist 
params: nil
[---Sent---] 405.84
(:emacs-rex (swank:operator-arglist "hist-panel" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1182)

[-Received-] 405.84
(:return (:ok nil) 1182)
[Actionlist] 405.84
1182: finished :operator-arglist 
params: nil
[---Sent---] 405.97
(:emacs-rex (swank:listener-eval "(ns image-processing.hist-view-gui
    (:import 
      (javax.imageio ImageIO) 
      (java.io File)
      (java.awt.image BufferedImage)) 
    (:use 
      [clojure.java.io] 
      [seesaw core make-widget border]))


(def *img-group* (button-group))


(defn create-radio-img
  \"Doc\"
  #^{:arglists [buff-img]}
  [buff-img]
  (horizontal-panel
    ;; The image's path can be retrieved by the user-data of the radio
    ;; button.
    :items [(radio :group *img-group* :user-data buff-img) (label :icon buff-img)]))


(defn create-hist-panel
   \"Creates and returns a grid-panel showing the images represented by a list of
   BufferedImages. The default number of columns is 3.\"
   #^{:arglists [buff-imgs n-columns]}
  ([buff-imgs] (create-hist-panel buff-imgs 3)) 
  ([buff-imgs n-columns]
   (let [n-imgs (count buff-imgs)]
     (grid-panel
       :border 5
       :hgap 10 :vgap 10
       :columns (if (< n-imgs n-columns) n-imgs n-columns)
       :items (vec (map create-radio-img buff-imgs))))))


(defn add-imgs
  \"Doc\"
  #^{:arglists [hist-panel & buff-imgs]}
  [hist-panel & buff-imgs]
  (let [previous-imgs (config hist-panel)
        new-imgs (reduce create-radio-img buff-imgs)]
    (config! hist-panel :items (vec previous-imgs new-imgs))))


(def x (map #(ImageIO/read (File. %)) 
            '(\"test/image_processing/test/1a7r.gif\" 
              \"test/image_processing/test/1azc.gif\")))

(defn create-frame [] 
  (-> (frame :title \"Hello\",
             :content  (create-hist-panel x 5))
      ;:on-close :exit)
      pack!
      show!)) 

") "image-processing.hist-view-gui" :repl-thread 1183)

[-Received-] 406.03
(:write-string "#'image-processing.hist-view-gui/create-frame
" :repl-result)
[-Received-] 406.03
(:return (:ok nil) 1183)
[Actionlist] 406.03
1183: finished :listener-eval 
params: nil
[-Received-] 406.03
(:write-string "Warning: *img-group* not declared dynamic and thus is not dynamically rebindable, but its name suggests otherwise. Please either indicate ^:dynamic *img-group* or change the name.
" nil)
[---Sent---] 406.29
(:emacs-rex (swank:operator-arglist "in" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1184)

[-Received-] 406.3
(:return (:ok nil) 1184)
[Actionlist] 406.3
1184: finished :operator-arglist 
params: nil
[---Sent---] 406.56
(:emacs-rex (swank:operator-arglist "clojure.test" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1185)

[-Received-] 406.56
(:return (:ok nil) 1185)
[Actionlist] 406.56
1185: finished :operator-arglist 
params: nil
[---Sent---] 406.63
(:emacs-rex (swank:operator-arglist "name" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1186)

[-Received-] 406.63
(:return (:ok "([x])") 1186)
[Actionlist] 406.63
1186: finished :operator-arglist 
params: "([x])"
[---Sent---] 406.63
(:emacs-rex (swank:describe-function "name") "image-processing.hist-view-gui" t 1187)

[-Received-] 406.63
(:return (:ok "-------------------------
clojure.core/name
([x])
  Returns the name String of a string, symbol or keyword.
") 1187)
[Actionlist] 406.63
1187: finished :describe-function 
params: "-------------------------
clojure.core/name
([x])
  Returns the name String of a string, symbol or keyword.
"
[---Sent---] 406.8
(:emacs-rex (swank:fuzzy-completions "crea" "image-processing.hist-view-gui" :limit 200 :time-limit-in-msec 2000) nil t 1188)

[-Received-] 406.8
(:return (:ok ((("create-frame" "40.46" ((0 "crea")) "-f------") ("create-radio-img" "40.11" ((0 "crea")) "-f------") ("create-hist-panel" "40.06" ((0 "crea")) "-f------") ("clojure.main/" "15.16" ((0 "c") (5 "re") (9 "a")) "b------p") ("clojure.walk/" "15.16" ((0 "c") (5 "re") (9 "a")) "b------p") ("clojure.java.io/" "14.88" ((0 "c") (5 "re") (9 "a")) "b------p") ("swank.core.threadmap/" "14.82" ((6 "c") (13 "rea")) "b------p") ("clojure.java.shell/" "14.72" ((0 "c") (5 "re") (9 "a")) "b------p") ("clojure.java.browse/" "14.68" ((0 "c") (5 "re") (9 "a")) "b------p") ("clojure.java.javadoc/" "14.64" ((0 "c") (5 "re") (9 "a")) "b------p") ("swank.util.concurrent.thread/" "14.63" ((11 "c") (24 "rea")) "b------p") ("clojure.contrib.macro-utils/" "14.47" ((0 "c") (5 "re") (17 "a")) "b------p") ("swank.core.debugger-backends/" "12.45" ((6 "c") (8 "re") (21 "a")) "b------p") ("swank.clj-contrib.macroexpand/" "5.43" ((20 "cr") (23 "e") (26 "a")) "b------p") ("swank.util.clj-stacktrace-compat/" "3.34" ((21 "r") (24 "e") (30 "a")) "b------p")) nil)) 1188)
[Actionlist] 406.81
1188: finished :fuzzy-completions 
params: [[['"create-frame"', '"40.46"', [['0', '"crea"']], '"-f------"'], ['"create-radio-img"', '"40.11"', [['0', '"crea"']], '"-f------"'], ['"create-hist-panel"', '"40.06"', [['0', '"crea"']], '"-f------"'], ['"clojure.main/"', '"15.16"', [['0', '"c"'], ['5', '"re"'], ['9', '"a"']], '"b------p"'], ['"clojure.walk/"', '"15.16"', [['0', '"c"'], ['5', '"re"'], ['9', '"a"']], '"b------p"'], ['"clojure.java.io/"', '"14.88"', [['0', '"c"'], ['5', '"re"'], ['9', '"a"']], '"b------p"'], ['"swank.core.threadmap/"', '"14.82"', [['6', '"c"'], ['13', '"rea"']], '"b------p"'], ['"clojure.java.shell/"', '"14.72"', [['0', '"c"'], ['5', '"re"'], ['9', '"a"']], '"b------p"'], ['"clojure.java.browse/"', '"14.68"', [['0', '"c"'], ['5', '"re"'], ['9', '"a"']], '"b------p"'], ['"clojure.java.javadoc/"', '"14.64"', [['0', '"c"'], ['5', '"re"'], ['9', '"a"']], '"b------p"'], ['"swank.util.concurrent.thread/"', '"14.63"', [['11', '"c"'], ['24', '"rea"']], '"b------p"'], ['"clojure.contrib.macro-utils/"', '"14.47"', [['0', '"c"'], ['5', '"re"'], ['17', '"a"']], '"b------p"'], ['"swank.core.debugger-backends/"', '"12.45"', [['6', '"c"'], ['8', '"re"'], ['21', '"a"']], '"b------p"'], ['"swank.clj-contrib.macroexpand/"', '"5.43"', [['20', '"cr"'], ['23', '"e"'], ['26', '"a"']], '"b------p"'], ['"swank.util.clj-stacktrace-compat/"', '"3.34"', [['21', '"r"'], ['24', '"e"'], ['30', '"a"']], '"b------p"']], 'nil']
[---Sent---] 406.92
(:emacs-rex (swank:listener-eval "(create-frame)
") "image-processing.hist-view-gui" :repl-thread 1189)

[-Received-] 406.98
(:write-string "#<JFrame$Tag$a79ba523 seesaw.core.proxy$javax.swing.JFrame$Tag$a79ba523[frame14,0,31,472x130,layout=java.awt.BorderLayout,title=Hello,resizable,normal,defaultCloseOperation=HIDE_ON_CLOSE,rootPane=javax.swing.JRootPane[,5,25,462x100,layout=javax.swing.JRootPane$RootLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=16777673,maximumSize=,minimumSize=,preferredSize=],rootPaneCheckingEnabled=true]>
" :repl-result)
[-Received-] 406.98
(:return (:ok nil) 1189)
[Actionlist] 406.98
1189: finished :listener-eval 
params: nil
[---Sent---] 407.36
(:emacs-rex (swank:operator-arglist "add-imgs" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1190)

[-Received-] 407.36
(:return (:ok "([hist-panel & buff-imgs])") 1190)
[Actionlist] 407.36
1190: finished :operator-arglist 
params: "([hist-panel & buff-imgs])"
[---Sent---] 409.2
(:emacs-rex (swank:listener-eval "(def z (create-hist-panel x))
") "image-processing.hist-view-gui" :repl-thread 1191)

[-Received-] 409.2
(:write-string "#'image-processing.hist-view-gui/z
" :repl-result)
[-Received-] 409.21
(:return (:ok nil) 1191)
[Actionlist] 409.21
1191: finished :listener-eval 
params: nil
[---Sent---] 409.71
(:emacs-rex (swank:listener-eval "(defn create-frame [hist-panel] 
  (-> (frame :title \"Hello\",
             :content  hist-panel)
      ;:on-close :exit)
      pack!
      show!)
") "image-processing.hist-view-gui" :repl-thread 1192)

[-Received-] 409.71
(:debug 1 1 ("EOF while reading, starting at line 1" "  [Thrown class java.lang.RuntimeException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "      Util.java:156 clojure.lang.Util.runtimeException" (:restartable nil)) (1 "LispReader.java:1117 clojure.lang.LispReader.readDelimitedList" (:restartable nil)) (2 "LispReader.java:962 clojure.lang.LispReader$ListReader.invoke" (:restartable nil)) (3 "LispReader.java:180 clojure.lang.LispReader.read" (:restartable nil)) (4 "      core.clj:3344 clojure.core/read" (:restartable nil)) (5 "      core.clj:3342 clojure.core/read" (:restartable nil)) (6 "       basic.clj:51 swank.commands.basic/eval-region" (:restartable nil)) (7 "       basic.clj:45 swank.commands.basic/eval-region" (:restartable nil)) (8 "       basic.clj:79 swank.commands.basic/eval1101[fn]" (:restartable nil)) (9 "       Var.java:401 clojure.lang.Var.invoke" (:restartable nil))) (nil))
[-Received-] 409.72
(:debug-activate 1 1 nil)
[---Sent---] 409.89
(:emacs-rex (swank:throw-to-toplevel) nil 1 1193)

[-Received-] 409.89
(:return (:abort) 1193)
[Actionlist] 409.89
1192: pending  :listener-eval 
1193: finished :throw-to-toplevel 
[-Received-] 409.89
(:debug-return 1 1 nil)
[-Received-] 409.89
(:return (:abort) 1192)
[Actionlist] 409.89
1192: finished :listener-eval 
1193: finished :throw-to-toplevel 
[---Sent---] 410.08
(:emacs-rex (swank:listener-eval "(ns image-processing.hist-view-gui
    (:import 
      (javax.imageio ImageIO) 
      (java.io File)
      (java.awt.image BufferedImage)) 
    (:use 
      [clojure.java.io] 
      [seesaw core make-widget border]))


(def *img-group* (button-group))


(defn create-radio-img
  \"Doc\"
  #^{:arglists [buff-img]}
  [buff-img]
  (horizontal-panel
    ;; The image's path can be retrieved by the user-data of the radio
    ;; button.
    :items [(radio :group *img-group* :user-data buff-img) (label :icon buff-img)]))


(defn create-hist-panel
   \"Creates and returns a grid-panel showing the images represented by a list of
   BufferedImages. The default number of columns is 3.\"
   #^{:arglists [buff-imgs n-columns]}
  ([buff-imgs] (create-hist-panel buff-imgs 3)) 
  ([buff-imgs n-columns]
   (let [n-imgs (count buff-imgs)]
     (grid-panel
       :border 5
       :hgap 10 :vgap 10
       :columns (if (< n-imgs n-columns) n-imgs n-columns)
       :items (vec (map create-radio-img buff-imgs))))))


(defn add-imgs
  \"Doc\"
  #^{:arglists [hist-panel & buff-imgs]}
  [hist-panel & buff-imgs]
  (let [previous-imgs (config hist-panel)
        new-imgs (reduce create-radio-img buff-imgs)]
    (config! hist-panel :items (vec previous-imgs new-imgs))))


(def x (map #(ImageIO/read (File. %)) 
            '(\"test/image_processing/test/1a7r.gif\" 
              \"test/image_processing/test/1azc.gif\")))

(defn create-frame [hist-panel] 
  (-> (frame :title \"Hello\",
             :content  hist-panel)
      ;:on-close :exit)
      pack!
      show!)) 

") "image-processing.hist-view-gui" :repl-thread 1194)

[-Received-] 410.13
(:write-string "#'image-processing.hist-view-gui/create-frame
" :repl-result)
[-Received-] 410.13
(:return (:ok nil) 1194)
[Actionlist] 410.13
1194: finished :listener-eval 
params: nil
[-Received-] 410.13
(:write-string "Warning: *img-group* not declared dynamic and thus is not dynamically rebindable, but its name suggests otherwise. Please either indicate ^:dynamic *img-group* or change the name.
" nil)
[---Sent---] 410.34
(:emacs-rex (swank:listener-eval "(def z (create-hist-panel x))
") "image-processing.hist-view-gui" :repl-thread 1195)

[-Received-] 410.4
(:write-string "#'image-processing.hist-view-gui/z
" :repl-result)
[-Received-] 410.4
(:return (:ok nil) 1195)
[Actionlist] 410.4
1195: finished :listener-eval 
params: nil
[---Sent---] 410.79
(:emacs-rex (swank:operator-arglist "create-frame" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1196)

[-Received-] 410.79
(:return (:ok "([hist-panel])") 1196)
[Actionlist] 410.79
1196: finished :operator-arglist 
params: "([hist-panel])"
[---Sent---] 410.9
(:emacs-rex (swank:listener-eval "(create-frame z) 
") "image-processing.hist-view-gui" :repl-thread 1197)

[-Received-] 410.96
(:write-string "#<JFrame$Tag$a79ba523 seesaw.core.proxy$javax.swing.JFrame$Tag$a79ba523[frame15,0,31,472x130,layout=java.awt.BorderLayout,title=Hello,resizable,normal,defaultCloseOperation=HIDE_ON_CLOSE,rootPane=javax.swing.JRootPane[,5,25,462x100,layout=javax.swing.JRootPane$RootLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=16777673,maximumSize=,minimumSize=,preferredSize=],rootPaneCheckingEnabled=true]>
" :repl-result)
[-Received-] 410.97
(:return (:ok nil) 1197)
[Actionlist] 410.97
1197: finished :listener-eval 
params: nil
[---Sent---] 411.27
(:emacs-rex (swank:operator-arglist "def" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1198)

[-Received-] 411.27
(:return (:ok nil) 1198)
[Actionlist] 411.27
1198: finished :operator-arglist 
params: nil
[---Sent---] 411.63
(:emacs-rex (swank:operator-arglist "add-imgs" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1199)

[-Received-] 411.63
(:return (:ok "([hist-panel & buff-imgs])") 1199)
[Actionlist] 411.63
1199: finished :operator-arglist 
params: "([hist-panel & buff-imgs])"
[---Sent---] 411.69
(:emacs-rex (swank:operator-arglist "add-imgs" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1200)

[-Received-] 411.69
(:return (:ok "([hist-panel & buff-imgs])") 1200)
[Actionlist] 411.69
1200: finished :operator-arglist 
params: "([hist-panel & buff-imgs])"
[---Sent---] 411.87
(:emacs-rex (swank:operator-arglist "first" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1201)

[-Received-] 411.88
(:return (:ok "([coll])") 1201)
[Actionlist] 411.88
1201: finished :operator-arglist 
params: "([coll])"
[---Sent---] 411.98
(:emacs-rex (swank:listener-eval "(add-imgs z (first x))
") "image-processing.hist-view-gui" :repl-thread 1202)

[-Received-] 411.98
(:debug 1 1 ("Wrong number of args (1) passed to: config$config" "  [Thrown class clojure.lang.ArityException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "          AFn.java:437 clojure.lang.AFn.throwArity" (:restartable nil)) (1 "           AFn.java:39 clojure.lang.AFn.invoke" (:restartable nil)) (2 "      NO_SOURCE_FILE:1 image-processing.hist-view-gui/add-imgs" (:restartable nil)) (3 "       RestFn.java:423 clojure.lang.RestFn.invoke" (:restartable nil)) (4 "      NO_SOURCE_FILE:1 image-processing.hist-view-gui/eval8501" (:restartable nil)) (5 "    Compiler.java:6465 clojure.lang.Compiler.eval" (:restartable nil)) (6 "    Compiler.java:6431 clojure.lang.Compiler.eval" (:restartable nil)) (7 "         core.clj:2795 clojure.core/eval" (:restartable nil)) (8 "          core.clj:534 swank.core/eval825[fn]" (:restartable nil)) (9 "      MultiFn.java:163 clojure.lang.MultiFn.invoke" (:restartable nil))) (nil))
[-Received-] 411.99
(:debug-activate 1 1 nil)
[---Sent---] 412.25
(:emacs-rex (swank:throw-to-toplevel) nil 1 1203)

[-Received-] 412.25
(:return (:abort) 1203)
[Actionlist] 412.25
1202: pending  :listener-eval 
1203: finished :throw-to-toplevel 
[-Received-] 412.25
(:debug-return 1 1 nil)
[-Received-] 412.25
(:return (:abort) 1202)
[Actionlist] 412.25
1202: finished :listener-eval 
1203: finished :throw-to-toplevel 
[---Sent---] 412.72
(:emacs-rex (swank:operator-arglist "reduce" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1204)

[-Received-] 412.74
(:return (:ok "([f coll] [f val coll])") 1204)
[Actionlist] 412.74
1203: finished :throw-to-toplevel 
1204: finished :operator-arglist 
params: "([f coll] [f val coll])"
[---Sent---] 412.83
(:emacs-rex (swank:operator-arglist "reduce" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1205)

[-Received-] 412.83
(:return (:ok "([f coll] [f val coll])") 1205)
[Actionlist] 412.83
1203: finished :throw-to-toplevel 
1205: finished :operator-arglist 
params: "([f coll] [f val coll])"
[---Sent---] 412.98
(:emacs-rex (swank:listener-eval "(defn add-imgs
  \"Doc\"
  #^{:arglists [hist-panel & buff-imgs]}
  [hist-panel & buff-imgs]
  (let [previous-imgs (config hist-panel)
        new-imgs (reduce create-radio-img '() buff-imgs)]
    (config! hist-panel :items (vec previous-imgs new-imgs))))
") "image-processing.hist-view-gui" :repl-thread 1206)

[-Received-] 412.99
(:write-string "#'image-processing.hist-view-gui/add-imgs
" :repl-result)
[-Received-] 413.1
(:return (:ok nil) 1206)
[Actionlist] 413.1
1206: finished :listener-eval 
params: nil
[---Sent---] 413.31
(:emacs-rex (swank:listener-eval "(add-imgs z (first x))
") "image-processing.hist-view-gui" :repl-thread 1207)

[-Received-] 413.31
(:debug 1 1 ("Wrong number of args (1) passed to: config$config" "  [Thrown class clojure.lang.ArityException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "          AFn.java:437 clojure.lang.AFn.throwArity" (:restartable nil)) (1 "           AFn.java:39 clojure.lang.AFn.invoke" (:restartable nil)) (2 "      NO_SOURCE_FILE:1 image-processing.hist-view-gui/add-imgs" (:restartable nil)) (3 "       RestFn.java:423 clojure.lang.RestFn.invoke" (:restartable nil)) (4 "      NO_SOURCE_FILE:1 image-processing.hist-view-gui/eval8514" (:restartable nil)) (5 "    Compiler.java:6465 clojure.lang.Compiler.eval" (:restartable nil)) (6 "    Compiler.java:6431 clojure.lang.Compiler.eval" (:restartable nil)) (7 "         core.clj:2795 clojure.core/eval" (:restartable nil)) (8 "          core.clj:534 swank.core/eval825[fn]" (:restartable nil)) (9 "      MultiFn.java:163 clojure.lang.MultiFn.invoke" (:restartable nil))) (nil))
[-Received-] 413.32
(:debug-activate 1 1 nil)
[---Sent---] 413.64
(:emacs-rex (swank:frame-locals-and-catch-tags 4) nil 1 1208)

[---Sent---] 413.64
(:emacs-rex (swank:frame-source-location 4) nil 1 1209)

[---Sent---] 413.64
(:emacs-rex (swank-backend:frame-call 4) nil 1 1210)

[-Received-] 413.65
(:return (:ok (nil nil)) 1208)
[Actionlist] 413.65
1207: pending  :listener-eval 
1208: finished :frame-locals-and-catch-tags 
1209: pending  :frame-source-location 
1210: pending  :frame-call 
params: ['nil', 'nil']
[-Received-] 413.65
(:debug-activate 1 1 nil)
[-Received-] 413.65
(:return (:ok (:error "image_processing/NO_SOURCE_FILE - source not found.")) 1209)
[Actionlist] 413.65
1207: pending  :listener-eval 
1208: finished :frame-locals-and-catch-tags 
1209: finished :frame-source-location 
1210: pending  :frame-call 
params: [':error', '"image_processing/NO_SOURCE_FILE - source not found."']
[-Received-] 413.65
(:debug-activate 1 1 nil)
[-Received-] 413.66
(:return (:abort) 1210)
[Actionlist] 413.66
1207: pending  :listener-eval 
1208: finished :frame-locals-and-catch-tags 
1209: finished :frame-source-location 
1210: finished :frame-call 
[-Received-] 413.66
(:debug-activate 1 1 nil)
[---Sent---] 413.95
(:emacs-rex (swank:throw-to-toplevel) nil 1 1211)

[-Received-] 413.95
(:return (:abort) 1211)
[Actionlist] 413.95
1207: pending  :listener-eval 
1211: finished :throw-to-toplevel 
[-Received-] 413.95
(:debug-return 1 1 nil)
[-Received-] 413.95
(:return (:abort) 1207)
[Actionlist] 413.95
1207: finished :listener-eval 
1211: finished :throw-to-toplevel 
[---Sent---] 414.38
(:emacs-rex (swank:operator-arglist "config" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1212)

[-Received-] 414.38
(:return (:ok nil) 1212)
[Actionlist] 414.38
1212: finished :operator-arglist 
params: nil
[---Sent---] 414.56
(:emacs-rex (swank:listener-eval "(defn add-imgs
  \"Doc\"
  #^{:arglists [hist-panel & buff-imgs]}
  [hist-panel & buff-imgs]
  (let [previous-imgs (config hist-panel :items)
        new-imgs (reduce create-radio-img '() buff-imgs)]
    (config! hist-panel :items (vec previous-imgs new-imgs))))
") "image-processing.hist-view-gui" :repl-thread 1213)

[-Received-] 414.57
(:write-string "#'image-processing.hist-view-gui/add-imgs
" :repl-result)
[-Received-] 414.57
(:return (:ok nil) 1213)
[Actionlist] 414.57
1213: finished :listener-eval 
params: nil
[---Sent---] 414.79
(:emacs-rex (swank:listener-eval "(add-imgs z (first x))
") "image-processing.hist-view-gui" :repl-thread 1214)

[-Received-] 414.79
(:debug 1 1 ("Wrong number of args (2) passed to: hist-view-gui$create-radio-img" "  [Thrown class clojure.lang.ArityException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "          AFn.java:437 clojure.lang.AFn.throwArity" (:restartable nil)) (1 "           AFn.java:43 clojure.lang.AFn.invoke" (:restartable nil)) (2 "      protocols.clj:51 clojure.core.protocols/fn" (:restartable nil)) (3 "      protocols.clj:11 clojure.core.protocols/fn[fn]" (:restartable nil)) (4 "         core.clj:5995 clojure.core/reduce" (:restartable nil)) (5 "      NO_SOURCE_FILE:1 image-processing.hist-view-gui/add-imgs" (:restartable nil)) (6 "       RestFn.java:423 clojure.lang.RestFn.invoke" (:restartable nil)) (7 "      NO_SOURCE_FILE:1 image-processing.hist-view-gui/eval8529" (:restartable nil)) (8 "    Compiler.java:6465 clojure.lang.Compiler.eval" (:restartable nil)) (9 "    Compiler.java:6431 clojure.lang.Compiler.eval" (:restartable nil))) (nil))
[---Sent---] 415.84
(:emacs-rex (swank:operator-arglist "create-radio-img" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1216)

[-Received-] 415.84
(:return (:ok "([buff-img])") 1216)
[Actionlist] 415.84
1216: finished :operator-arglist 
params: "([buff-img])"
[---Sent---] 415.96
(:emacs-rex (swank:operator-arglist "vec" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1217)

[-Received-] 415.97
(:return (:ok "([coll])") 1217)
[Actionlist] 415.97
1217: finished :operator-arglist 
params: "([coll])"
[---Sent---] 416.03
(:emacs-rex (swank:operator-arglist "vec" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1218)

[-Received-] 416.03
(:return (:ok "([coll])") 1218)
[Actionlist] 416.03
1218: finished :operator-arglist 
params: "([coll])"
[---Sent---] 416.26
(:emacs-rex (swank:listener-eval "(defn add-imgs
  \"Doc\"
  #^{:arglists [hist-panel & buff-imgs]}
  [hist-panel & buff-imgs]
  (let [previous-imgs (config hist-panel :items)
        new-imgs (reduce #(vec %1 (create-radio-img %2)) [] buff-imgs)]
    (config! hist-panel :items (vec previous-imgs new-imgs))))
") "image-processing.hist-view-gui" :repl-thread 1219)

[-Received-] 416.26
(:write-string "#'image-processing.hist-view-gui/add-imgs
" :repl-result)
[-Received-] 416.35
(:return (:ok nil) 1219)
[Actionlist] 416.35
1219: finished :listener-eval 
params: nil
[---Sent---] 416.58
(:emacs-rex (swank:listener-eval "(add-imgs z (first x))
") "image-processing.hist-view-gui" :repl-thread 1220)

[-Received-] 416.58
(:debug 1 1 ("Wrong number of args (2) passed to: core$vec" "  [Thrown class clojure.lang.ArityException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "          AFn.java:437 clojure.lang.AFn.throwArity" (:restartable nil)) (1 "           AFn.java:43 clojure.lang.AFn.invoke" (:restartable nil)) (2 "      NO_SOURCE_FILE:1 image-processing.hist-view-gui/add-imgs[fn]" (:restartable nil)) (3 "      protocols.clj:51 clojure.core.protocols/fn" (:restartable nil)) (4 "      protocols.clj:11 clojure.core.protocols/fn[fn]" (:restartable nil)) (5 "         core.clj:5995 clojure.core/reduce" (:restartable nil)) (6 "      NO_SOURCE_FILE:1 image-processing.hist-view-gui/add-imgs" (:restartable nil)) (7 "       RestFn.java:423 clojure.lang.RestFn.invoke" (:restartable nil)) (8 "      NO_SOURCE_FILE:1 image-processing.hist-view-gui/eval8548" (:restartable nil)) (9 "    Compiler.java:6465 clojure.lang.Compiler.eval" (:restartable nil))) (nil))
[-Received-] 416.59
(:debug-activate 1 1 nil)
[---Sent---] 416.85
(:emacs-rex (swank:throw-to-toplevel) nil 1 1221)

[-Received-] 416.85
(:return (:abort) 1221)
[Actionlist] 416.85
1220: pending  :listener-eval 
1221: finished :throw-to-toplevel 
[-Received-] 416.85
(:debug-return 1 1 nil)
[-Received-] 416.85
(:return (:abort) 1220)
[Actionlist] 416.85
1220: finished :listener-eval 
1221: finished :throw-to-toplevel 
[---Sent---] 417.57
(:emacs-rex (swank:operator-arglist "image-processing" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1222)

[-Received-] 417.57
(:return (:ok nil) 1222)
[Actionlist] 417.57
1222: finished :operator-arglist 
params: nil
[---Sent---] 417.69
(:emacs-rex (swank:operator-arglist "reduce" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1223)

[-Received-] 417.69
(:return (:ok "([f coll] [f val coll])") 1223)
[Actionlist] 417.69
1223: finished :operator-arglist 
params: "([f coll] [f val coll])"
[---Sent---] 417.69
(:emacs-rex (swank:describe-function "reduce") "image-processing.hist-view-gui" t 1224)

[-Received-] 417.69
(:return (:ok "-------------------------
clojure.core/reduce
([f coll] [f val coll])
  f should be a function of 2 arguments. If val is not supplied,
  returns the result of applying f to the first 2 items in coll, then
  applying f to that result and the 3rd item, etc. If coll contains no
  items, f must accept no arguments as well, and reduce returns the
  result of calling f with no arguments.  If coll has only 1 item, it
  is returned and f is not called.  If val is supplied, returns the
  result of applying f to val and the first item in coll, then
  applying f to that result and the 2nd item, etc. If coll contains no
  items, returns val and f is not called.
") 1224)
[Actionlist] 417.69
1224: finished :describe-function 
params: "-------------------------
clojure.core/reduce
([f coll] [f val coll])
  f should be a function of 2 arguments. If val is not supplied,
  returns the result of applying f to the first 2 items in coll, then
  applying f to that result and the 3rd item, etc. If coll contains no
  items, f must accept no arguments as well, and reduce returns the
  result of calling f with no arguments.  If coll has only 1 item, it
  is returned and f is not called.  If val is supplied, returns the
  result of applying f to val and the first item in coll, then
  applying f to that result and the 2nd item, etc. If coll contains no
  items, returns val and f is not called.
"
[---Sent---] 417.77
(:emacs-rex (swank:operator-arglist "reduce" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1225)

[-Received-] 417.77
(:return (:ok "([f coll] [f val coll])") 1225)
[Actionlist] 417.77
1225: finished :operator-arglist 
params: "([f coll] [f val coll])"
[---Sent---] 417.77
(:emacs-rex (swank:describe-function "reduce") "image-processing.hist-view-gui" t 1226)

[-Received-] 417.77
(:return (:ok "-------------------------
clojure.core/reduce
([f coll] [f val coll])
  f should be a function of 2 arguments. If val is not supplied,
  returns the result of applying f to the first 2 items in coll, then
  applying f to that result and the 3rd item, etc. If coll contains no
  items, f must accept no arguments as well, and reduce returns the
  result of calling f with no arguments.  If coll has only 1 item, it
  is returned and f is not called.  If val is supplied, returns the
  result of applying f to val and the first item in coll, then
  applying f to that result and the 2nd item, etc. If coll contains no
  items, returns val and f is not called.
") 1226)
[Actionlist] 417.77
1226: finished :describe-function 
params: "-------------------------
clojure.core/reduce
([f coll] [f val coll])
  f should be a function of 2 arguments. If val is not supplied,
  returns the result of applying f to the first 2 items in coll, then
  applying f to that result and the 3rd item, etc. If coll contains no
  items, f must accept no arguments as well, and reduce returns the
  result of calling f with no arguments.  If coll has only 1 item, it
  is returned and f is not called.  If val is supplied, returns the
  result of applying f to val and the first item in coll, then
  applying f to that result and the 2nd item, etc. If coll contains no
  items, returns val and f is not called.
"
[---Sent---] 417.86
(:emacs-rex (swank:operator-arglist "vec" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1227)

[-Received-] 417.86
(:return (:ok "([coll])") 1227)
[Actionlist] 417.86
1227: finished :operator-arglist 
params: "([coll])"
[---Sent---] 417.86
(:emacs-rex (swank:describe-function "vec") "image-processing.hist-view-gui" t 1228)

[-Received-] 417.86
(:return (:ok "-------------------------
clojure.core/vec
([coll])
  Creates a new vector containing the contents of coll.
") 1228)
[Actionlist] 417.86
1228: finished :describe-function 
params: "-------------------------
clojure.core/vec
([coll])
  Creates a new vector containing the contents of coll.
"
[---Sent---] 418.18
(:emacs-rex (swank:operator-arglist "vec" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1229)

[-Received-] 418.18
(:return (:ok "([coll])") 1229)
[Actionlist] 418.18
1229: finished :operator-arglist 
params: "([coll])"
[---Sent---] 418.43
(:emacs-rex (swank:listener-eval "(vec [] 10)
") "image-processing.hist-view-gui" :repl-thread 1230)

[-Received-] 418.44
(:debug 1 1 ("Wrong number of args (2) passed to: core$vec" "  [Thrown class clojure.lang.ArityException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "       AFn.java:437 clojure.lang.AFn.throwArity" (:restartable nil)) (1 "        AFn.java:43 clojure.lang.AFn.invoke" (:restartable nil)) (2 "   NO_SOURCE_FILE:1 image-processing.hist-view-gui/eval8570" (:restartable nil)) (3 " Compiler.java:6465 clojure.lang.Compiler.eval" (:restartable nil)) (4 " Compiler.java:6431 clojure.lang.Compiler.eval" (:restartable nil)) (5 "      core.clj:2795 clojure.core/eval" (:restartable nil)) (6 "       core.clj:534 swank.core/eval825[fn]" (:restartable nil)) (7 "   MultiFn.java:163 clojure.lang.MultiFn.invoke" (:restartable nil)) (8 "       basic.clj:55 swank.commands.basic/eval-region" (:restartable nil)) (9 "       basic.clj:45 swank.commands.basic/eval-region" (:restartable nil))) (nil))
[-Received-] 418.45
(:debug-activate 1 1 nil)
[---Sent---] 418.57
(:emacs-rex (swank:throw-to-toplevel) nil 1 1231)

[-Received-] 418.57
(:return (:abort) 1231)
[Actionlist] 418.57
1230: pending  :listener-eval 
1231: finished :throw-to-toplevel 
[-Received-] 418.57
(:debug-return 1 1 nil)
[-Received-] 418.57
(:return (:abort) 1230)
[Actionlist] 418.57
1230: finished :listener-eval 
1231: finished :throw-to-toplevel 
[---Sent---] 419.14
(:emacs-rex (swank:listener-eval "(defn add-imgs
  \"Doc\"
  #^{:arglists [hist-panel & buff-imgs]}
  [hist-panel & buff-imgs]
  (let [previous-imgs (config hist-panel :items)
        new-imgs (reduce #(vector %1 (create-radio-img %2)) [] buff-imgs)]
    (config! hist-panel :items (vector previous-imgs new-imgs))))
") "image-processing.hist-view-gui" :repl-thread 1232)

[-Received-] 419.14
(:write-string "#'image-processing.hist-view-gui/add-imgs
" :repl-result)
[-Received-] 419.14
(:return (:ok nil) 1232)
[Actionlist] 419.14
1232: finished :listener-eval 
params: nil
[---Sent---] 419.37
(:emacs-rex (swank:listener-eval "(add-imgs z (first x))
") "image-processing.hist-view-gui" :repl-thread 1233)

[-Received-] 419.37
(:debug 1 1 ("No implementation of method: :make-widget* of protocol: #'seesaw.make-widget/MakeWidget found for class: clojure.lang.ArraySeq" "  [Thrown class java.lang.IllegalArgumentException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "core_deftype.clj:495 clojure.core/-cache-protocol-fn" (:restartable nil)) (1 " make_widget.clj:16 seesaw.make-widget/eval2742[fn]" (:restartable nil)) (2 "      layout.clj:38 seesaw.layout/add-widget" (:restartable nil)) (3 "      layout.clj:36 seesaw.layout/add-widget" (:restartable nil)) (4 "      layout.clj:47 seesaw.layout/add-widgets" (:restartable nil)) (5 "      layout.clj:53 seesaw.layout/fn" (:restartable nil)) (6 "    options.clj:114 seesaw.options/apply-option" (:restartable nil)) (7 "    options.clj:129 seesaw.options/apply-options*" (:restartable nil)) (8 "    options.clj:136 seesaw.options/apply-options" (:restartable nil)) (9 "       core.clj:881 seesaw.core/eval6154[fn]" (:restartable nil))) (nil))
[-Received-] 419.37
(:debug-activate 1 1 nil)
[---Sent---] 419.97
(:emacs-rex (swank:throw-to-toplevel) nil 1 1234)

[-Received-] 419.97
(:return (:abort) 1234)
[Actionlist] 419.97
1233: pending  :listener-eval 
1234: finished :throw-to-toplevel 
[-Received-] 419.97
(:debug-return 1 1 nil)
[-Received-] 419.97
(:return (:abort) 1233)
[Actionlist] 419.97
1233: finished :listener-eval 
1234: finished :throw-to-toplevel 
[---Sent---] 421.05
(:emacs-rex (swank:listener-eval "(defn add-imgs
  \"Doc\"
  #^{:arglists [hist-panel & buff-imgs]}
  [hist-panel & buff-imgs]
  (let [previous-imgs (config hist-panel :items)
        new-imgs (doall (reduce #(vector %1 (create-radio-img %2)) [] buff-imgs))]
    (config! hist-panel :items (vector previous-imgs new-imgs))))
") "image-processing.hist-view-gui" :repl-thread 1235)

[-Received-] 421.05
(:write-string "#'image-processing.hist-view-gui/add-imgs
" :repl-result)
[-Received-] 421.05
(:return (:ok nil) 1235)
[Actionlist] 421.05
1235: finished :listener-eval 
params: nil
[---Sent---] 421.28
(:emacs-rex (swank:listener-eval "(add-imgs z (first x))
") "image-processing.hist-view-gui" :repl-thread 1236)

[-Received-] 421.28
(:debug 1 1 ("Can't add nil widget. Original was ()" "  [Thrown class java.lang.IllegalArgumentException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "        util.clj:23 seesaw.util/check-args" (:restartable nil)) (1 "      layout.clj:39 seesaw.layout/add-widget" (:restartable nil)) (2 "      layout.clj:36 seesaw.layout/add-widget" (:restartable nil)) (3 "      layout.clj:47 seesaw.layout/add-widgets" (:restartable nil)) (4 "      layout.clj:53 seesaw.layout/fn" (:restartable nil)) (5 "    options.clj:114 seesaw.options/apply-option" (:restartable nil)) (6 "    options.clj:129 seesaw.options/apply-options*" (:restartable nil)) (7 "    options.clj:136 seesaw.options/apply-options" (:restartable nil)) (8 "       core.clj:881 seesaw.core/eval6154[fn]" (:restartable nil)) (9 "      config.clj:16 seesaw.config/eval2353[fn]" (:restartable nil))) (nil))
[-Received-] 421.29
(:debug-activate 1 1 nil)
[---Sent---] 421.52
(:emacs-rex (swank:throw-to-toplevel) nil 1 1237)

[-Received-] 421.52
(:return (:abort) 1237)
[Actionlist] 421.52
1236: pending  :listener-eval 
1237: finished :throw-to-toplevel 
[-Received-] 421.52
(:debug-return 1 1 nil)
[-Received-] 421.52
(:return (:abort) 1236)
[Actionlist] 421.52
1236: finished :listener-eval 
1237: finished :throw-to-toplevel 
[---Sent---] 421.94
(:emacs-rex (swank:operator-arglist "vector" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1238)

[-Received-] 421.94
(:return (:ok "([] [a] [a b] [a b c] [a b c d] [a b c d & args])") 1238)
[Actionlist] 421.94
1238: finished :operator-arglist 
params: "([] [a] [a b] [a b c] [a b c d] [a b c d & args])"
[---Sent---] 422.15
(:emacs-rex (swank:listener-eval "(vector [] [1])
") "image-processing.hist-view-gui" :repl-thread 1239)

[-Received-] 422.15
(:write-string "[[] [1]]
" :repl-result)
[-Received-] 422.15
(:return (:ok nil) 1239)
[Actionlist] 422.15
1239: finished :listener-eval 
params: nil
[---Sent---] 422.65
(:emacs-rex (swank:operator-arglist "conj" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1240)

[-Received-] 422.66
(:return (:ok "([coll x] [coll x & xs])") 1240)
[Actionlist] 422.66
1240: finished :operator-arglist 
params: "([coll x] [coll x & xs])"
[---Sent---] 422.76
(:emacs-rex (swank:operator-arglist "conj" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1241)

[-Received-] 422.76
(:return (:ok "([coll x] [coll x & xs])") 1241)
[Actionlist] 422.76
1241: finished :operator-arglist 
params: "([coll x] [coll x & xs])"
[---Sent---] 422.85
(:emacs-rex (swank:listener-eval "(defn add-imgs
  \"Doc\"
  #^{:arglists [hist-panel & buff-imgs]}
  [hist-panel & buff-imgs]
  (let [previous-imgs (config hist-panel :items)
        new-imgs (reduce #(conj %1 (create-radio-img %2)) [] buff-imgs)]
    (config! hist-panel :items (conj previous-imgs new-imgs))))
") "image-processing.hist-view-gui" :repl-thread 1242)

[-Received-] 422.86
(:write-string "#'image-processing.hist-view-gui/add-imgs
" :repl-result)
[-Received-] 422.86
(:return (:ok nil) 1242)
[Actionlist] 422.86
1242: finished :listener-eval 
params: nil
[---Sent---] 423.07
(:emacs-rex (swank:listener-eval "(add-imgs z (first x))
") "image-processing.hist-view-gui" :repl-thread 1243)

[-Received-] 423.13
(:debug 1 1 ("Can't add nil widget. Original was ([#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,0,0,0x0,invalid,layout=javax.swing.BoxLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]>])" "  [Thrown class java.lang.IllegalArgumentException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "        util.clj:23 seesaw.util/check-args" (:restartable nil)) (1 "      layout.clj:39 seesaw.layout/add-widget" (:restartable nil)) (2 "      layout.clj:36 seesaw.layout/add-widget" (:restartable nil)) (3 "      layout.clj:47 seesaw.layout/add-widgets" (:restartable nil)) (4 "      layout.clj:53 seesaw.layout/fn" (:restartable nil)) (5 "    options.clj:114 seesaw.options/apply-option" (:restartable nil)) (6 "    options.clj:129 seesaw.options/apply-options*" (:restartable nil)) (7 "    options.clj:136 seesaw.options/apply-options" (:restartable nil)) (8 "       core.clj:881 seesaw.core/eval6154[fn]" (:restartable nil)) (9 "      config.clj:16 seesaw.config/eval2353[fn]" (:restartable nil))) (nil))
[-Received-] 423.14
(:debug-activate 1 1 nil)
[---Sent---] 423.65
(:emacs-rex (swank:throw-to-toplevel) nil 1 1244)

[-Received-] 423.65
(:return (:abort) 1244)
[Actionlist] 423.66
1243: pending  :listener-eval 
1244: finished :throw-to-toplevel 
[-Received-] 423.66
(:debug-return 1 1 nil)
[-Received-] 423.66
(:return (:abort) 1243)
[Actionlist] 423.66
1243: finished :listener-eval 
1244: finished :throw-to-toplevel 
[---Sent---] 424.2
(:emacs-rex (swank:listener-eval "(defn add-imgs
  \"Doc\"
  #^{:arglists [hist-panel & buff-imgs]}
  [hist-panel & buff-imgs]
  (let [previous-imgs (config hist-panel :items)
        new-imgs (reduce #(conj %1 (create-radio-img %2)) [] buff-imgs)]
    (swank.core/break)
    (config! hist-panel :items (conj previous-imgs new-imgs))))
") "image-processing.hist-view-gui" :repl-thread 1245)

[-Received-] 424.2
(:write-string "#'image-processing.hist-view-gui/add-imgs
" :repl-result)
[-Received-] 424.2
(:return (:ok nil) 1245)
[Actionlist] 424.2
1245: finished :listener-eval 
params: nil
[---Sent---] 424.4
(:emacs-rex (swank:listener-eval "(add-imgs z (first x))
") "image-processing.hist-view-gui" :repl-thread 1246)

[-Received-] 424.4
(:debug 1 1 ("BREAK:" "  [Thrown class java.lang.Exception]" nil) (("QUIT" "Quit to the SLIME top level") ("CONTINUE" "Continue from breakpoint")) ((0 "      NO_SOURCE_FILE:1 image-processing.hist-view-gui/add-imgs" (:restartable nil)) (1 "       RestFn.java:423 clojure.lang.RestFn.invoke" (:restartable nil)) (2 "      NO_SOURCE_FILE:1 image-processing.hist-view-gui/eval8632" (:restartable nil)) (3 "    Compiler.java:6465 clojure.lang.Compiler.eval" (:restartable nil)) (4 "    Compiler.java:6431 clojure.lang.Compiler.eval" (:restartable nil)) (5 "         core.clj:2795 clojure.core/eval" (:restartable nil)) (6 "          core.clj:534 swank.core/eval825[fn]" (:restartable nil)) (7 "      MultiFn.java:163 clojure.lang.MultiFn.invoke" (:restartable nil)) (8 "          basic.clj:55 swank.commands.basic/eval-region" (:restartable nil)) (9 "          basic.clj:45 swank.commands.basic/eval-region" (:restartable nil))) (1246))
[-Received-] 424.41
(:debug-activate 1 1 nil)
[---Sent---] 424.59
(:emacs-rex (swank:frame-locals-and-catch-tags 0) nil 1 1247)

[---Sent---] 424.59
(:emacs-rex (swank:frame-source-location 0) nil 1 1248)

[---Sent---] 424.59
(:emacs-rex (swank-backend:frame-call 0) nil 1 1249)

[-Received-] 424.6
(:return (:ok (((:name "buff-imgs" :id 0 :value "(#<BufferedImage BufferedImage@e84fb3: type = 13 IndexColorModel: #pixelBits = 8 numComponents = 4 color space = java.awt.color.ICC_ColorSpace@1c8a486 transparency = 2 transIndex   = 16 has alpha = true isAlphaPre = false ByteInterleavedRaster: width = 200 height = 90 #numDataElements 1 dataOff[0] = 0>)") (:name "hist-panel" :id 0 :value "#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,0,0,462x100,invalid,layout=java.awt.GridLayout,alignmentX=0.0,alignmentY=0.0,border=javax.swing.border.EmptyBorder@7e395e,flags=9,maximumSize=,minimumSize=,preferredSize=]>") (:name "new-imgs" :id 0 :value "[#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,0,0,0x0,invalid,layout=javax.swing.BoxLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]>]") (:name "previous-imgs" :id 0 :value "nil")) nil)) 1247)
[Actionlist] 424.6
1246: pending  :listener-eval 
1247: finished :frame-locals-and-catch-tags 
1248: pending  :frame-source-location 
1249: pending  :frame-call 
params: [[[':name', '"buff-imgs"', ':id', '0', ':value', '"(#<BufferedImage BufferedImage@e84fb3: type = 13 IndexColorModel: #pixelBits = 8 numComponents = 4 color space = java.awt.color.ICC_ColorSpace@1c8a486 transparency = 2 transIndex   = 16 has alpha = true isAlphaPre = false ByteInterleavedRaster: width = 200 height = 90 #numDataElements 1 dataOff[0] = 0>)"'], [':name', '"hist-panel"', ':id', '0', ':value', '"#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,0,0,462x100,invalid,layout=java.awt.GridLayout,alignmentX=0.0,alignmentY=0.0,border=javax.swing.border.EmptyBorder@7e395e,flags=9,maximumSize=,minimumSize=,preferredSize=]>"'], [':name', '"new-imgs"', ':id', '0', ':value', '"[#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,0,0,0x0,invalid,layout=javax.swing.BoxLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]>]"'], [':name', '"previous-imgs"', ':id', '0', ':value', '"nil"']], 'nil']
[-Received-] 424.6
(:debug-activate 1 1 nil)
[-Received-] 424.6
(:return (:ok (:error "image_processing/NO_SOURCE_FILE - source not found.")) 1248)
[Actionlist] 424.6
1246: pending  :listener-eval 
1247: finished :frame-locals-and-catch-tags 
1248: finished :frame-source-location 
1249: pending  :frame-call 
params: [':error', '"image_processing/NO_SOURCE_FILE - source not found."']
[-Received-] 424.6
(:debug-activate 1 1 nil)
[-Received-] 424.6
(:return (:abort) 1249)
[Actionlist] 424.6
1246: pending  :listener-eval 
1247: finished :frame-locals-and-catch-tags 
1248: finished :frame-source-location 
1249: finished :frame-call 
[-Received-] 424.6
(:debug-activate 1 1 nil)
[---Sent---] 424.97
(:emacs-rex (swank:throw-to-toplevel) nil 1 1250)

[-Received-] 424.97
(:return (:abort) 1250)
[Actionlist] 424.97
1246: pending  :listener-eval 
1250: finished :throw-to-toplevel 
[-Received-] 424.97
(:debug-return 1 1 nil)
[-Received-] 424.97
(:return (:abort) 1246)
[Actionlist] 424.97
1246: finished :listener-eval 
1250: finished :throw-to-toplevel 
[---Sent---] 425.22
(:emacs-rex (swank:listener-eval "z
") "image-processing.hist-view-gui" :repl-thread 1251)

[-Received-] 425.22
(:write-string "#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,0,0,462x100,invalid,layout=java.awt.GridLayout,alignmentX=0.0,alignmentY=0.0,border=javax.swing.border.EmptyBorder@7e395e,flags=9,maximumSize=,minimumSize=,preferredSize=]>
" :repl-result)
[-Received-] 425.22
(:return (:ok nil) 1251)
[Actionlist] 425.22
1251: finished :listener-eval 
params: nil
[---Sent---] 425.53
(:emacs-rex (swank:operator-arglist "config" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1252)

[-Received-] 425.53
(:return (:ok nil) 1252)
[Actionlist] 425.53
1252: finished :operator-arglist 
params: nil
[---Sent---] 425.74
(:emacs-rex (swank:operator-arglist "config" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1253)

[-Received-] 425.74
(:return (:ok nil) 1253)
[Actionlist] 425.74
1253: finished :operator-arglist 
params: nil
[---Sent---] 425.92
(:emacs-rex (swank:listener-eval "(config z :items)
") "image-processing.hist-view-gui" :repl-thread 1254)

[-Received-] 425.93
(:write-string "nil
" :repl-result)
[-Received-] 425.93
(:return (:ok nil) 1254)
[Actionlist] 425.93
1254: finished :listener-eval 
params: nil
[---Sent---] 426.47
(:emacs-rex (swank:listener-eval "(def z (create-hist-panel x))
") "image-processing.hist-view-gui" :repl-thread 1255)

[-Received-] 426.47
(:write-string "#'image-processing.hist-view-gui/z
" :repl-result)
[-Received-] 426.56
(:return (:ok nil) 1255)
[Actionlist] 426.56
1255: finished :listener-eval 
params: nil
[---Sent---] 426.75
(:emacs-rex (swank:listener-eval "(config z :items)
") "image-processing.hist-view-gui" :repl-thread 1256)

[-Received-] 426.75
(:write-string "(#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,0,0,0x0,invalid,layout=javax.swing.BoxLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]> #<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,0,0,0x0,invalid,layout=javax.swing.BoxLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]>)
" :repl-result)
[-Received-] 426.75
(:return (:ok nil) 1256)
[Actionlist] 426.75
1256: finished :listener-eval 
params: nil
[---Sent---] 427.08
(:emacs-rex (swank:listener-eval "(add-imgs z (first x))
") "image-processing.hist-view-gui" :repl-thread 1257)

[-Received-] 427.09
(:debug 1 1 ("BREAK:" "  [Thrown class java.lang.Exception]" nil) (("QUIT" "Quit to the SLIME top level") ("CONTINUE" "Continue from breakpoint")) ((0 "      NO_SOURCE_FILE:1 image-processing.hist-view-gui/add-imgs" (:restartable nil)) (1 "       RestFn.java:423 clojure.lang.RestFn.invoke" (:restartable nil)) (2 "      NO_SOURCE_FILE:1 image-processing.hist-view-gui/eval8658" (:restartable nil)) (3 "    Compiler.java:6465 clojure.lang.Compiler.eval" (:restartable nil)) (4 "    Compiler.java:6431 clojure.lang.Compiler.eval" (:restartable nil)) (5 "         core.clj:2795 clojure.core/eval" (:restartable nil)) (6 "          core.clj:534 swank.core/eval825[fn]" (:restartable nil)) (7 "      MultiFn.java:163 clojure.lang.MultiFn.invoke" (:restartable nil)) (8 "          basic.clj:55 swank.commands.basic/eval-region" (:restartable nil)) (9 "          basic.clj:45 swank.commands.basic/eval-region" (:restartable nil))) (1257))
[-Received-] 427.09
(:debug-activate 1 1 nil)
[---Sent---] 427.27
(:emacs-rex (swank:invoke-nth-restart-for-emacs 1 1) nil 1 1258)

[-Received-] 427.28
(:return (:abort) 1258)
[Actionlist] 427.29
1257: pending  :listener-eval 
1258: finished :invoke-nth-restart-for-emacs 
[-Received-] 427.29
(:debug-return 1 1 nil)
[-Received-] 427.29
(:debug 1 1 ("Can't add nil widget. Original was ([#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,0,0,0x0,invalid,layout=javax.swing.BoxLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]>])" "  [Thrown class java.lang.IllegalArgumentException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "        util.clj:23 seesaw.util/check-args" (:restartable nil)) (1 "      layout.clj:39 seesaw.layout/add-widget" (:restartable nil)) (2 "      layout.clj:36 seesaw.layout/add-widget" (:restartable nil)) (3 "      layout.clj:47 seesaw.layout/add-widgets" (:restartable nil)) (4 "      layout.clj:53 seesaw.layout/fn" (:restartable nil)) (5 "    options.clj:114 seesaw.options/apply-option" (:restartable nil)) (6 "    options.clj:129 seesaw.options/apply-options*" (:restartable nil)) (7 "    options.clj:136 seesaw.options/apply-options" (:restartable nil)) (8 "       core.clj:881 seesaw.core/eval6154[fn]" (:restartable nil)) (9 "      config.clj:16 seesaw.config/eval2353[fn]" (:restartable nil))) (nil))
[-Received-] 427.29
(:debug-activate 1 1 nil)
[---Sent---] 428.04
(:emacs-rex (swank:throw-to-toplevel) nil 1 1259)

[-Received-] 428.04
(:return (:abort) 1259)
[Actionlist] 428.04
1257: pending  :listener-eval 
1259: finished :throw-to-toplevel 
[-Received-] 428.04
(:debug-return 1 1 nil)
[-Received-] 428.04
(:return (:abort) 1257)
[Actionlist] 428.04
1257: finished :listener-eval 
1259: finished :throw-to-toplevel 
[---Sent---] 428.29
(:emacs-rex (swank:listener-eval "(config z :items)
") "image-processing.hist-view-gui" :repl-thread 1260)

[-Received-] 428.29
(:write-string "nil
" :repl-result)
[-Received-] 428.29
(:return (:ok nil) 1260)
[Actionlist] 428.29
1260: finished :listener-eval 
params: nil
[---Sent---] 428.62
(:emacs-rex (swank:listener-eval "(def z (create-hist-panel x))
") "image-processing.hist-view-gui" :repl-thread 1261)

[-Received-] 428.62
(:write-string "#'image-processing.hist-view-gui/z
" :repl-result)
[-Received-] 428.62
(:return (:ok nil) 1261)
[Actionlist] 428.62
1261: finished :listener-eval 
params: nil
[---Sent---] 428.82
(:emacs-rex (swank:listener-eval "(config z :items)
") "image-processing.hist-view-gui" :repl-thread 1262)

[-Received-] 428.82
(:write-string "(#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,0,0,0x0,invalid,layout=javax.swing.BoxLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]> #<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,0,0,0x0,invalid,layout=javax.swing.BoxLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]>)
" :repl-result)
[-Received-] 428.82
(:return (:ok nil) 1262)
[Actionlist] 428.82
1262: finished :listener-eval 
params: nil
[---Sent---] 428.99
(:emacs-rex (swank:listener-eval "(config z :items)
") "image-processing.hist-view-gui" :repl-thread 1263)

[-Received-] 428.99
(:write-string "(#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,0,0,0x0,invalid,layout=javax.swing.BoxLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]> #<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,0,0,0x0,invalid,layout=javax.swing.BoxLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]>)
" :repl-result)
[-Received-] 428.99
(:return (:ok nil) 1263)
[Actionlist] 428.99
1263: finished :listener-eval 
params: nil
[---Sent---] 429.53
(:emacs-rex (swank:operator-arglist "create-radio-img" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1264)

[-Received-] 429.53
(:return (:ok "([buff-img])") 1264)
[Actionlist] 429.53
1264: finished :operator-arglist 
params: "([buff-img])"
[---Sent---] 429.53
(:emacs-rex (swank:describe-function "create-radio-img") "image-processing.hist-view-gui" t 1265)

[-Received-] 429.53
(:return (:ok "-------------------------
image-processing.hist-view-gui/create-radio-img
([buff-img])
  Doc
") 1265)
[Actionlist] 429.53
1265: finished :describe-function 
params: "-------------------------
image-processing.hist-view-gui/create-radio-img
([buff-img])
  Doc
"
[---Sent---] 429.55
(:emacs-rex (swank:operator-arglist "previous-imgs" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1266)

[-Received-] 429.55
(:return (:ok nil) 1266)
[Actionlist] 429.55
1266: finished :operator-arglist 
params: nil
[---Sent---] 429.62
(:emacs-rex (swank:operator-arglist "create-radio-img" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1267)

[-Received-] 429.62
(:return (:ok "([buff-img])") 1267)
[Actionlist] 429.62
1267: finished :operator-arglist 
params: "([buff-img])"
[---Sent---] 429.62
(:emacs-rex (swank:describe-function "create-radio-img") "image-processing.hist-view-gui" t 1268)

[-Received-] 429.62
(:return (:ok "-------------------------
image-processing.hist-view-gui/create-radio-img
([buff-img])
  Doc
") 1268)
[Actionlist] 429.62
1268: finished :describe-function 
params: "-------------------------
image-processing.hist-view-gui/create-radio-img
([buff-img])
  Doc
"
[---Sent---] 429.77
(:emacs-rex (swank:operator-arglist "config" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1269)

[-Received-] 429.77
(:return (:ok nil) 1269)
[Actionlist] 429.77
1269: finished :operator-arglist 
params: nil
[---Sent---] 429.81
(:emacs-rex (swank:operator-arglist "config" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1270)

[-Received-] 429.81
(:return (:ok nil) 1270)
[Actionlist] 429.81
1270: finished :operator-arglist 
params: nil
[---Sent---] 430.17
(:emacs-rex (swank:listener-eval "(defn add-imgs
  \"Doc\"
  #^{:arglists [hist-panel & buff-imgs]}
  [hist-panel & buff-imgs]
  (let [previous-imgs (vec (config hist-panel :items)) 
        new-imgs (reduce #(conj %1 (create-radio-img %2)) [] buff-imgs)]
    (swank.core/break)
    (config! hist-panel :items (conj previous-imgs new-imgs))))
") "image-processing.hist-view-gui" :repl-thread 1271)

[-Received-] 430.17
(:write-string "#'image-processing.hist-view-gui/add-imgs
" :repl-result)
[-Received-] 430.18
(:return (:ok nil) 1271)
[Actionlist] 430.18
1271: finished :listener-eval 
params: nil
[---Sent---] 430.51
(:emacs-rex (swank:listener-eval "(config z :items)
") "image-processing.hist-view-gui" :repl-thread 1272)

[-Received-] 430.51
(:write-string "(#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,0,0,0x0,invalid,layout=javax.swing.BoxLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]> #<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,0,0,0x0,invalid,layout=javax.swing.BoxLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]>)
" :repl-result)
[-Received-] 430.52
(:return (:ok nil) 1272)
[Actionlist] 430.52
1272: finished :listener-eval 
params: nil
[---Sent---] 431.18
(:emacs-rex (swank:fuzzy-completions "crea" "image-processing.hist-view-gui" :limit 200 :time-limit-in-msec 2000) nil t 1273)

[-Received-] 431.19
(:return (:ok ((("create-frame" "40.46" ((0 "crea")) "-f------") ("create-radio-img" "40.11" ((0 "crea")) "-f------") ("create-hist-panel" "40.06" ((0 "crea")) "-f------") ("clojure.main/" "15.16" ((0 "c") (5 "re") (9 "a")) "b------p") ("clojure.walk/" "15.16" ((0 "c") (5 "re") (9 "a")) "b------p") ("clojure.java.io/" "14.88" ((0 "c") (5 "re") (9 "a")) "b------p") ("swank.core.threadmap/" "14.82" ((6 "c") (13 "rea")) "b------p") ("clojure.java.shell/" "14.72" ((0 "c") (5 "re") (9 "a")) "b------p") ("clojure.java.browse/" "14.68" ((0 "c") (5 "re") (9 "a")) "b------p") ("clojure.java.javadoc/" "14.64" ((0 "c") (5 "re") (9 "a")) "b------p") ("swank.util.concurrent.thread/" "14.63" ((11 "c") (24 "rea")) "b------p") ("clojure.contrib.macro-utils/" "14.47" ((0 "c") (5 "re") (17 "a")) "b------p") ("swank.core.debugger-backends/" "12.45" ((6 "c") (8 "re") (21 "a")) "b------p") ("swank.clj-contrib.macroexpand/" "5.43" ((20 "cr") (23 "e") (26 "a")) "b------p") ("swank.util.clj-stacktrace-compat/" "3.34" ((21 "r") (24 "e") (30 "a")) "b------p")) nil)) 1273)
[Actionlist] 431.19
1273: finished :fuzzy-completions 
params: [[['"create-frame"', '"40.46"', [['0', '"crea"']], '"-f------"'], ['"create-radio-img"', '"40.11"', [['0', '"crea"']], '"-f------"'], ['"create-hist-panel"', '"40.06"', [['0', '"crea"']], '"-f------"'], ['"clojure.main/"', '"15.16"', [['0', '"c"'], ['5', '"re"'], ['9', '"a"']], '"b------p"'], ['"clojure.walk/"', '"15.16"', [['0', '"c"'], ['5', '"re"'], ['9', '"a"']], '"b------p"'], ['"clojure.java.io/"', '"14.88"', [['0', '"c"'], ['5', '"re"'], ['9', '"a"']], '"b------p"'], ['"swank.core.threadmap/"', '"14.82"', [['6', '"c"'], ['13', '"rea"']], '"b------p"'], ['"clojure.java.shell/"', '"14.72"', [['0', '"c"'], ['5', '"re"'], ['9', '"a"']], '"b------p"'], ['"clojure.java.browse/"', '"14.68"', [['0', '"c"'], ['5', '"re"'], ['9', '"a"']], '"b------p"'], ['"clojure.java.javadoc/"', '"14.64"', [['0', '"c"'], ['5', '"re"'], ['9', '"a"']], '"b------p"'], ['"swank.util.concurrent.thread/"', '"14.63"', [['11', '"c"'], ['24', '"rea"']], '"b------p"'], ['"clojure.contrib.macro-utils/"', '"14.47"', [['0', '"c"'], ['5', '"re"'], ['17', '"a"']], '"b------p"'], ['"swank.core.debugger-backends/"', '"12.45"', [['6', '"c"'], ['8', '"re"'], ['21', '"a"']], '"b------p"'], ['"swank.clj-contrib.macroexpand/"', '"5.43"', [['20', '"cr"'], ['23', '"e"'], ['26', '"a"']], '"b------p"'], ['"swank.util.clj-stacktrace-compat/"', '"3.34"', [['21', '"r"'], ['24', '"e"'], ['30', '"a"']], '"b------p"']], 'nil']
[---Sent---] 431.25
(:emacs-rex (swank:operator-arglist "create-frame" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1274)

[-Received-] 431.25
(:return (:ok "([hist-panel])") 1274)
[Actionlist] 431.26
1274: finished :operator-arglist 
params: "([hist-panel])"
[---Sent---] 431.39
(:emacs-rex (swank:listener-eval "(create-frame z)
") "image-processing.hist-view-gui" :repl-thread 1275)

[-Received-] 431.44
(:write-string "#<JFrame$Tag$a79ba523 seesaw.core.proxy$javax.swing.JFrame$Tag$a79ba523[frame16,0,31,472x130,layout=java.awt.BorderLayout,title=Hello,resizable,normal,defaultCloseOperation=HIDE_ON_CLOSE,rootPane=javax.swing.JRootPane[,5,25,462x100,layout=javax.swing.JRootPane$RootLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=16777673,maximumSize=,minimumSize=,preferredSize=],rootPaneCheckingEnabled=true]>
" :repl-result)
[-Received-] 431.45
(:return (:ok nil) 1275)
[Actionlist] 431.45
1275: finished :listener-eval 
params: nil
[---Sent---] 431.87
(:emacs-rex (swank:listener-eval "(add-imgs z (first x))
") "image-processing.hist-view-gui" :repl-thread 1276)

[-Received-] 431.88
(:debug 1 1 ("BREAK:" "  [Thrown class java.lang.Exception]" nil) (("QUIT" "Quit to the SLIME top level") ("CONTINUE" "Continue from breakpoint")) ((0 "      NO_SOURCE_FILE:1 image-processing.hist-view-gui/add-imgs" (:restartable nil)) (1 "       RestFn.java:423 clojure.lang.RestFn.invoke" (:restartable nil)) (2 "      NO_SOURCE_FILE:1 image-processing.hist-view-gui/eval8713" (:restartable nil)) (3 "    Compiler.java:6465 clojure.lang.Compiler.eval" (:restartable nil)) (4 "    Compiler.java:6431 clojure.lang.Compiler.eval" (:restartable nil)) (5 "         core.clj:2795 clojure.core/eval" (:restartable nil)) (6 "          core.clj:534 swank.core/eval825[fn]" (:restartable nil)) (7 "      MultiFn.java:163 clojure.lang.MultiFn.invoke" (:restartable nil)) (8 "          basic.clj:55 swank.commands.basic/eval-region" (:restartable nil)) (9 "          basic.clj:45 swank.commands.basic/eval-region" (:restartable nil))) (1276))
[-Received-] 431.88
(:debug-activate 1 1 nil)
[---Sent---] 432.08
(:emacs-rex (swank:frame-locals-and-catch-tags 0) nil 1 1277)

[---Sent---] 432.08
(:emacs-rex (swank:frame-source-location 0) nil 1 1278)

[---Sent---] 432.08
(:emacs-rex (swank-backend:frame-call 0) nil 1 1279)

[-Received-] 432.09
(:return (:ok (((:name "buff-imgs" :id 0 :value "(#<BufferedImage BufferedImage@e84fb3: type = 13 IndexColorModel: #pixelBits = 8 numComponents = 4 color space = java.awt.color.ICC_ColorSpace@1c8a486 transparency = 2 transIndex   = 16 has alpha = true isAlphaPre = false ByteInterleavedRaster: width = 200 height = 90 #numDataElements 1 dataOff[0] = 0>)") (:name "hist-panel" :id 0 :value "#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,0,0,462x100,layout=java.awt.GridLayout,alignmentX=0.0,alignmentY=0.0,border=javax.swing.border.EmptyBorder@ea0d6,flags=9,maximumSize=,minimumSize=,preferredSize=]>") (:name "new-imgs" :id 0 :value "[#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,0,0,0x0,invalid,layout=javax.swing.BoxLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]>]") (:name "previous-imgs" :id 0 :value "[#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,5,5,221x90,layout=javax.swing.BoxLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]> #<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,236,5,221x90,layout=javax.swing.BoxLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]>]")) nil)) 1277)
[Actionlist] 432.09
1276: pending  :listener-eval 
1277: finished :frame-locals-and-catch-tags 
1278: pending  :frame-source-location 
1279: pending  :frame-call 
params: [[[':name', '"buff-imgs"', ':id', '0', ':value', '"(#<BufferedImage BufferedImage@e84fb3: type = 13 IndexColorModel: #pixelBits = 8 numComponents = 4 color space = java.awt.color.ICC_ColorSpace@1c8a486 transparency = 2 transIndex   = 16 has alpha = true isAlphaPre = false ByteInterleavedRaster: width = 200 height = 90 #numDataElements 1 dataOff[0] = 0>)"'], [':name', '"hist-panel"', ':id', '0', ':value', '"#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,0,0,462x100,layout=java.awt.GridLayout,alignmentX=0.0,alignmentY=0.0,border=javax.swing.border.EmptyBorder@ea0d6,flags=9,maximumSize=,minimumSize=,preferredSize=]>"'], [':name', '"new-imgs"', ':id', '0', ':value', '"[#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,0,0,0x0,invalid,layout=javax.swing.BoxLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]>]"'], [':name', '"previous-imgs"', ':id', '0', ':value', '"[#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,5,5,221x90,layout=javax.swing.BoxLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]> #<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,236,5,221x90,layout=javax.swing.BoxLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]>]"']], 'nil']
[-Received-] 432.1
(:debug-activate 1 1 nil)
[-Received-] 432.1
(:return (:ok (:error "image_processing/NO_SOURCE_FILE - source not found.")) 1278)
[Actionlist] 432.1
1276: pending  :listener-eval 
1277: finished :frame-locals-and-catch-tags 
1278: finished :frame-source-location 
1279: pending  :frame-call 
params: [':error', '"image_processing/NO_SOURCE_FILE - source not found."']
[-Received-] 432.1
(:debug-activate 1 1 nil)
[-Received-] 432.1
(:return (:abort) 1279)
[Actionlist] 432.1
1276: pending  :listener-eval 
1277: finished :frame-locals-and-catch-tags 
1278: finished :frame-source-location 
1279: finished :frame-call 
[-Received-] 432.1
(:debug-activate 1 1 nil)
[---Sent---] 432.32
(:emacs-rex (swank:invoke-nth-restart-for-emacs 1 1) nil 1 1280)

[-Received-] 432.33
(:return (:abort) 1280)
[Actionlist] 432.33
1276: pending  :listener-eval 
1280: finished :invoke-nth-restart-for-emacs 
[-Received-] 432.33
(:debug-return 1 1 nil)
[-Received-] 432.33
(:debug 1 1 ("Can't add nil widget. Original was ([#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,0,0,0x0,invalid,layout=javax.swing.BoxLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]>])" "  [Thrown class java.lang.IllegalArgumentException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "        util.clj:23 seesaw.util/check-args" (:restartable nil)) (1 "      layout.clj:39 seesaw.layout/add-widget" (:restartable nil)) (2 "      layout.clj:36 seesaw.layout/add-widget" (:restartable nil)) (3 "      layout.clj:47 seesaw.layout/add-widgets" (:restartable nil)) (4 "      layout.clj:53 seesaw.layout/fn" (:restartable nil)) (5 "    options.clj:114 seesaw.options/apply-option" (:restartable nil)) (6 "    options.clj:129 seesaw.options/apply-options*" (:restartable nil)) (7 "    options.clj:136 seesaw.options/apply-options" (:restartable nil)) (8 "       core.clj:881 seesaw.core/eval6154[fn]" (:restartable nil)) (9 "      config.clj:16 seesaw.config/eval2353[fn]" (:restartable nil))) (nil))
[-Received-] 432.34
(:debug-activate 1 1 nil)
[---Sent---] 432.9
(:emacs-rex (swank:throw-to-toplevel) nil 1 1281)

[-Received-] 432.91
(:return (:abort) 1281)
[Actionlist] 432.91
1276: pending  :listener-eval 
1281: finished :throw-to-toplevel 
[-Received-] 432.92
(:debug-return 1 1 nil)
[-Received-] 432.92
(:return (:abort) 1276)
[Actionlist] 432.92
1276: finished :listener-eval 
1281: finished :throw-to-toplevel 
[---Sent---] 433.29
(:emacs-rex (swank:listener-eval "(config z :items)
") "image-processing.hist-view-gui" :repl-thread 1282)

[-Received-] 433.29
(:write-string "(#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,5,5,221x90,invalid,layout=javax.swing.BoxLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]> #<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,236,5,221x90,invalid,layout=javax.swing.BoxLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]>)
" :repl-result)
[-Received-] 433.29
(:return (:ok nil) 1282)
[Actionlist] 433.29
1282: finished :listener-eval 
params: nil
[---Sent---] 433.56
(:emacs-rex (swank:listener-eval "(add-imgs z (first x))
") "image-processing.hist-view-gui" :repl-thread 1283)

[-Received-] 433.63
(:debug 1 1 ("BREAK:" "  [Thrown class java.lang.Exception]" nil) (("QUIT" "Quit to the SLIME top level") ("CONTINUE" "Continue from breakpoint")) ((0 "      NO_SOURCE_FILE:1 image-processing.hist-view-gui/add-imgs" (:restartable nil)) (1 "       RestFn.java:423 clojure.lang.RestFn.invoke" (:restartable nil)) (2 "      NO_SOURCE_FILE:1 image-processing.hist-view-gui/eval8729" (:restartable nil)) (3 "    Compiler.java:6465 clojure.lang.Compiler.eval" (:restartable nil)) (4 "    Compiler.java:6431 clojure.lang.Compiler.eval" (:restartable nil)) (5 "         core.clj:2795 clojure.core/eval" (:restartable nil)) (6 "          core.clj:534 swank.core/eval825[fn]" (:restartable nil)) (7 "      MultiFn.java:163 clojure.lang.MultiFn.invoke" (:restartable nil)) (8 "          basic.clj:55 swank.commands.basic/eval-region" (:restartable nil)) (9 "          basic.clj:45 swank.commands.basic/eval-region" (:restartable nil))) (1283))
[-Received-] 433.63
(:debug-activate 1 1 nil)
[---Sent---] 433.8
(:emacs-rex (swank:frame-locals-and-catch-tags 0) nil 1 1284)

[---Sent---] 433.8
(:emacs-rex (swank:frame-source-location 0) nil 1 1285)

[---Sent---] 433.81
(:emacs-rex (swank-backend:frame-call 0) nil 1 1286)

[-Received-] 433.81
(:return (:ok (((:name "buff-imgs" :id 0 :value "(#<BufferedImage BufferedImage@e84fb3: type = 13 IndexColorModel: #pixelBits = 8 numComponents = 4 color space = java.awt.color.ICC_ColorSpace@1c8a486 transparency = 2 transIndex   = 16 has alpha = true isAlphaPre = false ByteInterleavedRaster: width = 200 height = 90 #numDataElements 1 dataOff[0] = 0>)") (:name "hist-panel" :id 0 :value "#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,0,0,462x100,invalid,layout=java.awt.GridLayout,alignmentX=0.0,alignmentY=0.0,border=javax.swing.border.EmptyBorder@ea0d6,flags=9,maximumSize=,minimumSize=,preferredSize=]>") (:name "new-imgs" :id 0 :value "[#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,0,0,0x0,invalid,layout=javax.swing.BoxLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]>]") (:name "previous-imgs" :id 0 :value "[#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,5,5,221x90,invalid,layout=javax.swing.BoxLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]> #<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,236,5,221x90,invalid,layout=javax.swing.BoxLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]>]")) nil)) 1284)
[Actionlist] 433.82
1283: pending  :listener-eval 
1284: finished :frame-locals-and-catch-tags 
1285: pending  :frame-source-location 
1286: pending  :frame-call 
params: [[[':name', '"buff-imgs"', ':id', '0', ':value', '"(#<BufferedImage BufferedImage@e84fb3: type = 13 IndexColorModel: #pixelBits = 8 numComponents = 4 color space = java.awt.color.ICC_ColorSpace@1c8a486 transparency = 2 transIndex   = 16 has alpha = true isAlphaPre = false ByteInterleavedRaster: width = 200 height = 90 #numDataElements 1 dataOff[0] = 0>)"'], [':name', '"hist-panel"', ':id', '0', ':value', '"#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,0,0,462x100,invalid,layout=java.awt.GridLayout,alignmentX=0.0,alignmentY=0.0,border=javax.swing.border.EmptyBorder@ea0d6,flags=9,maximumSize=,minimumSize=,preferredSize=]>"'], [':name', '"new-imgs"', ':id', '0', ':value', '"[#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,0,0,0x0,invalid,layout=javax.swing.BoxLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]>]"'], [':name', '"previous-imgs"', ':id', '0', ':value', '"[#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,5,5,221x90,invalid,layout=javax.swing.BoxLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]> #<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,236,5,221x90,invalid,layout=javax.swing.BoxLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]>]"']], 'nil']
[-Received-] 433.82
(:debug-activate 1 1 nil)
[-Received-] 433.82
(:return (:ok (:error "image_processing/NO_SOURCE_FILE - source not found.")) 1285)
[Actionlist] 433.82
1283: pending  :listener-eval 
1284: finished :frame-locals-and-catch-tags 
1285: finished :frame-source-location 
1286: pending  :frame-call 
params: [':error', '"image_processing/NO_SOURCE_FILE - source not found."']
[-Received-] 433.82
(:debug-activate 1 1 nil)
[-Received-] 433.82
(:return (:abort) 1286)
[Actionlist] 433.82
1283: pending  :listener-eval 
1284: finished :frame-locals-and-catch-tags 
1285: finished :frame-source-location 
1286: finished :frame-call 
[-Received-] 433.82
(:debug-activate 1 1 nil)
[---Sent---] 434.76
(:emacs-rex (swank:invoke-nth-restart-for-emacs 1 1) nil 1 1287)

[-Received-] 434.78
(:return (:abort) 1287)
[Actionlist] 434.78
1283: pending  :listener-eval 
1287: finished :invoke-nth-restart-for-emacs 
[-Received-] 434.78
(:debug-return 1 1 nil)
[-Received-] 434.78
(:debug 1 1 ("Can't add nil widget. Original was ([#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,0,0,0x0,invalid,layout=javax.swing.BoxLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]>])" "  [Thrown class java.lang.IllegalArgumentException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "        util.clj:23 seesaw.util/check-args" (:restartable nil)) (1 "      layout.clj:39 seesaw.layout/add-widget" (:restartable nil)) (2 "      layout.clj:36 seesaw.layout/add-widget" (:restartable nil)) (3 "      layout.clj:47 seesaw.layout/add-widgets" (:restartable nil)) (4 "      layout.clj:53 seesaw.layout/fn" (:restartable nil)) (5 "    options.clj:114 seesaw.options/apply-option" (:restartable nil)) (6 "    options.clj:129 seesaw.options/apply-options*" (:restartable nil)) (7 "    options.clj:136 seesaw.options/apply-options" (:restartable nil)) (8 "       core.clj:881 seesaw.core/eval6154[fn]" (:restartable nil)) (9 "      config.clj:16 seesaw.config/eval2353[fn]" (:restartable nil))) (nil))
[-Received-] 434.78
(:debug-activate 1 1 nil)
[---Sent---] 435.14
(:emacs-rex (swank:throw-to-toplevel) nil 1 1288)

[-Received-] 435.14
(:return (:abort) 1288)
[Actionlist] 435.14
1283: pending  :listener-eval 
1288: finished :throw-to-toplevel 
[-Received-] 435.14
(:debug-return 1 1 nil)
[-Received-] 435.14
(:return (:abort) 1283)
[Actionlist] 435.14
1283: finished :listener-eval 
1288: finished :throw-to-toplevel 
[---Sent---] 435.92
(:emacs-rex (swank:listener-eval "(defn add-imgs
  \"Doc\"
  #^{:arglists [hist-panel & buff-imgs]}
  [hist-panel & buff-imgs]
  (let [previous-imgs (vec (config hist-panel :items)) 
        new-imgs (reduce #(conj %1 (create-radio-img %2)) [] buff-imgs)]
    (swank.core/break)
    (config! hist-panel :items new-imgs)))
") "image-processing.hist-view-gui" :repl-thread 1289)

[-Received-] 435.92
(:write-string "#'image-processing.hist-view-gui/add-imgs
" :repl-result)
[-Received-] 435.92
(:return (:ok nil) 1289)
[Actionlist] 435.92
1289: finished :listener-eval 
params: nil
[---Sent---] 436.26
(:emacs-rex (swank:listener-eval "(config z :items)
") "image-processing.hist-view-gui" :repl-thread 1290)

[-Received-] 436.26
(:write-string "(#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,5,5,221x90,invalid,layout=javax.swing.BoxLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]> #<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,236,5,221x90,invalid,layout=javax.swing.BoxLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]>)
" :repl-result)
[-Received-] 436.26
(:return (:ok nil) 1290)
[Actionlist] 436.26
1290: finished :listener-eval 
params: nil
[---Sent---] 436.49
(:emacs-rex (swank:listener-eval "(add-imgs z (first x))
") "image-processing.hist-view-gui" :repl-thread 1291)

[-Received-] 436.49
(:debug 1 1 ("BREAK:" "  [Thrown class java.lang.Exception]" nil) (("QUIT" "Quit to the SLIME top level") ("CONTINUE" "Continue from breakpoint")) ((0 "      NO_SOURCE_FILE:1 image-processing.hist-view-gui/add-imgs" (:restartable nil)) (1 "       RestFn.java:423 clojure.lang.RestFn.invoke" (:restartable nil)) (2 "      NO_SOURCE_FILE:1 image-processing.hist-view-gui/eval8752" (:restartable nil)) (3 "    Compiler.java:6465 clojure.lang.Compiler.eval" (:restartable nil)) (4 "    Compiler.java:6431 clojure.lang.Compiler.eval" (:restartable nil)) (5 "         core.clj:2795 clojure.core/eval" (:restartable nil)) (6 "          core.clj:534 swank.core/eval825[fn]" (:restartable nil)) (7 "      MultiFn.java:163 clojure.lang.MultiFn.invoke" (:restartable nil)) (8 "          basic.clj:55 swank.commands.basic/eval-region" (:restartable nil)) (9 "          basic.clj:45 swank.commands.basic/eval-region" (:restartable nil))) (1291))
[-Received-] 436.5
(:debug-activate 1 1 nil)
[---Sent---] 436.69
(:emacs-rex (swank:frame-locals-and-catch-tags 0) nil 1 1292)

[---Sent---] 436.69
(:emacs-rex (swank:frame-source-location 0) nil 1 1293)

[---Sent---] 436.69
(:emacs-rex (swank-backend:frame-call 0) nil 1 1294)

[-Received-] 436.71
(:return (:ok (((:name "buff-imgs" :id 0 :value "(#<BufferedImage BufferedImage@e84fb3: type = 13 IndexColorModel: #pixelBits = 8 numComponents = 4 color space = java.awt.color.ICC_ColorSpace@1c8a486 transparency = 2 transIndex   = 16 has alpha = true isAlphaPre = false ByteInterleavedRaster: width = 200 height = 90 #numDataElements 1 dataOff[0] = 0>)") (:name "hist-panel" :id 0 :value "#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,0,0,462x100,invalid,layout=java.awt.GridLayout,alignmentX=0.0,alignmentY=0.0,border=javax.swing.border.EmptyBorder@ea0d6,flags=9,maximumSize=,minimumSize=,preferredSize=]>") (:name "new-imgs" :id 0 :value "[#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,0,0,0x0,invalid,layout=javax.swing.BoxLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]>]") (:name "previous-imgs" :id 0 :value "[#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,5,5,221x90,invalid,layout=javax.swing.BoxLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]> #<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,236,5,221x90,invalid,layout=javax.swing.BoxLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]>]")) nil)) 1292)
[Actionlist] 436.71
1291: pending  :listener-eval 
1292: finished :frame-locals-and-catch-tags 
1293: pending  :frame-source-location 
1294: pending  :frame-call 
params: [[[':name', '"buff-imgs"', ':id', '0', ':value', '"(#<BufferedImage BufferedImage@e84fb3: type = 13 IndexColorModel: #pixelBits = 8 numComponents = 4 color space = java.awt.color.ICC_ColorSpace@1c8a486 transparency = 2 transIndex   = 16 has alpha = true isAlphaPre = false ByteInterleavedRaster: width = 200 height = 90 #numDataElements 1 dataOff[0] = 0>)"'], [':name', '"hist-panel"', ':id', '0', ':value', '"#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,0,0,462x100,invalid,layout=java.awt.GridLayout,alignmentX=0.0,alignmentY=0.0,border=javax.swing.border.EmptyBorder@ea0d6,flags=9,maximumSize=,minimumSize=,preferredSize=]>"'], [':name', '"new-imgs"', ':id', '0', ':value', '"[#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,0,0,0x0,invalid,layout=javax.swing.BoxLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]>]"'], [':name', '"previous-imgs"', ':id', '0', ':value', '"[#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,5,5,221x90,invalid,layout=javax.swing.BoxLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]> #<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,236,5,221x90,invalid,layout=javax.swing.BoxLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]>]"']], 'nil']
[-Received-] 436.72
(:debug-activate 1 1 nil)
[-Received-] 436.72
(:return (:ok (:error "image_processing/NO_SOURCE_FILE - source not found.")) 1293)
[Actionlist] 436.72
1291: pending  :listener-eval 
1292: finished :frame-locals-and-catch-tags 
1293: finished :frame-source-location 
1294: pending  :frame-call 
params: [':error', '"image_processing/NO_SOURCE_FILE - source not found."']
[-Received-] 436.72
(:debug-activate 1 1 nil)
[-Received-] 436.72
(:return (:abort) 1294)
[Actionlist] 436.72
1291: pending  :listener-eval 
1292: finished :frame-locals-and-catch-tags 
1293: finished :frame-source-location 
1294: finished :frame-call 
[-Received-] 436.72
(:debug-activate 1 1 nil)
[---Sent---] 436.95
(:emacs-rex (swank:invoke-nth-restart-for-emacs 1 1) nil 1 1295)

[-Received-] 436.96
(:return (:abort) 1295)
[Actionlist] 436.97
1291: pending  :listener-eval 
1295: finished :invoke-nth-restart-for-emacs 
[-Received-] 436.97
(:debug-return 1 1 nil)
[-Received-] 436.97
(:write-string "#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,0,0,462x100,invalid,layout=java.awt.GridLayout,alignmentX=0.0,alignmentY=0.0,border=javax.swing.border.EmptyBorder@ea0d6,flags=9,maximumSize=,minimumSize=,preferredSize=]>
" :repl-result)
[-Received-] 436.97
(:return (:ok nil) 1291)
[Actionlist] 436.98
1291: finished :listener-eval 
1295: finished :invoke-nth-restart-for-emacs 
params: nil
[---Sent---] 437.4
(:emacs-rex (swank:listener-eval "(config z :items)
") "image-processing.hist-view-gui" :repl-thread 1296)

[-Received-] 437.4
(:write-string "(#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,5,5,221x90,layout=javax.swing.BoxLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]>)
" :repl-result)
[-Received-] 437.49
(:return (:ok nil) 1296)
[Actionlist] 437.49
1296: finished :listener-eval 
params: nil
[---Sent---] 438.0
(:emacs-rex (swank:listener-eval "(first (config z :items)) 
") "image-processing.hist-view-gui" :repl-thread 1297)

[-Received-] 438.0
(:write-string "#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,5,5,221x90,layout=javax.swing.BoxLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]>
" :repl-result)
[-Received-] 438.0
(:return (:ok nil) 1297)
[Actionlist] 438.0
1297: finished :listener-eval 
params: nil
[---Sent---] 438.48
(:emacs-rex (swank:operator-arglist "vec" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1298)

[-Received-] 438.49
(:return (:ok "([coll])") 1298)
[Actionlist] 438.49
1298: finished :operator-arglist 
params: "([coll])"
[---Sent---] 438.62
(:emacs-rex (swank:listener-eval "(vec (config z :items))
") "image-processing.hist-view-gui" :repl-thread 1299)

[-Received-] 438.62
(:write-string "[#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,5,5,221x90,layout=javax.swing.BoxLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]>]
" :repl-result)
[-Received-] 438.62
(:return (:ok nil) 1299)
[Actionlist] 438.62
1299: finished :listener-eval 
params: nil
[---Sent---] 438.93
(:emacs-rex (swank:operator-arglist "conj" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1300)

[-Received-] 438.93
(:return (:ok "([coll x] [coll x & xs])") 1300)
[Actionlist] 438.93
1300: finished :operator-arglist 
params: "([coll x] [coll x & xs])"
[---Sent---] 439.21
(:emacs-rex (swank:listener-eval "(conj [1] [2])
") "image-processing.hist-view-gui" :repl-thread 1301)

[-Received-] 439.21
(:write-string "[1 [2]]
" :repl-result)
[-Received-] 439.21
(:return (:ok nil) 1301)
[Actionlist] 439.21
1301: finished :listener-eval 
params: nil
[---Sent---] 440.03
(:emacs-rex (swank:operator-arglist "assoc" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1302)

[-Received-] 440.03
(:return (:ok "([map key val] [map key val & kvs])") 1302)
[Actionlist] 440.03
1302: finished :operator-arglist 
params: "([map key val] [map key val & kvs])"
[---Sent---] 440.1
(:emacs-rex (swank:listener-eval "(assoc [1] [2])
") "image-processing.hist-view-gui" :repl-thread 1303)

[-Received-] 440.1
(:debug 1 1 ("Wrong number of args (2) passed to: core$assoc" "  [Thrown class clojure.lang.ArityException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "       AFn.java:437 clojure.lang.AFn.throwArity" (:restartable nil)) (1 "    RestFn.java:427 clojure.lang.RestFn.invoke" (:restartable nil)) (2 "   NO_SOURCE_FILE:1 image-processing.hist-view-gui/eval8784" (:restartable nil)) (3 " Compiler.java:6465 clojure.lang.Compiler.eval" (:restartable nil)) (4 " Compiler.java:6431 clojure.lang.Compiler.eval" (:restartable nil)) (5 "      core.clj:2795 clojure.core/eval" (:restartable nil)) (6 "       core.clj:534 swank.core/eval825[fn]" (:restartable nil)) (7 "   MultiFn.java:163 clojure.lang.MultiFn.invoke" (:restartable nil)) (8 "       basic.clj:55 swank.commands.basic/eval-region" (:restartable nil)) (9 "       basic.clj:45 swank.commands.basic/eval-region" (:restartable nil))) (nil))
[-Received-] 440.1
(:debug-activate 1 1 nil)
[---Sent---] 440.33
(:emacs-rex (swank:throw-to-toplevel) nil 1 1304)

[-Received-] 440.33
(:return (:abort) 1304)
[Actionlist] 440.33
1303: pending  :listener-eval 
1304: finished :throw-to-toplevel 
[-Received-] 440.33
(:debug-return 1 1 nil)
[-Received-] 440.33
(:return (:abort) 1303)
[Actionlist] 440.33
1303: finished :listener-eval 
1304: finished :throw-to-toplevel 
[---Sent---] 440.77
(:emacs-rex (swank:operator-arglist "create-radio-img" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1305)

[-Received-] 440.77
(:return (:ok "([buff-img])") 1305)
[Actionlist] 440.77
1305: finished :operator-arglist 
params: "([buff-img])"
[---Sent---] 440.77
(:emacs-rex (swank:describe-function "create-radio-img") "image-processing.hist-view-gui" t 1306)

[-Received-] 440.77
(:return (:ok "-------------------------
image-processing.hist-view-gui/create-radio-img
([buff-img])
  Doc
") 1306)
[Actionlist] 440.77
1306: finished :describe-function 
params: "-------------------------
image-processing.hist-view-gui/create-radio-img
([buff-img])
  Doc
"
[---Sent---] 440.8
(:emacs-rex (swank:operator-arglist "conj" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1307)

[-Received-] 440.8
(:return (:ok "([coll x] [coll x & xs])") 1307)
[Actionlist] 440.8
1307: finished :operator-arglist 
params: "([coll x] [coll x & xs])"
[---Sent---] 440.81
(:emacs-rex (swank:describe-function "conj") "image-processing.hist-view-gui" t 1308)

[-Received-] 440.81
(:return (:ok "-------------------------
clojure.core/conj
([coll x] [coll x & xs])
  conj[oin]. Returns a new collection with the xs
    'added'. (conj nil item) returns (item).  The 'addition' may
    happen at different 'places' depending on the concrete type.
") 1308)
[Actionlist] 440.81
1308: finished :describe-function 
params: "-------------------------
clojure.core/conj
([coll x] [coll x & xs])
  conj[oin]. Returns a new collection with the xs
    'added'. (conj nil item) returns (item).  The 'addition' may
    happen at different 'places' depending on the concrete type.
"
[---Sent---] 440.85
(:emacs-rex (swank:operator-arglist "conj" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1309)

[-Received-] 440.85
(:return (:ok "([coll x] [coll x & xs])") 1309)
[Actionlist] 440.85
1309: finished :operator-arglist 
params: "([coll x] [coll x & xs])"
[---Sent---] 440.85
(:emacs-rex (swank:describe-function "conj") "image-processing.hist-view-gui" t 1310)

[-Received-] 440.85
(:return (:ok "-------------------------
clojure.core/conj
([coll x] [coll x & xs])
  conj[oin]. Returns a new collection with the xs
    'added'. (conj nil item) returns (item).  The 'addition' may
    happen at different 'places' depending on the concrete type.
") 1310)
[Actionlist] 440.85
1310: finished :describe-function 
params: "-------------------------
clojure.core/conj
([coll x] [coll x & xs])
  conj[oin]. Returns a new collection with the xs
    'added'. (conj nil item) returns (item).  The 'addition' may
    happen at different 'places' depending on the concrete type.
"
[---Sent---] 441.11
(:emacs-rex (swank:operator-arglist "reduce" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1311)

[-Received-] 441.11
(:return (:ok "([f coll] [f val coll])") 1311)
[Actionlist] 441.11
1311: finished :operator-arglist 
params: "([f coll] [f val coll])"
[---Sent---] 441.37
(:emacs-rex (swank:operator-arglist "conj" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1312)

[-Received-] 441.37
(:return (:ok "([coll x] [coll x & xs])") 1312)
[Actionlist] 441.37
1312: finished :operator-arglist 
params: "([coll x] [coll x & xs])"
[---Sent---] 441.43
(:emacs-rex (swank:operator-arglist "conj" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1313)

[-Received-] 441.43
(:return (:ok "([coll x] [coll x & xs])") 1313)
[Actionlist] 441.43
1313: finished :operator-arglist 
params: "([coll x] [coll x & xs])"
[---Sent---] 441.74
(:emacs-rex (swank:operator-arglist "reduce" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1314)

[-Received-] 441.74
(:return (:ok "([f coll] [f val coll])") 1314)
[Actionlist] 441.74
1314: finished :operator-arglist 
params: "([f coll] [f val coll])"
[---Sent---] 442.64
(:emacs-rex (swank:listener-eval "(defn add-imgs
  \"Doc\"
  #^{:arglists [hist-panel & buff-imgs]}
  [hist-panel & buff-imgs]
  (let [previous-imgs (vec (config hist-panel :items))]
    (config! hist-panel :items (reduce #(conj %1 (create-radio-img %2))
                                       previous-imgs
                                       buff-imgs))))
") "image-processing.hist-view-gui" :repl-thread 1315)

[-Received-] 442.64
(:write-string "#'image-processing.hist-view-gui/add-imgs
" :repl-result)
[-Received-] 442.64
(:return (:ok nil) 1315)
[Actionlist] 442.64
1315: finished :listener-eval 
params: nil
[---Sent---] 443.04
(:emacs-rex (swank:listener-eval "(config z :items)
") "image-processing.hist-view-gui" :repl-thread 1316)

[-Received-] 443.04
(:write-string "(#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,5,5,221x90,layout=javax.swing.BoxLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=9,maximumSize=,minimumSize=,preferredSize=]>)
" :repl-result)
[-Received-] 443.04
(:return (:ok nil) 1316)
[Actionlist] 443.04
1316: finished :listener-eval 
params: nil
[---Sent---] 443.53
(:emacs-rex (swank:listener-eval "(add-imgs z (first x))
") "image-processing.hist-view-gui" :repl-thread 1317)

[-Received-] 443.53
(:write-string "#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,0,0,462x100,layout=java.awt.GridLayout,alignmentX=0.0,alignmentY=0.0,border=javax.swing.border.EmptyBorder@ea0d6,flags=9,maximumSize=,minimumSize=,preferredSize=]>
" :repl-result)
[-Received-] 443.53
(:return (:ok nil) 1317)
[Actionlist] 443.53
1317: finished :listener-eval 
params: nil
[---Sent---] 443.76
(:emacs-rex (swank:listener-eval "(add-imgs z (first x))
") "image-processing.hist-view-gui" :repl-thread 1318)

[-Received-] 443.76
(:write-string "#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,0,0,462x100,layout=java.awt.GridLayout,alignmentX=0.0,alignmentY=0.0,border=javax.swing.border.EmptyBorder@ea0d6,flags=9,maximumSize=,minimumSize=,preferredSize=]>
" :repl-result)
[-Received-] 443.76
(:return (:ok nil) 1318)
[Actionlist] 443.76
1318: finished :listener-eval 
params: nil
[---Sent---] 444.45
(:emacs-rex (swank:listener-eval "(add-imgs z (second x))
") "image-processing.hist-view-gui" :repl-thread 1319)

[-Received-] 444.45
(:write-string "#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,0,0,530x258,invalid,layout=java.awt.GridLayout,alignmentX=0.0,alignmentY=0.0,border=javax.swing.border.EmptyBorder@ea0d6,flags=268435465,maximumSize=,minimumSize=,preferredSize=]>
" :repl-result)
[-Received-] 444.45
(:return (:ok nil) 1319)
[Actionlist] 444.45
1319: finished :listener-eval 
params: nil
[---Sent---] 444.65
(:emacs-rex (swank:operator-arglist "Hello" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1320)

[-Received-] 444.65
(:return (:ok nil) 1320)
[Actionlist] 444.65
1320: finished :operator-arglist 
params: nil
[---Sent---] 446.2
(:emacs-rex (swank:operator-arglist "image" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1322)

[-Received-] 446.2
(:return (:ok nil) 1322)
[Actionlist] 446.2
1322: finished :operator-arglist 
params: nil
[---Sent---] 446.78
(:emacs-rex (swank:operator-arglist "hist-panel" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1323)

[-Received-] 446.78
(:return (:ok nil) 1323)
[Actionlist] 446.78
1323: finished :operator-arglist 
params: nil
[---Sent---] 446.83
(:emacs-rex (swank:operator-arglist "hist-panel" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1324)

[-Received-] 446.83
(:return (:ok nil) 1324)
[Actionlist] 446.83
1324: finished :operator-arglist 
params: nil
[---Sent---] 447.54
(:emacs-rex (swank:operator-arglist "Creates" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1325)

[-Received-] 447.54
(:return (:ok nil) 1325)
[Actionlist] 447.54
1325: finished :operator-arglist 
params: nil
[---Sent---] 447.55
(:emacs-rex (swank:operator-arglist "Creates" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1326)

[-Received-] 447.55
(:return (:ok nil) 1326)
[Actionlist] 447.55
1326: finished :operator-arglist 
params: nil
[---Sent---] 447.64
(:emacs-rex (swank:operator-arglist "Creates" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1327)

[-Received-] 447.64
(:return (:ok nil) 1327)
[Actionlist] 447.64
1327: finished :operator-arglist 
params: nil
[---Sent---] 447.71
(:emacs-rex (swank:operator-arglist "Creates" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1328)

[-Received-] 447.71
(:return (:ok nil) 1328)
[Actionlist] 447.71
1328: finished :operator-arglist 
params: nil
[---Sent---] 447.76
(:emacs-rex (swank:operator-arglist "Creates" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1329)

[-Received-] 447.82
(:return (:ok nil) 1329)
[Actionlist] 447.82
1329: finished :operator-arglist 
params: nil
[---Sent---] 447.82
(:emacs-rex (swank:operator-arglist "Creates" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1330)

[-Received-] 447.83
(:return (:ok nil) 1330)
[Actionlist] 447.83
1330: finished :operator-arglist 
params: nil
[---Sent---] 447.88
(:emacs-rex (swank:operator-arglist "Creates" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1331)

[-Received-] 447.88
(:return (:ok nil) 1331)
[Actionlist] 447.88
1331: finished :operator-arglist 
params: nil
[---Sent---] 447.94
(:emacs-rex (swank:operator-arglist "Creates" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1332)

[-Received-] 447.94
(:return (:ok nil) 1332)
[Actionlist] 447.94
1332: finished :operator-arglist 
params: nil
[---Sent---] 448.0
(:emacs-rex (swank:operator-arglist "Creates" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1333)

[-Received-] 448.0
(:return (:ok nil) 1333)
[Actionlist] 448.0
1333: finished :operator-arglist 
params: nil
[---Sent---] 448.02
(:emacs-rex (swank:operator-arglist "Creates" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1334)

[-Received-] 448.02
(:return (:ok nil) 1334)
[Actionlist] 448.02
1334: finished :operator-arglist 
params: nil
[---Sent---] 448.77
(:emacs-rex (swank:operator-arglist "Add" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1335)

[-Received-] 448.77
(:return (:ok nil) 1335)
[Actionlist] 448.77
1335: finished :operator-arglist 
params: nil
[---Sent---] 448.8
(:emacs-rex (swank:operator-arglist "Add" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1336)

[-Received-] 448.8
(:return (:ok nil) 1336)
[Actionlist] 448.8
1336: finished :operator-arglist 
params: nil
[---Sent---] 448.83
(:emacs-rex (swank:operator-arglist "Add" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1337)

[-Received-] 448.84
(:return (:ok nil) 1337)
[Actionlist] 448.84
1337: finished :operator-arglist 
params: nil
[---Sent---] 448.89
(:emacs-rex (swank:operator-arglist "Add" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1338)

[-Received-] 448.89
(:return (:ok nil) 1338)
[Actionlist] 448.89
1338: finished :operator-arglist 
params: nil
[---Sent---] 448.93
(:emacs-rex (swank:operator-arglist "Add" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1339)

[-Received-] 448.93
(:return (:ok nil) 1339)
[Actionlist] 448.93
1339: finished :operator-arglist 
params: nil
[---Sent---] 449.85
(:emacs-rex (swank:operator-arglist "Hello" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1340)

[-Received-] 449.86
(:return (:ok nil) 1340)
[Actionlist] 449.86
1340: finished :operator-arglist 
params: nil
[---Sent---] 450.5
(:emacs-rex (swank:operator-arglist ":content" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1341)

[-Received-] 450.5
(:return (:ok "([map])") 1341)
[Actionlist] 450.5
1341: finished :operator-arglist 
params: "([map])"
[---Sent---] 450.5
(:emacs-rex (swank:describe-function ":content") "image-processing.hist-view-gui" t 1342)

[-Received-] 450.5
(:return (:ok nil) 1342)
[Actionlist] 450.5
1342: finished :describe-function 
params: nil
[---Sent---] 450.57
(:emacs-rex (swank:operator-arglist "previous-imgs" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1343)

[-Received-] 450.57
(:return (:ok nil) 1343)
[Actionlist] 450.57
1343: finished :operator-arglist 
params: nil
[---Sent---] 450.86
(:emacs-rex (swank:operator-arglist "test/image_processing/test/1azc" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1344)

[---Sent---] 453.79
(:emacs-rex (swank:operator-arglist "test/image_processing/test/1a7r" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1345)

[---Sent---] 483.43
(:emacs-rex (swank:connection-info) nil t 1346)

[-Received-] 483.53
(:indentation-update (("dothread-keeping-clj" . 1) ("dothread-keeping" . 1) ("dothread" . 0) ("binding-map" . 1) ("print-length-loop" . 1) ("with-pretty-writer" . 1) ("with-pprint-dispatch" . 1) ("with-connection" . 1) ("with-bindings" . 0) ("with-emacs-package" . 0) ("dothread-swank" . 0) ("with-read-line-support" . 0) ("with-package-tracking" . 0) ("doseq" . 1) ("letfn" . 1) ("cond" . 0) ("with-open" . 1) ("sync" . 1) ("let" . 1) ("dotimes" . 1) ("with-in-str" . 1) ("loop" . 1) ("with-out-str" . 0) ("when-not" . 1) ("with-loading-context" . 0) ("future" . 0) ("with-redefs" . 1) ("when-first" . 1) ("comment" . 0) ("condp" . 2) ("with-local-vars" . 1) ("with-bindings" . 1) ("when-let" . 1) ("while" . 1) ("case" . 1) ("locking" . 1) ("delay" . 0) ("io!" . 0) ("lazy-seq" . 0) ("when" . 1) ("binding" . 1) ("defslimefn" . defun) ("returning" . 1) ("continuously" . 0) ("failing-gracefully" . 0)))
[-Received-] 483.53
(:return (:ok (:pid "9609" :style :spawn :lisp-implementation (:type "Clojure" :name "clojure" :version "1.3.0") :package (:name "user" :prompt "user") :version "20100404")) 1346)
[Actionlist] 483.53
1346: finished :connection-info 
params: [':pid', '"9609"', ':style', ':spawn', ':lisp-implementation', [':type', '"Clojure"', ':name', '"clojure"', ':version', '"1.3.0"'], ':package', [':name', '"user"', ':prompt', '"user"'], ':version', '"20100404"']
 Package:user Prompt:user
[---Sent---] 483.59
(:emacs-rex (swank:create-repl nil) "image-processing.hist-view-gui" t 1347)

[-Received-] 483.6
(:return (:ok ("user" "user")) 1347)
[Actionlist] 483.6
1347: finished :create-repl 
params: ['"user"', '"user"']
[---Sent---] 483.6
(:emacs-rex (swank:swank-require 'swank-fuzzy) nil t 1348)

[---Sent---] 483.66
(:emacs-rex (swank:listener-eval "(use '[clojure.repl :only (source apropos dir pst doc find-doc)])
(use '[clojure.java.javadoc :only (javadoc)])
(use '[clojure.pprint :only (pp pprint)])
") "image-processing.hist-view-gui" :repl-thread 1349)

[---Sent---] 483.73
(:emacs-rex (swank:listener-eval "(ns image-processing.hist-view-gui
    (:import 
      (javax.imageio ImageIO) 
      (java.io File)
      (java.awt.image BufferedImage)) 
    (:use 
      [clojure.java.io] 
      [seesaw core make-widget border]))


(defn create-hist-panel
  \"Creates and returns a grid-panel and a button-group. The default number
      of columns is 3.\"
      #^{:arglists [buff-imgs n-columns]}
      ([buff-imgs] (create-hist-panel buff-imgs 3)) 
      ([buff-imgs n-columns]
       (let [img-group (button-group)
             hist-panel (grid-panel
                          :border 5
                          :hgap 10 :vgap 10
                          :columns n-columns)]
         [hist-panel img-group])))


(defn create-radio-img
  \"Creates a horizontal-panel with a radio button and a BufferedImage.\"
  #^{:arglists [buff-img img-group]}
  [buff-img img-group]
  (horizontal-panel
    ;; The image's path can be retrieved by the user-data of the radio
    ;; button.
    :items [(radio :group img-group :user-data buff-img) (label :icon buff-img)]))


(defn add-imgs
  \"Add images to hist-panel.\"
  #^{:arglists [hist-panel img-group & buff-imgs]}
  [hist-panel img-group & buff-imgs]
  (let [previous-imgs (vec (config hist-panel :items))]
    (config! hist-panel :items (reduce #(conj %1 (create-radio-img img-group %2))
                                       previous-imgs
                                       buff-imgs))))


(def x (map #(ImageIO/read (File. %)) 
            '(\"test/image_processing/test/1a7r.gif\" 
              \"test/image_processing/test/1azc.gif\")))

(defn create-frame [hist-panel] 
  (-> (frame :title \"Hello\",
             :content  hist-panel)
      ;:on-close :exit)
      pack!
      show!)) 

") "user" :repl-thread 1350)

[-Received-] 483.81
(:write-string "nil
" :repl-result)
[-Received-] 483.85
(:indentation-update (("with-timeout" . 1) ("with-bindings" . 0)))
[-Received-] 483.85
(:return (:ok nil) 1349)
[Actionlist] 483.85
1348: pending  :swank-require 
1349: finished :listener-eval 
1350: pending  :listener-eval 
params: nil
[-Received-] 483.97
(:indentation-update (("with-timeout" . 1) ("with-bindings" . 0)))
[-Received-] 483.97
(:return (:ok nil) 1348)
[Actionlist] 483.97
1348: finished :swank-require 
1350: pending  :listener-eval 
params: nil
[-Received-] 484.41
(:write-string "#'image-processing.hist-view-gui/create-frame
" :repl-result)
[-Received-] 484.42
(:new-package "image-processing.hist-view-gui" "image-processing.hist-view-gui")
[-Received-] 484.42
(:indentation-update (("with-bindings" . 1) ("with-widgets" . 1) ("invoke-now" . 0) ("invoke-soon" . 0) ("signaller" . 1) ("invoke-later" . 0)))
[-Received-] 484.42
(:return (:ok nil) 1350)
[Actionlist] 484.42
1350: finished :listener-eval 
params: nil
[---Sent---] 484.6
(:emacs-rex (swank:operator-arglist "seesaw" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1351)

[-Received-] 484.6
(:return (:ok nil) 1351)
[Actionlist] 484.61
1351: finished :operator-arglist 
params: nil
[---Sent---] 485.0
(:emacs-rex (swank:listener-eval "(ns image-processing.hist-view-gui
    (:import 
      (javax.imageio ImageIO) 
      (java.io File)
      (java.awt.image BufferedImage)) 
    (:use 
      [clojure.java.io] 
      [seesaw core make-widget borderf dev]))
") "image-processing.hist-view-gui" :repl-thread 1352)

[-Received-] 485.04
(:debug 1 1 ("Could not locate seesaw/borderf__init.class or seesaw/borderf.clj on classpath: " "  [Thrown class java.io.FileNotFoundException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "        RT.java:430 clojure.lang.RT.load" (:restartable nil)) (1 "        RT.java:398 clojure.lang.RT.load" (:restartable nil)) (2 "      core.clj:5386 clojure.core/load[fn]" (:restartable nil)) (3 "      core.clj:5385 clojure.core/load" (:restartable nil)) (4 "    RestFn.java:408 clojure.lang.RestFn.invoke" (:restartable nil)) (5 "      core.clj:5200 clojure.core/load-one" (:restartable nil)) (6 "      core.clj:5237 clojure.core/load-lib" (:restartable nil)) (7 "    RestFn.java:142 clojure.lang.RestFn.applyTo" (:restartable nil)) (8 "       core.clj:602 clojure.core/apply" (:restartable nil)) (9 "      core.clj:5275 clojure.core/load-libs" (:restartable nil))) (nil))
[-Received-] 485.05
(:debug-activate 1 1 nil)
[---Sent---] 485.23
(:emacs-rex (swank:throw-to-toplevel) nil 1 1353)

[-Received-] 485.24
(:return (:abort) 1353)
[Actionlist] 485.24
1352: pending  :listener-eval 
1353: finished :throw-to-toplevel 
[-Received-] 485.25
(:debug-return 1 1 nil)
[-Received-] 485.25
(:return (:abort) 1352)
[Actionlist] 485.25
1352: finished :listener-eval 
1353: finished :throw-to-toplevel 
[---Sent---] 485.49
(:emacs-rex (swank:listener-eval "(ns image-processing.hist-view-gui
    (:import 
      (javax.imageio ImageIO) 
      (java.io File)
      (java.awt.image BufferedImage)) 
    (:use 
      [clojure.java.io] 
      [seesaw core make-widget dev]))
") "image-processing.hist-view-gui" :repl-thread 1354)

[-Received-] 485.53
(:write-string "nil
" :repl-result)
[-Received-] 485.53
(:indentation-update (("with-bindings" . 0)))
[-Received-] 485.53
(:return (:ok nil) 1354)
[Actionlist] 485.53
1354: finished :listener-eval 
params: nil
[---Sent---] 485.81
(:emacs-rex (swank:operator-arglist "def" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1355)

[-Received-] 485.82
(:return (:ok nil) 1355)
[Actionlist] 485.82
1355: finished :operator-arglist 
params: nil
[---Sent---] 485.88
(:emacs-rex (swank:operator-arglist "def" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1356)

[-Received-] 485.88
(:return (:ok nil) 1356)
[Actionlist] 485.88
1356: finished :operator-arglist 
params: nil
[---Sent---] 486.3
(:emacs-rex (swank:operator-arglist "create-hist-panel" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1357)

[-Received-] 486.3
(:return (:ok "([buff-imgs] [buff-imgs n-columns])") 1357)
[Actionlist] 486.3
1357: finished :operator-arglist 
params: "([buff-imgs] [buff-imgs n-columns])"
[---Sent---] 486.85
(:emacs-rex (swank:listener-eval "(defn create-hist-panel
  \"Creates and returns a grid-panel and a button-group. The default number
      of columns is 3.\"
      #^{:arglists [n-columns]}
      ([] (create-hist-panel 3)) 
      ([n-columns]
       (let [img-group (button-group)
             hist-panel (grid-panel
                          :border 5
                          :hgap 10 :vgap 10
                          :columns n-columns)]
         [hist-panel img-group])))
") "image-processing.hist-view-gui" :repl-thread 1358)

[-Received-] 486.85
(:write-string "#'image-processing.hist-view-gui/create-hist-panel
" :repl-result)
[-Received-] 486.85
(:return (:ok nil) 1358)
[Actionlist] 486.85
1358: finished :listener-eval 
params: nil
[---Sent---] 487.35
(:emacs-rex (swank:operator-arglist "def" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1359)

[-Received-] 487.35
(:return (:ok nil) 1359)
[Actionlist] 487.35
1359: finished :operator-arglist 
params: nil
[---Sent---] 487.4
(:emacs-rex (swank:operator-arglist "def" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1360)

[-Received-] 487.4
(:return (:ok nil) 1360)
[Actionlist] 487.4
1360: finished :operator-arglist 
params: nil
[---Sent---] 487.52
(:emacs-rex (swank:fuzzy-completions "crea" "image-processing.hist-view-gui" :limit 200 :time-limit-in-msec 2000) nil t 1361)

[-Received-] 487.53
(:return (:ok ((("create-frame" "40.46" ((0 "crea")) "-f------") ("create-radio-img" "40.11" ((0 "crea")) "-f------") ("create-hist-panel" "40.06" ((0 "crea")) "-f------") ("clojure.main/" "15.16" ((0 "c") (5 "re") (9 "a")) "b------p") ("clojure.walk/" "15.16" ((0 "c") (5 "re") (9 "a")) "b------p") ("clojure.java.io/" "14.88" ((0 "c") (5 "re") (9 "a")) "b------p") ("swank.core.threadmap/" "14.82" ((6 "c") (13 "rea")) "b------p") ("clojure.java.shell/" "14.72" ((0 "c") (5 "re") (9 "a")) "b------p") ("clojure.java.browse/" "14.68" ((0 "c") (5 "re") (9 "a")) "b------p") ("clojure.java.javadoc/" "14.64" ((0 "c") (5 "re") (9 "a")) "b------p") ("swank.util.concurrent.thread/" "14.63" ((11 "c") (24 "rea")) "b------p") ("clojure.contrib.macro-utils/" "14.47" ((0 "c") (5 "re") (17 "a")) "b------p") ("swank.core.debugger-backends/" "12.45" ((6 "c") (8 "re") (21 "a")) "b------p") ("swank.clj-contrib.macroexpand/" "5.43" ((20 "cr") (23 "e") (26 "a")) "b------p") ("swank.util.clj-stacktrace-compat/" "3.34" ((21 "r") (24 "e") (30 "a")) "b------p")) nil)) 1361)
[Actionlist] 487.53
1361: finished :fuzzy-completions 
params: [[['"create-frame"', '"40.46"', [['0', '"crea"']], '"-f------"'], ['"create-radio-img"', '"40.11"', [['0', '"crea"']], '"-f------"'], ['"create-hist-panel"', '"40.06"', [['0', '"crea"']], '"-f------"'], ['"clojure.main/"', '"15.16"', [['0', '"c"'], ['5', '"re"'], ['9', '"a"']], '"b------p"'], ['"clojure.walk/"', '"15.16"', [['0', '"c"'], ['5', '"re"'], ['9', '"a"']], '"b------p"'], ['"clojure.java.io/"', '"14.88"', [['0', '"c"'], ['5', '"re"'], ['9', '"a"']], '"b------p"'], ['"swank.core.threadmap/"', '"14.82"', [['6', '"c"'], ['13', '"rea"']], '"b------p"'], ['"clojure.java.shell/"', '"14.72"', [['0', '"c"'], ['5', '"re"'], ['9', '"a"']], '"b------p"'], ['"clojure.java.browse/"', '"14.68"', [['0', '"c"'], ['5', '"re"'], ['9', '"a"']], '"b------p"'], ['"clojure.java.javadoc/"', '"14.64"', [['0', '"c"'], ['5', '"re"'], ['9', '"a"']], '"b------p"'], ['"swank.util.concurrent.thread/"', '"14.63"', [['11', '"c"'], ['24', '"rea"']], '"b------p"'], ['"clojure.contrib.macro-utils/"', '"14.47"', [['0', '"c"'], ['5', '"re"'], ['17', '"a"']], '"b------p"'], ['"swank.core.debugger-backends/"', '"12.45"', [['6', '"c"'], ['8', '"re"'], ['21', '"a"']], '"b------p"'], ['"swank.clj-contrib.macroexpand/"', '"5.43"', [['20', '"cr"'], ['23', '"e"'], ['26', '"a"']], '"b------p"'], ['"swank.util.clj-stacktrace-compat/"', '"3.34"', [['21', '"r"'], ['24', '"e"'], ['30', '"a"']], '"b------p"']], 'nil']
[---Sent---] 487.67
(:emacs-rex (swank:operator-arglist "create-hist-panel" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1362)

[-Received-] 487.68
(:return (:ok "([] [n-columns])") 1362)
[Actionlist] 487.68
1362: finished :operator-arglist 
params: "([] [n-columns])"
[---Sent---] 487.78
(:emacs-rex (swank:listener-eval "(def z (create-hist-panel 3))
") "image-processing.hist-view-gui" :repl-thread 1363)

[-Received-] 487.87
(:write-string "#'image-processing.hist-view-gui/z
" :repl-result)
[-Received-] 487.87
(:return (:ok nil) 1363)
[Actionlist] 487.87
1363: finished :listener-eval 
params: nil
[---Sent---] 488.02
(:emacs-rex (swank:listener-eval "z 
") "image-processing.hist-view-gui" :repl-thread 1364)

[-Received-] 488.02
(:write-string "[#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,0,0,0x0,invalid,layout=java.awt.GridLayout,alignmentX=0.0,alignmentY=0.0,border=javax.swing.border.EmptyBorder@665b29,flags=9,maximumSize=,minimumSize=,preferredSize=]> #<ButtonGroup javax.swing.ButtonGroup@1eafca5>]
" :repl-result)
[-Received-] 488.02
(:return (:ok nil) 1364)
[Actionlist] 488.02
1364: finished :listener-eval 
params: nil
[---Sent---] 488.38
(:emacs-rex (swank:operator-arglist "add-imgs" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1365)

[-Received-] 488.38
(:return (:ok "([hist-panel img-group & buff-imgs])") 1365)
[Actionlist] 488.38
1365: finished :operator-arglist 
params: "([hist-panel img-group & buff-imgs])"
[---Sent---] 488.61
(:emacs-rex (swank:operator-arglist "first" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1366)

[-Received-] 488.61
(:return (:ok "([coll])") 1366)
[Actionlist] 488.61
1366: finished :operator-arglist 
params: "([coll])"
[---Sent---] 488.94
(:emacs-rex (swank:operator-arglist "second" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1367)

[-Received-] 488.94
(:return (:ok "([x])") 1367)
[Actionlist] 488.94
1367: finished :operator-arglist 
params: "([x])"
[---Sent---] 489.24
(:emacs-rex (swank:operator-arglist "first" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1368)

[-Received-] 489.24
(:return (:ok "([coll])") 1368)
[Actionlist] 489.24
1368: finished :operator-arglist 
params: "([coll])"
[---Sent---] 489.35
(:emacs-rex (swank:listener-eval "(add-imgs (first z) (second z) (first x))
") "image-processing.hist-view-gui" :repl-thread 1369)

[-Received-] 489.42
(:debug 1 1 ("java.awt.image.BufferedImage cannot be cast to javax.swing.ButtonGroup" "  [Thrown class java.lang.ClassCastException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "         core.clj:1226 seesaw.core/fn" (:restartable nil)) (1 "       options.clj:114 seesaw.options/apply-option" (:restartable nil)) (2 "       options.clj:129 seesaw.options/apply-options*" (:restartable nil)) (3 "       options.clj:136 seesaw.options/apply-options" (:restartable nil)) (4 "         core.clj:1297 seesaw.core/radio" (:restartable nil)) (5 "       RestFn.java:457 clojure.lang.RestFn.invoke" (:restartable nil)) (6 "      NO_SOURCE_FILE:1 image-processing.hist-view-gui/create-radio-img" (:restartable nil)) (7 "      NO_SOURCE_FILE:1 image-processing.hist-view-gui/add-imgs[fn]" (:restartable nil)) (8 "      protocols.clj:51 clojure.core.protocols/fn" (:restartable nil)) (9 "      protocols.clj:11 clojure.core.protocols/fn[fn]" (:restartable nil))) (nil))
[-Received-] 489.43
(:debug-activate 1 1 nil)
[---Sent---] 489.67
(:emacs-rex (swank:throw-to-toplevel) nil 1 1370)

[-Received-] 489.67
(:return (:abort) 1370)
[Actionlist] 489.67
1369: pending  :listener-eval 
1370: finished :throw-to-toplevel 
[-Received-] 489.67
(:debug-return 1 1 nil)
[-Received-] 489.67
(:return (:abort) 1369)
[Actionlist] 489.67
1369: finished :listener-eval 
1370: finished :throw-to-toplevel 
[---Sent---] 490.33
(:emacs-rex (swank:operator-arglist "first" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1371)

[-Received-] 490.34
(:return (:ok "([coll])") 1371)
[Actionlist] 490.34
1371: finished :operator-arglist 
params: "([coll])"
[---Sent---] 490.42
(:emacs-rex (swank:listener-eval "(first z)
") "image-processing.hist-view-gui" :repl-thread 1372)

[-Received-] 490.42
(:write-string "#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,0,0,0x0,invalid,layout=java.awt.GridLayout,alignmentX=0.0,alignmentY=0.0,border=javax.swing.border.EmptyBorder@665b29,flags=9,maximumSize=,minimumSize=,preferredSize=]>
" :repl-result)
[-Received-] 490.43
(:return (:ok nil) 1372)
[Actionlist] 490.43
1372: finished :listener-eval 
params: nil
[---Sent---] 490.85
(:emacs-rex (swank:listener-eval "(second z)
") "image-processing.hist-view-gui" :repl-thread 1373)

[-Received-] 490.85
(:write-string "#<ButtonGroup javax.swing.ButtonGroup@1eafca5>
" :repl-result)
[-Received-] 490.85
(:return (:ok nil) 1373)
[Actionlist] 490.85
1373: finished :listener-eval 
params: nil
[---Sent---] 491.36
(:emacs-rex (swank:operator-arglist "create-radio-img" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1374)

[-Received-] 491.36
(:return (:ok "([buff-img img-group])") 1374)
[Actionlist] 491.36
1374: finished :operator-arglist 
params: "([buff-img img-group])"
[---Sent---] 491.62
(:emacs-rex (swank:listener-eval "(defn add-imgs
  \"Add images to hist-panel.\"
  #^{:arglists [hist-panel img-group & buff-imgs]}
  [hist-panel img-group & buff-imgs]
  (let [previous-imgs (vec (config hist-panel :items))]
    (config! hist-panel :items (reduce #(conj %1 (create-radio-img %2 img-group))
                                       previous-imgs
                                       buff-imgs))))
") "image-processing.hist-view-gui" :repl-thread 1375)

[-Received-] 491.62
(:write-string "#'image-processing.hist-view-gui/add-imgs
" :repl-result)
[-Received-] 491.62
(:return (:ok nil) 1375)
[Actionlist] 491.62
1375: finished :listener-eval 
params: nil
[---Sent---] 491.9
(:emacs-rex (swank:listener-eval "(add-imgs (first z) (second z) (first x))
") "image-processing.hist-view-gui" :repl-thread 1376)

[-Received-] 491.98
(:write-string "#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,0,0,0x0,invalid,layout=java.awt.GridLayout,alignmentX=0.0,alignmentY=0.0,border=javax.swing.border.EmptyBorder@665b29,flags=9,maximumSize=,minimumSize=,preferredSize=]>
" :repl-result)
[-Received-] 491.98
(:return (:ok nil) 1376)
[Actionlist] 491.98
1376: finished :listener-eval 
params: nil
[---Sent---] 492.35
(:emacs-rex (swank:fuzzy-completions "create-fr" "image-processing.hist-view-gui" :limit 200 :time-limit-in-msec 2000) nil t 1377)

[-Received-] 492.36
(:return (:ok ((("create-frame" "107.47" ((0 "create-fr")) "-f------")) nil)) 1377)
[Actionlist] 492.36
1377: finished :fuzzy-completions 
params: [[['"create-frame"', '"107.47"', [['0', '"create-fr"']], '"-f------"']], 'nil']
[---Sent---] 492.38
(:emacs-rex (swank:operator-arglist "create-frame" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1378)

[-Received-] 492.38
(:return (:ok "([hist-panel])") 1378)
[Actionlist] 492.38
1378: finished :operator-arglist 
params: "([hist-panel])"
[---Sent---] 492.48
(:emacs-rex (swank:listener-eval "(create-frame z) 
") "image-processing.hist-view-gui" :repl-thread 1379)

[-Received-] 492.55
(:debug 1 1 ("contentPane cannot be set to null." "  [Thrown class java.awt.IllegalComponentStateException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "    JRootPane.java:620 javax.swing.JRootPane.setContentPane" (:restartable nil)) (1 "       JFrame.java:693 javax.swing.JFrame.setContentPane" (:restartable nil)) (2 "      (Unknown Source) seesaw.core.proxy$javax.swing.JFrame$Tag$a79ba523.setContentPane" (:restartable nil)) (3 "         core.clj:2576 seesaw.core/fn" (:restartable nil)) (4 "       options.clj:114 seesaw.options/apply-option" (:restartable nil)) (5 "       options.clj:129 seesaw.options/apply-options*" (:restartable nil)) (6 "       options.clj:136 seesaw.options/apply-options" (:restartable nil)) (7 "         core.clj:2776 seesaw.core/frame" (:restartable nil)) (8 "       RestFn.java:457 clojure.lang.RestFn.invoke" (:restartable nil)) (9 "      NO_SOURCE_FILE:1 image-processing.hist-view-gui/create-frame" (:restartable nil))) (nil))
[-Received-] 492.57
(:debug-activate 1 1 nil)
[---Sent---] 492.77
(:emacs-rex (swank:throw-to-toplevel) nil 1 1380)

[-Received-] 492.77
(:return (:abort) 1380)
[Actionlist] 492.77
1379: pending  :listener-eval 
1380: finished :throw-to-toplevel 
[-Received-] 492.77
(:debug-return 1 1 nil)
[-Received-] 492.77
(:return (:abort) 1379)
[Actionlist] 492.77
1379: finished :listener-eval 
1380: finished :throw-to-toplevel 
[---Sent---] 492.96
(:emacs-rex (swank:listener-eval "z
") "image-processing.hist-view-gui" :repl-thread 1381)

[-Received-] 492.96
(:write-string "[#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,0,0,0x0,invalid,layout=java.awt.GridLayout,alignmentX=0.0,alignmentY=0.0,border=javax.swing.border.EmptyBorder@665b29,flags=9,maximumSize=,minimumSize=,preferredSize=]> #<ButtonGroup javax.swing.ButtonGroup@1eafca5>]
" :repl-result)
[-Received-] 492.96
(:return (:ok nil) 1381)
[Actionlist] 492.96
1381: finished :listener-eval 
params: nil
[---Sent---] 493.21
(:emacs-rex (swank:operator-arglist "frame" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1382)

[-Received-] 493.21
(:return (:ok "([& {:keys [width height visible? size], :as opts}])") 1382)
[Actionlist] 493.22
1382: finished :operator-arglist 
params: "([& {:keys [width height visible? size], :as opts}])"
[---Sent---] 493.23
(:emacs-rex (swank:describe-function "frame") "image-processing.hist-view-gui" t 1383)

[-Received-] 493.23
(:return (:ok "-------------------------
seesaw.core/frame
([& {:keys [width height visible? size], :as opts}])
  Create a JFrame. Options:

    :id       id of the window, used by (select).
    :title    the title of the window
    :icon     the icon of the frame (varies by platform)
    :width    initial width. Note that calling (pack!) will negate this setting
    :height   initial height. Note that calling (pack!) will negate this setting
    :size     initial size. Note that calling (pack!) will negate this setting
    :minimum-size minimum size of frame, e.g. [640 :by 480]
    :content  passed through (make-widget) and used as the frame's content-pane
    :visible?  whether frame should be initially visible (default false)
    :resizable? whether the frame can be resized (default true)
    :on-close   default close behavior. One of :exit, :hide, :dispose, :nothing

  returns the new frame.

  Examples:

    ; Create a frame, pack it and show it.
    (-> (frame :title \"HI!\" :content \"I'm a label!\")
      pack!
      show!)

    ; Create a frame with an initial size (note that pack! isn't called)
    (show! (frame :title \"HI!\" :content \"I'm a label!\" :width 500 :height 600))

  Notes:
    Unless :visible? is set to true, the frame will not be displayed until (show!)
    is called on it.

    Call (pack!) on the frame if you'd like the frame to resize itself to fit its
    contents. Sometimes this doesn't look like crap.

  See:
    (seesaw.core/show!)
    (seesaw.core/hide!)
    (seesaw.core/move!)
    http://download.oracle.com/javase/6/docs/api/javax/swing/JFrame.html
  
") 1383)
[Actionlist] 493.23
1383: finished :describe-function 
params: "-------------------------
seesaw.core/frame
([& {:keys [width height visible? size], :as opts}])
  Create a JFrame. Options:

    :id       id of the window, used by (select).
    :title    the title of the window
    :icon     the icon of the frame (varies by platform)
    :width    initial width. Note that calling (pack!) will negate this setting
    :height   initial height. Note that calling (pack!) will negate this setting
    :size     initial size. Note that calling (pack!) will negate this setting
    :minimum-size minimum size of frame, e.g. [640 :by 480]
    :content  passed through (make-widget) and used as the frame's content-pane
    :visible?  whether frame should be initially visible (default false)
    :resizable? whether the frame can be resized (default true)
    :on-close   default close behavior. One of :exit, :hide, :dispose, :nothing

  returns the new frame.

  Examples:

    ; Create a frame, pack it and show it.
    (-> (frame :title \"HI!\" :content \"I'm a label!\")
      pack!
      show!)

    ; Create a frame with an initial size (note that pack! isn't called)
    (show! (frame :title \"HI!\" :content \"I'm a label!\" :width 500 :height 600))

  Notes:
    Unless :visible? is set to true, the frame will not be displayed until (show!)
    is called on it.

    Call (pack!) on the frame if you'd like the frame to resize itself to fit its
    contents. Sometimes this doesn't look like crap.

  See:
    (seesaw.core/show!)
    (seesaw.core/hide!)
    (seesaw.core/move!)
    http://download.oracle.com/javase/6/docs/api/javax/swing/JFrame.html
  
"
[---Sent---] 493.63
(:emacs-rex (swank:listener-eval "(create-frame (first z))
") "image-processing.hist-view-gui" :repl-thread 1384)

[-Received-] 493.72
(:write-string "#<JFrame$Tag$a79ba523 seesaw.core.proxy$javax.swing.JFrame$Tag$a79ba523[frame0,0,31,703x130,layout=java.awt.BorderLayout,title=Hello,resizable,normal,defaultCloseOperation=HIDE_ON_CLOSE,rootPane=javax.swing.JRootPane[,5,25,693x100,layout=javax.swing.JRootPane$RootLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=16777673,maximumSize=,minimumSize=,preferredSize=],rootPaneCheckingEnabled=true]>
" :repl-result)
[-Received-] 493.72
(:return (:ok nil) 1384)
[Actionlist] 493.72
1384: finished :listener-eval 
params: nil
[---Sent---] 494.4
(:emacs-rex (swank:listener-eval "(add-imgs (first z) (second z) (second x))
") "image-processing.hist-view-gui" :repl-thread 1385)

[-Received-] 494.47
(:write-string "#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,0,0,693x100,layout=java.awt.GridLayout,alignmentX=0.0,alignmentY=0.0,border=javax.swing.border.EmptyBorder@665b29,flags=9,maximumSize=,minimumSize=,preferredSize=]>
" :repl-result)
[-Received-] 494.47
(:return (:ok nil) 1385)
[Actionlist] 494.47
1385: finished :listener-eval 
params: nil
[---Sent---] 494.7
(:emacs-rex (swank:listener-eval "(add-imgs (first z) (second z) (second x))
") "image-processing.hist-view-gui" :repl-thread 1386)

[-Received-] 494.77
(:write-string "#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,0,0,693x100,layout=java.awt.GridLayout,alignmentX=0.0,alignmentY=0.0,border=javax.swing.border.EmptyBorder@665b29,flags=9,maximumSize=,minimumSize=,preferredSize=]>
" :repl-result)
[-Received-] 494.77
(:return (:ok nil) 1386)
[Actionlist] 494.77
1386: finished :listener-eval 
params: nil
[---Sent---] 495.32
(:emacs-rex (swank:listener-eval "(add-imgs (first z) (second z) (first x))
") "image-processing.hist-view-gui" :repl-thread 1387)

[-Received-] 495.32
(:write-string "#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,0,0,693x100,invalid,layout=java.awt.GridLayout,alignmentX=0.0,alignmentY=0.0,border=javax.swing.border.EmptyBorder@665b29,flags=268435465,maximumSize=,minimumSize=,preferredSize=]>
" :repl-result)
[-Received-] 495.33
(:return (:ok nil) 1387)
[Actionlist] 495.33
1387: finished :listener-eval 
params: nil
[---Sent---] 495.85
(:emacs-rex (swank:operator-arglist "->" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1388)

[-Received-] 495.85
(:return (:ok "([x] [x form] [x form & more])") 1388)
[Actionlist] 495.85
1388: finished :operator-arglist 
params: "([x] [x form] [x form & more])"
[---Sent---] 496.07
(:emacs-rex (swank:operator-arglist "first" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1389)

[-Received-] 496.07
(:return (:ok "([coll])") 1389)
[Actionlist] 496.08
1389: finished :operator-arglist 
params: "([coll])"
[---Sent---] 496.36
(:emacs-rex (swank:operator-arglist "->" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1390)

[-Received-] 496.36
(:return (:ok "([x] [x form] [x form & more])") 1390)
[Actionlist] 496.36
1390: finished :operator-arglist 
params: "([x] [x form] [x form & more])"
[---Sent---] 496.6
(:emacs-rex (swank:listener-eval "(-> (first z) pack! show!)
") "image-processing.hist-view-gui" :repl-thread 1391)

[-Received-] 496.6
(:write-string "#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,0,0,693x200,layout=java.awt.GridLayout,alignmentX=0.0,alignmentY=0.0,border=javax.swing.border.EmptyBorder@665b29,flags=9,maximumSize=,minimumSize=,preferredSize=]>
" :repl-result)
[-Received-] 496.6
(:return (:ok nil) 1391)
[Actionlist] 496.6
1391: finished :listener-eval 
params: nil
[---Sent---] 496.74
(:emacs-rex (swank:operator-arglist "add-imgs" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1392)

[-Received-] 496.74
(:return (:ok "([hist-panel img-group & buff-imgs])") 1392)
[Actionlist] 496.74
1392: finished :operator-arglist 
params: "([hist-panel img-group & buff-imgs])"
[---Sent---] 496.74
(:emacs-rex (swank:describe-function "add-imgs") "image-processing.hist-view-gui" t 1393)

[-Received-] 496.74
(:return (:ok "-------------------------
image-processing.hist-view-gui/add-imgs
([hist-panel img-group & buff-imgs])
  Add images to hist-panel.
") 1393)
[Actionlist] 496.74
1393: finished :describe-function 
params: "-------------------------
image-processing.hist-view-gui/add-imgs
([hist-panel img-group & buff-imgs])
  Add images to hist-panel.
"
[---Sent---] 497.17
(:emacs-rex (swank:listener-eval "(create-frame (first z))
") "image-processing.hist-view-gui" :repl-thread 1394)

[-Received-] 497.25
(:write-string "#<JFrame$Tag$a79ba523 seesaw.core.proxy$javax.swing.JFrame$Tag$a79ba523[frame1,0,31,703x230,layout=java.awt.BorderLayout,title=Hello,resizable,normal,defaultCloseOperation=HIDE_ON_CLOSE,rootPane=javax.swing.JRootPane[,5,25,693x200,layout=javax.swing.JRootPane$RootLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=16777673,maximumSize=,minimumSize=,preferredSize=],rootPaneCheckingEnabled=true]>
" :repl-result)
[-Received-] 497.25
(:return (:ok nil) 1394)
[Actionlist] 497.25
1394: finished :listener-eval 
params: nil
[---Sent---] 497.46
(:emacs-rex (swank:operator-arglist "buff-imgs" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1395)

[-Received-] 497.46
(:return (:ok nil) 1395)
[Actionlist] 497.46
1395: finished :operator-arglist 
params: nil
[---Sent---] 497.53
(:emacs-rex (swank:operator-arglist "can" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1396)

[-Received-] 497.54
(:return (:ok nil) 1396)
[Actionlist] 497.54
1396: finished :operator-arglist 
params: nil
[---Sent---] 497.85
(:emacs-rex (swank:operator-arglist "frame" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1397)

[-Received-] 497.85
(:return (:ok "([& {:keys [width height visible? size], :as opts}])") 1397)
[Actionlist] 497.86
1397: finished :operator-arglist 
params: "([& {:keys [width height visible? size], :as opts}])"
[---Sent---] 498.16
(:emacs-rex (swank:operator-arglist "frame" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1398)

[-Received-] 498.16
(:return (:ok "([& {:keys [width height visible? size], :as opts}])") 1398)
[Actionlist] 498.16
1398: finished :operator-arglist 
params: "([& {:keys [width height visible? size], :as opts}])"
[---Sent---] 498.16
(:emacs-rex (swank:describe-function "frame") "image-processing.hist-view-gui" t 1399)

[-Received-] 498.16
(:return (:ok "-------------------------
seesaw.core/frame
([& {:keys [width height visible? size], :as opts}])
  Create a JFrame. Options:

    :id       id of the window, used by (select).
    :title    the title of the window
    :icon     the icon of the frame (varies by platform)
    :width    initial width. Note that calling (pack!) will negate this setting
    :height   initial height. Note that calling (pack!) will negate this setting
    :size     initial size. Note that calling (pack!) will negate this setting
    :minimum-size minimum size of frame, e.g. [640 :by 480]
    :content  passed through (make-widget) and used as the frame's content-pane
    :visible?  whether frame should be initially visible (default false)
    :resizable? whether the frame can be resized (default true)
    :on-close   default close behavior. One of :exit, :hide, :dispose, :nothing

  returns the new frame.

  Examples:

    ; Create a frame, pack it and show it.
    (-> (frame :title \"HI!\" :content \"I'm a label!\")
      pack!
      show!)

    ; Create a frame with an initial size (note that pack! isn't called)
    (show! (frame :title \"HI!\" :content \"I'm a label!\" :width 500 :height 600))

  Notes:
    Unless :visible? is set to true, the frame will not be displayed until (show!)
    is called on it.

    Call (pack!) on the frame if you'd like the frame to resize itself to fit its
    contents. Sometimes this doesn't look like crap.

  See:
    (seesaw.core/show!)
    (seesaw.core/hide!)
    (seesaw.core/move!)
    http://download.oracle.com/javase/6/docs/api/javax/swing/JFrame.html
  
") 1399)
[Actionlist] 498.16
1399: finished :describe-function 
params: "-------------------------
seesaw.core/frame
([& {:keys [width height visible? size], :as opts}])
  Create a JFrame. Options:

    :id       id of the window, used by (select).
    :title    the title of the window
    :icon     the icon of the frame (varies by platform)
    :width    initial width. Note that calling (pack!) will negate this setting
    :height   initial height. Note that calling (pack!) will negate this setting
    :size     initial size. Note that calling (pack!) will negate this setting
    :minimum-size minimum size of frame, e.g. [640 :by 480]
    :content  passed through (make-widget) and used as the frame's content-pane
    :visible?  whether frame should be initially visible (default false)
    :resizable? whether the frame can be resized (default true)
    :on-close   default close behavior. One of :exit, :hide, :dispose, :nothing

  returns the new frame.

  Examples:

    ; Create a frame, pack it and show it.
    (-> (frame :title \"HI!\" :content \"I'm a label!\")
      pack!
      show!)

    ; Create a frame with an initial size (note that pack! isn't called)
    (show! (frame :title \"HI!\" :content \"I'm a label!\" :width 500 :height 600))

  Notes:
    Unless :visible? is set to true, the frame will not be displayed until (show!)
    is called on it.

    Call (pack!) on the frame if you'd like the frame to resize itself to fit its
    contents. Sometimes this doesn't look like crap.

  See:
    (seesaw.core/show!)
    (seesaw.core/hide!)
    (seesaw.core/move!)
    http://download.oracle.com/javase/6/docs/api/javax/swing/JFrame.html
  
"
[---Sent---] 498.69
(:emacs-rex (swank:operator-arglist ":columns" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1400)

[-Received-] 498.69
(:return (:ok "([map])") 1400)
[Actionlist] 498.7
1400: finished :operator-arglist 
params: "([map])"
[---Sent---] 498.7
(:emacs-rex (swank:describe-function ":columns") "image-processing.hist-view-gui" t 1401)

[-Received-] 498.7
(:return (:ok nil) 1401)
[Actionlist] 498.7
1401: finished :describe-function 
params: nil
[---Sent---] 499.3
(:emacs-rex (swank:listener-eval "(defn create-hist-panel
  \"Creates and returns a grid-panel and a button-group. The default number
      of columns is 3.\"
      #^{:arglists [n-columns]}
      ([] (create-hist-panel 3)) 
      ([n-columns]
       (let [img-group (button-group)
             hist-panel (scrollable (grid-panel
                                      :border 5
                                      :hgap 10 :vgap 10
                                      :columns n-columns))]
         [hist-panel img-group])))
") "image-processing.hist-view-gui" :repl-thread 1402)

[-Received-] 499.3
(:write-string "#'image-processing.hist-view-gui/create-hist-panel
" :repl-result)
[-Received-] 499.3
(:return (:ok nil) 1402)
[Actionlist] 499.3
1402: finished :listener-eval 
params: nil
[---Sent---] 500.15
(:emacs-rex (swank:listener-eval "(def z (create-hist-panel 3))
") "image-processing.hist-view-gui" :repl-thread 1403)

[-Received-] 500.23
(:write-string "#'image-processing.hist-view-gui/z
" :repl-result)
[-Received-] 500.23
(:return (:ok nil) 1403)
[Actionlist] 500.23
1403: finished :listener-eval 
params: nil
[---Sent---] 500.58
(:emacs-rex (swank:listener-eval "(create-frame (first z))
") "image-processing.hist-view-gui" :repl-thread 1404)

[-Received-] 500.66
(:write-string "#<JFrame$Tag$a79ba523 seesaw.core.proxy$javax.swing.JFrame$Tag$a79ba523[frame2,0,31,43x33,layout=java.awt.BorderLayout,title=Hello,resizable,normal,defaultCloseOperation=HIDE_ON_CLOSE,rootPane=javax.swing.JRootPane[,5,25,33x3,layout=javax.swing.JRootPane$RootLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=16777673,maximumSize=,minimumSize=,preferredSize=],rootPaneCheckingEnabled=true]>
" :repl-result)
[-Received-] 500.66
(:return (:ok nil) 1404)
[Actionlist] 500.67
1404: finished :listener-eval 
params: nil
[---Sent---] 501.13
(:emacs-rex (swank:listener-eval "(add-imgs (first z) (second z) (first x))
") "image-processing.hist-view-gui" :repl-thread 1405)

[-Received-] 501.21
(:debug 1 1 ("class seesaw.core.proxy$javax.swing.JScrollPane$Tag$a79ba523 does not support the :items option" "  [Thrown class java.lang.IllegalArgumentException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "        util.clj:19 seesaw.util/illegal-argument" (:restartable nil)) (1 "    RestFn.java:439 clojure.lang.RestFn.invoke" (:restartable nil)) (2 "    options.clj:122 seesaw.options/lookup-option" (:restartable nil)) (3 "    options.clj:163 seesaw.options/get-option-value" (:restartable nil)) (4 "    options.clj:161 seesaw.options/get-option-value" (:restartable nil)) (5 "       core.clj:880 seesaw.core/eval6153[fn]" (:restartable nil)) (6 "      config.clj:16 seesaw.config/eval2352[fn]" (:restartable nil)) (7 "      config.clj:45 seesaw.config/config" (:restartable nil)) (8 "   NO_SOURCE_FILE:1 image-processing.hist-view-gui/add-imgs" (:restartable nil)) (9 "    RestFn.java:442 clojure.lang.RestFn.invoke" (:restartable nil))) (nil))
[-Received-] 501.22
(:debug-activate 1 1 nil)
[---Sent---] 501.56
(:emacs-rex (swank:throw-to-toplevel) nil 1 1406)

[-Received-] 501.56
(:return (:abort) 1406)
[Actionlist] 501.56
1405: pending  :listener-eval 
1406: finished :throw-to-toplevel 
[-Received-] 501.56
(:debug-return 1 1 nil)
[-Received-] 501.57
(:return (:abort) 1405)
[Actionlist] 501.57
1405: finished :listener-eval 
1406: finished :throw-to-toplevel 
[---Sent---] 501.72
(:emacs-rex (swank:operator-arglist ":hgap" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1407)

[-Received-] 501.72
(:return (:ok "([map])") 1407)
[Actionlist] 501.72
1407: finished :operator-arglist 
params: "([map])"
[---Sent---] 501.72
(:emacs-rex (swank:describe-function ":hgap") "image-processing.hist-view-gui" t 1408)

[-Received-] 501.73
(:return (:ok nil) 1408)
[Actionlist] 501.73
1408: finished :describe-function 
params: nil
[---Sent---] 502.3
(:emacs-rex (swank:listener-eval "(ns image-processing.hist-view-gui
    (:import 
      (javax.imageio ImageIO) 
      (java.io File)
      (java.awt.image BufferedImage)) 
    (:use 
      [clojure.java.io] 
      [seesaw core make-widget dev])) ;; FIXME: remove dev 


(defn create-hist-panel
  \"Creates and returns a grid-panel and a button-group. The default number
      of columns is 3.\"
      #^{:arglists [n-columns]}
      ([] (create-hist-panel 3)) 
      ([n-columns]
       (let [img-group (button-group)
             hist-panel (grid-panel
                          :border 5
                          :hgap 10 :vgap 10
                          :columns n-columns)]
         [hist-panel img-group])))


(defn create-radio-img
  \"Creates a horizontal-panel with a radio button and a BufferedImage.\"
  #^{:arglists [buff-img img-group]}
  [buff-img img-group]
  (horizontal-panel
    ;; The image's path can be retrieved by the user-data of the radio
    ;; button.
    :items [(radio :group img-group :user-data buff-img) (label :icon buff-img)]))


(defn add-imgs
  \"Add images to hist-panel.\"
  #^{:arglists [hist-panel img-group & buff-imgs]}
  [hist-panel img-group & buff-imgs]
  (let [previous-imgs (vec (config hist-panel :items))]
    (config! hist-panel :items (reduce #(conj %1 (create-radio-img %2 img-group))
                                       previous-imgs
                                       buff-imgs))))


(def x (map #(ImageIO/read (File. %)) 
            '(\"test/image_processing/test/1a7r.gif\" 
              \"test/image_processing/test/1azc.gif\")))

(defn create-frame [hist-panel] 
  (-> (frame :title \"Hello\",
             :content  (scrollable hist-panel))
      ;:on-close :exit)
      pack!
      show!)) 

") "image-processing.hist-view-gui" :repl-thread 1409)

[-Received-] 502.37
(:write-string "#'image-processing.hist-view-gui/create-frame
" :repl-result)
[-Received-] 502.37
(:return (:ok nil) 1409)
[Actionlist] 502.37
1409: finished :listener-eval 
params: nil
[---Sent---] 502.68
(:emacs-rex (swank:listener-eval "(def z (create-hist-panel 3))
") "image-processing.hist-view-gui" :repl-thread 1410)

[-Received-] 502.68
(:write-string "#'image-processing.hist-view-gui/z
" :repl-result)
[-Received-] 502.68
(:return (:ok nil) 1410)
[Actionlist] 502.68
1410: finished :listener-eval 
params: nil
[---Sent---] 503.18
(:emacs-rex (swank:listener-eval "(add-imgs (first z) (second z) (first x))
") "image-processing.hist-view-gui" :repl-thread 1411)

[-Received-] 503.26
(:write-string "#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,0,0,0x0,invalid,layout=java.awt.GridLayout,alignmentX=0.0,alignmentY=0.0,border=javax.swing.border.EmptyBorder@1f6d6ca,flags=9,maximumSize=,minimumSize=,preferredSize=]>
" :repl-result)
[-Received-] 503.26
(:return (:ok nil) 1411)
[Actionlist] 503.26
1411: finished :listener-eval 
params: nil
[---Sent---] 503.57
(:emacs-rex (swank:listener-eval "(create-frame (first z))
") "image-processing.hist-view-gui" :repl-thread 1412)

[-Received-] 503.64
(:write-string "#<JFrame$Tag$a79ba523 seesaw.core.proxy$javax.swing.JFrame$Tag$a79ba523[frame3,0,31,706x133,invalid,layout=java.awt.BorderLayout,title=Hello,resizable,normal,defaultCloseOperation=HIDE_ON_CLOSE,rootPane=javax.swing.JRootPane[,5,25,696x103,invalid,layout=javax.swing.JRootPane$RootLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=16777673,maximumSize=,minimumSize=,preferredSize=],rootPaneCheckingEnabled=true]>
" :repl-result)
[-Received-] 503.64
(:return (:ok nil) 1412)
[Actionlist] 503.64
1412: finished :listener-eval 
params: nil
[---Sent---] 504.08
(:emacs-rex (swank:listener-eval "(add-imgs (first z) (second z) (first x))
") "image-processing.hist-view-gui" :repl-thread 1413)

[-Received-] 504.16
(:write-string "#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,0,0,693x100,invalid,layout=java.awt.GridLayout,alignmentX=0.0,alignmentY=0.0,border=javax.swing.border.EmptyBorder@1f6d6ca,flags=9,maximumSize=,minimumSize=,preferredSize=]>
" :repl-result)
[-Received-] 504.16
(:return (:ok nil) 1413)
[Actionlist] 504.16
1413: finished :listener-eval 
params: nil
[---Sent---] 504.87
(:emacs-rex (swank:listener-eval "(add-imgs (first z) (second z) (second x))
") "image-processing.hist-view-gui" :repl-thread 1414)

[-Received-] 504.87
(:write-string "#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,0,0,693x100,layout=java.awt.GridLayout,alignmentX=0.0,alignmentY=0.0,border=javax.swing.border.EmptyBorder@1f6d6ca,flags=9,maximumSize=,minimumSize=,preferredSize=]>
" :repl-result)
[-Received-] 504.87
(:return (:ok nil) 1414)
[Actionlist] 504.87
1414: finished :listener-eval 
params: nil
[---Sent---] 505.08
(:emacs-rex (swank:listener-eval "(add-imgs (first z) (second z) (second x))
") "image-processing.hist-view-gui" :repl-thread 1415)

[-Received-] 505.16
(:write-string "#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,0,0,693x200,layout=java.awt.GridLayout,alignmentX=0.0,alignmentY=0.0,border=javax.swing.border.EmptyBorder@1f6d6ca,flags=9,maximumSize=,minimumSize=,preferredSize=]>
" :repl-result)
[-Received-] 505.16
(:return (:ok nil) 1415)
[Actionlist] 505.16
1415: finished :listener-eval 
params: nil
[---Sent---] 505.54
(:emacs-rex (swank:operator-arglist "%" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1416)

[-Received-] 505.54
(:return (:ok nil) 1416)
[Actionlist] 505.54
1416: finished :operator-arglist 
params: nil
[---Sent---] 508.89
(:emacs-rex (swank:operator-arglist "def" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1423)

[-Received-] 508.9
(:return (:ok nil) 1423)
[Actionlist] 508.9
1423: finished :operator-arglist 
params: nil
[---Sent---] 509.02
(:emacs-rex (swank:operator-arglist "def" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1424)

[-Received-] 509.02
(:return (:ok nil) 1424)
[Actionlist] 509.02
1424: finished :operator-arglist 
params: nil
[---Sent---] 509.25
(:emacs-rex (swank:operator-arglist "def" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1425)

[-Received-] 509.25
(:return (:ok nil) 1425)
[Actionlist] 509.25
1425: finished :operator-arglist 
params: nil
[---Sent---] 509.34
(:emacs-rex (swank:listener-eval "(def [z x] [1 2])
") "image-processing.hist-view-gui" :repl-thread 1426)

[-Received-] 509.34
(:debug 1 1 ("First argument to def must be a Symbol" "  [Thrown class java.lang.RuntimeException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "           Util.java:156 clojure.lang.Util.runtimeException" (:restartable nil)) (1 "       Compiler.java:448 clojure.lang.Compiler$DefExpr$Parser.parse" (:restartable nil)) (2 "      Compiler.java:6409 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (3 "      Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil)) (4 "      Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil)) (5 "      Compiler.java:6469 clojure.lang.Compiler.eval" (:restartable nil)) (6 "      Compiler.java:6431 clojure.lang.Compiler.eval" (:restartable nil)) (7 "           core.clj:2795 clojure.core/eval" (:restartable nil)) (8 "            core.clj:534 swank.core/eval825[fn]" (:restartable nil)) (9 "        MultiFn.java:163 clojure.lang.MultiFn.invoke" (:restartable nil))) (nil))
[---Sent---] 512.81
(:emacs-rex (swank:operator-arglist "map" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1442)

[-Received-] 512.81
(:return (:ok "([f coll] [f c1 c2] [f c1 c2 c3] [f c1 c2 c3 & colls])") 1442)
[Actionlist] 512.81
1442: finished :operator-arglist 
params: "([f coll] [f c1 c2] [f c1 c2 c3] [f c1 c2 c3 & colls])"
[---Sent---] 512.82
(:emacs-rex (swank:describe-function "map") "image-processing.hist-view-gui" t 1443)

[-Received-] 512.82
(:return (:ok "-------------------------
clojure.core/map
([f coll] [f c1 c2] [f c1 c2 c3] [f c1 c2 c3 & colls])
  Returns a lazy sequence consisting of the result of applying f to the
  set of first items of each coll, followed by applying f to the set
  of second items in each coll, until any one of the colls is
  exhausted.  Any remaining items in other colls are ignored. Function
  f should accept number-of-colls arguments.
") 1443)
[Actionlist] 512.82
1443: finished :describe-function 
params: "-------------------------
clojure.core/map
([f coll] [f c1 c2] [f c1 c2 c3] [f c1 c2 c3 & colls])
  Returns a lazy sequence consisting of the result of applying f to the
  set of first items of each coll, followed by applying f to the set
  of second items in each coll, until any one of the colls is
  exhausted.  Any remaining items in other colls are ignored. Function
  f should accept number-of-colls arguments.
"
[---Sent---] 513.86
(:emacs-rex (swank:operator-arglist "[" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1445)

[-Received-] 513.86
(:return (:ok nil) 1445)
[Actionlist] 513.86
1445: finished :operator-arglist 
params: nil
[---Sent---] 513.91
(:emacs-rex (swank:operator-arglist "javax.imageio" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1446)

[-Received-] 513.91
(:return (:ok nil) 1446)
[Actionlist] 513.91
1446: finished :operator-arglist 
params: nil
[---Sent---] 514.53
(:emacs-rex (swank:listener-eval "(ns image-processing.test.hist-view-gui
    (:import
      (javax.imageio ImageIO) 
      (java.io File))
    (:use
      [clojure.test]
      [seesaw core make-widget border]
      [image-processing.hist-view-gui]))

; FIXME: wait for a user action.


(def x (map #(ImageIO/read (File. %)) 
            '(\"test/image_processing/test/1a7r.gif\" 
              \"test/image_processing/test/1azc.gif\")))


(deftest create-frame
         (let [panel-info (create-hist-panel)
               hist-panel (first panel-info)
               img-group (second panel-info)]
           (add-imgs hist-panel img-group (first x) (second x))
           (-> (frame :title \"Hello\",
                      :content  (scrollable hist-panel))
               ;:on-close :exit) 
               pack! 
               show!)))
") "image-processing.test.hist-view-gui" :repl-thread 1448)

[-Received-] 514.6
(:new-package "image-processing.test.hist-view-gui" "image-processing.test.hist-view-gui")
[-Received-] 514.6
(:debug 1 1 ("x already refers to: #'image-processing.hist-view-gui/x in namespace: image-processing.test.hist-view-gui" "  [Thrown class java.lang.IllegalStateException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "       Namespace.java:88 clojure.lang.Namespace.warnOrFailOnReplace" (:restartable nil)) (1 "       Namespace.java:72 clojure.lang.Namespace.intern" (:restartable nil)) (2 "       Compiler.java:456 clojure.lang.Compiler$DefExpr$Parser.parse" (:restartable nil)) (3 "      Compiler.java:6409 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (4 "      Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil)) (5 "      Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil)) (6 "      Compiler.java:6469 clojure.lang.Compiler.eval" (:restartable nil)) (7 "      Compiler.java:6431 clojure.lang.Compiler.eval" (:restartable nil)) (8 "           core.clj:2795 clojure.core/eval" (:restartable nil)) (9 "            core.clj:534 swank.core/eval825[fn]" (:restartable nil))) (nil))
[-Received-] 514.61
(:debug-activate 1 1 nil)
[---Sent---] 514.77
(:emacs-rex (swank:throw-to-toplevel) nil 1 1449)

[-Received-] 514.77
(:return (:abort) 1449)
[Actionlist] 514.77
1448: pending  :listener-eval 
1449: finished :throw-to-toplevel 
[-Received-] 514.77
(:debug-return 1 1 nil)
[-Received-] 514.78
(:return (:abort) 1448)
[Actionlist] 514.78
1448: finished :listener-eval 
1449: finished :throw-to-toplevel 
[---Sent---] 515.42
(:emacs-rex (swank:listener-eval "(ns image-processing.hist-view-gui
    (:import 
      (javax.imageio ImageIO) 
      (java.io File)
      (java.awt.image BufferedImage)) 
    (:use 
      [clojure.java.io] 
      [seesaw core make-widget dev])) ;; FIXME: remove dev 

;; TODO: listen the resize event. change the number of columns according to size.

(defn create-hist-panel
  \"Creates and returns a grid-panel and a button-group. The default number
      of columns is 3.\"
      #^{:arglists [n-columns]}
      ([] (create-hist-panel 3)) 
      ([n-columns]
       (let [img-group (button-group)
             hist-panel (grid-panel
                          :border 5
                          :hgap 10 :vgap 10
                          :columns n-columns)]
         [hist-panel img-group])))


(defn create-radio-img
  \"Creates a horizontal-panel with a radio button and a BufferedImage.\"
  #^{:arglists [buff-img img-group]}
  [buff-img img-group]
  (horizontal-panel
    ;; The image's path can be retrieved by the user-data of the radio
    ;; button.
    :items [(radio :group img-group :user-data buff-img) (label :icon buff-img)]))


(defn add-imgs
  \"Add images to hist-panel.\"
  #^{:arglists [hist-panel img-group & buff-imgs]}
  [hist-panel img-group & buff-imgs]
  (let [previous-imgs (vec (config hist-panel :items))]
    (config! hist-panel :items (reduce #(conj %1 (create-radio-img %2 img-group))
                                       previous-imgs
                                       buff-imgs))))

") "image-processing.test.hist-view-gui" :repl-thread 1450)

[-Received-] 515.42
(:write-string "#'image-processing.hist-view-gui/add-imgs
" :repl-result)
[-Received-] 515.43
(:new-package "image-processing.hist-view-gui" "image-processing.hist-view-gui")
[-Received-] 515.53
(:indentation-update (("deftest-" . 1) ("deftest" . 1) ("testing" . 1) ("with-test-out" . 0) ("set-test" . 1) ("with-test" . 1) ("with-bindings" . 1)))
[-Received-] 515.53
(:return (:ok nil) 1450)
[Actionlist] 515.53
1450: finished :listener-eval 
params: nil
[---Sent---] 515.69
(:emacs-rex (swank:listener-eval "(ns image-processing.test.hist-view-gui
    (:import
      (javax.imageio ImageIO) 
      (java.io File))
    (:use
      [clojure.test]
      [seesaw core make-widget border]
      [image-processing.hist-view-gui]))

; FIXME: wait for a user action.


(def x (map #(ImageIO/read (File. %)) 
            '(\"test/image_processing/test/1a7r.gif\" 
              \"test/image_processing/test/1azc.gif\")))


(deftest create-frame
         (let [panel-info (create-hist-panel)
               hist-panel (first panel-info)
               img-group (second panel-info)]
           (add-imgs hist-panel img-group (first x) (second x))
           (-> (frame :title \"Hello\",
                      :content  (scrollable hist-panel))
               ;:on-close :exit) 
               pack! 
               show!)))
") "image-processing.hist-view-gui" :repl-thread 1451)

[-Received-] 515.76
(:new-package "image-processing.test.hist-view-gui" "image-processing.test.hist-view-gui")
[-Received-] 515.76
(:debug 1 1 ("x already refers to: #'image-processing.hist-view-gui/x in namespace: image-processing.test.hist-view-gui" "  [Thrown class java.lang.IllegalStateException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "       Namespace.java:88 clojure.lang.Namespace.warnOrFailOnReplace" (:restartable nil)) (1 "       Namespace.java:72 clojure.lang.Namespace.intern" (:restartable nil)) (2 "       Compiler.java:456 clojure.lang.Compiler$DefExpr$Parser.parse" (:restartable nil)) (3 "      Compiler.java:6409 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (4 "      Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil)) (5 "      Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil)) (6 "      Compiler.java:6469 clojure.lang.Compiler.eval" (:restartable nil)) (7 "      Compiler.java:6431 clojure.lang.Compiler.eval" (:restartable nil)) (8 "           core.clj:2795 clojure.core/eval" (:restartable nil)) (9 "            core.clj:534 swank.core/eval825[fn]" (:restartable nil))) (nil))
[-Received-] 515.76
(:debug-activate 1 1 nil)
[---Sent---] 515.91
(:emacs-rex (swank:throw-to-toplevel) nil 1 1452)

[-Received-] 515.91
(:return (:abort) 1452)
[Actionlist] 515.91
1451: pending  :listener-eval 
1452: finished :throw-to-toplevel 
[-Received-] 515.92
(:debug-return 1 1 nil)
[-Received-] 515.92
(:return (:abort) 1451)
[Actionlist] 515.92
1451: finished :listener-eval 
1452: finished :throw-to-toplevel 
[---Sent---] 518.17
(:emacs-rex (swank:operator-arglist ":items" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1453)

[-Received-] 518.18
(:indentation-update (("with-bindings" . 0)))
[-Received-] 518.18
(:return (:ok "([map])") 1453)
[Actionlist] 518.18
1453: finished :operator-arglist 
params: "([map])"
[---Sent---] 518.18
(:emacs-rex (swank:describe-function ":items") "image-processing.hist-view-gui" t 1454)

[-Received-] 518.18
(:indentation-update (("with-bindings" . 1)))
[-Received-] 518.19
(:return (:ok nil) 1454)
[Actionlist] 518.19
1454: finished :describe-function 
params: nil
[---Sent---] 518.83
(:emacs-rex (swank:operator-arglist "previous-imgs" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1455)

[-Received-] 518.83
(:indentation-update (("with-bindings" . 0)))
[-Received-] 518.83
(:return (:ok nil) 1455)
[Actionlist] 518.83
1455: finished :operator-arglist 
params: nil
[---Sent---] 518.98
(:emacs-rex (swank:operator-arglist "img-group" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1456)

[-Received-] 518.99
(:indentation-update (("with-bindings" . 1)))
[-Received-] 518.99
(:return (:ok nil) 1456)
[Actionlist] 518.99
1456: finished :operator-arglist 
params: nil
[---Sent---] 519.66
(:emacs-rex (swank:listener-eval "(deftest create-frame
         (let [panel-info (create-hist-panel)
               hist-panel (first panel-info)
               img-group (second panel-info)]
           (add-imgs hist-panel img-group (first x) (second x))
           (-> (frame :title \"Hello\",
                      :content  (scrollable hist-panel))
               ;:on-close :exit) 
               pack! 
               show!))
") "image-processing.test.hist-view-gui" :repl-thread 1457)

[-Received-] 519.66
(:debug 1 1 ("EOF while reading, starting at line 1" "  [Thrown class java.lang.RuntimeException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "      Util.java:156 clojure.lang.Util.runtimeException" (:restartable nil)) (1 "LispReader.java:1117 clojure.lang.LispReader.readDelimitedList" (:restartable nil)) (2 "LispReader.java:962 clojure.lang.LispReader$ListReader.invoke" (:restartable nil)) (3 "LispReader.java:180 clojure.lang.LispReader.read" (:restartable nil)) (4 "      core.clj:3344 clojure.core/read" (:restartable nil)) (5 "      core.clj:3342 clojure.core/read" (:restartable nil)) (6 "       basic.clj:51 swank.commands.basic/eval-region" (:restartable nil)) (7 "       basic.clj:45 swank.commands.basic/eval-region" (:restartable nil)) (8 "       basic.clj:79 swank.commands.basic/eval1101[fn]" (:restartable nil)) (9 "       Var.java:401 clojure.lang.Var.invoke" (:restartable nil))) (nil))
[---Sent---] 519.88
(:emacs-rex (swank:throw-to-toplevel) nil 1 1458)

[-Received-] 519.88
(:return (:abort) 1458)
[Actionlist] 519.88
1457: pending  :listener-eval 
1458: finished :throw-to-toplevel 
[-Received-] 519.88
(:debug-return 1 1 nil)
[-Received-] 519.88
(:return (:abort) 1457)
[Actionlist] 519.88
1457: finished :listener-eval 
1458: finished :throw-to-toplevel 
[---Sent---] 520.36
(:emacs-rex (swank:listener-eval "(ns image-processing.test.hist-view-gui
    (:import
      (javax.imageio ImageIO) 
      (java.io File))
    (:use
      [clojure.test]
      [seesaw core make-widget border]
      [image-processing.hist-view-gui]))

; FIXME: wait for a user action.


(def x (map #(ImageIO/read (File. %)) 
            '(\"test/image_processing/test/1a7r.gif\" 
              \"test/image_processing/test/1azc.gif\")))


(defn create-frame []
  (let [panel-info (create-hist-panel)
        hist-panel (first panel-info)
        img-group (second panel-info)]
    (add-imgs hist-panel img-group (first x) (second x))
    (-> (frame :title \"Hello\",
               :content  (scrollable hist-panel))
        ;:on-close :exit) 
        pack! 
        show!)))
") "image-processing.test.hist-view-gui" :repl-thread 1461)

[-Received-] 520.46
(:debug 1 1 ("x already refers to: #'image-processing.hist-view-gui/x in namespace: image-processing.test.hist-view-gui" "  [Thrown class java.lang.IllegalStateException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "       Namespace.java:88 clojure.lang.Namespace.warnOrFailOnReplace" (:restartable nil)) (1 "       Namespace.java:72 clojure.lang.Namespace.intern" (:restartable nil)) (2 "       Compiler.java:456 clojure.lang.Compiler$DefExpr$Parser.parse" (:restartable nil)) (3 "      Compiler.java:6409 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (4 "      Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil)) (5 "      Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil)) (6 "      Compiler.java:6469 clojure.lang.Compiler.eval" (:restartable nil)) (7 "      Compiler.java:6431 clojure.lang.Compiler.eval" (:restartable nil)) (8 "           core.clj:2795 clojure.core/eval" (:restartable nil)) (9 "            core.clj:534 swank.core/eval825[fn]" (:restartable nil))) (nil))
[-Received-] 520.47
(:debug-activate 1 1 nil)
[---Sent---] 520.62
(:emacs-rex (swank:throw-to-toplevel) nil 1 1462)

[-Received-] 520.62
(:return (:abort) 1462)
[Actionlist] 520.62
1461: pending  :listener-eval 
1462: finished :throw-to-toplevel 
[-Received-] 520.62
(:debug-return 1 1 nil)
[-Received-] 520.62
(:return (:abort) 1461)
[Actionlist] 520.62
1461: finished :listener-eval 
1462: finished :throw-to-toplevel 
[---Sent---] 521.12
(:emacs-rex (swank:listener-eval "(ns image-processing.hist-view-gui
    (:import 
      (javax.imageio ImageIO) 
      (java.io File)
      (java.awt.image BufferedImage)) 
    (:use 
      [clojure.java.io] 
      [seesaw core make-widget dev])) ;; FIXME: remove dev 

;; TODO: listen the resize event. change the number of columns according to size.

(defn create-hist-panel
  \"Creates and returns a grid-panel and a button-group. The default number
      of columns is 3.\"
      #^{:arglists [n-columns]}
      ([] (create-hist-panel 3)) 
      ([n-columns]
       (let [img-group (button-group)
             hist-panel (grid-panel
                          :border 5
                          :hgap 10 :vgap 10
                          :columns n-columns)]
         [hist-panel img-group])))


(defn create-radio-img
  \"Creates a horizontal-panel with a radio button and a BufferedImage.\"
  #^{:arglists [buff-img img-group]}
  [buff-img img-group]
  (horizontal-panel
    ;; The image's path can be retrieved by the user-data of the radio
    ;; button.
    :items [(radio :group img-group :user-data buff-img) (label :icon buff-img)]))


(defn add-imgs
  \"Add images to hist-panel.\"
  #^{:arglists [hist-panel img-group & buff-imgs]}
  [hist-panel img-group & buff-imgs]
  (let [previous-imgs (vec (config hist-panel :items))]
    (config! hist-panel :items (reduce #(conj %1 (create-radio-img %2 img-group))
                                       previous-imgs
                                       buff-imgs))))

") "image-processing.test.hist-view-gui" :repl-thread 1463)

[-Received-] 521.22
(:write-string "#'image-processing.hist-view-gui/add-imgs
" :repl-result)
[-Received-] 521.22
(:new-package "image-processing.hist-view-gui" "image-processing.hist-view-gui")
[-Received-] 521.22
(:indentation-update (("with-bindings" . 0)))
[-Received-] 521.22
(:return (:ok nil) 1463)
[Actionlist] 521.22
1463: finished :listener-eval 
params: nil
[---Sent---] 521.44
(:emacs-rex (swank:listener-eval "(defn create-frame []
  (let [panel-info (create-hist-panel)
        hist-panel (first panel-info)
        img-group (second panel-info)]
    (add-imgs hist-panel img-group (first x) (second x))
    (-> (frame :title \"Hello\",
               :content  (scrollable hist-panel))
        ;:on-close :exit) 
        pack! 
        show!))
") "image-processing.test.hist-view-gui" :repl-thread 1464)

[-Received-] 521.45
(:debug 1 1 ("EOF while reading, starting at line 1" "  [Thrown class java.lang.RuntimeException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "      Util.java:156 clojure.lang.Util.runtimeException" (:restartable nil)) (1 "LispReader.java:1117 clojure.lang.LispReader.readDelimitedList" (:restartable nil)) (2 "LispReader.java:962 clojure.lang.LispReader$ListReader.invoke" (:restartable nil)) (3 "LispReader.java:180 clojure.lang.LispReader.read" (:restartable nil)) (4 "      core.clj:3344 clojure.core/read" (:restartable nil)) (5 "      core.clj:3342 clojure.core/read" (:restartable nil)) (6 "       basic.clj:51 swank.commands.basic/eval-region" (:restartable nil)) (7 "       basic.clj:45 swank.commands.basic/eval-region" (:restartable nil)) (8 "       basic.clj:79 swank.commands.basic/eval1101[fn]" (:restartable nil)) (9 "       Var.java:401 clojure.lang.Var.invoke" (:restartable nil))) (nil))
[---Sent---] 521.8
(:emacs-rex (swank:throw-to-toplevel) nil 1 1465)

[-Received-] 521.8
(:return (:abort) 1465)
[Actionlist] 521.8
1464: pending  :listener-eval 
1465: finished :throw-to-toplevel 
[-Received-] 521.8
(:debug-return 1 1 nil)
[-Received-] 521.8
(:return (:abort) 1464)
[Actionlist] 521.8
1464: finished :listener-eval 
1465: finished :throw-to-toplevel 
[---Sent---] 522.17
(:emacs-rex (swank:listener-eval "(defn create-frame []
  (let [panel-info (create-hist-panel)
        hist-panel (first panel-info)
        img-group (second panel-info)]
    (add-imgs hist-panel img-group (first x) (second x))
    (-> (frame :title \"Hello\",
               :content  (scrollable hist-panel))
        ;:on-close :exit) 
        pack! 
        show!))
") "image-processing.test.hist-view-gui" :repl-thread 1466)

[-Received-] 522.17
(:debug 1 1 ("EOF while reading, starting at line 1" "  [Thrown class java.lang.RuntimeException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "      Util.java:156 clojure.lang.Util.runtimeException" (:restartable nil)) (1 "LispReader.java:1117 clojure.lang.LispReader.readDelimitedList" (:restartable nil)) (2 "LispReader.java:962 clojure.lang.LispReader$ListReader.invoke" (:restartable nil)) (3 "LispReader.java:180 clojure.lang.LispReader.read" (:restartable nil)) (4 "      core.clj:3344 clojure.core/read" (:restartable nil)) (5 "      core.clj:3342 clojure.core/read" (:restartable nil)) (6 "       basic.clj:51 swank.commands.basic/eval-region" (:restartable nil)) (7 "       basic.clj:45 swank.commands.basic/eval-region" (:restartable nil)) (8 "       basic.clj:79 swank.commands.basic/eval1101[fn]" (:restartable nil)) (9 "       Var.java:401 clojure.lang.Var.invoke" (:restartable nil))) (nil))
[-Received-] 522.18
(:debug-activate 1 1 nil)
[---Sent---] 522.29
(:emacs-rex (swank:throw-to-toplevel) nil 1 1467)

[-Received-] 522.3
(:return (:abort) 1467)
[Actionlist] 522.3
1466: pending  :listener-eval 
1467: finished :throw-to-toplevel 
[-Received-] 522.3
(:debug-return 1 1 nil)
[-Received-] 522.3
(:return (:abort) 1466)
[Actionlist] 522.3
1466: finished :listener-eval 
1467: finished :throw-to-toplevel 
[---Sent---] 522.61
(:emacs-rex (swank:listener-eval "(defn create-frame []
  (let [panel-info (create-hist-panel)
        hist-panel (first panel-info)
        img-group (second panel-info)]
    (add-imgs hist-panel img-group (first x) (second x))
    (-> (frame :title \"Hello\",
               :content  (scrollable hist-panel))
        ;:on-close :exit) 
        pack! 
        show!))
") "image-processing.test.hist-view-gui" :repl-thread 1468)

[-Received-] 522.7
(:debug 1 1 ("EOF while reading, starting at line 1" "  [Thrown class java.lang.RuntimeException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "      Util.java:156 clojure.lang.Util.runtimeException" (:restartable nil)) (1 "LispReader.java:1117 clojure.lang.LispReader.readDelimitedList" (:restartable nil)) (2 "LispReader.java:962 clojure.lang.LispReader$ListReader.invoke" (:restartable nil)) (3 "LispReader.java:180 clojure.lang.LispReader.read" (:restartable nil)) (4 "      core.clj:3344 clojure.core/read" (:restartable nil)) (5 "      core.clj:3342 clojure.core/read" (:restartable nil)) (6 "       basic.clj:51 swank.commands.basic/eval-region" (:restartable nil)) (7 "       basic.clj:45 swank.commands.basic/eval-region" (:restartable nil)) (8 "       basic.clj:79 swank.commands.basic/eval1101[fn]" (:restartable nil)) (9 "       Var.java:401 clojure.lang.Var.invoke" (:restartable nil))) (nil))
[-Received-] 522.71
(:debug-activate 1 1 nil)
[---Sent---] 522.88
(:emacs-rex (swank:throw-to-toplevel) nil 1 1469)

[-Received-] 522.88
(:return (:abort) 1469)
[Actionlist] 522.88
1468: pending  :listener-eval 
1469: finished :throw-to-toplevel 
[-Received-] 522.88
(:debug-return 1 1 nil)
[-Received-] 522.88
(:return (:abort) 1468)
[Actionlist] 522.88
1468: finished :listener-eval 
1469: finished :throw-to-toplevel 
[---Sent---] 523.25
(:emacs-rex (swank:listener-eval "(ns image-processing.test.hist-view-gui
    (:import
      (javax.imageio ImageIO) 
      (java.io File))
    (:use
      [clojure.test]
      [seesaw core make-widget border]
      [image-processing.hist-view-gui]))

; FIXME: wait for a user action.


(def x (map #(ImageIO/read (File. %)) 
            '(\"test/image_processing/test/1a7r.gif\" 
              \"test/image_processing/test/1azc.gif\")))


(defn create-frame []
  (let [panel-info (create-hist-panel)
        hist-panel (first panel-info)
        img-group (second panel-info)]
    (add-imgs hist-panel img-group (first x) (second x))
    (-> (frame :title \"Hello\",
               :content  (scrollable hist-panel))
        ;:on-close :exit) 
        pack! 
        show!)))
") "image-processing.test.hist-view-gui" :repl-thread 1473)

[-Received-] 523.26
(:debug 1 1 ("x already refers to: #'image-processing.hist-view-gui/x in namespace: image-processing.test.hist-view-gui" "  [Thrown class java.lang.IllegalStateException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "       Namespace.java:88 clojure.lang.Namespace.warnOrFailOnReplace" (:restartable nil)) (1 "       Namespace.java:72 clojure.lang.Namespace.intern" (:restartable nil)) (2 "       Compiler.java:456 clojure.lang.Compiler$DefExpr$Parser.parse" (:restartable nil)) (3 "      Compiler.java:6409 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (4 "      Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil)) (5 "      Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil)) (6 "      Compiler.java:6469 clojure.lang.Compiler.eval" (:restartable nil)) (7 "      Compiler.java:6431 clojure.lang.Compiler.eval" (:restartable nil)) (8 "           core.clj:2795 clojure.core/eval" (:restartable nil)) (9 "            core.clj:534 swank.core/eval825[fn]" (:restartable nil))) (nil))
[-Received-] 523.26
(:debug-activate 1 1 nil)
[---Sent---] 523.4
(:emacs-rex (swank:throw-to-toplevel) nil 1 1474)

[-Received-] 523.4
(:return (:abort) 1474)
[Actionlist] 523.4
1473: pending  :listener-eval 
1474: finished :throw-to-toplevel 
[-Received-] 523.4
(:debug-return 1 1 nil)
[-Received-] 523.41
(:return (:abort) 1473)
[Actionlist] 523.41
1473: finished :listener-eval 
1474: finished :throw-to-toplevel 
[---Sent---] 523.95
(:emacs-rex (swank:listener-eval "(ns image-processing.test.hist-view-gui
    (:import
      (javax.imageio ImageIO) 
      (java.io File))
    (:use
      [clojure.test]
      [seesaw core make-widget border]
      [image-processing.hist-view-gui]))

; FIXME: wait for a user action.


(def x (map #(ImageIO/read (File. %)) 
            '(\"test/image_processing/test/1a7r.gif\" 
              \"test/image_processing/test/1azc.gif\")))


(defn create-frame []
  (let [panel-info (create-hist-panel)
        hist-panel (first panel-info)
        img-group (second panel-info)]
    (add-imgs hist-panel img-group (first x) (second x))
    (-> (frame :title \"Hello\",
               :content  (scrollable hist-panel))
        ;:on-close :exit) 
        pack! 
        show!)))
") "user" :repl-thread 1479)

[-Received-] 524.01
(:new-package "image-processing.test.hist-view-gui" "image-processing.test.hist-view-gui")
[-Received-] 524.01
(:debug 2 1 ("x already refers to: #'image-processing.hist-view-gui/x in namespace: image-processing.test.hist-view-gui" "  [Thrown class java.lang.IllegalStateException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "       Namespace.java:88 clojure.lang.Namespace.warnOrFailOnReplace" (:restartable nil)) (1 "       Namespace.java:72 clojure.lang.Namespace.intern" (:restartable nil)) (2 "       Compiler.java:456 clojure.lang.Compiler$DefExpr$Parser.parse" (:restartable nil)) (3 "      Compiler.java:6409 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (4 "      Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil)) (5 "      Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil)) (6 "      Compiler.java:6469 clojure.lang.Compiler.eval" (:restartable nil)) (7 "      Compiler.java:6431 clojure.lang.Compiler.eval" (:restartable nil)) (8 "           core.clj:2795 clojure.core/eval" (:restartable nil)) (9 "            core.clj:534 swank.core/eval825[fn]" (:restartable nil))) (nil))
[-Received-] 524.02
(:debug-activate 2 1 nil)
[---Sent---] 524.23
(:emacs-rex (swank:throw-to-toplevel) nil 2 1480)

[-Received-] 524.23
(:return (:abort) 1480)
[Actionlist] 524.23
1479: pending  :listener-eval 
1480: finished :throw-to-toplevel 
[-Received-] 524.23
(:debug-return 2 1 nil)
[-Received-] 524.23
(:return (:abort) 1479)
[Actionlist] 524.23
1479: finished :listener-eval 
1480: finished :throw-to-toplevel 
[---Sent---] 524.5
(:emacs-rex (swank:operator-arglist "returns" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1481)

[-Received-] 524.51
(:indentation-update (("with-bindings" . 1)))
[-Received-] 524.51
(:return (:ok nil) 1481)
[Actionlist] 524.51
1481: finished :operator-arglist 
params: nil
[---Sent---] 524.65
(:emacs-rex (swank:operator-arglist "a" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1482)

[-Received-] 524.66
(:indentation-update (("with-bindings" . 0)))
[-Received-] 524.66
(:return (:ok nil) 1482)
[Actionlist] 524.66
1482: finished :operator-arglist 
params: nil
[---Sent---] 524.91
(:emacs-rex (swank:operator-arglist "img-group" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1483)

[-Received-] 524.93
(:indentation-update (("with-bindings" . 1)))
[-Received-] 524.93
(:return (:ok nil) 1483)
[Actionlist] 524.93
1483: finished :operator-arglist 
params: nil
[---Sent---] 524.93
(:emacs-rex (swank:operator-arglist "img-group" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1484)

[-Received-] 524.93
(:indentation-update (("with-bindings" . 0)))
[-Received-] 524.94
(:return (:ok nil) 1484)
[Actionlist] 524.94
1484: finished :operator-arglist 
params: nil
[---Sent---] 526.06
(:emacs-rex (swank:listener-eval "x
") "user" :repl-thread 1491)

[-Received-] 526.06
(:debug 3 1 ("Unable to resolve symbol: x in this context" "  [Thrown class java.lang.RuntimeException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "              Util.java:156 clojure.lang.Util.runtimeException" (:restartable nil)) (1 "         Compiler.java:6720 clojure.lang.Compiler.resolveIn" (:restartable nil)) (2 "         Compiler.java:6664 clojure.lang.Compiler.resolve" (:restartable nil)) (3 "         Compiler.java:6625 clojure.lang.Compiler.analyzeSymbol" (:restartable nil)) (4 "         Compiler.java:6198 clojure.lang.Compiler.analyze" (:restartable nil)) (5 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil)) (6 "         Compiler.java:6469 clojure.lang.Compiler.eval" (:restartable nil)) (7 "         Compiler.java:6431 clojure.lang.Compiler.eval" (:restartable nil)) (8 "              core.clj:2795 clojure.core/eval" (:restartable nil)) (9 "               core.clj:534 swank.core/eval825[fn]" (:restartable nil))) (nil))
[---Sent---] 526.45
(:emacs-rex (swank:listener-eval "(ns image-processing.test.hist-view-gui
    (:import
      (javax.imageio ImageIO) 
      (java.io File))
    (:use
      [clojure.test]
      [seesaw core make-widget border]
      [image-processing.hist-view-gui]))
") "image-processing.test.hist-view-gui" :repl-thread 1493)

[-Received-] 526.52
(:write-string "nil
" :repl-result)
[-Received-] 526.52
(:indentation-update (("with-bindings" . 1)))
[-Received-] 526.52
(:return (:ok nil) 1493)
[Actionlist] 526.52
1493: finished :listener-eval 
params: nil
[---Sent---] 526.69
(:emacs-rex (swank:listener-eval "x
") "user" :repl-thread 1494)

[-Received-] 526.74
(:debug 3 1 ("Unable to resolve symbol: x in this context" "  [Thrown class java.lang.RuntimeException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "              Util.java:156 clojure.lang.Util.runtimeException" (:restartable nil)) (1 "         Compiler.java:6720 clojure.lang.Compiler.resolveIn" (:restartable nil)) (2 "         Compiler.java:6664 clojure.lang.Compiler.resolve" (:restartable nil)) (3 "         Compiler.java:6625 clojure.lang.Compiler.analyzeSymbol" (:restartable nil)) (4 "         Compiler.java:6198 clojure.lang.Compiler.analyze" (:restartable nil)) (5 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil)) (6 "         Compiler.java:6469 clojure.lang.Compiler.eval" (:restartable nil)) (7 "         Compiler.java:6431 clojure.lang.Compiler.eval" (:restartable nil)) (8 "              core.clj:2795 clojure.core/eval" (:restartable nil)) (9 "               core.clj:534 swank.core/eval825[fn]" (:restartable nil))) (nil))
[---Sent---] 527.09
(:emacs-rex (swank:listener-eval "(def x (map #(ImageIO/read (File. %)) 
            '(\"test/image_processing/test/1a7r.gif\" 
              \"test/image_processing/test/1azc.gif\")))
") "image-processing.test.hist-view-gui" :repl-thread 1496)

[-Received-] 527.09
(:debug 3 1 ("x already refers to: #'image-processing.hist-view-gui/x in namespace: image-processing.test.hist-view-gui" "  [Thrown class java.lang.IllegalStateException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "       Namespace.java:88 clojure.lang.Namespace.warnOrFailOnReplace" (:restartable nil)) (1 "       Namespace.java:72 clojure.lang.Namespace.intern" (:restartable nil)) (2 "       Compiler.java:456 clojure.lang.Compiler$DefExpr$Parser.parse" (:restartable nil)) (3 "      Compiler.java:6409 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (4 "      Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil)) (5 "      Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil)) (6 "      Compiler.java:6469 clojure.lang.Compiler.eval" (:restartable nil)) (7 "      Compiler.java:6431 clojure.lang.Compiler.eval" (:restartable nil)) (8 "           core.clj:2795 clojure.core/eval" (:restartable nil)) (9 "            core.clj:534 swank.core/eval825[fn]" (:restartable nil))) (nil))
[-Received-] 527.09
(:debug-activate 3 1 nil)
[---Sent---] 527.2
(:emacs-rex (swank:throw-to-toplevel) nil 3 1497)

[-Received-] 527.2
(:return (:abort) 1497)
[Actionlist] 527.2
1496: pending  :listener-eval 
1497: finished :throw-to-toplevel 
[-Received-] 527.2
(:debug-return 3 1 nil)
[-Received-] 527.2
(:return (:abort) 1496)
[Actionlist] 527.2
1496: finished :listener-eval 
1497: finished :throw-to-toplevel 
[---Sent---] 527.42
(:emacs-rex (swank:listener-eval "(defn create-frame []
  (let [panel-info (create-hist-panel)
        hist-panel (first panel-info)
        img-group (second panel-info)]
    (add-imgs hist-panel img-group (first x) (second x))
    (-> (frame :title \"Hello\",
               :content  (scrollable hist-panel))
        ;:on-close :exit) 
        pack! 
        show!))
") "image-processing.test.hist-view-gui" :repl-thread 1498)

[-Received-] 527.42
(:debug 3 1 ("EOF while reading, starting at line 1" "  [Thrown class java.lang.RuntimeException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "      Util.java:156 clojure.lang.Util.runtimeException" (:restartable nil)) (1 "LispReader.java:1117 clojure.lang.LispReader.readDelimitedList" (:restartable nil)) (2 "LispReader.java:962 clojure.lang.LispReader$ListReader.invoke" (:restartable nil)) (3 "LispReader.java:180 clojure.lang.LispReader.read" (:restartable nil)) (4 "      core.clj:3344 clojure.core/read" (:restartable nil)) (5 "      core.clj:3342 clojure.core/read" (:restartable nil)) (6 "       basic.clj:51 swank.commands.basic/eval-region" (:restartable nil)) (7 "       basic.clj:45 swank.commands.basic/eval-region" (:restartable nil)) (8 "       basic.clj:79 swank.commands.basic/eval1101[fn]" (:restartable nil)) (9 "       Var.java:401 clojure.lang.Var.invoke" (:restartable nil))) (nil))
[-Received-] 527.42
(:debug-activate 3 1 nil)
[---Sent---] 527.51
(:emacs-rex (swank:throw-to-toplevel) nil 3 1499)

[-Received-] 527.51
(:return (:abort) 1499)
[Actionlist] 527.51
1498: pending  :listener-eval 
1499: finished :throw-to-toplevel 
[-Received-] 527.51
(:debug-return 3 1 nil)
[-Received-] 527.51
(:return (:abort) 1498)
[Actionlist] 527.51
1498: finished :listener-eval 
1499: finished :throw-to-toplevel 
[---Sent---] 527.75
(:emacs-rex (swank:operator-arglist "ns" "user") "user" t 1500)

[-Received-] 527.75
(:indentation-update (("with-bindings" . 0)))
[-Received-] 527.75
(:return (:ok "([name docstring? attr-map? references*])") 1500)
[Actionlist] 527.75
1500: finished :operator-arglist 
params: "([name docstring? attr-map? references*])"
[---Sent---] 527.83
(:emacs-rex (swank:fuzzy-completions "ima" "user" :limit 200 :time-limit-in-msec 2000) nil t 1501)

[-Received-] 527.85
(:indentation-update (("with-bindings" . 1)))
[-Received-] 527.85
(:return (:ok ((("image-processing.hist-view-gui/" "29.74" ((0 "ima")) "b------p") ("image-processing.test.hist-view-gui/" "29.69" ((0 "ima")) "b------p") ("clojure.contrib.macro-utils/" "17.40" ((13 "i") (16 "ma")) "b------p") ("swank.clj-contrib.macroexpand/" "17.37" ((15 "i") (18 "ma")) "b------p") ("with-meta" "16.43" ((1 "i") (5 "m") (8 "a")) "-f------") ("*print-meta*" "16.00" ((3 "i") (7 "m") (10 "a")) "b-------") ("IllegalMonitorStateException/" "12.38" ((0 "i") (7 "m") (16 "a")) "b-------") ("IncompatibleClassChangeError/" "12.38" ((0 "i") (4 "m") (6 "a")) "b-------") ("decimal?" "7.90" ((3 "ima")) "-f------") ("BigDecimal/" "7.48" ((6 "ima")) "b-------") ("zipmap" "6.55" ((1 "i") (3 "ma")) "-f------") ("StrictMath/" "5.30" ((3 "i") (6 "ma")) "b-------") ("SecurityManager/" "4.82" ((5 "i") (8 "ma")) "b-------") ("VirtualMachineError/" "4.64" ((1 "i") (7 "ma")) "b-------") ("primitives-classnames" "4.58" ((2 "im") (13 "a")) "b-------") ("swank.util.clj-stacktrace-compat/" "3.33" ((8 "i") (28 "m") (30 "a")) "b------p")) nil)) 1501)
[Actionlist] 527.85
1501: finished :fuzzy-completions 
params: [[['"image-processing.hist-view-gui/"', '"29.74"', [['0', '"ima"']], '"b------p"'], ['"image-processing.test.hist-view-gui/"', '"29.69"', [['0', '"ima"']], '"b------p"'], ['"clojure.contrib.macro-utils/"', '"17.40"', [['13', '"i"'], ['16', '"ma"']], '"b------p"'], ['"swank.clj-contrib.macroexpand/"', '"17.37"', [['15', '"i"'], ['18', '"ma"']], '"b------p"'], ['"with-meta"', '"16.43"', [['1', '"i"'], ['5', '"m"'], ['8', '"a"']], '"-f------"'], ['"*print-meta*"', '"16.00"', [['3', '"i"'], ['7', '"m"'], ['10', '"a"']], '"b-------"'], ['"IllegalMonitorStateException/"', '"12.38"', [['0', '"i"'], ['7', '"m"'], ['16', '"a"']], '"b-------"'], ['"IncompatibleClassChangeError/"', '"12.38"', [['0', '"i"'], ['4', '"m"'], ['6', '"a"']], '"b-------"'], ['"decimal?"', '"7.90"', [['3', '"ima"']], '"-f------"'], ['"BigDecimal/"', '"7.48"', [['6', '"ima"']], '"b-------"'], ['"zipmap"', '"6.55"', [['1', '"i"'], ['3', '"ma"']], '"-f------"'], ['"StrictMath/"', '"5.30"', [['3', '"i"'], ['6', '"ma"']], '"b-------"'], ['"SecurityManager/"', '"4.82"', [['5', '"i"'], ['8', '"ma"']], '"b-------"'], ['"VirtualMachineError/"', '"4.64"', [['1', '"i"'], ['7', '"ma"']], '"b-------"'], ['"primitives-classnames"', '"4.58"', [['2', '"im"'], ['13', '"a"']], '"b-------"'], ['"swank.util.clj-stacktrace-compat/"', '"3.33"', [['8', '"i"'], ['28', '"m"'], ['30', '"a"']], '"b------p"']], 'nil']
[---Sent---] 528.05
(:emacs-rex (swank:listener-eval "(ns image-processing.test.hist-view-gui)
") "user" :repl-thread 1502)

[-Received-] 528.05
(:write-string "nil
" :repl-result)
[-Received-] 528.05
(:new-package "image-processing.test.hist-view-gui" "image-processing.test.hist-view-gui")
[-Received-] 528.05
(:indentation-update (("with-bindings" . 0)))
[-Received-] 528.05
(:return (:ok nil) 1502)
[Actionlist] 528.05
1502: finished :listener-eval 
params: nil
[---Sent---] 528.27
(:emacs-rex (swank:listener-eval "(def x (map #(ImageIO/read (File. %)) 
            '(\"test/image_processing/test/1a7r.gif\" 
              \"test/image_processing/test/1azc.gif\")))
") "image-processing.test.hist-view-gui" :repl-thread 1503)

[-Received-] 528.27
(:debug 3 1 ("x already refers to: #'image-processing.hist-view-gui/x in namespace: image-processing.test.hist-view-gui" "  [Thrown class java.lang.IllegalStateException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "       Namespace.java:88 clojure.lang.Namespace.warnOrFailOnReplace" (:restartable nil)) (1 "       Namespace.java:72 clojure.lang.Namespace.intern" (:restartable nil)) (2 "       Compiler.java:456 clojure.lang.Compiler$DefExpr$Parser.parse" (:restartable nil)) (3 "      Compiler.java:6409 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (4 "      Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil)) (5 "      Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil)) (6 "      Compiler.java:6469 clojure.lang.Compiler.eval" (:restartable nil)) (7 "      Compiler.java:6431 clojure.lang.Compiler.eval" (:restartable nil)) (8 "           core.clj:2795 clojure.core/eval" (:restartable nil)) (9 "            core.clj:534 swank.core/eval825[fn]" (:restartable nil))) (nil))
[-Received-] 528.27
(:debug-activate 3 1 nil)
[---Sent---] 528.39
(:emacs-rex (swank:throw-to-toplevel) nil 3 1504)

[-Received-] 528.39
(:return (:abort) 1504)
[Actionlist] 528.39
1503: pending  :listener-eval 
1504: finished :throw-to-toplevel 
[-Received-] 528.39
(:debug-return 3 1 nil)
[-Received-] 528.39
(:return (:abort) 1503)
[Actionlist] 528.39
1503: finished :listener-eval 
1504: finished :throw-to-toplevel 
[---Sent---] 528.58
(:emacs-rex (swank:listener-eval "x
") "image-processing.test.hist-view-gui" :repl-thread 1505)

[-Received-] 528.58
(:write-string "(#<BufferedImage BufferedImage@b42b66: type = 13 IndexColorModel: #pixelBits = 8 numComponents = 4 color space = java.awt.color.ICC_ColorSpace@8d3e1b transparency = 2 transIndex   = 16 has alpha = true isAlphaPre = false ByteInterleavedRaster: width = 200 height = 90 #numDataElements 1 dataOff[0] = 0> #<BufferedImage BufferedImage@e8715c: type = 13 IndexColorModel: #pixelBits = 8 numComponents = 4 color space = java.awt.color.ICC_ColorSpace@8d3e1b transparency = 2 transIndex   = 16 has alpha = true isAlphaPre = false ByteInterleavedRaster: width = 200 height = 90 #numDataElements 1 dataOff[0] = 0>)
" :repl-result)
[-Received-] 528.67
(:indentation-update (("with-bindings" . 1)))
[-Received-] 528.67
(:return (:ok nil) 1505)
[Actionlist] 528.67
1505: finished :listener-eval 
params: nil
[---Sent---] 529.91
(:emacs-rex (swank:operator-arglist "image-processing" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1506)

[-Received-] 529.91
(:indentation-update (("with-bindings" . 0)))
[-Received-] 529.91
(:return (:ok nil) 1506)
[Actionlist] 529.91
1506: finished :operator-arglist 
params: nil
[---Sent---] 530.13
(:emacs-rex (swank:operator-arglist "create-radio-img" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1507)

[-Received-] 530.13
(:indentation-update (("with-bindings" . 1)))
[-Received-] 530.13
(:return (:ok "([buff-img img-group])") 1507)
[Actionlist] 530.13
1507: finished :operator-arglist 
params: "([buff-img img-group])"
[---Sent---] 530.13
(:emacs-rex (swank:describe-function "create-radio-img") "image-processing.hist-view-gui" t 1508)

[-Received-] 530.13
(:indentation-update (("with-bindings" . 0)))
[-Received-] 530.14
(:return (:ok "-------------------------
image-processing.hist-view-gui/create-radio-img
([buff-img img-group])
  Creates a horizontal-panel with a radio button and a BufferedImage.
") 1508)
[Actionlist] 530.14
1508: finished :describe-function 
params: "-------------------------
image-processing.hist-view-gui/create-radio-img
([buff-img img-group])
  Creates a horizontal-panel with a radio button and a BufferedImage.
"
[---Sent---] 530.43
(:emacs-rex (swank:listener-eval "(defn create-frame []
  (let [panel-info (create-hist-panel)
        hist-panel (first panel-info)
        img-group (second panel-info)]
    (add-imgs hist-panel img-group (first x) (second x))
    (-> (frame :title \"Hello\",
               :content  (scrollable hist-panel))
        ;:on-close :exit) 
        pack! 
        show!))
") "image-processing.test.hist-view-gui" :repl-thread 1509)

[-Received-] 530.48
(:debug 3 1 ("EOF while reading, starting at line 1" "  [Thrown class java.lang.RuntimeException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "      Util.java:156 clojure.lang.Util.runtimeException" (:restartable nil)) (1 "LispReader.java:1117 clojure.lang.LispReader.readDelimitedList" (:restartable nil)) (2 "LispReader.java:962 clojure.lang.LispReader$ListReader.invoke" (:restartable nil)) (3 "LispReader.java:180 clojure.lang.LispReader.read" (:restartable nil)) (4 "      core.clj:3344 clojure.core/read" (:restartable nil)) (5 "      core.clj:3342 clojure.core/read" (:restartable nil)) (6 "       basic.clj:51 swank.commands.basic/eval-region" (:restartable nil)) (7 "       basic.clj:45 swank.commands.basic/eval-region" (:restartable nil)) (8 "       basic.clj:79 swank.commands.basic/eval1101[fn]" (:restartable nil)) (9 "       Var.java:401 clojure.lang.Var.invoke" (:restartable nil))) (nil))
[-Received-] 530.5
(:debug-activate 3 1 nil)
[---Sent---] 530.6
(:emacs-rex (swank:throw-to-toplevel) nil 3 1510)

[-Received-] 530.6
(:return (:abort) 1510)
[Actionlist] 530.6
1509: pending  :listener-eval 
1510: finished :throw-to-toplevel 
[-Received-] 530.6
(:debug-return 3 1 nil)
[-Received-] 530.6
(:return (:abort) 1509)
[Actionlist] 530.6
1509: finished :listener-eval 
1510: finished :throw-to-toplevel 
[---Sent---] 530.77
(:emacs-rex (swank:listener-eval "(ns image-processing.test.hist-view-gui
    (:import
      (javax.imageio ImageIO) 
      (java.io File))
    (:use
      [clojure.test]
      [seesaw core make-widget border]
      [image-processing.hist-view-gui]))

; FIXME: wait for a user action.


(def x (map #(ImageIO/read (File. %)) 
            '(\"test/image_processing/test/1a7r.gif\" 
              \"test/image_processing/test/1azc.gif\")))


(defn create-frame []
  (let [panel-info (create-hist-panel)
        hist-panel (first panel-info)
        img-group (second panel-info)]
    (add-imgs hist-panel img-group (first x) (second x))
    (-> (frame :title \"Hello\",
               :content  (scrollable hist-panel))
        ;:on-close :exit) 
        pack! 
        show!)))
") "image-processing.test.hist-view-gui" :repl-thread 1511)

[-Received-] 530.83
(:debug 3 1 ("x already refers to: #'image-processing.hist-view-gui/x in namespace: image-processing.test.hist-view-gui" "  [Thrown class java.lang.IllegalStateException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "       Namespace.java:88 clojure.lang.Namespace.warnOrFailOnReplace" (:restartable nil)) (1 "       Namespace.java:72 clojure.lang.Namespace.intern" (:restartable nil)) (2 "       Compiler.java:456 clojure.lang.Compiler$DefExpr$Parser.parse" (:restartable nil)) (3 "      Compiler.java:6409 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (4 "      Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil)) (5 "      Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil)) (6 "      Compiler.java:6469 clojure.lang.Compiler.eval" (:restartable nil)) (7 "      Compiler.java:6431 clojure.lang.Compiler.eval" (:restartable nil)) (8 "           core.clj:2795 clojure.core/eval" (:restartable nil)) (9 "            core.clj:534 swank.core/eval825[fn]" (:restartable nil))) (nil))
[-Received-] 530.84
(:debug-activate 3 1 nil)
[---Sent---] 530.97
(:emacs-rex (swank:throw-to-toplevel) nil 3 1512)

[-Received-] 530.97
(:return (:abort) 1512)
[Actionlist] 530.97
1511: pending  :listener-eval 
1512: finished :throw-to-toplevel 
[-Received-] 530.97
(:debug-return 3 1 nil)
[-Received-] 530.97
(:return (:abort) 1511)
[Actionlist] 530.97
1511: finished :listener-eval 
1512: finished :throw-to-toplevel 
[---Sent---] 531.29
(:emacs-rex (swank:fuzzy-completions "crea" "image-processing.test.hist-view-gui" :limit 200 :time-limit-in-msec 2000) nil t 1513)

[-Received-] 531.29
(:indentation-update (("with-bindings" . 1)))
[-Received-] 531.3
(:return (:ok ((("clojure.main/" "15.16" ((0 "c") (5 "re") (9 "a")) "b------p") ("clojure.walk/" "15.16" ((0 "c") (5 "re") (9 "a")) "b------p") ("clojure.java.io/" "14.88" ((0 "c") (5 "re") (9 "a")) "b------p") ("swank.core.threadmap/" "14.82" ((6 "c") (13 "rea")) "b------p") ("clojure.template/" "14.82" ((0 "c") (5 "re") (13 "a")) "b------p") ("clojure.java.shell/" "14.72" ((0 "c") (5 "re") (9 "a")) "b------p") ("clojure.stacktrace/" "14.72" ((0 "c") (5 "re") (10 "a")) "b------p") ("clojure.java.browse/" "14.68" ((0 "c") (5 "re") (9 "a")) "b------p") ("clojure.java.javadoc/" "14.64" ((0 "c") (5 "re") (9 "a")) "b------p") ("swank.util.concurrent.thread/" "14.63" ((11 "c") (24 "rea")) "b------p") ("clojure.contrib.macro-utils/" "14.47" ((0 "c") (5 "re") (17 "a")) "b------p") ("swank.core.debugger-backends/" "12.45" ((6 "c") (8 "re") (21 "a")) "b------p") ("swank.clj-contrib.macroexpand/" "5.43" ((20 "cr") (23 "e") (26 "a")) "b------p") ("swank.util.clj-stacktrace-compat/" "3.34" ((21 "r") (24 "e") (30 "a")) "b------p")) nil)) 1513)
[Actionlist] 531.3
1513: finished :fuzzy-completions 
params: [[['"clojure.main/"', '"15.16"', [['0', '"c"'], ['5', '"re"'], ['9', '"a"']], '"b------p"'], ['"clojure.walk/"', '"15.16"', [['0', '"c"'], ['5', '"re"'], ['9', '"a"']], '"b------p"'], ['"clojure.java.io/"', '"14.88"', [['0', '"c"'], ['5', '"re"'], ['9', '"a"']], '"b------p"'], ['"swank.core.threadmap/"', '"14.82"', [['6', '"c"'], ['13', '"rea"']], '"b------p"'], ['"clojure.template/"', '"14.82"', [['0', '"c"'], ['5', '"re"'], ['13', '"a"']], '"b------p"'], ['"clojure.java.shell/"', '"14.72"', [['0', '"c"'], ['5', '"re"'], ['9', '"a"']], '"b------p"'], ['"clojure.stacktrace/"', '"14.72"', [['0', '"c"'], ['5', '"re"'], ['10', '"a"']], '"b------p"'], ['"clojure.java.browse/"', '"14.68"', [['0', '"c"'], ['5', '"re"'], ['9', '"a"']], '"b------p"'], ['"clojure.java.javadoc/"', '"14.64"', [['0', '"c"'], ['5', '"re"'], ['9', '"a"']], '"b------p"'], ['"swank.util.concurrent.thread/"', '"14.63"', [['11', '"c"'], ['24', '"rea"']], '"b------p"'], ['"clojure.contrib.macro-utils/"', '"14.47"', [['0', '"c"'], ['5', '"re"'], ['17', '"a"']], '"b------p"'], ['"swank.core.debugger-backends/"', '"12.45"', [['6', '"c"'], ['8', '"re"'], ['21', '"a"']], '"b------p"'], ['"swank.clj-contrib.macroexpand/"', '"5.43"', [['20', '"cr"'], ['23', '"e"'], ['26', '"a"']], '"b------p"'], ['"swank.util.clj-stacktrace-compat/"', '"3.34"', [['21', '"r"'], ['24', '"e"'], ['30', '"a"']], '"b------p"']], 'nil']
[---Sent---] 531.9
(:emacs-rex (swank:listener-eval "(create-frame)
") "image-processing.test.hist-view-gui" :repl-thread 1514)

[-Received-] 531.91
(:debug 3 1 ("Wrong number of args (0) passed to: hist-view-gui$create-frame" "  [Thrown class clojure.lang.ArityException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "       AFn.java:437 clojure.lang.AFn.throwArity" (:restartable nil)) (1 "        AFn.java:35 clojure.lang.AFn.invoke" (:restartable nil)) (2 "   NO_SOURCE_FILE:1 image-processing.test.hist-view-gui/eval7907" (:restartable nil)) (3 " Compiler.java:6465 clojure.lang.Compiler.eval" (:restartable nil)) (4 " Compiler.java:6431 clojure.lang.Compiler.eval" (:restartable nil)) (5 "      core.clj:2795 clojure.core/eval" (:restartable nil)) (6 "       core.clj:534 swank.core/eval825[fn]" (:restartable nil)) (7 "   MultiFn.java:163 clojure.lang.MultiFn.invoke" (:restartable nil)) (8 "       basic.clj:55 swank.commands.basic/eval-region" (:restartable nil)) (9 "       basic.clj:45 swank.commands.basic/eval-region" (:restartable nil))) (nil))
[---Sent---] 532.37
(:emacs-rex (swank:operator-arglist "ImageIO/read" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1516)

[---Sent---] 535.41
(:emacs-rex (swank:listener-eval "(ns image-processing.test.hist-view-gui
    (:import
      (javax.imageio ImageIO) 
      (java.io File))
    (:use
      [clojure.test]
      [seesaw core make-widget border]
      [image-processing.hist-view-gui]))

; FIXME: wait for a user action.


(def x (map #(ImageIO/read (File. %)) 
            '(\"test/image_processing/test/1a7r.gif\" 
              \"test/image_processing/test/1azc.gif\")))


(defn create-frame []
  (let [panel-info (create-hist-panel)
        hist-panel (first panel-info)
        img-group (second panel-info)]
    (add-imgs hist-panel img-group (first x) (second x))
    (-> (frame :title \"Hello\",
               :content  (scrollable hist-panel))
        ;:on-close :exit) 
        pack! 
        show!)))
") "user" :repl-thread 1521)

[-Received-] 535.72
(:write-string "#'image-processing.test.hist-view-gui/create-frame
" :repl-result)
[-Received-] 535.72
(:new-package "image-processing.test.hist-view-gui" "image-processing.test.hist-view-gui")
[-Received-] 535.72
(:indentation-update (("deftest-" . 1) ("deftest" . 1) ("testing" . 1) ("with-test-out" . 0) ("set-test" . 1) ("with-test" . 1) ("with-bindings" . 0) ("with-widgets" . 1) ("invoke-now" . 0) ("invoke-soon" . 0) ("signaller" . 1) ("invoke-later" . 0)))
[-Received-] 535.72
(:return (:ok nil) 1521)
[Actionlist] 535.72
1521: finished :listener-eval 
params: nil
[---Sent---] 536.49
(:emacs-rex (swank:fuzzy-completions "create-fr" "image-processing.test.hist-view-gui" :limit 200 :time-limit-in-msec 2000) nil t 1522)

[-Received-] 536.5
(:indentation-update (("with-bindings" . 1)))
[-Received-] 536.5
(:return (:ok ((("create-frame" "107.47" ((0 "create-fr")) "-f------")) nil)) 1522)
[Actionlist] 536.51
1522: finished :fuzzy-completions 
params: [[['"create-frame"', '"107.47"', [['0', '"create-fr"']], '"-f------"']], 'nil']
[---Sent---] 536.57
(:emacs-rex (swank:listener-eval "(create-frame)
") "image-processing.test.hist-view-gui" :repl-thread 1523)

[-Received-] 536.64
(:write-string "#<JFrame$Tag$a79ba523 seesaw.core.proxy$javax.swing.JFrame$Tag$a79ba523[frame0,0,31,706x133,layout=java.awt.BorderLayout,title=Hello,resizable,normal,defaultCloseOperation=HIDE_ON_CLOSE,rootPane=javax.swing.JRootPane[,5,25,696x103,layout=javax.swing.JRootPane$RootLayout,alignmentX=0.0,alignmentY=0.0,border=,flags=16777673,maximumSize=,minimumSize=,preferredSize=],rootPaneCheckingEnabled=true]>
" :repl-result)
[-Received-] 536.64
(:indentation-update (("with-bindings" . 0)))
[-Received-] 536.64
(:return (:ok nil) 1523)
[Actionlist] 536.64
1523: finished :listener-eval 
params: nil
[---Sent---] 537.77
(:emacs-rex (swank:operator-arglist "selection" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1524)

[-Received-] 537.78
(:indentation-update (("with-bindings" . 1)))
[-Received-] 537.78
(:return (:ok "([target] [target options])") 1524)
[Actionlist] 537.78
1524: finished :operator-arglist 
params: "([target] [target options])"
[---Sent---] 538.87
(:emacs-rex (swank:listener-eval "(defn create-frame []
  (let [panel-info (create-hist-panel)
        hist-panel (first panel-info)
        img-group (second panel-info)]
    (add-imgs hist-panel img-group (first x) (second x))
    (-> (frame :title \"Hello\",
               :content  (scrollable hist-panel))
        ;:on-close :exit) 
        pack! 
        show!)
    [hist-panel img-group])
") "image-processing.test.hist-view-gui" :repl-thread 1527)

[-Received-] 538.92
(:debug 1 1 ("EOF while reading, starting at line 1" "  [Thrown class java.lang.RuntimeException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "      Util.java:156 clojure.lang.Util.runtimeException" (:restartable nil)) (1 "LispReader.java:1117 clojure.lang.LispReader.readDelimitedList" (:restartable nil)) (2 "LispReader.java:962 clojure.lang.LispReader$ListReader.invoke" (:restartable nil)) (3 "LispReader.java:180 clojure.lang.LispReader.read" (:restartable nil)) (4 "      core.clj:3344 clojure.core/read" (:restartable nil)) (5 "      core.clj:3342 clojure.core/read" (:restartable nil)) (6 "       basic.clj:51 swank.commands.basic/eval-region" (:restartable nil)) (7 "       basic.clj:45 swank.commands.basic/eval-region" (:restartable nil)) (8 "       basic.clj:79 swank.commands.basic/eval1101[fn]" (:restartable nil)) (9 "       Var.java:401 clojure.lang.Var.invoke" (:restartable nil))) (nil))
[-Received-] 538.92
(:debug-activate 1 1 nil)
[---Sent---] 539.03
(:emacs-rex (swank:throw-to-toplevel) nil 1 1528)

[-Received-] 539.03
(:return (:abort) 1528)
[Actionlist] 539.03
1527: pending  :listener-eval 
1528: finished :throw-to-toplevel 
[-Received-] 539.03
(:debug-return 1 1 nil)
[---Sent---] 539.27
(:emacs-rex (swank:listener-eval "(ns image-processing.test.hist-view-gui
    (:import
      (javax.imageio ImageIO) 
      (java.io File))
    (:use
      [clojure.test]
      [seesaw core make-widget border]
      [image-processing.hist-view-gui]))

; FIXME: wait for a user action.


(def x (map #(ImageIO/read (File. %)) 
            '(\"test/image_processing/test/1a7r.gif\" 
              \"test/image_processing/test/1azc.gif\")))


(defn create-frame []
  (let [panel-info (create-hist-panel)
        hist-panel (first panel-info)
        img-group (second panel-info)]
    (add-imgs hist-panel img-group (first x) (second x))
    (-> (frame :title \"Hello\",
               :content  (scrollable hist-panel))
        ;:on-close :exit) 
        pack! 
        show!)
    [hist-panel img-group]))
") "image-processing.test.hist-view-gui" :repl-thread 1529)

[-Received-] 539.27
(:write-string "#'image-processing.test.hist-view-gui/create-frame
" :repl-result)
[---Sent---] 540.23
(:emacs-rex (swank:listener-eval "(defn create-frame []
  (let [panel-info (create-hist-panel)
        hist-panel (first panel-info)
        img-group (second panel-info)]
    (add-imgs hist-panel img-group (first x) (second x))
    (-> (frame :title \"Hello\",
               :content  (scrollable hist-panel))
        ;:on-close :exit) 
        pack! 
        show!)
    [hist-panel img-group])
") "image-processing.test.hist-view-gui" :repl-thread 1530)

[-Received-] 540.23
(:debug 1 1 ("EOF while reading, starting at line 1" "  [Thrown class java.lang.RuntimeException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "      Util.java:156 clojure.lang.Util.runtimeException" (:restartable nil)) (1 "LispReader.java:1117 clojure.lang.LispReader.readDelimitedList" (:restartable nil)) (2 "LispReader.java:962 clojure.lang.LispReader$ListReader.invoke" (:restartable nil)) (3 "LispReader.java:180 clojure.lang.LispReader.read" (:restartable nil)) (4 "      core.clj:3344 clojure.core/read" (:restartable nil)) (5 "      core.clj:3342 clojure.core/read" (:restartable nil)) (6 "       basic.clj:51 swank.commands.basic/eval-region" (:restartable nil)) (7 "       basic.clj:45 swank.commands.basic/eval-region" (:restartable nil)) (8 "       basic.clj:79 swank.commands.basic/eval1101[fn]" (:restartable nil)) (9 "       Var.java:401 clojure.lang.Var.invoke" (:restartable nil))) (nil))
[-Received-] 540.24
(:debug-activate 1 1 nil)
[---Sent---] 540.33
(:emacs-rex (swank:throw-to-toplevel) nil 1 1531)

[-Received-] 540.33
(:return (:abort) 1531)
[Actionlist] 540.33
1530: pending  :listener-eval 
1531: finished :throw-to-toplevel 
[-Received-] 540.33
(:debug-return 1 1 nil)
[---Sent---] 540.65
(:emacs-rex (swank:operator-arglist "def" "image-processing.test.hist-view-gui") "image-processing.test.hist-view-gui" t 1532)

[-Received-] 540.66
(:indentation-update (("with-bindings" . 1)))
[-Received-] 540.66
(:return (:ok nil) 1532)
[Actionlist] 540.66
1532: finished :operator-arglist 
params: nil
[---Sent---] 540.71
(:emacs-rex (swank:operator-arglist "def" "image-processing.test.hist-view-gui") "image-processing.test.hist-view-gui" t 1533)

[-Received-] 540.72
(:indentation-update (("with-bindings" . 0)))
[-Received-] 540.72
(:return (:ok nil) 1533)
[Actionlist] 540.72
1533: finished :operator-arglist 
params: nil
[---Sent---] 541.04
(:emacs-rex (swank:listener-eval "(def z (create-frame))
") "image-processing.test.hist-view-gui" :repl-thread 1534)

[-Received-] 541.1
(:write-string "#'image-processing.test.hist-view-gui/z
" :repl-result)
[-Received-] 541.1
(:indentation-update (("with-bindings" . 1)))
[-Received-] 541.1
(:return (:ok nil) 1534)
[Actionlist] 541.1
1534: finished :listener-eval 
params: nil
[---Sent---] 541.46
(:emacs-rex (swank:fuzzy-completions "get-sele" "image-processing.test.hist-view-gui" :limit 200 :time-limit-in-msec 2000) nil t 1535)

[-Received-] 541.47
(:indentation-update (("with-bindings" . 0)))
[-Received-] 541.48
(:return (:ok ((nil) nil)) 1535)
[Actionlist] 541.48
1535: finished :fuzzy-completions 
params: [['nil'], 'nil']
[---Sent---] 541.72
(:emacs-rex (swank:operator-arglist "get-selected" "image-processing.test.hist-view-gui") "image-processing.test.hist-view-gui" t 1536)

[-Received-] 541.72
(:indentation-update (("with-bindings" . 1)))
[-Received-] 541.72
(:return (:ok nil) 1536)
[Actionlist] 541.72
1536: finished :operator-arglist 
params: nil
[---Sent---] 541.89
(:emacs-rex (swank:operator-arglist "second" "image-processing.test.hist-view-gui") "image-processing.test.hist-view-gui" t 1537)

[-Received-] 541.9
(:indentation-update (("with-bindings" . 0)))
[-Received-] 541.9
(:return (:ok "([x])") 1537)
[Actionlist] 541.9
1537: finished :operator-arglist 
params: "([x])"
[---Sent---] 541.99
(:emacs-rex (swank:listener-eval "(get-selected (second z))
") "image-processing.test.hist-view-gui" :repl-thread 1538)

[-Received-] 541.99
(:debug 1 1 ("Unable to resolve symbol: get-selected in this context" "  [Thrown class java.lang.RuntimeException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "              Util.java:156 clojure.lang.Util.runtimeException" (:restartable nil)) (1 "         Compiler.java:6720 clojure.lang.Compiler.resolveIn" (:restartable nil)) (2 "         Compiler.java:6664 clojure.lang.Compiler.resolve" (:restartable nil)) (3 "         Compiler.java:6625 clojure.lang.Compiler.analyzeSymbol" (:restartable nil)) (4 "         Compiler.java:6198 clojure.lang.Compiler.analyze" (:restartable nil)) (5 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil)) (6 "         Compiler.java:3452 clojure.lang.Compiler$InvokeExpr.parse" (:restartable nil)) (7 "         Compiler.java:6411 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (8 "         Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil)) (9 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil))) (nil))
[---Sent---] 542.3
(:emacs-rex (swank:listener-eval "(defn get-selected-img
  \"Doc\"
  #^{:arglists [img-group]}
  [img-group]
  (selection img-group))
") "image-processing.hist-view-gui" :repl-thread 1540)

[-Received-] 542.3
(:write-string "#'image-processing.hist-view-gui/get-selected-img
" :repl-result)
[-Received-] 542.39
(:indentation-update (("with-bindings" . 1)))
[-Received-] 542.39
(:return (:ok nil) 1540)
[Actionlist] 542.39
1540: finished :listener-eval 
params: nil
[---Sent---] 542.6
(:emacs-rex (swank:listener-eval "(get-selected (second z))
") "image-processing.test.hist-view-gui" :repl-thread 1541)

[-Received-] 542.6
(:debug 1 1 ("Unable to resolve symbol: get-selected in this context" "  [Thrown class java.lang.RuntimeException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "              Util.java:156 clojure.lang.Util.runtimeException" (:restartable nil)) (1 "         Compiler.java:6720 clojure.lang.Compiler.resolveIn" (:restartable nil)) (2 "         Compiler.java:6664 clojure.lang.Compiler.resolve" (:restartable nil)) (3 "         Compiler.java:6625 clojure.lang.Compiler.analyzeSymbol" (:restartable nil)) (4 "         Compiler.java:6198 clojure.lang.Compiler.analyze" (:restartable nil)) (5 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil)) (6 "         Compiler.java:3452 clojure.lang.Compiler$InvokeExpr.parse" (:restartable nil)) (7 "         Compiler.java:6411 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (8 "         Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil)) (9 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil))) (nil))
[---Sent---] 543.26
(:emacs-rex (swank:listener-eval "(get-selected-img (second z))
") "image-processing.test.hist-view-gui" :repl-thread 1543)

[-Received-] 543.26
(:debug 1 1 ("Unable to resolve symbol: get-selected-img in this context" "  [Thrown class java.lang.RuntimeException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "              Util.java:156 clojure.lang.Util.runtimeException" (:restartable nil)) (1 "         Compiler.java:6720 clojure.lang.Compiler.resolveIn" (:restartable nil)) (2 "         Compiler.java:6664 clojure.lang.Compiler.resolve" (:restartable nil)) (3 "         Compiler.java:6625 clojure.lang.Compiler.analyzeSymbol" (:restartable nil)) (4 "         Compiler.java:6198 clojure.lang.Compiler.analyze" (:restartable nil)) (5 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil)) (6 "         Compiler.java:3452 clojure.lang.Compiler$InvokeExpr.parse" (:restartable nil)) (7 "         Compiler.java:6411 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (8 "         Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil)) (9 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil))) (nil))
[---Sent---] 543.61
(:emacs-rex (swank:operator-arglist "ns" "image-processing.test.hist-view-gui") "image-processing.test.hist-view-gui" t 1545)

[-Received-] 543.62
(:indentation-update (("with-bindings" . 0)))
[-Received-] 543.62
(:return (:ok "([name docstring? attr-map? references*])") 1545)
[Actionlist] 543.62
1545: finished :operator-arglist 
params: "([name docstring? attr-map? references*])"
[---Sent---] 544.74
(:emacs-rex (swank:listener-eval "(ns image-processing.test.hist-view-gui
    (:import
      (javax.imageio ImageIO) 
      (java.io File))
    (:use
      [clojure.test]
      [seesaw core make-widget border]
      [image-processing.hist-view-gui]))

; FIXME: wait for a user action.


(def x (map #(ImageIO/read (File. %)) 
            '(\"test/image_processing/test/1a7r.gif\" 
              \"test/image_processing/test/1azc.gif\")))


(defn create-frame []
  (let [panel-info (create-hist-panel)
        hist-panel (first panel-info)
        img-group (second panel-info)]
    (add-imgs hist-panel img-group (first x) (second x))
    (-> (frame :title \"Hello\",
               :content  (scrollable hist-panel))
        ;:on-close :exit) 
        pack! 
        show!)
    [hist-panel img-group]))

(def z (create-frame))

;(get-selected-img (second z))
") "image-processing.test.hist-view-gui" :repl-thread 1550)

[-Received-] 544.79
(:write-string "#'image-processing.test.hist-view-gui/z
" :repl-result)
[-Received-] 544.79
(:indentation-update (("with-bindings" . 1)))
[-Received-] 544.79
(:return (:ok nil) 1550)
[Actionlist] 544.79
1550: finished :listener-eval 
params: nil
[---Sent---] 545.14
(:emacs-rex (swank:listener-eval "(get-selected-img (second z))
") "image-processing.test.hist-view-gui" :repl-thread 1551)

[-Received-] 545.14
(:write-string "#<JRadioButton$Tag$a79ba523 seesaw.core.proxy$javax.swing.JRadioButton$Tag$a79ba523[,0,35,21x21,alignmentX=0.0,alignmentY=0.5,border=javax.swing.plaf.BorderUIResource$CompoundBorderUIResource@1d6cbe8,flags=296,maximumSize=,minimumSize=,preferredSize=,defaultIcon=,disabledIcon=,disabledSelectedIcon=,margin=javax.swing.plaf.InsetsUIResource[top=2,left=2,bottom=2,right=2],paintBorder=false,paintFocus=true,pressedIcon=,rolloverEnabled=true,rolloverIcon=,rolloverSelectedIcon=,selectedIcon=,text=]>
" :repl-result)
[---Sent---] 546.3
(:emacs-rex (swank:listener-eval "(ns image-processing.test.hist-view-gui
    (:import
      (javax.imageio ImageIO) 
      (java.io File))
    (:use
      [clojure.test]
      [seesaw core make-widget border]
      [image-processing.hist-view-gui]))

; FIXME: wait for a user action.


(def x (map #(ImageIO/read (File. %)) 
            '(\"test/image_processing/test/1a7r.gif\" 
              \"test/image_processing/test/1azc.gif\")))


(defn create-frame []
  (let [panel-info (create-hist-panel)
        hist-panel (first panel-info)
        img-group (second panel-info)]
    (add-imgs hist-panel img-group (first x) (second x))
    (-> (frame :title \"Hello\",
               :content  (scrollable hist-panel))
        ;:on-close :exit) 
        pack! 
        show!)
    [hist-panel img-group]))

(def z (create-frame))

;(get-selected-img (second z))
") "image-processing.test.hist-view-gui" :repl-thread 1554)

[-Received-] 546.36
(:write-string "#'image-processing.test.hist-view-gui/z
" :repl-result)
[-Received-] 546.36
(:indentation-update (("with-bindings" . 1)))
[-Received-] 546.36
(:return (:ok nil) 1554)
[Actionlist] 546.37
1554: finished :listener-eval 
params: nil
[---Sent---] 546.72
(:emacs-rex (swank:listener-eval "(get-selected-img (second z))
") "image-processing.test.hist-view-gui" :repl-thread 1557)

[-Received-] 546.72
(:write-string "#<JRadioButton$Tag$a79ba523 seesaw.core.proxy$javax.swing.JRadioButton$Tag$a79ba523[,0,35,21x21,alignmentX=0.0,alignmentY=0.5,border=javax.swing.plaf.BorderUIResource$CompoundBorderUIResource@1d6cbe8,flags=296,maximumSize=,minimumSize=,preferredSize=,defaultIcon=,disabledIcon=,disabledSelectedIcon=,margin=javax.swing.plaf.InsetsUIResource[top=2,left=2,bottom=2,right=2],paintBorder=false,paintFocus=true,pressedIcon=,rolloverEnabled=true,rolloverIcon=,rolloverSelectedIcon=,selectedIcon=,text=]>
" :repl-result)
[---Sent---] 547.06
(:emacs-rex (swank:listener-eval "(get-selected-img (second z))
") "image-processing.test.hist-view-gui" :repl-thread 1558)

[-Received-] 547.06
(:write-string "#<JRadioButton$Tag$a79ba523 seesaw.core.proxy$javax.swing.JRadioButton$Tag$a79ba523[,0,35,21x21,alignmentX=0.0,alignmentY=0.5,border=javax.swing.plaf.BorderUIResource$CompoundBorderUIResource@1d6cbe8,flags=296,maximumSize=,minimumSize=,preferredSize=,defaultIcon=,disabledIcon=,disabledSelectedIcon=,margin=javax.swing.plaf.InsetsUIResource[top=2,left=2,bottom=2,right=2],paintBorder=false,paintFocus=true,pressedIcon=,rolloverEnabled=true,rolloverIcon=,rolloverSelectedIcon=,selectedIcon=,text=]>
" :repl-result)
[-Received-] 547.15
(:indentation-update (("with-bindings" . 1)))
[-Received-] 547.15
(:return (:ok nil) 1558)
[Actionlist] 547.15
1558: finished :listener-eval 
params: nil
[---Sent---] 547.35
(:emacs-rex (swank:listener-eval "(defn get-selected-img
  \"Doc\"
  #^{:arglists [img-group]}
  [img-group]
  (config (selection img-group) :user-data))
") "image-processing.hist-view-gui" :repl-thread 1559)

[-Received-] 547.35
(:write-string "#'image-processing.hist-view-gui/get-selected-img
" :repl-result)
[-Received-] 547.35
(:indentation-update (("with-bindings" . 0)))
[-Received-] 547.35
(:return (:ok nil) 1559)
[Actionlist] 547.35
1559: finished :listener-eval 
params: nil
[---Sent---] 547.59
(:emacs-rex (swank:listener-eval "(get-selected-img (second z))
") "image-processing.test.hist-view-gui" :repl-thread 1560)

[-Received-] 547.59
(:write-string "#<BufferedImage BufferedImage@10ab9e1: type = 13 IndexColorModel: #pixelBits = 8 numComponents = 4 color space = java.awt.color.ICC_ColorSpace@13172b2 transparency = 2 transIndex   = 16 has alpha = true isAlphaPre = false ByteInterleavedRaster: width = 200 height = 90 #numDataElements 1 dataOff[0] = 0>
" :repl-result)
[-Received-] 547.59
(:indentation-update (("with-bindings" . 1)))
[-Received-] 547.59
(:return (:ok nil) 1560)
[Actionlist] 547.59
1560: finished :listener-eval 
params: nil
[---Sent---] 548.05
(:emacs-rex (swank:operator-arglist "buff-img" "image-processing.test.hist-view-gui") "image-processing.test.hist-view-gui" t 1561)

[-Received-] 548.05
(:indentation-update (("with-bindings" . 0)))
[-Received-] 548.06
(:return (:ok nil) 1561)
[Actionlist] 548.06
1561: finished :operator-arglist 
params: nil
[---Sent---] 548.31
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1562)

[-Received-] 548.32
(:indentation-update (("with-bindings" . 1)))
[-Received-] 548.32
(:return (:ok nil) 1562)
[Actionlist] 548.32
1562: finished :operator-arglist 
params: nil
[---Sent---] 548.35
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1563)

[-Received-] 548.35
(:indentation-update (("with-bindings" . 0)))
[-Received-] 548.35
(:return (:ok nil) 1563)
[Actionlist] 548.35
1563: finished :operator-arglist 
params: nil
[---Sent---] 548.47
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1564)

[-Received-] 548.47
(:indentation-update (("with-bindings" . 1)))
[-Received-] 548.47
(:return (:ok nil) 1564)
[Actionlist] 548.47
1564: finished :operator-arglist 
params: nil
[---Sent---] 548.61
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1565)

[-Received-] 548.61
(:indentation-update (("with-bindings" . 0)))
[-Received-] 548.61
(:return (:ok nil) 1565)
[Actionlist] 548.61
1565: finished :operator-arglist 
params: nil
[---Sent---] 548.66
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1566)

[-Received-] 548.66
(:indentation-update (("with-bindings" . 1)))
[-Received-] 548.66
(:return (:ok nil) 1566)
[Actionlist] 548.66
1566: finished :operator-arglist 
params: nil
[---Sent---] 548.7
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1567)

[-Received-] 548.72
(:indentation-update (("with-bindings" . 0)))
[-Received-] 548.72
(:return (:ok nil) 1567)
[Actionlist] 548.72
1567: finished :operator-arglist 
params: nil
[---Sent---] 548.81
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1568)

[-Received-] 548.81
(:indentation-update (("with-bindings" . 1)))
[-Received-] 548.81
(:return (:ok nil) 1568)
[Actionlist] 548.81
1568: finished :operator-arglist 
params: nil
[---Sent---] 549.35
(:emacs-rex (swank:listener-eval "(ns image-processing.test.hist-view-gui
    (:import
      (javax.imageio ImageIO) 
      (java.io File))
    (:use
      [clojure.test]
      [seesaw core make-widget border]
      [image-processing.hist-view-gui]))

; FIXME: wait for a user action.


(def x (map #(ImageIO/read (File. %)) 
            '(\"test/image_processing/test/1a7r.gif\" 
              \"test/image_processing/test/1azc.gif\")))


(defn create-frame []
  (let [panel-info (create-hist-panel)
        hist-panel (first panel-info)
        img-group (second panel-info)]
    (add-imgs hist-panel img-group (first x) (second x))
    (-> (frame :title \"Hello\",
               :content  (scrollable hist-panel))
        ;:on-close :exit) 
        pack! 
        show!)
    [hist-panel img-group]))

(def z (create-frame))

(get-selected-img (second z))
") "image-processing.test.hist-view-gui" :repl-thread 1570)

[-Received-] 549.41
(:debug 1 1 ("No implementation of method: :config* of protocol: #'seesaw.config/Configurable found for class: nil" "  [Thrown class java.lang.IllegalArgumentException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "  core_deftype.clj:495 clojure.core/-cache-protocol-fn" (:restartable nil)) (1 "         config.clj:16 seesaw.config/eval2353[fn]" (:restartable nil)) (2 "         config.clj:45 seesaw.config/config" (:restartable nil)) (3 "      NO_SOURCE_FILE:1 image-processing.hist-view-gui/get-selected-img" (:restartable nil)) (4 "      NO_SOURCE_FILE:1 image-processing.test.hist-view-gui/eval7559" (:restartable nil)) (5 "    Compiler.java:6465 clojure.lang.Compiler.eval" (:restartable nil)) (6 "    Compiler.java:6431 clojure.lang.Compiler.eval" (:restartable nil)) (7 "         core.clj:2795 clojure.core/eval" (:restartable nil)) (8 "          core.clj:534 swank.core/eval825[fn]" (:restartable nil)) (9 "      MultiFn.java:163 clojure.lang.MultiFn.invoke" (:restartable nil))) (nil))
[-Received-] 549.41
(:debug-activate 1 1 nil)
[---Sent---] 549.7
(:emacs-rex (swank:throw-to-toplevel) nil 1 1571)

[-Received-] 549.71
(:return (:abort) 1571)
[Actionlist] 549.71
1570: pending  :listener-eval 
1571: finished :throw-to-toplevel 
[-Received-] 549.71
(:debug-return 1 1 nil)
[-Received-] 549.71
(:return (:abort) 1570)
[Actionlist] 549.71
1570: finished :listener-eval 
1571: finished :throw-to-toplevel 
[---Sent---] 550.08
(:emacs-rex (swank:listener-eval "(get-selected-img (second z))
") "image-processing.test.hist-view-gui" :repl-thread 1572)

[-Received-] 550.08
(:debug 1 1 ("No implementation of method: :config* of protocol: #'seesaw.config/Configurable found for class: nil" "  [Thrown class java.lang.IllegalArgumentException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "  core_deftype.clj:495 clojure.core/-cache-protocol-fn" (:restartable nil)) (1 "         config.clj:16 seesaw.config/eval2353[fn]" (:restartable nil)) (2 "         config.clj:45 seesaw.config/config" (:restartable nil)) (3 "      NO_SOURCE_FILE:1 image-processing.hist-view-gui/get-selected-img" (:restartable nil)) (4 "      NO_SOURCE_FILE:1 image-processing.test.hist-view-gui/eval7565" (:restartable nil)) (5 "    Compiler.java:6465 clojure.lang.Compiler.eval" (:restartable nil)) (6 "    Compiler.java:6431 clojure.lang.Compiler.eval" (:restartable nil)) (7 "         core.clj:2795 clojure.core/eval" (:restartable nil)) (8 "          core.clj:534 swank.core/eval825[fn]" (:restartable nil)) (9 "      MultiFn.java:163 clojure.lang.MultiFn.invoke" (:restartable nil))) (nil))
[---Sent---] 550.71
(:emacs-rex (swank:operator-arglist "let" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1574)

[-Received-] 550.71
(:indentation-update (("with-bindings" . 1)))
[-Received-] 550.71
(:return (:ok "([bindings & body])") 1574)
[Actionlist] 550.71
1574: finished :operator-arglist 
params: "([bindings & body])"
[---Sent---] 550.99
(:emacs-rex (swank:operator-arglist "let" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1575)

[-Received-] 551.0
(:indentation-update (("with-bindings" . 0)))
[-Received-] 551.0
(:return (:ok "([bindings & body])") 1575)
[Actionlist] 551.0
1575: finished :operator-arglist 
params: "([bindings & body])"
[---Sent---] 551.23
(:emacs-rex (swank:operator-arglist "if" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1576)

[-Received-] 551.23
(:indentation-update (("with-bindings" . 1)))
[-Received-] 551.23
(:return (:ok nil) 1576)
[Actionlist] 551.23
1576: finished :operator-arglist 
params: nil
[---Sent---] 551.34
(:emacs-rex (swank:operator-arglist "if-not" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1577)

[-Received-] 551.34
(:indentation-update (("with-bindings" . 0)))
[-Received-] 551.34
(:return (:ok "([test then] [test then else])") 1577)
[Actionlist] 551.34
1577: finished :operator-arglist 
params: "([test then] [test then else])"
[---Sent---] 551.76
(:emacs-rex (swank:operator-arglist "if-not" "image-processing.test.hist-view-gui") "image-processing.test.hist-view-gui" t 1578)

[-Received-] 551.77
(:indentation-update (("with-bindings" . 1)))
[-Received-] 551.77
(:return (:ok "([test then] [test then else])") 1578)
[Actionlist] 551.77
1578: finished :operator-arglist 
params: "([test then] [test then else])"
[---Sent---] 551.91
(:emacs-rex (swank:operator-arglist "if-not" "image-processing.test.hist-view-gui") "image-processing.test.hist-view-gui" t 1579)

[-Received-] 551.91
(:indentation-update (("with-bindings" . 0)))
[-Received-] 551.91
(:return (:ok "([test then] [test then else])") 1579)
[Actionlist] 551.91
1579: finished :operator-arglist 
params: "([test then] [test then else])"
[---Sent---] 552.18
(:emacs-rex (swank:operator-arglist "print" "image-processing.test.hist-view-gui") "image-processing.test.hist-view-gui" t 1580)

[-Received-] 552.18
(:indentation-update (("with-bindings" . 1)))
[-Received-] 552.18
(:return (:ok "([& more])") 1580)
[Actionlist] 552.18
1580: finished :operator-arglist 
params: "([& more])"
[---Sent---] 552.75
(:emacs-rex (swank:operator-arglist "print" "image-processing.test.hist-view-gui") "image-processing.test.hist-view-gui" t 1581)

[-Received-] 552.76
(:indentation-update (("with-bindings" . 0)))
[-Received-] 552.76
(:return (:ok "([& more])") 1581)
[Actionlist] 552.76
1581: finished :operator-arglist 
params: "([& more])"
[---Sent---] 552.96
(:emacs-rex (swank:listener-eval "(if-not nil (print \"true\") (print \"false\"))
") "image-processing.test.hist-view-gui" :repl-thread 1582)

[-Received-] 552.96
(:write-string "nil
" :repl-result)
[-Received-] 552.96
(:indentation-update (("with-bindings" . 1)))
[-Received-] 552.96
(:return (:ok nil) 1582)
[Actionlist] 552.96
1582: finished :listener-eval 
params: nil
[-Received-] 553.05
(:write-string "true" nil)
[---Sent---] 553.85
(:emacs-rex (swank:listener-eval "(defn get-selected-img
  \"Returns the BufferedImage selected at the history viewer.\"
  #^{:arglists [img-group]}
  [img-group]
  (let [selected-radio (selection img-group)]
    (if-not (selected-radio) (config selected-radio :user-data))))
") "image-processing.hist-view-gui" :repl-thread 1583)

[-Received-] 553.85
(:write-string "#'image-processing.hist-view-gui/get-selected-img
" :repl-result)
[-Received-] 553.95
(:indentation-update (("with-bindings" . 0)))
[-Received-] 553.95
(:return (:ok nil) 1583)
[Actionlist] 553.95
1583: finished :listener-eval 
params: nil
[---Sent---] 554.26
(:emacs-rex (swank:listener-eval "(get-selected-img (second z))
") "image-processing.test.hist-view-gui" :repl-thread 1584)

[-Received-] 554.26
(:debug 1 1 ("No message." "  [Thrown class java.lang.NullPointerException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "      NO_SOURCE_FILE:1 image-processing.hist-view-gui/get-selected-img" (:restartable nil)) (1 "      NO_SOURCE_FILE:1 image-processing.test.hist-view-gui/eval7594" (:restartable nil)) (2 "    Compiler.java:6465 clojure.lang.Compiler.eval" (:restartable nil)) (3 "    Compiler.java:6431 clojure.lang.Compiler.eval" (:restartable nil)) (4 "         core.clj:2795 clojure.core/eval" (:restartable nil)) (5 "          core.clj:534 swank.core/eval825[fn]" (:restartable nil)) (6 "      MultiFn.java:163 clojure.lang.MultiFn.invoke" (:restartable nil)) (7 "          basic.clj:55 swank.commands.basic/eval-region" (:restartable nil)) (8 "          basic.clj:45 swank.commands.basic/eval-region" (:restartable nil)) (9 "          basic.clj:79 swank.commands.basic/eval1101[fn]" (:restartable nil))) (nil))
[-Received-] 554.27
(:debug-activate 1 1 nil)
[---Sent---] 554.59
(:emacs-rex (swank:throw-to-toplevel) nil 1 1585)

[-Received-] 554.59
(:return (:abort) 1585)
[Actionlist] 554.59
1584: pending  :listener-eval 
1585: finished :throw-to-toplevel 
[-Received-] 554.59
(:debug-return 1 1 nil)
[-Received-] 554.59
(:return (:abort) 1584)
[Actionlist] 554.59
1584: finished :listener-eval 
1585: finished :throw-to-toplevel 
[---Sent---] 555.25
(:emacs-rex (swank:listener-eval "(if nil (print \"true\") (print \"false\"))
") "image-processing.test.hist-view-gui" :repl-thread 1586)

[-Received-] 555.26
(:write-string "nil
" :repl-result)
[-Received-] 555.26
(:indentation-update (("with-bindings" . 1)))
[-Received-] 555.26
(:return (:ok nil) 1586)
[Actionlist] 555.26
1586: finished :listener-eval 
params: nil
[-Received-] 555.35
(:write-string "false" nil)
[---Sent---] 556.17
(:emacs-rex (swank:listener-eval "(if 2 (print \"true\") (print \"false\"))
") "image-processing.test.hist-view-gui" :repl-thread 1587)

[-Received-] 556.17
(:write-string "nil
" :repl-result)
[-Received-] 556.27
(:indentation-update (("with-bindings" . 0)))
[-Received-] 556.27
(:return (:ok nil) 1587)
[Actionlist] 556.27
1587: finished :listener-eval 
params: nil
[-Received-] 556.27
(:write-string "true" nil)
[---Sent---] 556.85
(:emacs-rex (swank:listener-eval "(defn get-selected-img
  \"Returns the BufferedImage selected at the history viewer.\"
  #^{:arglists [img-group]}
  [img-group]
  (let [selected-radio (selection img-group)]
    (if (selected-radio) (config selected-radio :user-data))))
") "image-processing.hist-view-gui" :repl-thread 1588)

[-Received-] 556.85
(:write-string "#'image-processing.hist-view-gui/get-selected-img
" :repl-result)
[-Received-] 556.85
(:indentation-update (("with-bindings" . 1)))
[-Received-] 556.85
(:return (:ok nil) 1588)
[Actionlist] 556.85
1588: finished :listener-eval 
params: nil
[---Sent---] 557.13
(:emacs-rex (swank:listener-eval "(get-selected-img (second z))
") "image-processing.test.hist-view-gui" :repl-thread 1589)

[-Received-] 557.13
(:debug 1 1 ("No message." "  [Thrown class java.lang.NullPointerException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "      NO_SOURCE_FILE:1 image-processing.hist-view-gui/get-selected-img" (:restartable nil)) (1 "      NO_SOURCE_FILE:1 image-processing.test.hist-view-gui/eval7611" (:restartable nil)) (2 "    Compiler.java:6465 clojure.lang.Compiler.eval" (:restartable nil)) (3 "    Compiler.java:6431 clojure.lang.Compiler.eval" (:restartable nil)) (4 "         core.clj:2795 clojure.core/eval" (:restartable nil)) (5 "          core.clj:534 swank.core/eval825[fn]" (:restartable nil)) (6 "      MultiFn.java:163 clojure.lang.MultiFn.invoke" (:restartable nil)) (7 "          basic.clj:55 swank.commands.basic/eval-region" (:restartable nil)) (8 "          basic.clj:45 swank.commands.basic/eval-region" (:restartable nil)) (9 "          basic.clj:79 swank.commands.basic/eval1101[fn]" (:restartable nil))) (nil))
[-Received-] 557.14
(:debug-activate 1 1 nil)
[---Sent---] 557.38
(:emacs-rex (swank:throw-to-toplevel) nil 1 1590)

[-Received-] 557.38
(:return (:abort) 1590)
[Actionlist] 557.38
1589: pending  :listener-eval 
1590: finished :throw-to-toplevel 
[-Received-] 557.38
(:debug-return 1 1 nil)
[-Received-] 557.38
(:return (:abort) 1589)
[Actionlist] 557.38
1589: finished :listener-eval 
1590: finished :throw-to-toplevel 
[---Sent---] 557.57
(:emacs-rex (swank:listener-eval "z
") "image-processing.test.hist-view-gui" :repl-thread 1591)

[-Received-] 557.57
(:write-string "[#<JPanel$Tag$a79ba523 seesaw.core.proxy$javax.swing.JPanel$Tag$a79ba523[,0,0,693x100,layout=java.awt.GridLayout,alignmentX=0.0,alignmentY=0.0,border=javax.swing.border.EmptyBorder@b8dd3f,flags=9,maximumSize=,minimumSize=,preferredSize=]> #<ButtonGroup javax.swing.ButtonGroup@c57137>]
" :repl-result)
[-Received-] 557.57
(:indentation-update (("with-bindings" . 0)))
[-Received-] 557.57
(:return (:ok nil) 1591)
[Actionlist] 557.58
1591: finished :listener-eval 
params: nil
[---Sent---] 558.71
(:emacs-rex (swank:operator-arglist "selection" "image-processing.test.hist-view-gui") "image-processing.test.hist-view-gui" t 1592)

[-Received-] 558.72
(:indentation-update (("with-bindings" . 1)))
[-Received-] 558.72
(:return (:ok "([target] [target options])") 1592)
[Actionlist] 558.72
1592: finished :operator-arglist 
params: "([target] [target options])"
[---Sent---] 558.88
(:emacs-rex (swank:operator-arglist "second" "image-processing.test.hist-view-gui") "image-processing.test.hist-view-gui" t 1593)

[-Received-] 558.88
(:indentation-update (("with-bindings" . 0)))
[-Received-] 558.88
(:return (:ok "([x])") 1593)
[Actionlist] 558.88
1593: finished :operator-arglist 
params: "([x])"
[---Sent---] 558.97
(:emacs-rex (swank:listener-eval "(selection (second z))
") "image-processing.test.hist-view-gui" :repl-thread 1594)

[-Received-] 558.97
(:write-string "nil
" :repl-result)
[-Received-] 559.07
(:indentation-update (("with-bindings" . 1)))
[-Received-] 559.07
(:return (:ok nil) 1594)
[Actionlist] 559.07
1594: finished :listener-eval 
params: nil
[---Sent---] 559.27
(:emacs-rex (swank:listener-eval "(get-selected-img (second z))
") "image-processing.test.hist-view-gui" :repl-thread 1595)

[-Received-] 559.34
(:debug 1 1 ("No message." "  [Thrown class java.lang.NullPointerException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "      NO_SOURCE_FILE:1 image-processing.hist-view-gui/get-selected-img" (:restartable nil)) (1 "      NO_SOURCE_FILE:1 image-processing.test.hist-view-gui/eval7627" (:restartable nil)) (2 "    Compiler.java:6465 clojure.lang.Compiler.eval" (:restartable nil)) (3 "    Compiler.java:6431 clojure.lang.Compiler.eval" (:restartable nil)) (4 "         core.clj:2795 clojure.core/eval" (:restartable nil)) (5 "          core.clj:534 swank.core/eval825[fn]" (:restartable nil)) (6 "      MultiFn.java:163 clojure.lang.MultiFn.invoke" (:restartable nil)) (7 "          basic.clj:55 swank.commands.basic/eval-region" (:restartable nil)) (8 "          basic.clj:45 swank.commands.basic/eval-region" (:restartable nil)) (9 "          basic.clj:79 swank.commands.basic/eval1101[fn]" (:restartable nil))) (nil))
[-Received-] 559.34
(:debug-activate 1 1 nil)
[---Sent---] 559.44
(:emacs-rex (swank:throw-to-toplevel) nil 1 1596)

[-Received-] 559.44
(:return (:abort) 1596)
[Actionlist] 559.44
1595: pending  :listener-eval 
1596: finished :throw-to-toplevel 
[-Received-] 559.44
(:debug-return 1 1 nil)
[-Received-] 559.44
(:return (:abort) 1595)
[Actionlist] 559.44
1595: finished :listener-eval 
1596: finished :throw-to-toplevel 
[---Sent---] 559.8
(:emacs-rex (swank:listener-eval "(get-selected-img (second z))
") "image-processing.test.hist-view-gui" :repl-thread 1597)

[-Received-] 559.8
(:debug 1 1 ("No message." "  [Thrown class java.lang.NullPointerException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "      NO_SOURCE_FILE:1 image-processing.hist-view-gui/get-selected-img" (:restartable nil)) (1 "      NO_SOURCE_FILE:1 image-processing.test.hist-view-gui/eval7633" (:restartable nil)) (2 "    Compiler.java:6465 clojure.lang.Compiler.eval" (:restartable nil)) (3 "    Compiler.java:6431 clojure.lang.Compiler.eval" (:restartable nil)) (4 "         core.clj:2795 clojure.core/eval" (:restartable nil)) (5 "          core.clj:534 swank.core/eval825[fn]" (:restartable nil)) (6 "      MultiFn.java:163 clojure.lang.MultiFn.invoke" (:restartable nil)) (7 "          basic.clj:55 swank.commands.basic/eval-region" (:restartable nil)) (8 "          basic.clj:45 swank.commands.basic/eval-region" (:restartable nil)) (9 "          basic.clj:79 swank.commands.basic/eval1101[fn]" (:restartable nil))) (nil))
[---Sent---] 560.17
(:emacs-rex (swank:listener-eval "(defn get-selected-img
  \"Returns the BufferedImage selected at the history viewer.\"
  #^{:arglists [img-group]}
  [img-group]
  (let [selected-radio (selection img-group)]
    (if (selected-radio) (config selected-radio :user-data))))
") "image-processing.hist-view-gui" :repl-thread 1599)

[-Received-] 560.17
(:write-string "#'image-processing.hist-view-gui/get-selected-img
" :repl-result)
[-Received-] 560.17
(:indentation-update (("with-bindings" . 0)))
[-Received-] 560.17
(:return (:ok nil) 1599)
[Actionlist] 560.17
1599: finished :listener-eval 
params: nil
[---Sent---] 560.39
(:emacs-rex (swank:operator-arglist "doc" "image-processing.test.hist-view-gui") "image-processing.test.hist-view-gui" t 1600)

[-Received-] 560.39
(:indentation-update (("with-bindings" . 1)))
[-Received-] 560.39
(:return (:ok nil) 1600)
[Actionlist] 560.39
1600: finished :operator-arglist 
params: nil
[---Sent---] 560.61
(:emacs-rex (swank:fuzzy-completions "get-sele" "image-processing.test.hist-view-gui" :limit 200 :time-limit-in-msec 2000) nil t 1601)

[-Received-] 560.62
(:indentation-update (("with-bindings" . 0)))
[-Received-] 560.62
(:return (:ok ((nil) nil)) 1601)
[Actionlist] 560.62
1601: finished :fuzzy-completions 
params: [['nil'], 'nil']
[---Sent---] 560.97
(:emacs-rex (swank:listener-eval "(doc get-selected-img)
") "image-processing.test.hist-view-gui" :repl-thread 1602)

[-Received-] 560.97
(:debug 1 1 ("Unable to resolve symbol: doc in this context" "  [Thrown class java.lang.RuntimeException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "              Util.java:156 clojure.lang.Util.runtimeException" (:restartable nil)) (1 "         Compiler.java:6720 clojure.lang.Compiler.resolveIn" (:restartable nil)) (2 "         Compiler.java:6664 clojure.lang.Compiler.resolve" (:restartable nil)) (3 "         Compiler.java:6625 clojure.lang.Compiler.analyzeSymbol" (:restartable nil)) (4 "         Compiler.java:6198 clojure.lang.Compiler.analyze" (:restartable nil)) (5 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil)) (6 "         Compiler.java:3452 clojure.lang.Compiler$InvokeExpr.parse" (:restartable nil)) (7 "         Compiler.java:6411 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (8 "         Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil)) (9 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil))) (nil))
[-Received-] 560.98
(:debug-activate 1 1 nil)
[---Sent---] 561.14
(:emacs-rex (swank:throw-to-toplevel) nil 1 1603)

[-Received-] 561.14
(:return (:abort) 1603)
[Actionlist] 561.15
1602: pending  :listener-eval 
1603: finished :throw-to-toplevel 
[-Received-] 561.15
(:debug-return 1 1 nil)
[-Received-] 561.15
(:return (:abort) 1602)
[Actionlist] 561.15
1602: finished :listener-eval 
1603: finished :throw-to-toplevel 
[---Sent---] 561.44
(:emacs-rex (swank:listener-eval "(ns image-processing.test.hist-view-gui
    (:import
      (javax.imageio ImageIO) 
      (java.io File))
    (:use
      [clojure.test]
      [seesaw core make-widget border]
      [image-processing.hist-view-gui]))

; FIXME: wait for a user action.


(def x (map #(ImageIO/read (File. %)) 
            '(\"test/image_processing/test/1a7r.gif\" 
              \"test/image_processing/test/1azc.gif\")))


(defn create-frame []
  (let [panel-info (create-hist-panel)
        hist-panel (first panel-info)
        img-group (second panel-info)]
    (add-imgs hist-panel img-group (first x) (second x))
    (-> (frame :title \"Hello\",
               :content  (scrollable hist-panel))
        ;:on-close :exit) 
        pack! 
        show!)
    [hist-panel img-group]))

(def z (create-frame))

;(get-selected-img (second z))
") "image-processing.test.hist-view-gui" :repl-thread 1604)

[-Received-] 561.5
(:write-string "#'image-processing.test.hist-view-gui/z
" :repl-result)
[-Received-] 561.5
(:indentation-update (("with-bindings" . 1)))
[-Received-] 561.5
(:return (:ok nil) 1604)
[Actionlist] 561.5
1604: finished :listener-eval 
params: nil
[---Sent---] 561.7
(:emacs-rex (swank:listener-eval "(get-selected-img (second z))
") "image-processing.test.hist-view-gui" :repl-thread 1605)

[-Received-] 561.7
(:debug 1 1 ("No message." "  [Thrown class java.lang.NullPointerException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "      NO_SOURCE_FILE:1 image-processing.hist-view-gui/get-selected-img" (:restartable nil)) (1 "      NO_SOURCE_FILE:1 image-processing.test.hist-view-gui/eval7663" (:restartable nil)) (2 "    Compiler.java:6465 clojure.lang.Compiler.eval" (:restartable nil)) (3 "    Compiler.java:6431 clojure.lang.Compiler.eval" (:restartable nil)) (4 "         core.clj:2795 clojure.core/eval" (:restartable nil)) (5 "          core.clj:534 swank.core/eval825[fn]" (:restartable nil)) (6 "      MultiFn.java:163 clojure.lang.MultiFn.invoke" (:restartable nil)) (7 "          basic.clj:55 swank.commands.basic/eval-region" (:restartable nil)) (8 "          basic.clj:45 swank.commands.basic/eval-region" (:restartable nil)) (9 "          basic.clj:79 swank.commands.basic/eval1101[fn]" (:restartable nil))) (nil))
[-Received-] 561.71
(:debug-activate 1 1 nil)
[---Sent---] 561.84
(:emacs-rex (swank:throw-to-toplevel) nil 1 1606)

[-Received-] 561.84
(:return (:abort) 1606)
[Actionlist] 561.84
1605: pending  :listener-eval 
1606: finished :throw-to-toplevel 
[-Received-] 561.84
(:debug-return 1 1 nil)
[-Received-] 561.84
(:return (:abort) 1605)
[Actionlist] 561.84
1605: finished :listener-eval 
1606: finished :throw-to-toplevel 
[---Sent---] 562.14
(:emacs-rex (swank:operator-arglist "not=" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1607)

[-Received-] 562.14
(:indentation-update (("with-bindings" . 0)))
[-Received-] 562.14
(:return (:ok "([x] [x y] [x y & more])") 1607)
[Actionlist] 562.14
1607: finished :operator-arglist 
params: "([x] [x y] [x y & more])"
[---Sent---] 562.23
(:emacs-rex (swank:operator-arglist "not=" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1608)

[-Received-] 562.23
(:indentation-update (("with-bindings" . 1)))
[-Received-] 562.23
(:return (:ok "([x] [x y] [x y & more])") 1608)
[Actionlist] 562.23
1608: finished :operator-arglist 
params: "([x] [x y] [x y & more])"
[---Sent---] 562.32
(:emacs-rex (swank:listener-eval "(defn get-selected-img
  \"Returns the BufferedImage selected at the history viewer.\"
  #^{:arglists [img-group]}
  [img-group]
  (let [selected-radio (selection img-group)]
    (if (not= nil selected-radio) (config selected-radio :user-data))))
") "image-processing.hist-view-gui" :repl-thread 1609)

[-Received-] 562.33
(:write-string "#'image-processing.hist-view-gui/get-selected-img
" :repl-result)
[-Received-] 562.4
(:indentation-update (("with-bindings" . 0)))
[-Received-] 562.4
(:return (:ok nil) 1609)
[Actionlist] 562.4
1609: finished :listener-eval 
params: nil
[---Sent---] 562.63
(:emacs-rex (swank:listener-eval "(get-selected-img (second z))
") "image-processing.test.hist-view-gui" :repl-thread 1610)

[-Received-] 562.63
(:write-string "nil
" :repl-result)
[-Received-] 562.72
(:indentation-update (("with-bindings" . 1)))
[-Received-] 562.72
(:return (:ok nil) 1610)
[Actionlist] 562.72
1610: finished :listener-eval 
params: nil
[---Sent---] 562.97
(:emacs-rex (swank:listener-eval "(get-selected-img (second z))
") "image-processing.test.hist-view-gui" :repl-thread 1611)

[-Received-] 562.97
(:write-string "#<BufferedImage BufferedImage@18a00c8: type = 13 IndexColorModel: #pixelBits = 8 numComponents = 4 color space = java.awt.color.ICC_ColorSpace@13172b2 transparency = 2 transIndex   = 16 has alpha = true isAlphaPre = false ByteInterleavedRaster: width = 200 height = 90 #numDataElements 1 dataOff[0] = 0>
" :repl-result)
[-Received-] 563.07
(:indentation-update (("with-bindings" . 0)))
[-Received-] 563.07
(:return (:ok nil) 1611)
[Actionlist] 563.07
1611: finished :listener-eval 
params: nil
[---Sent---] 563.35
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1612)

[-Received-] 563.35
(:indentation-update (("with-bindings" . 1)))
[-Received-] 563.35
(:return (:ok nil) 1612)
[Actionlist] 563.35
1612: finished :operator-arglist 
params: nil
[---Sent---] 563.48
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1613)

[-Received-] 563.49
(:indentation-update (("with-bindings" . 0)))
[-Received-] 563.49
(:return (:ok nil) 1613)
[Actionlist] 563.49
1613: finished :operator-arglist 
params: nil
[---Sent---] 563.54
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1614)

[-Received-] 563.55
(:indentation-update (("with-bindings" . 1)))
[-Received-] 563.55
(:return (:ok nil) 1614)
[Actionlist] 563.55
1614: finished :operator-arglist 
params: nil
[---Sent---] 563.58
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1615)

[-Received-] 563.59
(:indentation-update (("with-bindings" . 0)))
[-Received-] 563.59
(:return (:ok nil) 1615)
[Actionlist] 563.59
1615: finished :operator-arglist 
params: nil
[---Sent---] 563.7
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1616)

[-Received-] 563.7
(:indentation-update (("with-bindings" . 1)))
[-Received-] 563.7
(:return (:ok nil) 1616)
[Actionlist] 563.71
1616: finished :operator-arglist 
params: nil
[---Sent---] 563.78
(:emacs-rex (swank:operator-arglist "returns" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1617)

[-Received-] 563.79
(:indentation-update (("with-bindings" . 0)))
[-Received-] 563.79
(:return (:ok nil) 1617)
[Actionlist] 563.79
1617: finished :operator-arglist 
params: nil
[---Sent---] 564.31
(:emacs-rex (swank:listener-eval "(ns image-processing.test.hist-view-gui
    (:import
      (javax.imageio ImageIO) 
      (java.io File))
    (:use
      [clojure.test]
      [seesaw core make-widget border]
      [image-processing.hist-view-gui]))

; FIXME: wait for a user action.


(def x (map #(ImageIO/read (File. %)) 
            '(\"test/image_processing/test/1a7r.gif\" 
              \"test/image_processing/test/1azc.gif\")))


(defn create-frame []
  (let [panel-info (create-hist-panel)
        hist-panel (first panel-info)
        img-group (second panel-info)]
    (add-imgs hist-panel img-group (first x) (second x))
    (-> (frame :title \"Hello\",
               :content  (scrollable hist-panel))
        ;:on-close :exit) 
        pack! 
        show!)
    [hist-panel img-group]))

(def z (create-frame))

(get-selected-img (second z))
") "image-processing.hist-view-gui" :repl-thread 1618)

[-Received-] 564.37
(:write-string "nil
" :repl-result)
[-Received-] 564.37
(:new-package "image-processing.test.hist-view-gui" "image-processing.test.hist-view-gui")
[-Received-] 564.37
(:indentation-update (("with-bindings" . 1)))
[-Received-] 564.37
(:return (:ok nil) 1618)
[Actionlist] 564.37
1618: finished :listener-eval 
params: nil
[---Sent---] 581.36
(:emacs-rex (swank:connection-info) nil t 1626)

[-Received-] 581.45
(:indentation-update (("dothread-keeping-clj" . 1) ("dothread-keeping" . 1) ("dothread" . 0) ("binding-map" . 1) ("print-length-loop" . 1) ("with-pretty-writer" . 1) ("with-pprint-dispatch" . 1) ("with-connection" . 1) ("with-bindings" . 0) ("with-emacs-package" . 0) ("dothread-swank" . 0) ("with-read-line-support" . 0) ("with-package-tracking" . 0) ("doseq" . 1) ("letfn" . 1) ("cond" . 0) ("with-open" . 1) ("sync" . 1) ("let" . 1) ("dotimes" . 1) ("with-in-str" . 1) ("loop" . 1) ("with-out-str" . 0) ("when-not" . 1) ("with-loading-context" . 0) ("future" . 0) ("with-redefs" . 1) ("when-first" . 1) ("comment" . 0) ("condp" . 2) ("with-local-vars" . 1) ("with-bindings" . 1) ("when-let" . 1) ("while" . 1) ("case" . 1) ("locking" . 1) ("delay" . 0) ("io!" . 0) ("lazy-seq" . 0) ("when" . 1) ("binding" . 1) ("defslimefn" . defun) ("returning" . 1) ("continuously" . 0) ("failing-gracefully" . 0)))
[-Received-] 581.46
(:return (:ok (:pid "17480" :style :spawn :lisp-implementation (:type "Clojure" :name "clojure" :version "1.3.0") :package (:name "user" :prompt "user") :version "20100404")) 1626)
[Actionlist] 581.46
1626: finished :connection-info 
params: [':pid', '"17480"', ':style', ':spawn', ':lisp-implementation', [':type', '"Clojure"', ':name', '"clojure"', ':version', '"1.3.0"'], ':package', [':name', '"user"', ':prompt', '"user"'], ':version', '"20100404"']
 Package:user Prompt:user
[---Sent---] 581.49
(:emacs-rex (swank:create-repl nil) "image-processing.test.image" t 1627)

[-Received-] 581.49
(:return (:ok ("user" "user")) 1627)
[Actionlist] 581.49
1627: finished :create-repl 
params: ['"user"', '"user"']
[---Sent---] 581.5
(:emacs-rex (swank:swank-require 'swank-fuzzy) nil t 1628)

[---Sent---] 581.58
(:emacs-rex (swank:listener-eval "(use '[clojure.repl :only (source apropos dir pst doc find-doc)])
(use '[clojure.java.javadoc :only (javadoc)])
(use '[clojure.pprint :only (pp pprint)])
") "image-processing.test.image" :repl-thread 1629)

[-Received-] 581.59
(:write-string "nil
" :repl-result)
[-Received-] 581.59
(:indentation-update (("with-timeout" . 1) ("with-bindings" . 0)))
[-Received-] 581.59
(:return (:ok nil) 1629)
[Actionlist] 581.59
1628: pending  :swank-require 
1629: finished :listener-eval 
params: nil
[-Received-] 581.59
(:indentation-update (("with-timeout" . 1) ("with-bindings" . 0)))
[-Received-] 581.6
(:return (:ok nil) 1628)
[Actionlist] 581.6
1628: finished :swank-require 
1629: finished :listener-eval 
params: nil
[---Sent---] 581.83
(:emacs-rex (swank:listener-eval "(rest [1 2 3])
") "user" :repl-thread 1630)

[-Received-] 581.83
(:write-string "(2 3)
" :repl-result)
[-Received-] 581.93
(:indentation-update (("with-bindings" . 1)))
[-Received-] 581.93
(:return (:ok nil) 1630)
[Actionlist] 581.93
1630: finished :listener-eval 
params: nil
[---Sent---] 583.41
(:emacs-rex (swank:operator-arglist "count" "image-processing.test.hist-view-gui") "image-processing.test.hist-view-gui" t 1631)

[-Received-] 583.42
(:indentation-update (("with-bindings" . 0)))
[-Received-] 583.42
(:return (:ok "([coll])") 1631)
[Actionlist] 583.42
1631: finished :operator-arglist 
params: "([coll])"
[---Sent---] 583.43
(:emacs-rex (swank:describe-function "count") "image-processing.test.hist-view-gui" t 1632)

[-Received-] 583.43
(:indentation-update (("with-bindings" . 1)))
[-Received-] 583.44
(:return (:ok "-------------------------
clojure.core/count
([coll])
  Returns the number of items in the collection. (count nil) returns
  0.  Also works on strings, arrays, and Java Collections and Maps
") 1632)
[Actionlist] 583.44
1632: finished :describe-function 
params: "-------------------------
clojure.core/count
([coll])
  Returns the number of items in the collection. (count nil) returns
  0.  Also works on strings, arrays, and Java Collections and Maps
"
[---Sent---] 583.62
(:emacs-rex (swank:operator-arglist "colors" "image-processing.core") "image-processing.core" t 1633)

[-Received-] 583.63
(:indentation-update (("with-bindings" . 0)))
[-Received-] 583.63
(:return (:ok nil) 1633)
[Actionlist] 583.63
1633: finished :operator-arglist 
params: nil
[---Sent---] 584.83
(:emacs-rex (swank:listener-eval "(subvec [1 2 3] 1)
") "image-processing.core" :repl-thread 1634)

[-Received-] 584.83
(:write-string "[2 3]
" :repl-result)
[-Received-] 584.93
(:indentation-update (("with-bindings" . 1)))
[-Received-] 584.93
(:return (:ok nil) 1634)
[Actionlist] 584.93
1634: finished :listener-eval 
params: nil
[---Sent---] 585.19
(:emacs-rex (swank:operator-arglist "subvec" "image-processing.core") "image-processing.core" t 1635)

[-Received-] 585.19
(:indentation-update (("with-bindings" . 0)))
[-Received-] 585.19
(:return (:ok "([v start] [v start end])") 1635)
[Actionlist] 585.19
1635: finished :operator-arglist 
params: "([v start] [v start end])"
[---Sent---] 585.31
(:emacs-rex (swank:operator-arglist "subvec" "image-processing.core") "image-processing.core" t 1636)

[-Received-] 585.32
(:indentation-update (("with-bindings" . 1)))
[-Received-] 585.32
(:return (:ok "([v start] [v start end])") 1636)
[Actionlist] 585.32
1636: finished :operator-arglist 
params: "([v start] [v start end])"
[---Sent---] 585.5
(:emacs-rex (swank:operator-arglist "fn" "image-processing.core") "image-processing.core" t 1637)

[-Received-] 585.51
(:indentation-update (("with-bindings" . 0)))
[-Received-] 585.51
(:return (:ok "([& sigs])") 1637)
[Actionlist] 585.51
1637: finished :operator-arglist 
params: "([& sigs])"
[---Sent---] 586.12
(:emacs-rex (swank:operator-arglist "color" "image-processing.core") "image-processing.core" t 1638)

[-Received-] 586.13
(:indentation-update (("with-bindings" . 1)))
[-Received-] 586.13
(:return (:ok nil) 1638)
[Actionlist] 586.13
1638: finished :operator-arglist 
params: nil
[---Sent---] 586.23
(:emacs-rex (swank:operator-arglist "color1" "image-processing.core") "image-processing.core" t 1639)

[-Received-] 586.24
(:indentation-update (("with-bindings" . 0)))
[-Received-] 586.24
(:return (:ok nil) 1639)
[Actionlist] 586.24
1639: finished :operator-arglist 
params: nil
[---Sent---] 586.71
(:emacs-rex (swank:operator-arglist "rgb-func" "image-processing.core") "image-processing.core" t 1640)

[-Received-] 586.71
(:indentation-update (("with-bindings" . 1)))
[-Received-] 586.71
(:return (:ok nil) 1640)
[Actionlist] 586.71
1640: finished :operator-arglist 
params: nil
[---Sent---] 586.98
(:emacs-rex (swank:operator-arglist "color2" "image-processing.core") "image-processing.core" t 1641)

[-Received-] 586.99
(:indentation-update (("with-bindings" . 0)))
[-Received-] 586.99
(:return (:ok nil) 1641)
[Actionlist] 586.99
1641: finished :operator-arglist 
params: nil
[---Sent---] 587.13
(:emacs-rex (swank:operator-arglist "rgb-func" "image-processing.core") "image-processing.core" t 1642)

[-Received-] 587.14
(:indentation-update (("with-bindings" . 1)))
[-Received-] 587.14
(:return (:ok nil) 1642)
[Actionlist] 587.14
1642: finished :operator-arglist 
params: nil
[---Sent---] 587.7
(:emacs-rex (swank:listener-eval "(ns image-processing.test.hist-view-gui
    (:import
      (javax.imageio ImageIO) 
      (java.io File))
    (:use
      [clojure.test]
      [seesaw core make-widget border]
      [image-processing.hist-view-gui]))

; FIXME: wait for a user action.


(def x (map #(ImageIO/read (File. %)) 
            '(\"test/image_processing/test/1a7r.gif\" 
              \"test/image_processing/test/1azc.gif\")))


(defn create-frame []
  (let [panel-info (create-hist-panel)
        hist-panel (first panel-info)
        img-group (second panel-info)]
    (add-imgs hist-panel img-group (first x) (second x))
    (-> (frame :title \"Hello\",
               :content  (scrollable hist-panel))
        ;:on-close :exit) 
        pack! 
        show!)
    [hist-panel img-group]))

(def z (create-frame))

(get-selected-img (second z))
") "image-processing.test.hist-view-gui" :repl-thread 1644)

[---Sent---] 587.79
(:emacs-rex (swank:operator-arglist "panel-info" "image-processing.test.hist-view-gui") "image-processing.test.hist-view-gui" t 1645)

[-Received-] 587.82
(:indentation-update (("deftest-" . 1) ("deftest" . 1) ("testing" . 1) ("with-test-out" . 0) ("set-test" . 1) ("with-test" . 1) ("with-bindings" . 1) ("invoke-now" . 0) ("invoke-soon" . 0) ("signaller" . 1) ("invoke-later" . 0)))
[-Received-] 587.82
(:return (:ok nil) 1645)
[Actionlist] 587.82
1644: pending  :listener-eval 
1645: finished :operator-arglist 
params: nil
[-Received-] 588.23
(:write-string "nil
" :repl-result)
[-Received-] 588.23
(:new-package "image-processing.test.hist-view-gui" "image-processing.test.hist-view-gui")
[---Sent---] 588.66
(:emacs-rex (swank:listener-eval "(get-selected-img (second z))
") "image-processing.test.hist-view-gui" :repl-thread 1647)

[-Received-] 588.67
(:write-string "#<BufferedImage BufferedImage@10a7d8b: type = 13 IndexColorModel: #pixelBits = 8 numComponents = 4 color space = java.awt.color.ICC_ColorSpace@1b85e58 transparency = 2 transIndex   = 16 has alpha = true isAlphaPre = false ByteInterleavedRaster: width = 200 height = 90 #numDataElements 1 dataOff[0] = 0>
" :repl-result)
[---Sent---] 589.47
(:emacs-rex (swank:operator-arglist "img-group" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1648)

[-Received-] 589.48
(:indentation-update (("with-bindings" . 1)))
[-Received-] 589.48
(:return (:ok nil) 1648)
[Actionlist] 589.48
1648: finished :operator-arglist 
params: nil
[---Sent---] 589.48
(:emacs-rex (swank:operator-arglist "vec" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1649)

[-Received-] 589.48
(:indentation-update (("with-bindings" . 0)))
[-Received-] 589.48
(:return (:ok "([coll])") 1649)
[Actionlist] 589.48
1649: finished :operator-arglist 
params: "([coll])"
[---Sent---] 589.48
(:emacs-rex (swank:describe-function "vec") "image-processing.hist-view-gui" t 1650)

[-Received-] 589.49
(:indentation-update (("with-bindings" . 1)))
[-Received-] 589.49
(:return (:ok "-------------------------
clojure.core/vec
([coll])
  Creates a new vector containing the contents of coll.
") 1650)
[Actionlist] 589.49
1650: finished :describe-function 
params: "-------------------------
clojure.core/vec
([coll])
  Creates a new vector containing the contents of coll.
"
[---Sent---] 589.5
(:emacs-rex (swank:operator-arglist ":items" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1651)

[-Received-] 589.5
(:indentation-update (("with-bindings" . 0)))
[-Received-] 589.5
(:return (:ok "([map])") 1651)
[Actionlist] 589.5
1651: finished :operator-arglist 
params: "([map])"
[---Sent---] 589.5
(:emacs-rex (swank:describe-function ":items") "image-processing.hist-view-gui" t 1652)

[-Received-] 589.5
(:indentation-update (("with-bindings" . 1)))
[-Received-] 589.51
(:return (:ok nil) 1652)
[Actionlist] 589.51
1652: finished :describe-function 
params: nil
[---Sent---] 591.3
(:emacs-rex (swank:operator-arglist "#^" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1653)

[-Received-] 591.3
(:indentation-update (("with-bindings" . 0)))
[-Received-] 591.3
(:return (:ok nil) 1653)
[Actionlist] 591.3
1653: finished :operator-arglist 
params: nil
[---Sent---] 591.59
(:emacs-rex (swank:operator-arglist "buff-img" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1654)

[-Received-] 591.6
(:indentation-update (("with-bindings" . 1)))
[-Received-] 591.6
(:return (:ok nil) 1654)
[Actionlist] 591.6
1654: finished :operator-arglist 
params: nil
[---Sent---] 593.89
(:emacs-rex (swank:operator-arglist "map" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1655)

[---Sent---] 596.86
(:emacs-rex (swank:operator-arglist "get-img-coords" "image-processing.hist-view-gui") "image-processing.hist-view-gui" t 1656)

[---Sent---] 609.82
(:emacs-rex (swank:connection-info) nil t 1657)

[-Received-] 609.96
(:indentation-update (("dothread-keeping-clj" . 1) ("dothread-keeping" . 1) ("dothread" . 0) ("binding-map" . 1) ("print-length-loop" . 1) ("with-pretty-writer" . 1) ("with-pprint-dispatch" . 1) ("with-connection" . 1) ("with-bindings" . 0) ("with-emacs-package" . 0) ("dothread-swank" . 0) ("with-read-line-support" . 0) ("with-package-tracking" . 0) ("doseq" . 1) ("letfn" . 1) ("cond" . 0) ("with-open" . 1) ("sync" . 1) ("let" . 1) ("dotimes" . 1) ("with-in-str" . 1) ("loop" . 1) ("with-out-str" . 0) ("when-not" . 1) ("with-loading-context" . 0) ("future" . 0) ("with-redefs" . 1) ("when-first" . 1) ("comment" . 0) ("condp" . 2) ("with-local-vars" . 1) ("with-bindings" . 1) ("when-let" . 1) ("while" . 1) ("case" . 1) ("locking" . 1) ("delay" . 0) ("io!" . 0) ("lazy-seq" . 0) ("when" . 1) ("binding" . 1) ("defslimefn" . defun) ("returning" . 1) ("continuously" . 0) ("failing-gracefully" . 0)))
[-Received-] 609.97
(:return (:ok (:pid "18585" :style :spawn :lisp-implementation (:type "Clojure" :name "clojure" :version "1.3.0") :package (:name "user" :prompt "user") :version "20100404")) 1657)
[Actionlist] 609.97
1657: finished :connection-info 
params: [':pid', '"18585"', ':style', ':spawn', ':lisp-implementation', [':type', '"Clojure"', ':name', '"clojure"', ':version', '"1.3.0"'], ':package', [':name', '"user"', ':prompt', '"user"'], ':version', '"20100404"']
 Package:user Prompt:user
[---Sent---] 610.02
(:emacs-rex (swank:create-repl nil) "image-processing.hist-view-gui" t 1658)

[-Received-] 610.03
(:indentation-update (("with-bindings" . 0)))
[-Received-] 610.04
(:return (:ok ("user" "user")) 1658)
[Actionlist] 610.04
1658: finished :create-repl 
params: ['"user"', '"user"']
[---Sent---] 610.04
(:emacs-rex (swank:swank-require 'swank-fuzzy) nil t 1659)

[---Sent---] 610.11
(:emacs-rex (swank:listener-eval "(use '[clojure.repl :only (source apropos dir pst doc find-doc)])
(use '[clojure.java.javadoc :only (javadoc)])
(use '[clojure.pprint :only (pp pprint)])
") "image-processing.hist-view-gui" :repl-thread 1660)

[-Received-] 610.12
(:write-string "nil
" :repl-result)
[-Received-] 610.17
(:indentation-update (("with-timeout" . 1) ("with-bindings" . 1)))
[-Received-] 610.17
(:return (:ok nil) 1660)
[Actionlist] 610.17
1659: pending  :swank-require 
1660: finished :listener-eval 
params: nil
[-Received-] 610.29
(:indentation-update (("with-bindings" . 0)))
[-Received-] 610.29
(:return (:ok nil) 1659)
[Actionlist] 610.29
1659: finished :swank-require 
params: nil
[---Sent---] 610.5
(:emacs-rex (swank:listener-eval "(ns image-processing.image)

(defprotocol Points
  \"This abstracts the ways to access points.\"
  (get-point [this x y] \"Returns the content of a specific point.\"))

(defrecord Image [points width]
  Points
  (get-point [img x y]
    (when (< x width)
      (get points (+ x (* y width))))))


(defn image?
  \"Doc\"
  #^{:arglists [arg]}
  [arg]
  (= (type arg) (type (Image. 0 0))))

") "user" :repl-thread 1661)

[-Received-] 610.55
(:write-string "#'image-processing.image/image?
" :repl-result)
[-Received-] 610.55
(:new-package "image-processing.image" "image-processing.image")
[-Received-] 610.59
(:indentation-update (("with-bindings" . 1)))
[-Received-] 610.59
(:return (:ok nil) 1661)
[Actionlist] 610.59
1661: finished :listener-eval 
params: nil
[---Sent---] 610.86
(:emacs-rex (swank:operator-arglist "image?" "image-processing.image") "image-processing.image" t 1662)

[-Received-] 610.88
(:indentation-update (("with-bindings" . 0)))
[-Received-] 610.88
(:return (:ok "([arg])") 1662)
[Actionlist] 610.88
1662: finished :operator-arglist 
params: "([arg])"
[---Sent---] 610.96
(:emacs-rex (swank:listener-eval "(image? 1)
") "image-processing.image" :repl-thread 1663)

[-Received-] 611.02
(:write-string "false
" :repl-result)
[-Received-] 611.02
(:indentation-update (("with-bindings" . 1)))
[-Received-] 611.02
(:return (:ok nil) 1663)
[Actionlist] 611.03
1663: finished :listener-eval 
params: nil
[---Sent---] 611.41
(:emacs-rex (swank:operator-arglist "Image" "image-processing.image") "image-processing.image" t 1664)

[-Received-] 611.41
(:indentation-update (("with-bindings" . 0)))
[-Received-] 611.41
(:return (:ok nil) 1664)
[Actionlist] 611.41
1664: finished :operator-arglist 
params: nil
[---Sent---] 611.44
(:emacs-rex (swank:operator-arglist "Image" "image-processing.image") "image-processing.image" t 1665)

[-Received-] 611.44
(:indentation-update (("with-bindings" . 1)))
[-Received-] 611.44
(:return (:ok nil) 1665)
[Actionlist] 611.45
1665: finished :operator-arglist 
params: nil
[---Sent---] 611.63
(:emacs-rex (swank:listener-eval "(image? (Image. [1 2 3] 2))
") "image-processing.image" :repl-thread 1666)

[-Received-] 611.63
(:write-string "true
" :repl-result)
[-Received-] 611.71
(:indentation-update (("with-bindings" . 0)))
[-Received-] 611.72
(:return (:ok nil) 1666)
[Actionlist] 611.72
1666: finished :listener-eval 
params: nil
[---Sent---] 611.89
(:emacs-rex (swank:operator-arglist "def" "image-processing.image") "image-processing.image" t 1667)

[-Received-] 611.9
(:indentation-update (("with-bindings" . 1)))
[-Received-] 611.9
(:return (:ok nil) 1667)
[Actionlist] 611.9
1667: finished :operator-arglist 
params: nil
[---Sent---] 611.93
(:emacs-rex (swank:operator-arglist "def" "image-processing.image") "image-processing.image" t 1668)

[-Received-] 611.93
(:indentation-update (("with-bindings" . 0)))
[-Received-] 611.93
(:return (:ok nil) 1668)
[Actionlist] 611.93
1668: finished :operator-arglist 
params: nil
[---Sent---] 612.14
(:emacs-rex (swank:operator-arglist "Image" "image-processing.image") "image-processing.image" t 1669)

[-Received-] 612.14
(:indentation-update (("with-bindings" . 1)))
[-Received-] 612.14
(:return (:ok nil) 1669)
[Actionlist] 612.14
1669: finished :operator-arglist 
params: nil
[---Sent---] 612.18
(:emacs-rex (swank:operator-arglist "Image" "image-processing.image") "image-processing.image" t 1670)

[-Received-] 612.18
(:indentation-update (("with-bindings" . 0)))
[-Received-] 612.18
(:return (:ok nil) 1670)
[Actionlist] 612.18
1670: finished :operator-arglist 
params: nil
[---Sent---] 612.34
(:emacs-rex (swank:listener-eval "(def x (Image. [1 2 3] 3)) 
") "image-processing.image" :repl-thread 1671)

[-Received-] 612.34
(:write-string "#'image-processing.image/x
" :repl-result)
[-Received-] 612.43
(:indentation-update (("with-bindings" . 1)))
[-Received-] 612.43
(:return (:ok nil) 1671)
[Actionlist] 612.43
1671: finished :listener-eval 
params: nil
[---Sent---] 612.61
(:emacs-rex (swank:listener-eval "x 
") "image-processing.image" :repl-thread 1672)

[-Received-] 612.61
(:write-string "#image_processing.image.Image{:points [1 2 3], :width 3}
" :repl-result)
[-Received-] 612.69
(:indentation-update (("with-bindings" . 0)))
[-Received-] 612.69
(:return (:ok nil) 1672)
[Actionlist] 612.69
1672: finished :listener-eval 
params: nil
[---Sent---] 612.95
(:emacs-rex (swank:operator-arglist "get-point" "image-processing.image") "image-processing.image" t 1673)

[-Received-] 612.96
(:indentation-update (("with-bindings" . 1)))
[-Received-] 612.96
(:return (:ok "([this x y])") 1673)
[Actionlist] 612.96
1673: finished :operator-arglist 
params: "([this x y])"
[---Sent---] 613.02
(:emacs-rex (swank:operator-arglist "get-point" "image-processing.image") "image-processing.image" t 1674)

[-Received-] 613.03
(:indentation-update (("with-bindings" . 0)))
[-Received-] 613.03
(:return (:ok "([this x y])") 1674)
[Actionlist] 613.03
1674: finished :operator-arglist 
params: "([this x y])"
[---Sent---] 613.08
(:emacs-rex (swank:operator-arglist "get-point" "image-processing.image") "image-processing.image" t 1675)

[-Received-] 613.08
(:indentation-update (("with-bindings" . 1)))
[-Received-] 613.08
(:return (:ok "([this x y])") 1675)
[Actionlist] 613.08
1675: finished :operator-arglist 
params: "([this x y])"
[---Sent---] 613.18
(:emacs-rex (swank:operator-arglist "get-point" "image-processing.image") "image-processing.image" t 1676)

[-Received-] 613.18
(:indentation-update (("with-bindings" . 0)))
[-Received-] 613.18
(:return (:ok "([this x y])") 1676)
[Actionlist] 613.18
1676: finished :operator-arglist 
params: "([this x y])"
[---Sent---] 613.26
(:emacs-rex (swank:listener-eval "(get-point x 0 0) 
") "image-processing.image" :repl-thread 1677)

[-Received-] 613.33
(:write-string "1
" :repl-result)
[-Received-] 613.33
(:indentation-update (("with-bindings" . 1)))
[-Received-] 613.33
(:return (:ok nil) 1677)
[Actionlist] 613.33
1677: finished :listener-eval 
params: nil
[---Sent---] 613.6
(:emacs-rex (swank:listener-eval "(get-point 10 0 0)
") "image-processing.image" :repl-thread 1678)

[-Received-] 613.66
(:debug 1 1 ("No implementation of method: :get-point of protocol: #'image-processing.image/Points found for class: java.lang.Long" "  [Thrown class java.lang.IllegalArgumentException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "  core_deftype.clj:495 clojure.core/-cache-protocol-fn" (:restartable nil)) (1 "      NO_SOURCE_FILE:1 image-processing.image/eval2235[fn]" (:restartable nil)) (2 "      NO_SOURCE_FILE:1 image-processing.image/eval2318" (:restartable nil)) (3 "    Compiler.java:6465 clojure.lang.Compiler.eval" (:restartable nil)) (4 "    Compiler.java:6431 clojure.lang.Compiler.eval" (:restartable nil)) (5 "         core.clj:2795 clojure.core/eval" (:restartable nil)) (6 "          core.clj:534 swank.core/eval825[fn]" (:restartable nil)) (7 "      MultiFn.java:163 clojure.lang.MultiFn.invoke" (:restartable nil)) (8 "          basic.clj:55 swank.commands.basic/eval-region" (:restartable nil)) (9 "          basic.clj:45 swank.commands.basic/eval-region" (:restartable nil))) (nil))
[-Received-] 613.67
(:debug-activate 1 1 nil)
[---Sent---] 613.87
(:emacs-rex (swank:throw-to-toplevel) nil 1 1679)

[-Received-] 613.87
(:return (:abort) 1679)
[Actionlist] 613.87
1678: pending  :listener-eval 
1679: finished :throw-to-toplevel 
[-Received-] 613.87
(:debug-return 1 1 nil)
[-Received-] 613.87
(:return (:abort) 1678)
[Actionlist] 613.87
1678: finished :listener-eval 
1679: finished :throw-to-toplevel 
[---Sent---] 614.24
(:emacs-rex (swank:operator-arglist "assert" "image-processing.image") "image-processing.image" t 1680)

[-Received-] 614.24
(:indentation-update (("with-bindings" . 0)))
[-Received-] 614.24
(:return (:ok "([x] [x message])") 1680)
[Actionlist] 614.24
1680: finished :operator-arglist 
params: "([x] [x message])"
[---Sent---] 614.34
(:emacs-rex (swank:operator-arglist "type" "image-processing.image") "image-processing.image" t 1681)

[-Received-] 614.35
(:indentation-update (("with-bindings" . 1)))
[-Received-] 614.35
(:return (:ok "([x])") 1681)
[Actionlist] 614.35
1681: finished :operator-arglist 
params: "([x])"
[---Sent---] 614.58
(:emacs-rex (swank:operator-arglist "type" "image-processing.image") "image-processing.image" t 1682)

[-Received-] 614.59
(:indentation-update (("with-bindings" . 0)))
[-Received-] 614.59
(:return (:ok "([x])") 1682)
[Actionlist] 614.59
1682: finished :operator-arglist 
params: "([x])"
[---Sent---] 614.92
(:emacs-rex (swank:operator-arglist "defn" "image-processing.image") "image-processing.image" t 1683)

[-Received-] 614.93
(:indentation-update (("with-bindings" . 1)))
[-Received-] 614.93
(:return (:ok "([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])") 1683)
[Actionlist] 614.93
1683: finished :operator-arglist 
params: "([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])"
[---Sent---] 614.93
(:emacs-rex (swank:describe-function "defn") "image-processing.image" t 1684)

[-Received-] 614.93
(:indentation-update (("with-bindings" . 0)))
[-Received-] 614.93
(:return (:ok "-------------------------
clojure.core/defn
([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])
Macro
  Same as (def name (fn [params* ] exprs*)) or (def
    name (fn ([params* ] exprs*)+)) with any doc-string or attrs added
    to the var metadata
") 1684)
[Actionlist] 614.93
1684: finished :describe-function 
params: "-------------------------
clojure.core/defn
([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])
Macro
  Same as (def name (fn [params* ] exprs*)) or (def
    name (fn ([params* ] exprs*)+)) with any doc-string or attrs added
    to the var metadata
"
[---Sent---] 615.17
(:emacs-rex (swank:listener-eval "(defrecord Image [points width]
  (assert (= (type points) (type [])))
  Points
  (get-point [img x y]
    (when (< x width)
      (get points (+ x (* y width))))))
") "image-processing.image" :repl-thread 1685)

[-Received-] 615.18
(:debug 1 1 ("clojure.lang.PersistentList cannot be cast to clojure.lang.Symbol" "  [Thrown class java.lang.ClassCastException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "         core.clj:3879 clojure.core/ns-resolve" (:restartable nil)) (1 "         core.clj:3876 clojure.core/ns-resolve" (:restartable nil)) (2 "         core.clj:3885 clojure.core/resolve" (:restartable nil)) (3 "   core_deftype.clj:48 clojure.core/parse-opts+specs[fn]" (:restartable nil)) (4 "         core.clj:2432 clojure.core/map[fn]" (:restartable nil)) (5 "       LazySeq.java:42 clojure.lang.LazySeq.sval" (:restartable nil)) (6 "       LazySeq.java:60 clojure.lang.LazySeq.seq" (:restartable nil)) (7 "          Cons.java:39 clojure.lang.Cons.next" (:restartable nil)) (8 "PersistentHashSet.java:43 clojure.lang.PersistentHashSet.create" (:restartable nil)) (9 "         core.clj:3641 clojure.core/set" (:restartable nil))) (nil))
[-Received-] 615.18
(:debug-activate 1 1 nil)
[---Sent---] 615.62
(:emacs-rex (swank:throw-to-toplevel) nil 1 1686)

[-Received-] 615.63
(:return (:abort) 1686)
[Actionlist] 615.63
1685: pending  :listener-eval 
1686: finished :throw-to-toplevel 
[-Received-] 615.63
(:debug-return 1 1 nil)
[-Received-] 615.63
(:return (:abort) 1685)
[Actionlist] 615.63
1685: finished :listener-eval 
1686: finished :throw-to-toplevel 
[---Sent---] 615.82
(:emacs-rex (swank:operator-arglist "tyoe" "image-processing.image") "image-processing.image" t 1687)

[-Received-] 615.82
(:indentation-update (("with-bindings" . 1)))
[-Received-] 615.82
(:return (:ok nil) 1687)
[Actionlist] 615.82
1687: finished :operator-arglist 
params: nil
[---Sent---] 615.9
(:emacs-rex (swank:operator-arglist "type" "image-processing.image") "image-processing.image" t 1688)

[-Received-] 615.9
(:indentation-update (("with-bindings" . 0)))
[-Received-] 615.9
(:return (:ok "([x])") 1688)
[Actionlist] 615.9
1688: finished :operator-arglist 
params: "([x])"
[---Sent---] 616.0
(:emacs-rex (swank:listener-eval "(type [])
") "image-processing.image" :repl-thread 1689)

[-Received-] 616.0
(:write-string "clojure.lang.PersistentVector
" :repl-result)
[-Received-] 616.08
(:indentation-update (("with-bindings" . 1)))
[-Received-] 616.08
(:return (:ok nil) 1689)
[Actionlist] 616.08
1689: finished :listener-eval 
params: nil
[---Sent---] 616.29
(:emacs-rex (swank:operator-arglist "class" "image-processing.image") "image-processing.image" t 1690)

[-Received-] 616.29
(:indentation-update (("with-bindings" . 0)))
[-Received-] 616.29
(:return (:ok "([x])") 1690)
[Actionlist] 616.29
1690: finished :operator-arglist 
params: "([x])"
[---Sent---] 616.37
(:emacs-rex (swank:listener-eval "(class []) 
") "image-processing.image" :repl-thread 1691)

[-Received-] 616.37
(:write-string "clojure.lang.PersistentVector
" :repl-result)
[-Received-] 616.37
(:indentation-update (("with-bindings" . 1)))
[-Received-] 616.37
(:return (:ok nil) 1691)
[Actionlist] 616.37
1691: finished :listener-eval 
params: nil
[---Sent---] 616.52
(:emacs-rex (swank:operator-arglist "aborted" "image-processing.image") "image-processing.image" t 1692)

[-Received-] 616.52
(:indentation-update (("with-bindings" . 0)))
[-Received-] 616.52
(:return (:ok nil) 1692)
[Actionlist] 616.52
1692: finished :operator-arglist 
params: nil
[---Sent---] 616.63
(:emacs-rex (swank:operator-arglist "doc" "image-processing.image") "image-processing.image" t 1693)

[-Received-] 616.63
(:indentation-update (("with-bindings" . 1)))
[-Received-] 616.63
(:return (:ok nil) 1693)
[Actionlist] 616.63
1693: finished :operator-arglist 
params: nil
[---Sent---] 616.74
(:emacs-rex (swank:listener-eval "(doc type)
") "image-processing.image" :repl-thread 1694)

[-Received-] 616.74
(:debug 1 1 ("Unable to resolve symbol: doc in this context" "  [Thrown class java.lang.RuntimeException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "              Util.java:156 clojure.lang.Util.runtimeException" (:restartable nil)) (1 "         Compiler.java:6720 clojure.lang.Compiler.resolveIn" (:restartable nil)) (2 "         Compiler.java:6664 clojure.lang.Compiler.resolve" (:restartable nil)) (3 "         Compiler.java:6625 clojure.lang.Compiler.analyzeSymbol" (:restartable nil)) (4 "         Compiler.java:6198 clojure.lang.Compiler.analyze" (:restartable nil)) (5 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil)) (6 "         Compiler.java:3452 clojure.lang.Compiler$InvokeExpr.parse" (:restartable nil)) (7 "         Compiler.java:6411 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (8 "         Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil)) (9 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil))) (nil))
[-Received-] 616.75
(:debug-activate 1 1 nil)
[---Sent---] 616.94
(:emacs-rex (swank:throw-to-toplevel) nil 1 1695)

[-Received-] 616.94
(:return (:abort) 1695)
[Actionlist] 616.94
1694: pending  :listener-eval 
1695: finished :throw-to-toplevel 
[-Received-] 616.94
(:debug-return 1 1 nil)
[-Received-] 616.94
(:return (:abort) 1694)
[Actionlist] 616.94
1694: finished :listener-eval 
1695: finished :throw-to-toplevel 
[---Sent---] 617.27
(:emacs-rex (swank:operator-arglist "doc" "image-processing.image") "image-processing.image" t 1696)

[-Received-] 617.27
(:indentation-update (("with-bindings" . 0)))
[-Received-] 617.27
(:return (:ok nil) 1696)
[Actionlist] 617.27
1696: finished :operator-arglist 
params: nil
[---Sent---] 617.34
(:emacs-rex (swank:listener-eval "(doc x)
") "image-processing.image" :repl-thread 1697)

[-Received-] 617.34
(:debug 1 1 ("Unable to resolve symbol: doc in this context" "  [Thrown class java.lang.RuntimeException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "              Util.java:156 clojure.lang.Util.runtimeException" (:restartable nil)) (1 "         Compiler.java:6720 clojure.lang.Compiler.resolveIn" (:restartable nil)) (2 "         Compiler.java:6664 clojure.lang.Compiler.resolve" (:restartable nil)) (3 "         Compiler.java:6625 clojure.lang.Compiler.analyzeSymbol" (:restartable nil)) (4 "         Compiler.java:6198 clojure.lang.Compiler.analyze" (:restartable nil)) (5 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil)) (6 "         Compiler.java:3452 clojure.lang.Compiler$InvokeExpr.parse" (:restartable nil)) (7 "         Compiler.java:6411 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (8 "         Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil)) (9 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil))) (nil))
[-Received-] 617.36
(:debug-activate 1 1 nil)
[---Sent---] 617.55
(:emacs-rex (swank:throw-to-toplevel) nil 1 1698)

[-Received-] 617.55
(:return (:abort) 1698)
[Actionlist] 617.56
1697: pending  :listener-eval 
1698: finished :throw-to-toplevel 
[-Received-] 617.56
(:debug-return 1 1 nil)
[-Received-] 617.56
(:return (:abort) 1697)
[Actionlist] 617.56
1697: finished :listener-eval 
1698: finished :throw-to-toplevel 
[---Sent---] 617.87
(:emacs-rex (swank:operator-arglist "use" "image-processing.image") "image-processing.image" t 1699)

[-Received-] 617.87
(:indentation-update (("with-bindings" . 1)))
[-Received-] 617.87
(:return (:ok "([& args])") 1699)
[Actionlist] 617.87
1699: finished :operator-arglist 
params: "([& args])"
[---Sent---] 618.17
(:emacs-rex (swank:listener-eval "(use '(clojure.repl))
") "image-processing.image" :repl-thread 1700)

[-Received-] 618.17
(:write-string "nil
" :repl-result)
[-Received-] 618.25
(:indentation-update (("with-bindings" . 0)))
[-Received-] 618.25
(:return (:ok nil) 1700)
[Actionlist] 618.25
1700: finished :listener-eval 
params: nil
[---Sent---] 618.42
(:emacs-rex (swank:listener-eval "(doc x)
") "image-processing.image" :repl-thread 1701)

[-Received-] 618.47
(:debug 1 1 ("Unable to resolve symbol: doc in this context" "  [Thrown class java.lang.RuntimeException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "              Util.java:156 clojure.lang.Util.runtimeException" (:restartable nil)) (1 "         Compiler.java:6720 clojure.lang.Compiler.resolveIn" (:restartable nil)) (2 "         Compiler.java:6664 clojure.lang.Compiler.resolve" (:restartable nil)) (3 "         Compiler.java:6625 clojure.lang.Compiler.analyzeSymbol" (:restartable nil)) (4 "         Compiler.java:6198 clojure.lang.Compiler.analyze" (:restartable nil)) (5 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil)) (6 "         Compiler.java:3452 clojure.lang.Compiler$InvokeExpr.parse" (:restartable nil)) (7 "         Compiler.java:6411 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (8 "         Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil)) (9 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil))) (nil))
[-Received-] 618.47
(:debug-activate 1 1 nil)
[---Sent---] 618.62
(:emacs-rex (swank:throw-to-toplevel) nil 1 1702)

[-Received-] 618.62
(:return (:abort) 1702)
[Actionlist] 618.62
1701: pending  :listener-eval 
1702: finished :throw-to-toplevel 
[-Received-] 618.62
(:debug-return 1 1 nil)
[-Received-] 618.63
(:return (:abort) 1701)
[Actionlist] 618.63
1701: finished :listener-eval 
1702: finished :throw-to-toplevel 
[---Sent---] 618.93
(:emacs-rex (swank:fuzzy-completions "clojure.repl" "image-processing.image" :limit 200 :time-limit-in-msec 2000) nil t 1703)

[-Received-] 618.94
(:indentation-update (("with-bindings" . 1)))
[-Received-] 618.94
(:return (:ok ((("clojure.repl/" "183.28" ((0 "clojure.repl")) "b------p") ("clojure.core.protocols/" "12.96" ((10 "re") (13 "p") (20 "l")) "b------p")) nil)) 1703)
[Actionlist] 618.94
1703: finished :fuzzy-completions 
params: [[['"clojure.repl/"', '"183.28"', [['0', '"clojure.repl"']], '"b------p"'], ['"clojure.core.protocols/"', '"12.96"', [['10', '"re"'], ['13', '"p"'], ['20', '"l"']], '"b------p"']], 'nil']
[---Sent---] 618.99
(:emacs-rex (swank:fuzzy-completions "clojure.repl/" "image-processing.image" :limit 200 :time-limit-in-msec 2000) nil t 1704)

[-Received-] 619.0
(:indentation-update (("with-bindings" . 0)))
[-Received-] 619.0
(:return (:ok ((("clojure.repl/" "183.28" ((0 "clojure.repl")) "b------p") ("clojure.core.protocols/" "12.96" ((10 "re") (13 "p") (20 "l")) "b------p")) nil)) 1704)
[Actionlist] 619.0
1704: finished :fuzzy-completions 
params: [[['"clojure.repl/"', '"183.28"', [['0', '"clojure.repl"']], '"b------p"'], ['"clojure.core.protocols/"', '"12.96"', [['10', '"re"'], ['13', '"p"'], ['20', '"l"']], '"b------p"']], 'nil']
[---Sent---] 619.04
(:emacs-rex (swank:fuzzy-completions "clojure.repl/d" "image-processing.image" :limit 200 :time-limit-in-msec 2000) nil t 1705)

[-Received-] 619.04
(:indentation-update (("with-bindings" . 1)))
[-Received-] 619.04
(:return (:ok ((("clojure.repl/" "183.28" ((0 "clojure.repl")) "b------p") ("clojure.core.protocols/" "12.96" ((10 "re") (13 "p") (20 "l")) "b------p")) nil)) 1705)
[Actionlist] 619.04
1705: finished :fuzzy-completions 
params: [[['"clojure.repl/"', '"183.28"', [['0', '"clojure.repl"']], '"b------p"'], ['"clojure.core.protocols/"', '"12.96"', [['10', '"re"'], ['13', '"p"'], ['20', '"l"']], '"b------p"']], 'nil']
[---Sent---] 619.09
(:emacs-rex (swank:fuzzy-completions "clojure.repl/" "image-processing.image" :limit 200 :time-limit-in-msec 2000) nil t 1706)

[-Received-] 619.09
(:indentation-update (("with-bindings" . 0)))
[-Received-] 619.09
(:return (:ok ((("clojure.repl/" "183.28" ((0 "clojure.repl")) "b------p") ("clojure.core.protocols/" "12.96" ((10 "re") (13 "p") (20 "l")) "b------p")) nil)) 1706)
[Actionlist] 619.09
1706: finished :fuzzy-completions 
params: [[['"clojure.repl/"', '"183.28"', [['0', '"clojure.repl"']], '"b------p"'], ['"clojure.core.protocols/"', '"12.96"', [['10', '"re"'], ['13', '"p"'], ['20', '"l"']], '"b------p"']], 'nil']
[---Sent---] 619.14
(:emacs-rex (swank:fuzzy-completions "clojure.repl/do" "image-processing.image" :limit 200 :time-limit-in-msec 2000) nil t 1707)

[-Received-] 619.15
(:indentation-update (("with-bindings" . 1)))
[-Received-] 619.15
(:return (:ok ((("clojure.repl/" "183.28" ((0 "clojure.repl")) "b------p") ("clojure.core.protocols/" "12.96" ((10 "re") (13 "p") (20 "l")) "b------p")) nil)) 1707)
[Actionlist] 619.15
1707: finished :fuzzy-completions 
params: [[['"clojure.repl/"', '"183.28"', [['0', '"clojure.repl"']], '"b------p"'], ['"clojure.core.protocols/"', '"12.96"', [['10', '"re"'], ['13', '"p"'], ['20', '"l"']], '"b------p"']], 'nil']
[---Sent---] 619.31
(:emacs-rex (swank:listener-eval "(defrecord Image [points width]
  (assert (= (type points) (type [])))
  Points
  (get-point [img x y]
    (when (< x width)
      (get points (+ x (* y width))))))
") "image-processing.image" :repl-thread 1708)

[-Received-] 619.32
(:debug 1 1 ("clojure.lang.PersistentList cannot be cast to clojure.lang.Symbol" "  [Thrown class java.lang.ClassCastException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "         core.clj:3879 clojure.core/ns-resolve" (:restartable nil)) (1 "         core.clj:3876 clojure.core/ns-resolve" (:restartable nil)) (2 "         core.clj:3885 clojure.core/resolve" (:restartable nil)) (3 "   core_deftype.clj:48 clojure.core/parse-opts+specs[fn]" (:restartable nil)) (4 "         core.clj:2432 clojure.core/map[fn]" (:restartable nil)) (5 "       LazySeq.java:42 clojure.lang.LazySeq.sval" (:restartable nil)) (6 "       LazySeq.java:60 clojure.lang.LazySeq.seq" (:restartable nil)) (7 "          Cons.java:39 clojure.lang.Cons.next" (:restartable nil)) (8 "PersistentHashSet.java:43 clojure.lang.PersistentHashSet.create" (:restartable nil)) (9 "         core.clj:3641 clojure.core/set" (:restartable nil))) (nil))
[-Received-] 619.32
(:debug-activate 1 1 nil)
[---Sent---] 619.63
(:emacs-rex (swank:throw-to-toplevel) nil 1 1709)

[-Received-] 619.63
(:return (:abort) 1709)
[Actionlist] 619.63
1708: pending  :listener-eval 
1709: finished :throw-to-toplevel 
[-Received-] 619.63
(:debug-return 1 1 nil)
[-Received-] 619.63
(:return (:abort) 1708)
[Actionlist] 619.63
1708: finished :listener-eval 
1709: finished :throw-to-toplevel 
[---Sent---] 620.0
(:emacs-rex (swank:listener-eval "(defrecord Image [points width]
  (assert (= (type points) (type [1])))
  Points
  (get-point [img x y]
    (when (< x width)
      (get points (+ x (* y width))))))
") "image-processing.image" :repl-thread 1710)

[-Received-] 620.01
(:debug 1 1 ("clojure.lang.PersistentList cannot be cast to clojure.lang.Symbol" "  [Thrown class java.lang.ClassCastException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "         core.clj:3879 clojure.core/ns-resolve" (:restartable nil)) (1 "         core.clj:3876 clojure.core/ns-resolve" (:restartable nil)) (2 "         core.clj:3885 clojure.core/resolve" (:restartable nil)) (3 "   core_deftype.clj:48 clojure.core/parse-opts+specs[fn]" (:restartable nil)) (4 "         core.clj:2432 clojure.core/map[fn]" (:restartable nil)) (5 "       LazySeq.java:42 clojure.lang.LazySeq.sval" (:restartable nil)) (6 "       LazySeq.java:60 clojure.lang.LazySeq.seq" (:restartable nil)) (7 "          Cons.java:39 clojure.lang.Cons.next" (:restartable nil)) (8 "PersistentHashSet.java:43 clojure.lang.PersistentHashSet.create" (:restartable nil)) (9 "         core.clj:3641 clojure.core/set" (:restartable nil))) (nil))
[-Received-] 620.02
(:debug-activate 1 1 nil)
[---Sent---] 620.11
(:emacs-rex (swank:throw-to-toplevel) nil 1 1711)

[-Received-] 620.11
(:return (:abort) 1711)
[Actionlist] 620.11
1710: pending  :listener-eval 
1711: finished :throw-to-toplevel 
[-Received-] 620.11
(:debug-return 1 1 nil)
[-Received-] 620.11
(:return (:abort) 1710)
[Actionlist] 620.11
1710: finished :listener-eval 
1711: finished :throw-to-toplevel 
[---Sent---] 620.38
(:emacs-rex (swank:listener-eval "(defrecord Image [points width]
  (assert (= (type points) (type '[])))
  Points
  (get-point [img x y]
    (when (< x width)
      (get points (+ x (* y width))))))
") "image-processing.image" :repl-thread 1712)

[-Received-] 620.38
(:debug 1 1 ("clojure.lang.PersistentList cannot be cast to clojure.lang.Symbol" "  [Thrown class java.lang.ClassCastException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "         core.clj:3879 clojure.core/ns-resolve" (:restartable nil)) (1 "         core.clj:3876 clojure.core/ns-resolve" (:restartable nil)) (2 "         core.clj:3885 clojure.core/resolve" (:restartable nil)) (3 "   core_deftype.clj:48 clojure.core/parse-opts+specs[fn]" (:restartable nil)) (4 "         core.clj:2432 clojure.core/map[fn]" (:restartable nil)) (5 "       LazySeq.java:42 clojure.lang.LazySeq.sval" (:restartable nil)) (6 "       LazySeq.java:60 clojure.lang.LazySeq.seq" (:restartable nil)) (7 "          Cons.java:39 clojure.lang.Cons.next" (:restartable nil)) (8 "PersistentHashSet.java:43 clojure.lang.PersistentHashSet.create" (:restartable nil)) (9 "         core.clj:3641 clojure.core/set" (:restartable nil))) (nil))
[-Received-] 620.39
(:debug-activate 1 1 nil)
[---Sent---] 620.49
(:emacs-rex (swank:throw-to-toplevel) nil 1 1713)

[-Received-] 620.49
(:return (:abort) 1713)
[Actionlist] 620.49
1712: pending  :listener-eval 
1713: finished :throw-to-toplevel 
[-Received-] 620.49
(:debug-return 1 1 nil)
[-Received-] 620.49
(:return (:abort) 1712)
[Actionlist] 620.49
1712: finished :listener-eval 
1713: finished :throw-to-toplevel 
[---Sent---] 621.71
(:emacs-rex (swank:operator-arglist "int?" "image-processing.image") "image-processing.image" t 1714)

[-Received-] 621.71
(:indentation-update (("with-bindings" . 0)))
[-Received-] 621.71
(:return (:ok nil) 1714)
[Actionlist] 621.71
1714: finished :operator-arglist 
params: nil
[---Sent---] 621.94
(:emacs-rex (swank:operator-arglist "TODO:" "image-processing.image") "image-processing.image" t 1715)

[-Received-] 621.94
(:indentation-update (("with-bindings" . 1)))
[-Received-] 621.94
(:return (:ok nil) 1715)
[Actionlist] 621.94
1715: finished :operator-arglist 
params: nil
[---Sent---] 622.15
(:emacs-rex (swank:operator-arglist "nil?" "image-processing.image") "image-processing.image" t 1716)

[-Received-] 622.15
(:indentation-update (("with-bindings" . 0)))
[-Received-] 622.16
(:return (:ok "([x])") 1716)
[Actionlist] 622.16
1716: finished :operator-arglist 
params: "([x])"
[---Sent---] 622.25
(:emacs-rex (swank:operator-arglist "nil?" "image-processing.image") "image-processing.image" t 1717)

[-Received-] 622.26
(:indentation-update (("with-bindings" . 1)))
[-Received-] 622.26
(:return (:ok "([x])") 1717)
[Actionlist] 622.26
1717: finished :operator-arglist 
params: "([x])"
[---Sent---] 622.26
(:emacs-rex (swank:describe-function "nil?") "image-processing.image" t 1718)

[-Received-] 622.26
(:indentation-update (("with-bindings" . 0)))
[-Received-] 622.27
(:return (:ok "-------------------------
clojure.core/nil?
([x])
  Returns true if x is nil, false otherwise.
") 1718)
[Actionlist] 622.27
1718: finished :describe-function 
params: "-------------------------
clojure.core/nil?
([x])
  Returns true if x is nil, false otherwise.
"
[---Sent---] 622.48
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.image") "image-processing.image" t 1719)

[-Received-] 622.49
(:indentation-update (("with-bindings" . 1)))
[-Received-] 622.49
(:return (:ok nil) 1719)
[Actionlist] 622.49
1719: finished :operator-arglist 
params: nil
[---Sent---] 622.52
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.image") "image-processing.image" t 1720)

[-Received-] 622.52
(:indentation-update (("with-bindings" . 0)))
[-Received-] 622.52
(:return (:ok nil) 1720)
[Actionlist] 622.52
1720: finished :operator-arglist 
params: nil
[---Sent---] 622.54
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.image") "image-processing.image" t 1721)

[-Received-] 622.54
(:indentation-update (("with-bindings" . 1)))
[-Received-] 622.54
(:return (:ok nil) 1721)
[Actionlist] 622.54
1721: finished :operator-arglist 
params: nil
[---Sent---] 622.57
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.image") "image-processing.image" t 1722)

[-Received-] 622.57
(:indentation-update (("with-bindings" . 0)))
[-Received-] 622.57
(:return (:ok nil) 1722)
[Actionlist] 622.57
1722: finished :operator-arglist 
params: nil
[---Sent---] 622.61
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.image") "image-processing.image" t 1723)

[-Received-] 622.61
(:indentation-update (("with-bindings" . 1)))
[-Received-] 622.61
(:return (:ok nil) 1723)
[Actionlist] 622.61
1723: finished :operator-arglist 
params: nil
[---Sent---] 622.64
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.image") "image-processing.image" t 1724)

[-Received-] 622.64
(:indentation-update (("with-bindings" . 0)))
[-Received-] 622.64
(:return (:ok nil) 1724)
[Actionlist] 622.64
1724: finished :operator-arglist 
params: nil
[---Sent---] 622.72
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.image") "image-processing.image" t 1725)

[-Received-] 622.72
(:indentation-update (("with-bindings" . 1)))
[-Received-] 622.72
(:return (:ok nil) 1725)
[Actionlist] 622.72
1725: finished :operator-arglist 
params: nil
[---Sent---] 625.56
(:emacs-rex (swank:operator-arglist "img" "image-processing.core") "image-processing.core" t 1726)

[---Sent---] 630.22
(:emacs-rex (swank:operator-arglist "let" "image-processing.core") "image-processing.core" t 1727)

[---Sent---] 635.74
(:emacs-rex (swank:connection-info) nil t 1728)

[-Received-] 635.84
(:indentation-update (("dothread-keeping-clj" . 1) ("dothread-keeping" . 1) ("dothread" . 0) ("binding-map" . 1) ("with-pretty-writer" . 1) ("with-pprint-dispatch" . 1) ("with-connection" . 1) ("with-bindings" . 0) ("with-emacs-package" . 0) ("dothread-swank" . 0) ("with-package-tracking" . 0) ("doseq" . 1) ("letfn" . 1) ("cond" . 0) ("with-open" . 1) ("sync" . 1) ("let" . 1) ("dotimes" . 1) ("with-in-str" . 1) ("loop" . 1) ("with-out-str" . 0) ("when-not" . 1) ("with-loading-context" . 0) ("future" . 0) ("when-first" . 1) ("comment" . 0) ("condp" . 2) ("with-local-vars" . 1) ("with-bindings" . 1) ("when-let" . 1) ("while" . 1) ("case" . 1) ("locking" . 1) ("delay" . 0) ("io!" . 0) ("lazy-seq" . 0) ("when" . 1) ("binding" . 1) ("defslimefn" . defun) ("returning" . 1) ("continuously" . 0) ("failing-gracefully" . 0)))
[-Received-] 635.85
(:return (:ok (:pid "19148" :style :spawn :lisp-implementation (:type "Clojure" :name "clojure" :version "1.2.0-beta1") :package (:name "user" :prompt "user") :version "20100404")) 1728)
[Actionlist] 635.85
1728: finished :connection-info 
params: [':pid', '"19148"', ':style', ':spawn', ':lisp-implementation', [':type', '"Clojure"', ':name', '"clojure"', ':version', '"1.2.0-beta1"'], ':package', [':name', '"user"', ':prompt', '"user"'], ':version', '"20100404"']
 Package:user Prompt:user
[---Sent---] 635.91
(:emacs-rex (swank:create-repl nil) "image-processing.core" t 1729)

[-Received-] 635.91
(:return (:ok ("user" "user")) 1729)
[Actionlist] 635.91
1729: finished :create-repl 
params: ['"user"', '"user"']
[---Sent---] 635.91
(:emacs-rex (swank:swank-require 'swank-fuzzy) nil t 1730)

[---Sent---] 635.98
(:emacs-rex (swank:listener-eval "(use '[clojure.repl :only (source apropos)])
(use '[clojure.java.javadoc :only (javadoc)])
(use '[clojure.pprint :only (pp pprint)])
") "image-processing.core" :repl-thread 1731)

[-Received-] 635.99
(:write-string "nil
" :repl-result)
[-Received-] 635.99
(:indentation-update (("with-bindings" . 0)))
[-Received-] 635.99
(:return (:ok nil) 1731)
[Actionlist] 635.99
1730: pending  :swank-require 
1731: finished :listener-eval 
params: nil
[-Received-] 636.13
(:return (:ok nil) 1730)
[Actionlist] 636.13
1730: finished :swank-require 
params: nil
[---Sent---] 636.43
(:emacs-rex (swank:operator-arglist "conj" "image-processing.image") "image-processing.image" t 1732)

[-Received-] 636.45
(:return (:ok "([coll x] [coll x & xs])") 1732)
[Actionlist] 636.45
1732: finished :operator-arglist 
params: "([coll x] [coll x & xs])"
[---Sent---] 636.64
(:emacs-rex (swank:operator-arglist "conj" "image-processing.image") "image-processing.image" t 1733)

[-Received-] 636.64
(:return (:ok "([coll x] [coll x & xs])") 1733)
[Actionlist] 636.64
1733: finished :operator-arglist 
params: "([coll x] [coll x & xs])"
[---Sent---] 636.74
(:emacs-rex (swank:listener-eval "(conj [] [1 2])
") "image-processing.image" :repl-thread 1734)

[-Received-] 636.74
(:write-string "[[1 2]]
" :repl-result)
[-Received-] 636.86
(:return (:ok nil) 1734)
[Actionlist] 636.86
1734: finished :listener-eval 
params: nil
[---Sent---] 637.26
(:emacs-rex (swank:operator-arglist "conj" "image-processing.image") "image-processing.image" t 1735)

[-Received-] 637.26
(:return (:ok "([coll x] [coll x & xs])") 1735)
[Actionlist] 637.26
1735: finished :operator-arglist 
params: "([coll x] [coll x & xs])"
[---Sent---] 637.36
(:emacs-rex (swank:listener-eval "(conj [[3 4]] [1 2])
") "image-processing.image" :repl-thread 1736)

[-Received-] 637.44
(:write-string "[[3 4] [1 2]]
" :repl-result)
[-Received-] 637.45
(:return (:ok nil) 1736)
[Actionlist] 637.45
1736: finished :listener-eval 
params: nil
[---Sent---] 637.97
(:emacs-rex (swank:operator-arglist "reduce" "image-processing.core") "image-processing.core" t 1737)

[-Received-] 637.97
(:return (:ok "([f coll] [f val coll])") 1737)
[Actionlist] 637.97
1737: finished :operator-arglist 
params: "([f coll] [f val coll])"
[---Sent---] 638.2
(:emacs-rex (swank:operator-arglist "conj" "image-processing.core") "image-processing.core" t 1738)

[-Received-] 638.2
(:return (:ok "([coll x] [coll x & xs])") 1738)
[Actionlist] 638.2
1738: finished :operator-arglist 
params: "([coll x] [coll x & xs])"
[---Sent---] 638.29
(:emacs-rex (swank:operator-arglist "conj" "image-processing.core") "image-processing.core" t 1739)

[-Received-] 638.29
(:return (:ok "([coll x] [coll x & xs])") 1739)
[Actionlist] 638.29
1739: finished :operator-arglist 
params: "([coll x] [coll x & xs])"
[---Sent---] 638.56
(:emacs-rex (swank:operator-arglist "[" "image-processing.core") "image-processing.core" t 1740)

[-Received-] 638.56
(:return (:ok nil) 1740)
[Actionlist] 638.56
1740: finished :operator-arglist 
params: nil
[---Sent---] 639.1
(:emacs-rex (swank:operator-arglist "get-argb" "image-processing.core") "image-processing.core" t 1741)

[-Received-] 639.1
(:return (:ok nil) 1741)
[Actionlist] 639.1
1741: finished :operator-arglist 
params: nil
[---Sent---] 639.25
(:emacs-rex (swank:operator-arglist "[" "image-processing.core") "image-processing.core" t 1742)

[-Received-] 639.25
(:return (:ok nil) 1742)
[Actionlist] 639.25
1742: finished :operator-arglist 
params: nil
[---Sent---] 639.38
(:emacs-rex (swank:fuzzy-completions "buffe" "image-processing.core" :limit 200 :time-limit-in-msec 2000) nil t 1743)

[-Received-] 639.43
(:return (:ok ((("chunk-buffer" "43.72" ((6 "buffe")) "-f------") ("StringBuffer/" "17.76" ((6 "buffe")) "b-------")) nil)) 1743)
[Actionlist] 639.43
1743: finished :fuzzy-completions 
params: [[['"chunk-buffer"', '"43.72"', [['6', '"buffe"']], '"-f------"'], ['"StringBuffer/"', '"17.76"', [['6', '"buffe"']], '"b-------"']], 'nil']
[---Sent---] 639.61
(:emacs-rex (swank:operator-arglist "get-argb" "image-processing.core") "image-processing.core" t 1744)

[-Received-] 639.61
(:return (:ok nil) 1744)
[Actionlist] 639.61
1744: finished :operator-arglist 
params: nil
[---Sent---] 640.36
(:emacs-rex (swank:operator-arglist "get-img-coords" "image-processing.core") "image-processing.core" t 1745)

[-Received-] 640.36
(:return (:ok nil) 1745)
[Actionlist] 640.36
1745: finished :operator-arglist 
params: nil
[---Sent---] 641.36
(:emacs-rex (swank:operator-arglist "get-img-coords" "image-processing.core") "image-processing.core" t 1746)

[-Received-] 641.36
(:return (:ok nil) 1746)
[Actionlist] 641.36
1746: finished :operator-arglist 
params: nil
[---Sent---] 641.96
(:emacs-rex (swank:operator-arglist "Image" "image-processing.core") "image-processing.core" t 1747)

[-Received-] 641.97
(:return (:ok nil) 1747)
[Actionlist] 641.97
1747: finished :operator-arglist 
params: nil
[---Sent---] 642.24
(:emacs-rex (swank:operator-arglist "getWidth" "image-processing.core") "image-processing.core" t 1748)

[-Received-] 642.24
(:return (:ok nil) 1748)
[Actionlist] 642.24
1748: finished :operator-arglist 
params: nil
[---Sent---] 642.34
(:emacs-rex (swank:fuzzy-completions "buffe" "image-processing.core" :limit 200 :time-limit-in-msec 2000) nil t 1749)

[-Received-] 642.37
(:return (:ok ((("chunk-buffer" "43.72" ((6 "buffe")) "-f------") ("StringBuffer/" "17.76" ((6 "buffe")) "b-------")) nil)) 1749)
[Actionlist] 642.37
1749: finished :fuzzy-completions 
params: [[['"chunk-buffer"', '"43.72"', [['6', '"buffe"']], '"-f------"'], ['"StringBuffer/"', '"17.76"', [['6', '"buffe"']], '"b-------"']], 'nil']
[---Sent---] 642.64
(:emacs-rex (swank:listener-eval "(ns image-processing.core
    (:import
      (java.lang Math)
      (javax.imageio ImageIO)
      (java.io File)
      (java.awt.image BufferedImage))
    (:use 
      (incanter core charts stats)
      (image-processing.image)))


(defn intcolor-to-argb
  \"Convert the 32 bits color to ARGB. It returns a vector [A R G B].\"
  [color]
  [(bit-and (bit-shift-right color 24) 0xff)
   (bit-and (bit-shift-right color 16) 0xff)
   (bit-and (bit-shift-right color 8) 0xff)
   (bit-and color 0xff)])


(defn get-argb
  \"Get the [a r g b] color of a pixel [x y] of IMG.\"
  [img coord]
  (let [[x y] coord]
    (intcolor-to-argb (.getRGB img x y))))


(defn set-argb
  \"Set the ARGB color of a pixel COORD of the image IMG.\"
  #^{:arglists [img coord argb-color]}
  [img coord argb-color]
  (let [[x y] coord
        [a r g b] argb-color
        int-color (bit-or (bit-shift-left a 24)
                          (bit-or (bit-shift-left r 16)
                                  (bit-or (bit-shift-left g 8) b)))]
    (.setRGB img x y int-color)))


(defn get-img-coords
  \"Returns a sequence of all coordinates of the image.\"
  #^{:arglists [img]}
  [img]
  (for [y (range (.getHeight img))
        x (range (.getWidth img))]
       [x y]))


(defn convert-buffImg-to-image
  \"Doc\"
  #^{:arglists [buffered-image]}
  [buffered-image]
  (let [argb-values (reduce #(conj %1 (get-argb buffered-image %2))
                            []
                            (get-img-coords buffered-image))]
    (Image. argb-values (.getWidth buffered-image))))


(defn euclidian-argb-distance
  \"Euclidian distance between two [a r g b] colors.\"
  [color1 color2]
  (let [rgb-func (fn [color] (if (> (count color) 3) color (subvec color 1)))
        color1 (rgb-func color1)
        color2 (rgb-func color2)])
  (sqrt (sum-of-squares (map #(- %1 %2) color1 color2))))




(defn get-grayscale-values
  \"Returns a lazy sequence of the grayscale value of the image's pixels.\"
  #^{:arglists [img]}
  [img]
  (map #(int (mean (rest (get-argb img %)))) (get-img-coords img)))


(defn get-binarized-values
  \"Returns a lazy sequence of the binarized value of the image's pixels.
      If pixel < threshold, then pixel=BLACK (0) else pixel=WHITE (255).\"
  #^{:arglists [img threshold]}
  [img threshold]
  (map #(if (< % threshold) 0 255) (get-grayscale-values img)))


;(defn vertical-histogram
;  \"Doc\"
;  #^{:arglists [img]}
;  [img]
;  )
;  TODO: partition & interleave

;(def img-path \"/home/boechat/Dropbox/Documents/Coding/Hough_transform/straight_lines.png\")
;(def buffered-image (ImageIO/read (File. img-path)))
") "image-processing.core" :repl-thread 1750)

[-Received-] 643.17
(:new-package "image-processing.core" "image-processing.core")
[-Received-] 643.2
(:debug 1 1 ("Unable to resolve classname: Image" "  [Thrown class java.lang.IllegalArgumentException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "clojure.lang.Compiler$NewExpr$Parser.parse(Compiler.java:2147)" (:restartable nil)) (1 "clojure.lang.Compiler.analyzeSeq(Compiler.java:5364)" (:restartable nil)) (2 "clojure.lang.Compiler.analyze(Compiler.java:5185)" (:restartable nil)) (3 "clojure.lang.Compiler.analyzeSeq(Compiler.java:5352)" (:restartable nil)) (4 "clojure.lang.Compiler.analyze(Compiler.java:5185)" (:restartable nil)) (5 "clojure.lang.Compiler.analyze(Compiler.java:5146)" (:restartable nil)) (6 "clojure.lang.Compiler$BodyExpr$Parser.parse(Compiler.java:4665)" (:restartable nil)) (7 "clojure.lang.Compiler$LetExpr$Parser.parse(Compiler.java:4936)" (:restartable nil)) (8 "clojure.lang.Compiler.analyzeSeq(Compiler.java:5364)" (:restartable nil)) (9 "clojure.lang.Compiler.analyze(Compiler.java:5185)" (:restartable nil))) (nil))
[-Received-] 643.2
(:debug-activate 1 1 nil)
[---Sent---] 643.83
(:emacs-rex (swank:throw-to-toplevel) nil 1 1751)

[-Received-] 643.83
(:return (:abort) 1751)
[Actionlist] 643.83
1750: pending  :listener-eval 
1751: finished :throw-to-toplevel 
[-Received-] 644.0
(:debug-return 1 1 nil)
[-Received-] 644.0
(:return (:abort) 1750)
[Actionlist] 644.0
1750: finished :listener-eval 
[---Sent---] 644.33
(:emacs-rex (swank:operator-arglist "image-processing" "image-processing.core") "image-processing.core" t 1752)

[-Received-] 644.37
(:indentation-update (("with-timeout" . 1) ("with-data" . 1) ("with-bindings" . 1)))
[-Received-] 644.37
(:return (:ok nil) 1752)
[Actionlist] 644.37
1752: finished :operator-arglist 
params: nil
[---Sent---] 644.6
(:emacs-rex (swank:operator-arglist "image-processing" "image-processing.core") "image-processing.core" t 1753)

[-Received-] 644.6
(:return (:ok nil) 1753)
[Actionlist] 644.6
1753: finished :operator-arglist 
params: nil
[---Sent---] 644.66
(:emacs-rex (swank:operator-arglist "image-processing" "image-processing.core") "image-processing.core" t 1754)

[-Received-] 644.66
(:return (:ok nil) 1754)
[Actionlist] 644.66
1754: finished :operator-arglist 
params: nil
[---Sent---] 644.73
(:emacs-rex (swank:operator-arglist "image-processing" "image-processing.core") "image-processing.core" t 1755)

[-Received-] 644.73
(:return (:ok nil) 1755)
[Actionlist] 644.73
1755: finished :operator-arglist 
params: nil
[---Sent---] 645.0
(:emacs-rex (swank:operator-arglist "image?" "image-processing.core") "image-processing.core" t 1756)

[-Received-] 645.01
(:return (:ok nil) 1756)
[Actionlist] 645.01
1756: finished :operator-arglist 
params: nil
[---Sent---] 645.25
(:emacs-rex (swank:listener-eval "(ns image-processing.core
    (:import
      (java.lang Math)
      (javax.imageio ImageIO)
      (java.io File)
      (java.awt.image BufferedImage))
    (:use 
      (incanter core charts stats)
      (image-processing.image)))
") "image-processing.core" :repl-thread 1757)

[-Received-] 645.31
(:write-string "nil
" :repl-result)
[-Received-] 645.31
(:return (:ok nil) 1757)
[Actionlist] 645.31
1757: finished :listener-eval 
params: nil
[---Sent---] 645.64
(:emacs-rex (swank:operator-arglist "image?" "image-processing.core") "image-processing.core" t 1758)

[-Received-] 645.64
(:return (:ok nil) 1758)
[Actionlist] 645.64
1758: finished :operator-arglist 
params: nil
[---Sent---] 645.75
(:emacs-rex (swank:listener-eval "(image? as)
") "image-processing.core" :repl-thread 1759)

[-Received-] 645.83
(:debug 1 1 ("Unable to resolve symbol: image? in this context" "  [Thrown class java.lang.Exception]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "clojure.lang.Compiler.resolveIn(Compiler.java:5672)" (:restartable nil)) (1 "clojure.lang.Compiler.resolve(Compiler.java:5616)" (:restartable nil)) (2 "clojure.lang.Compiler.analyzeSymbol(Compiler.java:5579)" (:restartable nil)) (3 "clojure.lang.Compiler.analyze(Compiler.java:5167)" (:restartable nil)) (4 "clojure.lang.Compiler.analyze(Compiler.java:5146)" (:restartable nil)) (5 "clojure.lang.Compiler$InvokeExpr.parse(Compiler.java:3031)" (:restartable nil)) (6 "clojure.lang.Compiler.analyzeSeq(Compiler.java:5366)" (:restartable nil)) (7 "clojure.lang.Compiler.analyze(Compiler.java:5185)" (:restartable nil)) (8 "clojure.lang.Compiler.analyze(Compiler.java:5146)" (:restartable nil)) (9 "clojure.lang.Compiler$BodyExpr$Parser.parse(Compiler.java:4665)" (:restartable nil))) (nil))
[-Received-] 645.83
(:debug-activate 1 1 nil)
[---Sent---] 646.04
(:emacs-rex (swank:throw-to-toplevel) nil 1 1760)

[-Received-] 646.04
(:return (:abort) 1760)
[Actionlist] 646.04
1759: pending  :listener-eval 
1760: finished :throw-to-toplevel 
[-Received-] 646.04
(:debug-return 1 1 nil)
[-Received-] 646.04
(:return (:abort) 1759)
[Actionlist] 646.04
1759: finished :listener-eval 
1760: finished :throw-to-toplevel 
[---Sent---] 646.7
(:emacs-rex (swank:listener-eval "(ns image-processing.core
    (:import
      (java.lang Math)
      (javax.imageio ImageIO)
      (java.io File)
      (java.awt.image BufferedImage))
    (:use 
      [incanter core charts stats] 
      [image-processing.image]))
") "image-processing.core" :repl-thread 1761)

[-Received-] 646.77
(:debug 1 1 ("Could not locate image_processing/image__init.class or image_processing/image.clj on classpath: " "  [Thrown class java.io.FileNotFoundException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "clojure.lang.RT.load(RT.java:412)" (:restartable nil)) (1 "clojure.lang.RT.load(RT.java:381)" (:restartable nil)) (2 "clojure.core$load$fn__4504.invoke(core.clj:4905)" (:restartable nil)) (3 "clojure.core$load.doInvoke(core.clj:4904)" (:restartable nil)) (4 "clojure.lang.RestFn.invoke(RestFn.java:409)" (:restartable nil)) (5 "clojure.core$load_one.invoke(core.clj:4729)" (:restartable nil)) (6 "clojure.core$load_lib.doInvoke(core.clj:4766)" (:restartable nil)) (7 "clojure.lang.RestFn.applyTo(RestFn.java:143)" (:restartable nil)) (8 "clojure.core$apply.invoke(core.clj:542)" (:restartable nil)) (9 "clojure.core$load_libs.doInvoke(core.clj:4800)" (:restartable nil))) (nil))
[-Received-] 646.77
(:debug-activate 1 1 nil)
[---Sent---] 648.21
(:emacs-rex (swank:throw-to-toplevel) nil 1 1762)

[-Received-] 648.21
(:return (:abort) 1762)
[Actionlist] 648.21
1761: pending  :listener-eval 
1762: finished :throw-to-toplevel 
[-Received-] 648.21
(:debug-return 1 1 nil)
[-Received-] 648.21
(:return (:abort) 1761)
[Actionlist] 648.21
1761: finished :listener-eval 
1762: finished :throw-to-toplevel 
[---Sent---] 649.63
(:emacs-rex (swank:operator-arglist "incanter" "image-processing.core") "image-processing.core" t 1763)

[-Received-] 649.63
(:return (:ok nil) 1763)
[Actionlist] 649.63
1763: finished :operator-arglist 
params: nil
[---Sent---] 649.79
(:emacs-rex (swank:operator-arglist "use" "image-processing.core") "image-processing.core" t 1764)

[-Received-] 649.79
(:return (:ok "([& args])") 1764)
[Actionlist] 649.79
1764: finished :operator-arglist 
params: "([& args])"
[---Sent---] 650.26
(:emacs-rex (swank:listener-eval "(use '(image-processing.image))
") "image-processing.core" :repl-thread 1765)

[-Received-] 650.26
(:write-string "nil
" :repl-result)
[-Received-] 650.38
(:return (:ok nil) 1765)
[Actionlist] 650.38
1765: finished :listener-eval 
params: nil
[---Sent---] 650.6
(:emacs-rex (swank:operator-arglist "image?" "image-processing.core") "image-processing.core" t 1766)

[-Received-] 650.61
(:return (:ok nil) 1766)
[Actionlist] 650.61
1766: finished :operator-arglist 
params: nil
[---Sent---] 650.74
(:emacs-rex (swank:listener-eval "(image? 0) 
") "image-processing.core" :repl-thread 1767)

[-Received-] 650.75
(:debug 1 1 ("Unable to resolve symbol: image? in this context" "  [Thrown class java.lang.Exception]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "clojure.lang.Compiler.resolveIn(Compiler.java:5672)" (:restartable nil)) (1 "clojure.lang.Compiler.resolve(Compiler.java:5616)" (:restartable nil)) (2 "clojure.lang.Compiler.analyzeSymbol(Compiler.java:5579)" (:restartable nil)) (3 "clojure.lang.Compiler.analyze(Compiler.java:5167)" (:restartable nil)) (4 "clojure.lang.Compiler.analyze(Compiler.java:5146)" (:restartable nil)) (5 "clojure.lang.Compiler$InvokeExpr.parse(Compiler.java:3031)" (:restartable nil)) (6 "clojure.lang.Compiler.analyzeSeq(Compiler.java:5366)" (:restartable nil)) (7 "clojure.lang.Compiler.analyze(Compiler.java:5185)" (:restartable nil)) (8 "clojure.lang.Compiler.analyze(Compiler.java:5146)" (:restartable nil)) (9 "clojure.lang.Compiler$BodyExpr$Parser.parse(Compiler.java:4665)" (:restartable nil))) (nil))
[-Received-] 650.76
(:debug-activate 1 1 nil)
[---Sent---] 651.02
(:emacs-rex (swank:throw-to-toplevel) nil 1 1768)

[-Received-] 651.03
(:return (:abort) 1768)
[Actionlist] 651.03
1767: pending  :listener-eval 
1768: finished :throw-to-toplevel 
[-Received-] 651.03
(:debug-return 1 1 nil)
[-Received-] 651.03
(:return (:abort) 1767)
[Actionlist] 651.03
1767: finished :listener-eval 
1768: finished :throw-to-toplevel 
[---Sent---] 651.49
(:emacs-rex (swank:listener-eval "(use [image-processing.image])
") "image-processing.core" :repl-thread 1769)

[-Received-] 651.56
(:debug 1 1 ("image-processing.image" "  [Thrown class java.lang.ClassNotFoundException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "java.net.URLClassLoader$1.run(URLClassLoader.java:366)" (:restartable nil)) (1 "java.net.URLClassLoader$1.run(URLClassLoader.java:355)" (:restartable nil)) (2 "java.security.AccessController.doPrivileged(Native Method)" (:restartable nil)) (3 "java.net.URLClassLoader.findClass(URLClassLoader.java:354)" (:restartable nil)) (4 "clojure.lang.DynamicClassLoader.findClass(DynamicClassLoader.java:69)" (:restartable nil)) (5 "java.lang.ClassLoader.loadClass(ClassLoader.java:423)" (:restartable nil)) (6 "java.lang.ClassLoader.loadClass(ClassLoader.java:356)" (:restartable nil)) (7 "java.lang.Class.forName0(Native Method)" (:restartable nil)) (8 "java.lang.Class.forName(Class.java:264)" (:restartable nil)) (9 "clojure.lang.RT.classForName(RT.java:1566)" (:restartable nil))) (nil))
[-Received-] 651.58
(:debug-activate 1 1 nil)
[---Sent---] 652.03
(:emacs-rex (swank:throw-to-toplevel) nil 1 1770)

[-Received-] 652.03
(:return (:abort) 1770)
[Actionlist] 652.03
1769: pending  :listener-eval 
1770: finished :throw-to-toplevel 
[-Received-] 652.03
(:debug-return 1 1 nil)
[-Received-] 652.03
(:return (:abort) 1769)
[Actionlist] 652.03
1769: finished :listener-eval 
1770: finished :throw-to-toplevel 
[---Sent---] 652.87
(:emacs-rex (swank:operator-arglist "image-processing" "image-processing.core") "image-processing.core" t 1771)

[-Received-] 652.87
(:return (:ok nil) 1771)
[Actionlist] 652.87
1771: finished :operator-arglist 
params: nil
[---Sent---] 652.91
(:emacs-rex (swank:operator-arglist "image-processing" "image-processing.core") "image-processing.core" t 1772)

[-Received-] 652.91
(:return (:ok nil) 1772)
[Actionlist] 652.91
1772: finished :operator-arglist 
params: nil
[---Sent---] 653.39
(:emacs-rex (swank:listener-eval "(ns image-processing.core
    (:import
      (java.lang Math)
      (javax.imageio ImageIO)
      (java.io File)
      (java.awt.image BufferedImage))
    (:use 
      image-processing.image
      [incanter core charts stats]))
") "image-processing.core" :repl-thread 1773)

[-Received-] 653.45
(:debug 1 1 ("Could not locate image_processing/image__init.class or image_processing/image.clj on classpath: " "  [Thrown class java.io.FileNotFoundException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "clojure.lang.RT.load(RT.java:412)" (:restartable nil)) (1 "clojure.lang.RT.load(RT.java:381)" (:restartable nil)) (2 "clojure.core$load$fn__4504.invoke(core.clj:4905)" (:restartable nil)) (3 "clojure.core$load.doInvoke(core.clj:4904)" (:restartable nil)) (4 "clojure.lang.RestFn.invoke(RestFn.java:409)" (:restartable nil)) (5 "clojure.core$load_one.invoke(core.clj:4729)" (:restartable nil)) (6 "clojure.core$load_lib.doInvoke(core.clj:4766)" (:restartable nil)) (7 "clojure.lang.RestFn.applyTo(RestFn.java:143)" (:restartable nil)) (8 "clojure.core$apply.invoke(core.clj:542)" (:restartable nil)) (9 "clojure.core$load_libs.doInvoke(core.clj:4800)" (:restartable nil))) (nil))
[-Received-] 653.46
(:debug-activate 1 1 nil)
[---Sent---] 653.8
(:emacs-rex (swank:throw-to-toplevel) nil 1 1774)

[-Received-] 653.8
(:return (:abort) 1774)
[Actionlist] 653.8
1773: pending  :listener-eval 
1774: finished :throw-to-toplevel 
[-Received-] 653.8
(:debug-return 1 1 nil)
[-Received-] 653.8
(:return (:abort) 1773)
[Actionlist] 653.8
1773: finished :listener-eval 
1774: finished :throw-to-toplevel 
[---Sent---] 654.16
(:emacs-rex (swank:operator-arglist "Convert" "image-processing.core") "image-processing.core" t 1775)

[-Received-] 654.16
(:return (:ok nil) 1775)
[Actionlist] 654.16
1775: finished :operator-arglist 
params: nil
[---Sent---] 654.66
(:emacs-rex (swank:connection-info) nil t 1776)

[-Received-] 654.74
(:indentation-update (("dothread-keeping-clj" . 1) ("dothread-keeping" . 1) ("dothread" . 0) ("binding-map" . 1) ("print-length-loop" . 1) ("with-pretty-writer" . 1) ("with-pprint-dispatch" . 1) ("with-connection" . 1) ("with-bindings" . 0) ("with-emacs-package" . 0) ("dothread-swank" . 0) ("with-read-line-support" . 0) ("with-package-tracking" . 0) ("doseq" . 1) ("letfn" . 1) ("cond" . 0) ("with-open" . 1) ("sync" . 1) ("let" . 1) ("dotimes" . 1) ("with-in-str" . 1) ("loop" . 1) ("with-out-str" . 0) ("when-not" . 1) ("with-loading-context" . 0) ("future" . 0) ("with-redefs" . 1) ("when-first" . 1) ("comment" . 0) ("condp" . 2) ("with-local-vars" . 1) ("with-bindings" . 1) ("when-let" . 1) ("while" . 1) ("case" . 1) ("locking" . 1) ("delay" . 0) ("io!" . 0) ("lazy-seq" . 0) ("when" . 1) ("binding" . 1) ("defslimefn" . defun) ("returning" . 1) ("continuously" . 0) ("failing-gracefully" . 0)))
[-Received-] 654.75
(:return (:ok (:pid "19598" :style :spawn :lisp-implementation (:type "Clojure" :name "clojure" :version "1.3.0") :package (:name "user" :prompt "user") :version "20100404")) 1776)
[Actionlist] 654.75
1776: finished :connection-info 
params: [':pid', '"19598"', ':style', ':spawn', ':lisp-implementation', [':type', '"Clojure"', ':name', '"clojure"', ':version', '"1.3.0"'], ':package', [':name', '"user"', ':prompt', '"user"'], ':version', '"20100404"']
 Package:user Prompt:user
[---Sent---] 654.81
(:emacs-rex (swank:create-repl nil) "image-processing.core" t 1777)

[-Received-] 654.81
(:return (:ok ("user" "user")) 1777)
[Actionlist] 654.81
1777: finished :create-repl 
params: ['"user"', '"user"']
[---Sent---] 654.81
(:emacs-rex (swank:swank-require 'swank-fuzzy) nil t 1778)

[---Sent---] 654.87
(:emacs-rex (swank:listener-eval "(use '[clojure.repl :only (source apropos dir pst doc find-doc)])
(use '[clojure.java.javadoc :only (javadoc)])
(use '[clojure.pprint :only (pp pprint)])
") "image-processing.core" :repl-thread 1779)

[---Sent---] 654.92
(:emacs-rex (swank:listener-eval "(ns image-processing.core
    (:import
      (java.lang Math)
      (javax.imageio ImageIO)
      (java.io File)
      (java.awt.image BufferedImage))
    (:use 
      image-processing.image
      [incanter core charts stats]))
") "user" :repl-thread 1780)

[-Received-] 654.98
(:write-string "nil
" :repl-result)
[-Received-] 655.11
(:indentation-update (("with-timeout" . 1) ("with-bindings" . 0)))
[-Received-] 655.11
(:return (:ok nil) 1779)
[Actionlist] 655.11
1778: pending  :swank-require 
1779: finished :listener-eval 
1780: pending  :listener-eval 
params: nil
[-Received-] 655.11
(:indentation-update (("with-timeout" . 1) ("with-bindings" . 0)))
[-Received-] 655.12
(:return (:ok nil) 1778)
[Actionlist] 655.12
1778: finished :swank-require 
1779: finished :listener-eval 
1780: pending  :listener-eval 
params: nil
[---Sent---] 655.48
(:emacs-rex (swank:operator-arglist "incanter" "image-processing.core") "image-processing.core" t 1781)

[-Received-] 655.52
(:indentation-update (("with-bindings" . 1)))
[-Received-] 655.52
(:return (:ok nil) 1781)
[Actionlist] 655.52
1780: pending  :listener-eval 
1781: finished :operator-arglist 
params: nil
[---Sent---] 655.65
(:emacs-rex (swank:listener-eval "(ns image-processing.core
    (:import
      (java.lang Math)
      (javax.imageio ImageIO)
      (java.io File)
      (java.awt.image BufferedImage))
    (:use 
      image-processing.image
      [incanter core charts stats]))
") "image-processing.core" :repl-thread 1782)

[-Received-] 655.65
(:new-package "image-processing.core" "image-processing.core")
[-Received-] 655.65
(:debug 1 1 ("java.lang.ClassNotFoundException: clojure.set" "  [Thrown class java.lang.RuntimeException]" nil) (("QUIT" "Quit to the SLIME top level") ("CAUSE1" "Invoke debugger on cause  clojure.set [Thrown class java.lang.ClassNotFoundException]")) ((0 "              Util.java:165 clojure.lang.Util.runtimeException" (:restartable nil)) (1 "               RT.java:2017 clojure.lang.RT.classForName" (:restartable nil)) (2 "          Compiler.java:929 clojure.lang.Compiler$HostExpr.maybeClass" (:restartable nil)) (3 "          Compiler.java:710 clojure.lang.Compiler$HostExpr.access$400" (:restartable nil)) (4 "         Compiler.java:6351 clojure.lang.Compiler.macroexpand1" (:restartable nil)) (5 "         Compiler.java:6395 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (6 "         Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil)) (7 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil)) (8 "         Compiler.java:2597 clojure.lang.Compiler$IfExpr$Parser.parse" (:restartable nil)) (9 "         Compiler.java:6409 clojure.lang.Compiler.analyzeSeq" (:restartable nil))) (nil))
[-Received-] 655.65
(:debug-activate 1 1 nil)
[-Received-] 655.9
(:debug 1 2 ("java.lang.ClassNotFoundException: clojure.set" "  [Thrown class java.lang.RuntimeException]" nil) (("QUIT" "Quit to the SLIME top level") ("ABORT" "ABORT to SLIME level 0") ("CAUSE1" "Invoke debugger on cause  clojure.set [Thrown class java.lang.ClassNotFoundException]")) ((0 "              Util.java:165 clojure.lang.Util.runtimeException" (:restartable nil)) (1 "               RT.java:2017 clojure.lang.RT.classForName" (:restartable nil)) (2 "          Compiler.java:929 clojure.lang.Compiler$HostExpr.maybeClass" (:restartable nil)) (3 "          Compiler.java:710 clojure.lang.Compiler$HostExpr.access$400" (:restartable nil)) (4 "         Compiler.java:6351 clojure.lang.Compiler.macroexpand1" (:restartable nil)) (5 "         Compiler.java:6395 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (6 "         Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil)) (7 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil)) (8 "         Compiler.java:2597 clojure.lang.Compiler$IfExpr$Parser.parse" (:restartable nil)) (9 "         Compiler.java:6409 clojure.lang.Compiler.analyzeSeq" (:restartable nil))) (nil))
[-Received-] 655.91
(:debug-activate 1 2 nil)
[---Sent---] 656.19
(:emacs-rex (swank:throw-to-toplevel) nil 1 1783)

[-Received-] 656.19
(:return (:abort) 1783)
[Actionlist] 656.19
1780: pending  :listener-eval 
1782: pending  :listener-eval 
1783: finished :throw-to-toplevel 
[-Received-] 656.19
(:debug-return 1 2 nil)
[-Received-] 656.19
(:return (:abort) 1782)
[Actionlist] 656.19
1780: pending  :listener-eval 
1782: finished :listener-eval 
1783: finished :throw-to-toplevel 
[-Received-] 656.19
(:debug-return 1 1 nil)
[-Received-] 656.19
(:return (:abort) 1780)
[Actionlist] 656.19
1780: finished :listener-eval 
1782: finished :listener-eval 
1783: finished :throw-to-toplevel 
[---Sent---] 658.2
(:emacs-rex (swank:operator-arglist "reduce" "image-processing.core") "image-processing.core" t 1784)

[-Received-] 658.22
(:return (:ok "([f coll] [f val coll])") 1784)
[Actionlist] 658.22
1784: finished :operator-arglist 
params: "([f coll] [f val coll])"
[---Sent---] 659.09
(:emacs-rex (swank:operator-arglist "interleave" "image-processing.core") "image-processing.core" t 1785)

[-Received-] 659.1
(:return (:ok "([c1 c2] [c1 c2 & colls])") 1785)
[Actionlist] 659.1
1785: finished :operator-arglist 
params: "([c1 c2] [c1 c2 & colls])"
[---Sent---] 659.17
(:emacs-rex (swank:operator-arglist "interleave" "image-processing.core") "image-processing.core" t 1786)

[-Received-] 659.17
(:return (:ok "([c1 c2] [c1 c2 & colls])") 1786)
[Actionlist] 659.17
1786: finished :operator-arglist 
params: "([c1 c2] [c1 c2 & colls])"
[---Sent---] 659.22
(:emacs-rex (swank:operator-arglist "interleave" "image-processing.core") "image-processing.core" t 1787)

[-Received-] 659.22
(:return (:ok "([c1 c2] [c1 c2 & colls])") 1787)
[Actionlist] 659.22
1787: finished :operator-arglist 
params: "([c1 c2] [c1 c2 & colls])"
[---Sent---] 659.38
(:emacs-rex (swank:operator-arglist "interleave" "image-processing.core") "image-processing.core" t 1788)

[-Received-] 659.38
(:return (:ok "([c1 c2] [c1 c2 & colls])") 1788)
[Actionlist] 659.38
1788: finished :operator-arglist 
params: "([c1 c2] [c1 c2 & colls])"
[---Sent---] 659.44
(:emacs-rex (swank:operator-arglist "interleave" "image-processing.core") "image-processing.core" t 1789)

[-Received-] 659.44
(:return (:ok "([c1 c2] [c1 c2 & colls])") 1789)
[Actionlist] 659.44
1789: finished :operator-arglist 
params: "([c1 c2] [c1 c2 & colls])"
[---Sent---] 659.54
(:emacs-rex (swank:listener-eval "(interleave [1 2 3] [10 20 30])
") "image-processing.core" :repl-thread 1790)

[-Received-] 659.55
(:write-string "(1 10 2 20 3 30)
" :repl-result)
[-Received-] 659.66
(:return (:ok nil) 1790)
[Actionlist] 659.66
1790: finished :listener-eval 
params: nil
[---Sent---] 660.05
(:emacs-rex (swank:operator-arglist "partition" "image-processing.core") "image-processing.core" t 1791)

[-Received-] 660.06
(:return (:ok "([n coll] [n step coll] [n step pad coll])") 1791)
[Actionlist] 660.06
1791: finished :operator-arglist 
params: "([n coll] [n step coll] [n step pad coll])"
[---Sent---] 660.24
(:emacs-rex (swank:listener-eval "(partition 2 (interleave [1 2 3] [10 20 30])) 
") "image-processing.core" :repl-thread 1792)

[-Received-] 660.24
(:write-string "((1 10) (2 20) (3 30))
" :repl-result)
[-Received-] 660.24
(:return (:ok nil) 1792)
[Actionlist] 660.24
1792: finished :listener-eval 
params: nil
[---Sent---] 660.77
(:emacs-rex (swank:operator-arglist "partition" "image-processing.core") "image-processing.core" t 1793)

[-Received-] 660.77
(:return (:ok "([n coll] [n step coll] [n step pad coll])") 1793)
[Actionlist] 660.77
1793: finished :operator-arglist 
params: "([n coll] [n step coll] [n step pad coll])"
[---Sent---] 660.86
(:emacs-rex (swank:operator-arglist "partition" "image-processing.core") "image-processing.core" t 1794)

[-Received-] 660.86
(:return (:ok "([n coll] [n step coll] [n step pad coll])") 1794)
[Actionlist] 660.86
1794: finished :operator-arglist 
params: "([n coll] [n step coll] [n step pad coll])"
[---Sent---] 662.11
(:emacs-rex (swank:operator-arglist "+" "image-processing.core") "image-processing.core" t 1795)

[-Received-] 662.11
(:return (:ok "([] [x] [x y] [x y & more])") 1795)
[Actionlist] 662.11
1795: finished :operator-arglist 
params: "([] [x] [x y] [x y & more])"
[---Sent---] 662.22
(:emacs-rex (swank:operator-arglist "+" "image-processing.core") "image-processing.core" t 1796)

[-Received-] 662.22
(:return (:ok "([] [x] [x y] [x y & more])") 1796)
[Actionlist] 662.22
1796: finished :operator-arglist 
params: "([] [x] [x y] [x y & more])"
[---Sent---] 662.87
(:emacs-rex (swank:operator-arglist "rgb-func" "image-processing.core") "image-processing.core" t 1797)

[-Received-] 662.87
(:return (:ok nil) 1797)
[Actionlist] 662.87
1797: finished :operator-arglist 
params: nil
[---Sent---] 663.09
(:emacs-rex (swank:operator-arglist "square" "image-processing.core") "image-processing.core" t 1798)

[-Received-] 663.09
(:return (:ok nil) 1798)
[Actionlist] 663.09
1798: finished :operator-arglist 
params: nil
[---Sent---] 663.23
(:emacs-rex (swank:operator-arglist "fn" "image-processing.core") "image-processing.core" t 1799)

[-Received-] 663.23
(:return (:ok "([& sigs])") 1799)
[Actionlist] 663.23
1799: finished :operator-arglist 
params: "([& sigs])"
[---Sent---] 663.47
(:emacs-rex (swank:operator-arglist "*" "image-processing.core") "image-processing.core" t 1800)

[-Received-] 663.48
(:return (:ok "([] [x] [x y] [x y & more])") 1800)
[Actionlist] 663.48
1800: finished :operator-arglist 
params: "([] [x] [x y] [x y & more])"
[---Sent---] 663.52
(:emacs-rex (swank:operator-arglist "*" "image-processing.core") "image-processing.core" t 1801)

[-Received-] 663.52
(:return (:ok "([] [x] [x y] [x y & more])") 1801)
[Actionlist] 663.52
1801: finished :operator-arglist 
params: "([] [x] [x y] [x y & more])"
[---Sent---] 663.72
(:emacs-rex (swank:operator-arglist "square" "image-processing.core") "image-processing.core" t 1802)

[-Received-] 663.72
(:return (:ok nil) 1802)
[Actionlist] 663.72
1802: finished :operator-arglist 
params: nil
[---Sent---] 663.87
(:emacs-rex (swank:operator-arglist "-" "image-processing.core") "image-processing.core" t 1803)

[-Received-] 663.87
(:return (:ok "([x] [x y] [x y & more])") 1803)
[Actionlist] 663.87
1803: finished :operator-arglist 
params: "([x] [x y] [x y & more])"
[---Sent---] 664.05
(:emacs-rex (swank:operator-arglist "first" "image-processing.core") "image-processing.core" t 1804)

[-Received-] 664.05
(:return (:ok "([coll])") 1804)
[Actionlist] 664.05
1804: finished :operator-arglist 
params: "([coll])"
[---Sent---] 664.38
(:emacs-rex (swank:operator-arglist "second" "image-processing.core") "image-processing.core" t 1805)

[-Received-] 664.38
(:return (:ok "([x])") 1805)
[Actionlist] 664.38
1805: finished :operator-arglist 
params: "([x])"
[---Sent---] 665.07
(:emacs-rex (swank:operator-arglist "buff-imgs" "image-processing.core") "image-processing.core" t 1806)

[-Received-] 665.07
(:return (:ok nil) 1806)
[Actionlist] 665.07
1806: finished :operator-arglist 
params: nil
[---Sent---] 665.2
(:emacs-rex (swank:operator-arglist "label" "image-processing.core") "image-processing.core" t 1807)

[-Received-] 665.21
(:return (:ok nil) 1807)
[Actionlist] 665.21
1807: finished :operator-arglist 
params: nil
[---Sent---] 667.13
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 1808)

[-Received-] 667.13
(:return (:ok nil) 1808)
[Actionlist] 667.13
1808: finished :operator-arglist 
params: nil
[---Sent---] 667.22
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 1809)

[-Received-] 667.22
(:return (:ok nil) 1809)
[Actionlist] 667.22
1809: finished :operator-arglist 
params: nil
[---Sent---] 667.37
(:emacs-rex (swank:operator-arglist "defn" "image-processing.core") "image-processing.core" t 1810)

[-Received-] 667.37
(:return (:ok "([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])") 1810)
[Actionlist] 667.37
1810: finished :operator-arglist 
params: "([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])"
[---Sent---] 667.57
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 1811)

[-Received-] 667.57
(:return (:ok nil) 1811)
[Actionlist] 667.57
1811: finished :operator-arglist 
params: nil
[---Sent---] 667.61
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 1812)

[-Received-] 667.61
(:return (:ok nil) 1812)
[Actionlist] 667.61
1812: finished :operator-arglist 
params: nil
[---Sent---] 667.67
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 1813)

[-Received-] 667.68
(:return (:ok nil) 1813)
[Actionlist] 667.68
1813: finished :operator-arglist 
params: nil
[---Sent---] 667.72
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 1814)

[-Received-] 667.72
(:return (:ok nil) 1814)
[Actionlist] 667.72
1814: finished :operator-arglist 
params: nil
[---Sent---] 667.74
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 1815)

[-Received-] 667.75
(:return (:ok nil) 1815)
[Actionlist] 667.75
1815: finished :operator-arglist 
params: nil
[---Sent---] 667.85
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 1816)

[-Received-] 667.86
(:return (:ok nil) 1816)
[Actionlist] 667.86
1816: finished :operator-arglist 
params: nil
[---Sent---] 667.93
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 1817)

[-Received-] 667.93
(:return (:ok nil) 1817)
[Actionlist] 667.93
1817: finished :operator-arglist 
params: nil
[---Sent---] 667.97
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 1818)

[-Received-] 667.97
(:return (:ok nil) 1818)
[Actionlist] 667.97
1818: finished :operator-arglist 
params: nil
[---Sent---] 667.99
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 1819)

[-Received-] 668.0
(:return (:ok nil) 1819)
[Actionlist] 668.0
1819: finished :operator-arglist 
params: nil
[---Sent---] 668.02
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 1820)

[-Received-] 668.02
(:return (:ok nil) 1820)
[Actionlist] 668.02
1820: finished :operator-arglist 
params: nil
[---Sent---] 668.04
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 1821)

[-Received-] 668.04
(:return (:ok nil) 1821)
[Actionlist] 668.04
1821: finished :operator-arglist 
params: nil
[---Sent---] 668.15
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 1822)

[-Received-] 668.15
(:return (:ok nil) 1822)
[Actionlist] 668.15
1822: finished :operator-arglist 
params: nil
[---Sent---] 668.26
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 1823)

[-Received-] 668.26
(:return (:ok nil) 1823)
[Actionlist] 668.26
1823: finished :operator-arglist 
params: nil
[---Sent---] 668.36
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 1824)

[-Received-] 668.36
(:return (:ok nil) 1824)
[Actionlist] 668.36
1824: finished :operator-arglist 
params: nil
[---Sent---] 668.39
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 1825)

[-Received-] 668.41
(:return (:ok nil) 1825)
[Actionlist] 668.41
1825: finished :operator-arglist 
params: nil
[---Sent---] 668.43
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 1826)

[-Received-] 668.43
(:return (:ok nil) 1826)
[Actionlist] 668.43
1826: finished :operator-arglist 
params: nil
[---Sent---] 668.52
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 1827)

[-Received-] 668.52
(:return (:ok nil) 1827)
[Actionlist] 668.52
1827: finished :operator-arglist 
params: nil
[---Sent---] 668.57
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 1828)

[-Received-] 668.58
(:return (:ok nil) 1828)
[Actionlist] 668.58
1828: finished :operator-arglist 
params: nil
[---Sent---] 668.67
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 1829)

[-Received-] 668.67
(:return (:ok nil) 1829)
[Actionlist] 668.67
1829: finished :operator-arglist 
params: nil
[---Sent---] 668.73
(:emacs-rex (swank:operator-arglist "just" "image-processing.core") "image-processing.core" t 1830)

[-Received-] 668.74
(:return (:ok nil) 1830)
[Actionlist] 668.74
1830: finished :operator-arglist 
params: nil
[---Sent---] 668.77
(:emacs-rex (swank:operator-arglist "just" "image-processing.core") "image-processing.core" t 1831)

[-Received-] 668.77
(:return (:ok nil) 1831)
[Actionlist] 668.77
1831: finished :operator-arglist 
params: nil
[---Sent---] 668.79
(:emacs-rex (swank:operator-arglist "just" "image-processing.core") "image-processing.core" t 1832)

[-Received-] 668.79
(:return (:ok nil) 1832)
[Actionlist] 668.79
1832: finished :operator-arglist 
params: nil
[---Sent---] 670.52
(:emacs-rex (swank:operator-arglist "*" "image-processing.core") "image-processing.core" t 1833)

[-Received-] 670.52
(:return (:ok "([] [x] [x y] [x y & more])") 1833)
[Actionlist] 670.52
1833: finished :operator-arglist 
params: "([] [x] [x y] [x y & more])"
[---Sent---] 670.52
(:emacs-rex (swank:describe-function "*") "image-processing.core" t 1834)

[-Received-] 670.52
(:return (:ok "-------------------------
clojure.core/*
([] [x] [x y] [x y & more])
  Returns the product of nums. (*) returns 1. Does not auto-promote
  longs, will throw on overflow. See also: *'
") 1834)
[Actionlist] 670.52
1834: finished :describe-function 
params: "-------------------------
clojure.core/*
([] [x] [x y] [x y & more])
  Returns the product of nums. (*) returns 1. Does not auto-promote
  longs, will throw on overflow. See also: *'
"
[---Sent---] 670.92
(:emacs-rex (swank:operator-arglist "get-rgb-only" "image-processing.core") "image-processing.core" t 1835)

[-Received-] 670.92
(:return (:ok nil) 1835)
[Actionlist] 670.92
1835: finished :operator-arglist 
params: nil
[---Sent---] 671.36
(:emacs-rex (swank:listener-eval "(ns image-processing.core
    (:import
      (java.lang Math)
      (javax.imageio ImageIO)
      (java.io File)
      (java.awt.image BufferedImage))
    (:use 
      image-processing.image))


(defn intcolor-to-argb
  \"Convert the 32 bits color to ARGB. It returns a vector [A R G B].\"
  [color]
  [(bit-and (bit-shift-right color 24) 0xff)
   (bit-and (bit-shift-right color 16) 0xff)
   (bit-and (bit-shift-right color 8) 0xff)
   (bit-and color 0xff)])


(defn get-argb
  \"Get the [a r g b] color of a pixel [x y] of IMG.\"
  [img coord]
  (let [[x y] coord]
    (intcolor-to-argb (.getRGB img x y))))


(defn set-argb
  \"Set the ARGB color of a pixel COORD of the image IMG.\"
  #^{:arglists [img coord argb-color]}
  [img coord argb-color]
  (let [[x y] coord
        [a r g b] argb-color
        int-color (bit-or (bit-shift-left a 24)
                          (bit-or (bit-shift-left r 16)
                                  (bit-or (bit-shift-left g 8) b)))]
    (.setRGB img x y int-color)))


(defn get-img-coords
  \"Returns a sequence of all coordinates of the image.\"
  #^{:arglists [img]}
  [img]
  (for [y (range (.getHeight img))
        x (range (.getWidth img))]
       [x y]))


(defn get-rgb-only
  \"Returns a vec with [r g b] if COLOR is [a r g b], or returns COLOR if it already is
      just [r g b].\"
  #^{:arglists [color]}
  [color]
  (if (> (count color) 3) color (subvec color 1)))


(defn convert-buffImg-to-image
  \"Doc\"
  #^{:arglists [buffered-image]}
  [buffered-image]
  (let [argb-values (reduce #(conj %1 (get-argb buffered-image %2))
                            []
                            (get-img-coords buffered-image))]
    (Image. argb-values (.getWidth buffered-image))))


(defn euclidian-argb-distance
  \"Euclidian distance between two [a r g b] colors.\"
  [color1 color2]
  (let [square (fn [x] (* x x))])
  (Math/sqrt (reduce #(+ %1 (square (- (first %2) (second %2))))
                     0.0
                     (partition 2 (interleave 
                                    (get-rgb-only color1)
                                    (get-rgb-only color2))))))


(defn get-grayscale-values
  \"Returns a lazy sequence of the grayscale value of the image's pixels.\"
  #^{:arglists [img]}
  [img]
  (map #(int (mean (rest (get-argb img %)))) (get-img-coords img)))


(defn get-binarized-values
  \"Returns a lazy sequence of the binarized value of the image's pixels.
      If pixel < threshold, then pixel=BLACK (0) else pixel=WHITE (255).\"
  #^{:arglists [img threshold]}
  [img threshold]
  (map #(if (< % threshold) 0 255) (get-grayscale-values img)))


;(defn vertical-histogram
;  \"Doc\"
;  #^{:arglists [img]}
;  [img]
;  )
;  TODO: partition & interleave

;(def img-path \"/home/boechat/Dropbox/Documents/Coding/Hough_transform/straight_lines.png\")
;(def buffered-image (ImageIO/read (File. img-path)))
") "image-processing.core" :repl-thread 1836)

[-Received-] 671.43
(:debug 1 1 ("Unable to resolve classname: Image" "  [Thrown class java.lang.IllegalArgumentException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "         Compiler.java:2430 clojure.lang.Compiler$NewExpr$Parser.parse" (:restartable nil)) (1 "         Compiler.java:6409 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (2 "         Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil)) (3 "         Compiler.java:6397 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (4 "         Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil)) (5 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil)) (6 "         Compiler.java:5572 clojure.lang.Compiler$BodyExpr$Parser.parse" (:restartable nil)) (7 "         Compiler.java:5873 clojure.lang.Compiler$LetExpr$Parser.parse" (:restartable nil)) (8 "         Compiler.java:6409 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (9 "         Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil))) (nil))
[-Received-] 671.44
(:debug-activate 1 1 nil)
[---Sent---] 671.62
(:emacs-rex (swank:throw-to-toplevel) nil 1 1837)

[-Received-] 671.62
(:return (:abort) 1837)
[Actionlist] 671.62
1836: pending  :listener-eval 
1837: finished :throw-to-toplevel 
[-Received-] 671.62
(:debug-return 1 1 nil)
[-Received-] 671.62
(:return (:abort) 1836)
[Actionlist] 671.62
1836: finished :listener-eval 
1837: finished :throw-to-toplevel 
[---Sent---] 672.02
(:emacs-rex (swank:listener-eval "(ns image-processing.core
    (:import
      (java.lang Math)
      (javax.imageio ImageIO)
      (java.io File)
      (java.awt.image BufferedImage))
    (:use 
      image-processing.image))
") "image-processing.core" :repl-thread 1838)

[-Received-] 672.08
(:write-string "nil
" :repl-result)
[-Received-] 672.08
(:return (:ok nil) 1838)
[Actionlist] 672.08
1838: finished :listener-eval 
params: nil
[---Sent---] 672.75
(:emacs-rex (swank:operator-arglist "image-processing" "image-processing.core") "image-processing.core" t 1839)

[-Received-] 672.76
(:return (:ok nil) 1839)
[Actionlist] 672.76
1839: finished :operator-arglist 
params: nil
[---Sent---] 672.97
(:emacs-rex (swank:listener-eval "(ns image-processing.core
    (:import
      (java.lang Math)
      (javax.imageio ImageIO)
      (java.io File)
      (java.awt.image BufferedImage)
      [image-processing.image Image])
    (:use 
      image-processing.image))
") "image-processing.core" :repl-thread 1840)

[-Received-] 673.03
(:debug 1 1 ("image-processing.image.Image" "  [Thrown class java.lang.ClassNotFoundException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "    URLClassLoader.java:366 java.net.URLClassLoader$1.run" (:restartable nil)) (1 "    URLClassLoader.java:355 java.net.URLClassLoader$1.run" (:restartable nil)) (2 "           (Unknown Source) java.security.AccessController.doPrivileged" (:restartable nil)) (3 "    URLClassLoader.java:354 java.net.URLClassLoader.findClass" (:restartable nil)) (4 " DynamicClassLoader.java:61 clojure.lang.DynamicClassLoader.findClass" (:restartable nil)) (5 "       ClassLoader.java:423 java.lang.ClassLoader.loadClass" (:restartable nil)) (6 "       ClassLoader.java:356 java.lang.ClassLoader.loadClass" (:restartable nil)) (7 "           (Unknown Source) java.lang.Class.forName0" (:restartable nil)) (8 "             Class.java:186 java.lang.Class.forName" (:restartable nil)) (9 "           NO_SOURCE_FILE:1 image-processing.core/eval4011[fn]" (:restartable nil))) (nil))
[-Received-] 673.04
(:debug-activate 1 1 nil)
[---Sent---] 673.24
(:emacs-rex (swank:throw-to-toplevel) nil 1 1841)

[-Received-] 673.24
(:return (:abort) 1841)
[Actionlist] 673.24
1840: pending  :listener-eval 
1841: finished :throw-to-toplevel 
[-Received-] 673.24
(:debug-return 1 1 nil)
[-Received-] 673.24
(:return (:abort) 1840)
[Actionlist] 673.24
1840: finished :listener-eval 
1841: finished :throw-to-toplevel 
[---Sent---] 673.83
(:emacs-rex (swank:listener-eval "(defn convert-buffImg-to-image
  \"Doc\"
  #^{:arglists [buffered-image]}
  [buffered-image]
  (let [argb-values (reduce #(conj %1 (get-argb buffered-image %2))
                            []
                            (get-img-coords buffered-image))]
    (Image. argb-values (.getWidth buffered-image))))
") "image-processing.core" :repl-thread 1842)

[-Received-] 673.89
(:debug 1 1 ("Unable to resolve classname: Image" "  [Thrown class java.lang.IllegalArgumentException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "         Compiler.java:2430 clojure.lang.Compiler$NewExpr$Parser.parse" (:restartable nil)) (1 "         Compiler.java:6409 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (2 "         Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil)) (3 "         Compiler.java:6397 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (4 "         Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil)) (5 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil)) (6 "         Compiler.java:5572 clojure.lang.Compiler$BodyExpr$Parser.parse" (:restartable nil)) (7 "         Compiler.java:5873 clojure.lang.Compiler$LetExpr$Parser.parse" (:restartable nil)) (8 "         Compiler.java:6409 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (9 "         Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil))) (nil))
[-Received-] 673.89
(:debug-activate 1 1 nil)
[---Sent---] 674.13
(:emacs-rex (swank:throw-to-toplevel) nil 1 1843)

[-Received-] 674.13
(:return (:abort) 1843)
[Actionlist] 674.13
1842: pending  :listener-eval 
1843: finished :throw-to-toplevel 
[-Received-] 674.14
(:debug-return 1 1 nil)
[-Received-] 674.26
(:return (:abort) 1842)
[Actionlist] 674.26
1842: finished :listener-eval 
[---Sent---] 674.91
(:emacs-rex (swank:operator-arglist "))))" "image-processing.core") "image-processing.core" t 1844)

[-Received-] 674.91
(:return (:ok nil) 1844)
[Actionlist] 674.91
1844: finished :operator-arglist 
params: nil
[---Sent---] 675.36
(:emacs-rex (swank:operator-arglist "image-processing" "image-processing.core") "image-processing.core" t 1845)

[-Received-] 675.37
(:return (:ok nil) 1845)
[Actionlist] 675.37
1845: finished :operator-arglist 
params: nil
[---Sent---] 675.46
(:emacs-rex (swank:operator-arglist "image-processing" "image-processing.core") "image-processing.core" t 1846)

[-Received-] 675.46
(:return (:ok nil) 1846)
[Actionlist] 675.46
1846: finished :operator-arglist 
params: nil
[---Sent---] 675.74
(:emacs-rex (swank:listener-eval "(ns image-processing.core
    (:import
      (java.lang Math)
      (javax.imageio ImageIO)
      (java.io File)
      (java.awt.image BufferedImage))
    (:use 
      [ image-processing.image :only (->Image)]))
") "image-processing.core" :repl-thread 1847)

[-Received-] 675.79
(:write-string "nil
" :repl-result)
[-Received-] 675.79
(:return (:ok nil) 1847)
[Actionlist] 675.79
1847: finished :listener-eval 
params: nil
[---Sent---] 675.98
(:emacs-rex (swank:listener-eval "(ns image-processing.core
    (:import
      (java.lang Math)
      (javax.imageio ImageIO)
      (java.io File)
      (java.awt.image BufferedImage))
    (:use 
      [ image-processing.image :only (->Image)]))


(defn intcolor-to-argb
  \"Convert the 32 bits color to ARGB. It returns a vector [A R G B].\"
  [color]
  [(bit-and (bit-shift-right color 24) 0xff)
   (bit-and (bit-shift-right color 16) 0xff)
   (bit-and (bit-shift-right color 8) 0xff)
   (bit-and color 0xff)])


(defn get-argb
  \"Get the [a r g b] color of a pixel [x y] of IMG.\"
  [img coord]
  (let [[x y] coord]
    (intcolor-to-argb (.getRGB img x y))))


(defn set-argb
  \"Set the ARGB color of a pixel COORD of the image IMG.\"
  #^{:arglists [img coord argb-color]}
  [img coord argb-color]
  (let [[x y] coord
        [a r g b] argb-color
        int-color (bit-or (bit-shift-left a 24)
                          (bit-or (bit-shift-left r 16)
                                  (bit-or (bit-shift-left g 8) b)))]
    (.setRGB img x y int-color)))


(defn get-img-coords
  \"Returns a sequence of all coordinates of the image.\"
  #^{:arglists [img]}
  [img]
  (for [y (range (.getHeight img))
        x (range (.getWidth img))]
       [x y]))


(defn get-rgb-only
  \"Returns a vec with [r g b] if COLOR is [a r g b], or returns COLOR if it already is
      just [r g b].\"
  #^{:arglists [color]}
  [color]
  (if (> (count color) 3) color (subvec color 1)))


(defn convert-buffImg-to-image
  \"Doc\"
  #^{:arglists [buffered-image]}
  [buffered-image]
  (let [argb-values (reduce #(conj %1 (get-argb buffered-image %2))
                            []
                            (get-img-coords buffered-image))]
    (Image. argb-values (.getWidth buffered-image))))


(defn euclidian-argb-distance
  \"Euclidian distance between two [a r g b] colors.\"
  [color1 color2]
  (let [square (fn [x] (* x x))])
  (Math/sqrt (reduce #(+ %1 (square (- (first %2) (second %2))))
                     0.0
                     (partition 2 (interleave 
                                    (get-rgb-only color1)
                                    (get-rgb-only color2))))))


(defn get-grayscale-values
  \"Returns a lazy sequence of the grayscale value of the image's pixels.\"
  #^{:arglists [img]}
  [img]
  (map #(int (mean (rest (get-argb img %)))) (get-img-coords img)))


(defn get-binarized-values
  \"Returns a lazy sequence of the binarized value of the image's pixels.
      If pixel < threshold, then pixel=BLACK (0) else pixel=WHITE (255).\"
  #^{:arglists [img threshold]}
  [img threshold]
  (map #(if (< % threshold) 0 255) (get-grayscale-values img)))


;(defn vertical-histogram
;  \"Doc\"
;  #^{:arglists [img]}
;  [img]
;  )
;  TODO: partition & interleave

;(def img-path \"/home/boechat/Dropbox/Documents/Coding/Hough_transform/straight_lines.png\")
;(def buffered-image (ImageIO/read (File. img-path)))
") "image-processing.core" :repl-thread 1848)

[-Received-] 676.04
(:debug 1 1 ("Unable to resolve classname: Image" "  [Thrown class java.lang.IllegalArgumentException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "         Compiler.java:2430 clojure.lang.Compiler$NewExpr$Parser.parse" (:restartable nil)) (1 "         Compiler.java:6409 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (2 "         Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil)) (3 "         Compiler.java:6397 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (4 "         Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil)) (5 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil)) (6 "         Compiler.java:5572 clojure.lang.Compiler$BodyExpr$Parser.parse" (:restartable nil)) (7 "         Compiler.java:5873 clojure.lang.Compiler$LetExpr$Parser.parse" (:restartable nil)) (8 "         Compiler.java:6409 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (9 "         Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil))) (nil))
[-Received-] 676.04
(:debug-activate 1 1 nil)
[---Sent---] 676.36
(:emacs-rex (swank:throw-to-toplevel) nil 1 1849)

[-Received-] 676.36
(:return (:abort) 1849)
[Actionlist] 676.36
1848: pending  :listener-eval 
1849: finished :throw-to-toplevel 
[-Received-] 676.36
(:debug-return 1 1 nil)
[-Received-] 676.36
(:return (:abort) 1848)
[Actionlist] 676.36
1848: finished :listener-eval 
1849: finished :throw-to-toplevel 
[---Sent---] 677.28
(:emacs-rex (swank:operator-arglist "image_processing" "image-processing.core") "image-processing.core" t 1850)

[-Received-] 677.28
(:return (:ok nil) 1850)
[Actionlist] 677.28
1850: finished :operator-arglist 
params: nil
[---Sent---] 677.5
(:emacs-rex (swank:listener-eval "(ns image-processing.core
    (:import
      (java.lang Math)
      (javax.imageio ImageIO)
      (java.io File)
      (java.awt.image BufferedImage)
      (image_processing.image Image))
    (:use 
      image-processing.image))
") "image-processing.core" :repl-thread 1851)

[-Received-] 677.55
(:write-string "nil
" :repl-result)
[-Received-] 677.55
(:return (:ok nil) 1851)
[Actionlist] 677.55
1851: finished :listener-eval 
params: nil
[---Sent---] 677.91
(:emacs-rex (swank:listener-eval "(defn convert-buffImg-to-image
  \"Doc\"
  #^{:arglists [buffered-image]}
  [buffered-image]
  (let [argb-values (reduce #(conj %1 (get-argb buffered-image %2))
                            []
                            (get-img-coords buffered-image))]
    (Image. argb-values (.getWidth buffered-image))))
") "image-processing.core" :repl-thread 1852)

[-Received-] 677.96
(:write-string "#'image-processing.core/convert-buffImg-to-image
" :repl-result)
[-Received-] 677.96
(:return (:ok nil) 1852)
[Actionlist] 677.97
1852: finished :listener-eval 
params: nil
[---Sent---] 678.15
(:emacs-rex (swank:listener-eval "(ns image-processing.core
    (:import
      (java.lang Math)
      (javax.imageio ImageIO)
      (java.io File)
      (java.awt.image BufferedImage)
      (image_processing.image Image))
    (:use 
      image-processing.image))


(defn intcolor-to-argb
  \"Convert the 32 bits color to ARGB. It returns a vector [A R G B].\"
  [color]
  [(bit-and (bit-shift-right color 24) 0xff)
   (bit-and (bit-shift-right color 16) 0xff)
   (bit-and (bit-shift-right color 8) 0xff)
   (bit-and color 0xff)])


(defn get-argb
  \"Get the [a r g b] color of a pixel [x y] of IMG.\"
  [img coord]
  (let [[x y] coord]
    (intcolor-to-argb (.getRGB img x y))))


(defn set-argb
  \"Set the ARGB color of a pixel COORD of the image IMG.\"
  #^{:arglists [img coord argb-color]}
  [img coord argb-color]
  (let [[x y] coord
        [a r g b] argb-color
        int-color (bit-or (bit-shift-left a 24)
                          (bit-or (bit-shift-left r 16)
                                  (bit-or (bit-shift-left g 8) b)))]
    (.setRGB img x y int-color)))


(defn get-img-coords
  \"Returns a sequence of all coordinates of the image.\"
  #^{:arglists [img]}
  [img]
  (for [y (range (.getHeight img))
        x (range (.getWidth img))]
       [x y]))


(defn get-rgb-only
  \"Returns a vec with [r g b] if COLOR is [a r g b], or returns COLOR if it already is
      just [r g b].\"
  #^{:arglists [color]}
  [color]
  (if (> (count color) 3) color (subvec color 1)))


(defn convert-buffImg-to-image
  \"Doc\"
  #^{:arglists [buffered-image]}
  [buffered-image]
  (let [argb-values (reduce #(conj %1 (get-argb buffered-image %2))
                            []
                            (get-img-coords buffered-image))]
    (Image. argb-values (.getWidth buffered-image))))


(defn euclidian-argb-distance
  \"Euclidian distance between two [a r g b] colors.\"
  [color1 color2]
  (let [square (fn [x] (* x x))])
  (Math/sqrt (reduce #(+ %1 (square (- (first %2) (second %2))))
                     0.0
                     (partition 2 (interleave 
                                    (get-rgb-only color1)
                                    (get-rgb-only color2))))))


(defn get-grayscale-values
  \"Returns a lazy sequence of the grayscale value of the image's pixels.\"
  #^{:arglists [img]}
  [img]
  (map #(int (mean (rest (get-argb img %)))) (get-img-coords img)))


(defn get-binarized-values
  \"Returns a lazy sequence of the binarized value of the image's pixels.
      If pixel < threshold, then pixel=BLACK (0) else pixel=WHITE (255).\"
  #^{:arglists [img threshold]}
  [img threshold]
  (map #(if (< % threshold) 0 255) (get-grayscale-values img)))


;(defn vertical-histogram
;  \"Doc\"
;  #^{:arglists [img]}
;  [img]
;  )
;  TODO: partition & interleave

;(def img-path \"/home/boechat/Dropbox/Documents/Coding/Hough_transform/straight_lines.png\")
;(def buffered-image (ImageIO/read (File. img-path)))
") "image-processing.core" :repl-thread 1853)

[-Received-] 678.2
(:debug 1 1 ("Unable to resolve symbol: square in this context" "  [Thrown class java.lang.RuntimeException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "            Util.java:156 clojure.lang.Util.runtimeException" (:restartable nil)) (1 "       Compiler.java:6720 clojure.lang.Compiler.resolveIn" (:restartable nil)) (2 "       Compiler.java:6664 clojure.lang.Compiler.resolve" (:restartable nil)) (3 "       Compiler.java:6625 clojure.lang.Compiler.analyzeSymbol" (:restartable nil)) (4 "       Compiler.java:6198 clojure.lang.Compiler.analyze" (:restartable nil)) (5 "       Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil)) (6 "       Compiler.java:3452 clojure.lang.Compiler$InvokeExpr.parse" (:restartable nil)) (7 "       Compiler.java:6411 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (8 "       Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil)) (9 "       Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil))) (nil))
[-Received-] 678.21
(:debug-activate 1 1 nil)
[---Sent---] 678.72
(:emacs-rex (swank:throw-to-toplevel) nil 1 1854)

[-Received-] 678.72
(:return (:abort) 1854)
[Actionlist] 678.72
1853: pending  :listener-eval 
1854: finished :throw-to-toplevel 
[-Received-] 678.72
(:debug-return 1 1 nil)
[-Received-] 678.72
(:return (:abort) 1853)
[Actionlist] 678.72
1853: finished :listener-eval 
1854: finished :throw-to-toplevel 
[---Sent---] 679.49
(:emacs-rex (swank:listener-eval "(ns image-processing.core
    (:import
      (java.lang Math)
      (javax.imageio ImageIO)
      (java.io File)
      (java.awt.image BufferedImage)
      (image_processing.image Image))
    (:use 
      image-processing.image))


(defn intcolor-to-argb
  \"Convert the 32 bits color to ARGB. It returns a vector [A R G B].\"
  [color]
  [(bit-and (bit-shift-right color 24) 0xff)
   (bit-and (bit-shift-right color 16) 0xff)
   (bit-and (bit-shift-right color 8) 0xff)
   (bit-and color 0xff)])


(defn get-argb
  \"Get the [a r g b] color of a pixel [x y] of IMG.\"
  [img coord]
  (let [[x y] coord]
    (intcolor-to-argb (.getRGB img x y))))


(defn set-argb
  \"Set the ARGB color of a pixel COORD of the image IMG.\"
  #^{:arglists [img coord argb-color]}
  [img coord argb-color]
  (let [[x y] coord
        [a r g b] argb-color
        int-color (bit-or (bit-shift-left a 24)
                          (bit-or (bit-shift-left r 16)
                                  (bit-or (bit-shift-left g 8) b)))]
    (.setRGB img x y int-color)))


(defn get-img-coords
  \"Returns a sequence of all coordinates of the image.\"
  #^{:arglists [img]}
  [img]
  (for [y (range (.getHeight img))
        x (range (.getWidth img))]
       [x y]))


(defn get-rgb-only
  \"Returns a vec with [r g b] if COLOR is [a r g b], or returns COLOR if it already is
      just [r g b].\"
  #^{:arglists [color]}
  [color]
  (if (> (count color) 3) color (subvec color 1)))


(defn convert-buffImg-to-image
  \"Doc\"
  #^{:arglists [buffered-image]}
  [buffered-image]
  (let [argb-values (reduce #(conj %1 (get-argb buffered-image %2))
                            []
                            (get-img-coords buffered-image))]
    (Image. argb-values (.getWidth buffered-image))))


(defn euclidian-argb-distance
  \"Euclidian distance between two [a r g b] colors.\"
  [color1 color2]
  (let [square (fn [x] (* x x))]
    (Math/sqrt (reduce #(+ %1 (square (- (first %2) (second %2))))
                       0.0
                       (partition 2 (interleave 
                                      (get-rgb-only color1)
                                      (get-rgb-only color2)))))))


(defn get-grayscale-values
  \"Returns a lazy sequence of the grayscale value of the image's pixels.\"
  #^{:arglists [img]}
  [img]
  (map #(int (mean (rest (get-argb img %)))) (get-img-coords img)))


(defn get-binarized-values
  \"Returns a lazy sequence of the binarized value of the image's pixels.
      If pixel < threshold, then pixel=BLACK (0) else pixel=WHITE (255).\"
  #^{:arglists [img threshold]}
  [img threshold]
  (map #(if (< % threshold) 0 255) (get-grayscale-values img)))


;(defn vertical-histogram
;  \"Doc\"
;  #^{:arglists [img]}
;  [img]
;  )
;  TODO: partition & interleave

;(def img-path \"/home/boechat/Dropbox/Documents/Coding/Hough_transform/straight_lines.png\")
;(def buffered-image (ImageIO/read (File. img-path)))
") "image-processing.core" :repl-thread 1855)

[-Received-] 679.55
(:debug 1 1 ("Unable to resolve symbol: mean in this context" "  [Thrown class java.lang.RuntimeException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "              Util.java:156 clojure.lang.Util.runtimeException" (:restartable nil)) (1 "         Compiler.java:6720 clojure.lang.Compiler.resolveIn" (:restartable nil)) (2 "         Compiler.java:6664 clojure.lang.Compiler.resolve" (:restartable nil)) (3 "         Compiler.java:6625 clojure.lang.Compiler.analyzeSymbol" (:restartable nil)) (4 "         Compiler.java:6198 clojure.lang.Compiler.analyze" (:restartable nil)) (5 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil)) (6 "         Compiler.java:3452 clojure.lang.Compiler$InvokeExpr.parse" (:restartable nil)) (7 "         Compiler.java:6411 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (8 "         Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil)) (9 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil))) (nil))
[-Received-] 679.55
(:debug-activate 1 1 nil)
[---Sent---] 679.8
(:emacs-rex (swank:throw-to-toplevel) nil 1 1856)

[-Received-] 679.8
(:return (:abort) 1856)
[Actionlist] 679.8
1855: pending  :listener-eval 
1856: finished :throw-to-toplevel 
[-Received-] 679.8
(:debug-return 1 1 nil)
[-Received-] 679.8
(:return (:abort) 1855)
[Actionlist] 679.8
1855: finished :listener-eval 
1856: finished :throw-to-toplevel 
[---Sent---] 680.89
(:emacs-rex (swank:operator-arglist "n" "image-processing.core") "image-processing.core" t 1857)

[-Received-] 680.89
(:return (:ok nil) 1857)
[Actionlist] 680.89
1857: finished :operator-arglist 
params: nil
[---Sent---] 680.91
(:emacs-rex (swank:operator-arglist "ns" "image-processing.core") "image-processing.core" t 1858)

[-Received-] 680.92
(:return (:ok "([name docstring? attr-map? references*])") 1858)
[Actionlist] 680.92
1858: finished :operator-arglist 
params: "([name docstring? attr-map? references*])"
[---Sent---] 681.18
(:emacs-rex (swank:operator-arglist ":import" "image-processing.basic-math") "image-processing.basic-math" t 1859)

[-Received-] 681.19
(:return (:ok "([map])") 1859)
[Actionlist] 681.19
1859: finished :operator-arglist 
params: "([map])"
[---Sent---] 681.53
(:emacs-rex (swank:operator-arglist "java" "image-processing.basic-math") "image-processing.basic-math" t 1860)

[-Received-] 681.53
(:return (:ok nil) 1860)
[Actionlist] 681.54
1860: finished :operator-arglist 
params: nil
[---Sent---] 682.57
(:emacs-rex (swank:listener-eval "square
") "image-processing.basic-math" :repl-thread 1861)

[-Received-] 682.63
(:debug 1 1 ("Unable to resolve symbol: square in this context" "  [Thrown class java.lang.RuntimeException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "              Util.java:156 clojure.lang.Util.runtimeException" (:restartable nil)) (1 "         Compiler.java:6720 clojure.lang.Compiler.resolveIn" (:restartable nil)) (2 "         Compiler.java:6664 clojure.lang.Compiler.resolve" (:restartable nil)) (3 "         Compiler.java:6625 clojure.lang.Compiler.analyzeSymbol" (:restartable nil)) (4 "         Compiler.java:6198 clojure.lang.Compiler.analyze" (:restartable nil)) (5 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil)) (6 "         Compiler.java:6469 clojure.lang.Compiler.eval" (:restartable nil)) (7 "         Compiler.java:6431 clojure.lang.Compiler.eval" (:restartable nil)) (8 "              core.clj:2795 clojure.core/eval" (:restartable nil)) (9 "               core.clj:534 swank.core/eval825[fn]" (:restartable nil))) (nil))
[-Received-] 682.63
(:debug-activate 1 1 nil)
[---Sent---] 682.8
(:emacs-rex (swank:throw-to-toplevel) nil 1 1862)

[-Received-] 682.8
(:return (:abort) 1862)
[Actionlist] 682.8
1861: pending  :listener-eval 
1862: finished :throw-to-toplevel 
[-Received-] 682.8
(:debug-return 1 1 nil)
[-Received-] 682.8
(:return (:abort) 1861)
[Actionlist] 682.8
1861: finished :listener-eval 
1862: finished :throw-to-toplevel 
[---Sent---] 683.28
(:emacs-rex (swank:operator-arglist "*" "image-processing.basic-math") "image-processing.basic-math" t 1863)

[-Received-] 683.28
(:return (:ok "([] [x] [x y] [x y & more])") 1863)
[Actionlist] 683.28
1863: finished :operator-arglist 
params: "([] [x] [x y] [x y & more])"
[---Sent---] 683.31
(:emacs-rex (swank:operator-arglist "*" "image-processing.basic-math") "image-processing.basic-math" t 1864)

[-Received-] 683.31
(:return (:ok "([] [x] [x y] [x y & more])") 1864)
[Actionlist] 683.31
1864: finished :operator-arglist 
params: "([] [x] [x y] [x y & more])"
[---Sent---] 684.05
(:emacs-rex (swank:operator-arglist "/" "image-processing.basic-math") "image-processing.basic-math" t 1865)

[-Received-] 684.06
(:return (:ok "([x] [x y] [x y & more])") 1865)
[Actionlist] 684.06
1865: finished :operator-arglist 
params: "([x] [x y] [x y & more])"
[---Sent---] 684.2
(:emacs-rex (swank:operator-arglist "reduce" "image-processing.basic-math") "image-processing.basic-math" t 1866)

[-Received-] 684.2
(:return (:ok "([f coll] [f val coll])") 1866)
[Actionlist] 684.2
1866: finished :operator-arglist 
params: "([f coll] [f val coll])"
[---Sent---] 684.24
(:emacs-rex (swank:operator-arglist "reduce" "image-processing.basic-math") "image-processing.basic-math" t 1867)

[-Received-] 684.24
(:return (:ok "([f coll] [f val coll])") 1867)
[Actionlist] 684.24
1867: finished :operator-arglist 
params: "([f coll] [f val coll])"
[---Sent---] 684.43
(:emacs-rex (swank:operator-arglist "count" "image-processing.basic-math") "image-processing.basic-math" t 1868)

[-Received-] 684.43
(:return (:ok "([coll])") 1868)
[Actionlist] 684.43
1868: finished :operator-arglist 
params: "([coll])"
[---Sent---] 684.61
(:emacs-rex (swank:listener-eval "(defn mean
  \"Doc\"
  #^{:arglists [coll]}
  [coll]
  (/ (reduce + coll) (count coll)))
") "image-processing.basic-math" :repl-thread 1869)

[-Received-] 684.61
(:write-string "#'user/mean
" :repl-result)
[-Received-] 684.72
(:return (:ok nil) 1869)
[Actionlist] 684.72
1869: finished :listener-eval 
params: nil
[---Sent---] 684.88
(:emacs-rex (swank:listener-eval "(ns image-processing.basic-math
    (:import
      [java.lang Math]))


(defn square
  \"Doc\"
  #^{:arglists [x]}
  [x]
  (* x x))


(defn mean
  \"Doc\"
  #^{:arglists [coll]}
  [coll]
  (/ (reduce + coll) (count coll)))
") "image-processing.core" :repl-thread 1870)

[-Received-] 684.93
(:write-string "#'image-processing.basic-math/mean
" :repl-result)
[-Received-] 684.93
(:new-package "image-processing.basic-math" "image-processing.basic-math")
[-Received-] 684.93
(:indentation-update (("with-bindings" . 0)))
[-Received-] 684.93
(:return (:ok nil) 1870)
[Actionlist] 684.93
1870: finished :listener-eval 
params: nil
[---Sent---] 685.18
(:emacs-rex (swank:operator-arglist "mean" "image-processing.basic-math") "image-processing.basic-math" t 1871)

[-Received-] 685.2
(:indentation-update (("with-bindings" . 1)))
[-Received-] 685.2
(:return (:ok "([coll])") 1871)
[Actionlist] 685.2
1871: finished :operator-arglist 
params: "([coll])"
[---Sent---] 685.27
(:emacs-rex (swank:operator-arglist "mean" "image-processing.basic-math") "image-processing.basic-math" t 1872)

[-Received-] 685.29
(:indentation-update (("with-bindings" . 0)))
[-Received-] 685.29
(:return (:ok "([coll])") 1872)
[Actionlist] 685.29
1872: finished :operator-arglist 
params: "([coll])"
[---Sent---] 685.33
(:emacs-rex (swank:operator-arglist "mean" "image-processing.basic-math") "image-processing.basic-math" t 1873)

[-Received-] 685.34
(:indentation-update (("with-bindings" . 1)))
[-Received-] 685.34
(:return (:ok "([coll])") 1873)
[Actionlist] 685.34
1873: finished :operator-arglist 
params: "([coll])"
[---Sent---] 685.44
(:emacs-rex (swank:listener-eval "(mean [1 3 6])
") "image-processing.basic-math" :repl-thread 1874)

[-Received-] 685.44
(:write-string "10/3
" :repl-result)
[-Received-] 685.54
(:indentation-update (("with-bindings" . 0)))
[-Received-] 685.54
(:return (:ok nil) 1874)
[Actionlist] 685.54
1874: finished :listener-eval 
params: nil
[---Sent---] 686.4
(:emacs-rex (swank:operator-arglist "image-processing" "image-processing.core") "image-processing.core" t 1875)

[-Received-] 686.42
(:indentation-update (("with-bindings" . 1)))
[-Received-] 686.42
(:return (:ok nil) 1875)
[Actionlist] 686.42
1875: finished :operator-arglist 
params: nil
[---Sent---] 686.5
(:emacs-rex (swank:operator-arglist "image-processing" "image-processing.core") "image-processing.core" t 1876)

[-Received-] 686.5
(:indentation-update (("with-bindings" . 0)))
[-Received-] 686.5
(:return (:ok nil) 1876)
[Actionlist] 686.5
1876: finished :operator-arglist 
params: nil
[---Sent---] 686.68
(:emacs-rex (swank:operator-arglist "defn" "image-processing.core") "image-processing.core" t 1877)

[-Received-] 686.7
(:indentation-update (("with-bindings" . 1)))
[-Received-] 686.7
(:return (:ok "([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])") 1877)
[Actionlist] 686.7
1877: finished :operator-arglist 
params: "([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])"
[---Sent---] 686.7
(:emacs-rex (swank:describe-function "defn") "image-processing.core" t 1878)

[-Received-] 686.71
(:indentation-update (("with-bindings" . 0)))
[-Received-] 686.71
(:return (:ok "-------------------------
clojure.core/defn
([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])
Macro
  Same as (def name (fn [params* ] exprs*)) or (def
    name (fn ([params* ] exprs*)+)) with any doc-string or attrs added
    to the var metadata
") 1878)
[Actionlist] 686.71
1878: finished :describe-function 
params: "-------------------------
clojure.core/defn
([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])
Macro
  Same as (def name (fn [params* ] exprs*)) or (def
    name (fn ([params* ] exprs*)+)) with any doc-string or attrs added
    to the var metadata
"
[---Sent---] 686.72
(:emacs-rex (swank:operator-arglist "defn" "image-processing.core") "image-processing.core" t 1879)

[-Received-] 686.72
(:indentation-update (("with-bindings" . 1)))
[-Received-] 686.72
(:return (:ok "([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])") 1879)
[Actionlist] 686.72
1879: finished :operator-arglist 
params: "([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])"
[---Sent---] 686.72
(:emacs-rex (swank:describe-function "defn") "image-processing.core" t 1880)

[-Received-] 686.75
(:indentation-update (("with-bindings" . 0)))
[-Received-] 686.75
(:return (:ok "-------------------------
clojure.core/defn
([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])
Macro
  Same as (def name (fn [params* ] exprs*)) or (def
    name (fn ([params* ] exprs*)+)) with any doc-string or attrs added
    to the var metadata
") 1880)
[Actionlist] 686.75
1880: finished :describe-function 
params: "-------------------------
clojure.core/defn
([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])
Macro
  Same as (def name (fn [params* ] exprs*)) or (def
    name (fn ([params* ] exprs*)+)) with any doc-string or attrs added
    to the var metadata
"
[---Sent---] 686.76
(:emacs-rex (swank:operator-arglist "defn" "image-processing.core") "image-processing.core" t 1881)

[-Received-] 686.77
(:indentation-update (("with-bindings" . 1)))
[-Received-] 686.77
(:return (:ok "([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])") 1881)
[Actionlist] 686.77
1881: finished :operator-arglist 
params: "([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])"
[---Sent---] 686.78
(:emacs-rex (swank:describe-function "defn") "image-processing.core" t 1882)

[-Received-] 686.78
(:indentation-update (("with-bindings" . 0)))
[-Received-] 686.79
(:return (:ok "-------------------------
clojure.core/defn
([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])
Macro
  Same as (def name (fn [params* ] exprs*)) or (def
    name (fn ([params* ] exprs*)+)) with any doc-string or attrs added
    to the var metadata
") 1882)
[Actionlist] 686.79
1882: finished :describe-function 
params: "-------------------------
clojure.core/defn
([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])
Macro
  Same as (def name (fn [params* ] exprs*)) or (def
    name (fn ([params* ] exprs*)+)) with any doc-string or attrs added
    to the var metadata
"
[---Sent---] 686.79
(:emacs-rex (swank:operator-arglist "defn" "image-processing.core") "image-processing.core" t 1883)

[-Received-] 686.8
(:indentation-update (("with-bindings" . 1)))
[-Received-] 686.8
(:return (:ok "([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])") 1883)
[Actionlist] 686.81
1883: finished :operator-arglist 
params: "([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])"
[---Sent---] 686.81
(:emacs-rex (swank:describe-function "defn") "image-processing.core" t 1884)

[-Received-] 686.83
(:indentation-update (("with-bindings" . 0)))
[-Received-] 686.83
(:return (:ok "-------------------------
clojure.core/defn
([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])
Macro
  Same as (def name (fn [params* ] exprs*)) or (def
    name (fn ([params* ] exprs*)+)) with any doc-string or attrs added
    to the var metadata
") 1884)
[Actionlist] 686.83
1884: finished :describe-function 
params: "-------------------------
clojure.core/defn
([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])
Macro
  Same as (def name (fn [params* ] exprs*)) or (def
    name (fn ([params* ] exprs*)+)) with any doc-string or attrs added
    to the var metadata
"
[---Sent---] 686.84
(:emacs-rex (swank:operator-arglist "defn" "image-processing.core") "image-processing.core" t 1885)

[-Received-] 686.85
(:indentation-update (("with-bindings" . 1)))
[-Received-] 686.85
(:return (:ok "([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])") 1885)
[Actionlist] 686.85
1885: finished :operator-arglist 
params: "([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])"
[---Sent---] 686.85
(:emacs-rex (swank:describe-function "defn") "image-processing.core" t 1886)

[-Received-] 686.87
(:indentation-update (("with-bindings" . 0)))
[-Received-] 686.88
(:return (:ok "-------------------------
clojure.core/defn
([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])
Macro
  Same as (def name (fn [params* ] exprs*)) or (def
    name (fn ([params* ] exprs*)+)) with any doc-string or attrs added
    to the var metadata
") 1886)
[Actionlist] 686.88
1886: finished :describe-function 
params: "-------------------------
clojure.core/defn
([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])
Macro
  Same as (def name (fn [params* ] exprs*)) or (def
    name (fn ([params* ] exprs*)+)) with any doc-string or attrs added
    to the var metadata
"
[---Sent---] 686.88
(:emacs-rex (swank:operator-arglist "defn" "image-processing.core") "image-processing.core" t 1887)

[-Received-] 686.9
(:indentation-update (("with-bindings" . 1)))
[-Received-] 686.91
(:return (:ok "([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])") 1887)
[Actionlist] 686.91
1887: finished :operator-arglist 
params: "([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])"
[---Sent---] 686.91
(:emacs-rex (swank:describe-function "defn") "image-processing.core" t 1888)

[-Received-] 686.92
(:indentation-update (("with-bindings" . 0)))
[-Received-] 686.92
(:return (:ok "-------------------------
clojure.core/defn
([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])
Macro
  Same as (def name (fn [params* ] exprs*)) or (def
    name (fn ([params* ] exprs*)+)) with any doc-string or attrs added
    to the var metadata
") 1888)
[Actionlist] 686.92
1888: finished :describe-function 
params: "-------------------------
clojure.core/defn
([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])
Macro
  Same as (def name (fn [params* ] exprs*)) or (def
    name (fn ([params* ] exprs*)+)) with any doc-string or attrs added
    to the var metadata
"
[---Sent---] 686.93
(:emacs-rex (swank:operator-arglist "defn" "image-processing.core") "image-processing.core" t 1889)

[-Received-] 686.94
(:indentation-update (("with-bindings" . 1)))
[-Received-] 686.94
(:return (:ok "([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])") 1889)
[Actionlist] 686.94
1889: finished :operator-arglist 
params: "([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])"
[---Sent---] 686.94
(:emacs-rex (swank:describe-function "defn") "image-processing.core" t 1890)

[-Received-] 686.96
(:indentation-update (("with-bindings" . 0)))
[-Received-] 686.96
(:return (:ok "-------------------------
clojure.core/defn
([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])
Macro
  Same as (def name (fn [params* ] exprs*)) or (def
    name (fn ([params* ] exprs*)+)) with any doc-string or attrs added
    to the var metadata
") 1890)
[Actionlist] 686.97
1890: finished :describe-function 
params: "-------------------------
clojure.core/defn
([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])
Macro
  Same as (def name (fn [params* ] exprs*)) or (def
    name (fn ([params* ] exprs*)+)) with any doc-string or attrs added
    to the var metadata
"
[---Sent---] 686.97
(:emacs-rex (swank:operator-arglist "defn" "image-processing.core") "image-processing.core" t 1891)

[-Received-] 686.98
(:indentation-update (("with-bindings" . 1)))
[-Received-] 686.98
(:return (:ok "([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])") 1891)
[Actionlist] 686.98
1891: finished :operator-arglist 
params: "([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])"
[---Sent---] 686.99
(:emacs-rex (swank:describe-function "defn") "image-processing.core" t 1892)

[-Received-] 687.01
(:indentation-update (("with-bindings" . 0)))
[-Received-] 687.01
(:return (:ok "-------------------------
clojure.core/defn
([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])
Macro
  Same as (def name (fn [params* ] exprs*)) or (def
    name (fn ([params* ] exprs*)+)) with any doc-string or attrs added
    to the var metadata
") 1892)
[Actionlist] 687.01
1892: finished :describe-function 
params: "-------------------------
clojure.core/defn
([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])
Macro
  Same as (def name (fn [params* ] exprs*)) or (def
    name (fn ([params* ] exprs*)+)) with any doc-string or attrs added
    to the var metadata
"
[---Sent---] 687.02
(:emacs-rex (swank:operator-arglist "defn" "image-processing.core") "image-processing.core" t 1893)

[-Received-] 687.04
(:indentation-update (("with-bindings" . 1)))
[-Received-] 687.04
(:return (:ok "([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])") 1893)
[Actionlist] 687.04
1893: finished :operator-arglist 
params: "([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])"
[---Sent---] 687.04
(:emacs-rex (swank:describe-function "defn") "image-processing.core" t 1894)

[-Received-] 687.05
(:indentation-update (("with-bindings" . 0)))
[-Received-] 687.07
(:return (:ok "-------------------------
clojure.core/defn
([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])
Macro
  Same as (def name (fn [params* ] exprs*)) or (def
    name (fn ([params* ] exprs*)+)) with any doc-string or attrs added
    to the var metadata
") 1894)
[Actionlist] 687.07
1894: finished :describe-function 
params: "-------------------------
clojure.core/defn
([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])
Macro
  Same as (def name (fn [params* ] exprs*)) or (def
    name (fn ([params* ] exprs*)+)) with any doc-string or attrs added
    to the var metadata
"
[---Sent---] 687.07
(:emacs-rex (swank:operator-arglist "defn" "image-processing.core") "image-processing.core" t 1895)

[-Received-] 687.08
(:indentation-update (("with-bindings" . 1)))
[-Received-] 687.08
(:return (:ok "([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])") 1895)
[Actionlist] 687.08
1895: finished :operator-arglist 
params: "([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])"
[---Sent---] 687.08
(:emacs-rex (swank:describe-function "defn") "image-processing.core" t 1896)

[-Received-] 687.1
(:indentation-update (("with-bindings" . 0)))
[-Received-] 687.11
(:return (:ok "-------------------------
clojure.core/defn
([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])
Macro
  Same as (def name (fn [params* ] exprs*)) or (def
    name (fn ([params* ] exprs*)+)) with any doc-string or attrs added
    to the var metadata
") 1896)
[Actionlist] 687.12
1896: finished :describe-function 
params: "-------------------------
clojure.core/defn
([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])
Macro
  Same as (def name (fn [params* ] exprs*)) or (def
    name (fn ([params* ] exprs*)+)) with any doc-string or attrs added
    to the var metadata
"
[---Sent---] 687.12
(:emacs-rex (swank:operator-arglist "defn" "image-processing.core") "image-processing.core" t 1897)

[-Received-] 687.13
(:indentation-update (("with-bindings" . 1)))
[-Received-] 687.13
(:return (:ok "([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])") 1897)
[Actionlist] 687.13
1897: finished :operator-arglist 
params: "([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])"
[---Sent---] 687.13
(:emacs-rex (swank:describe-function "defn") "image-processing.core" t 1898)

[-Received-] 687.14
(:indentation-update (("with-bindings" . 0)))
[-Received-] 687.14
(:return (:ok "-------------------------
clojure.core/defn
([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])
Macro
  Same as (def name (fn [params* ] exprs*)) or (def
    name (fn ([params* ] exprs*)+)) with any doc-string or attrs added
    to the var metadata
") 1898)
[Actionlist] 687.14
1898: finished :describe-function 
params: "-------------------------
clojure.core/defn
([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])
Macro
  Same as (def name (fn [params* ] exprs*)) or (def
    name (fn ([params* ] exprs*)+)) with any doc-string or attrs added
    to the var metadata
"
[---Sent---] 687.15
(:emacs-rex (swank:operator-arglist "defn" "image-processing.core") "image-processing.core" t 1899)

[-Received-] 687.15
(:indentation-update (("with-bindings" . 1)))
[-Received-] 687.16
(:return (:ok "([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])") 1899)
[Actionlist] 687.16
1899: finished :operator-arglist 
params: "([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])"
[---Sent---] 687.16
(:emacs-rex (swank:describe-function "defn") "image-processing.core" t 1900)

[-Received-] 687.17
(:indentation-update (("with-bindings" . 0)))
[-Received-] 687.18
(:return (:ok "-------------------------
clojure.core/defn
([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])
Macro
  Same as (def name (fn [params* ] exprs*)) or (def
    name (fn ([params* ] exprs*)+)) with any doc-string or attrs added
    to the var metadata
") 1900)
[Actionlist] 687.18
1900: finished :describe-function 
params: "-------------------------
clojure.core/defn
([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])
Macro
  Same as (def name (fn [params* ] exprs*)) or (def
    name (fn ([params* ] exprs*)+)) with any doc-string or attrs added
    to the var metadata
"
[---Sent---] 687.19
(:emacs-rex (swank:operator-arglist "defn" "image-processing.core") "image-processing.core" t 1901)

[-Received-] 687.19
(:indentation-update (("with-bindings" . 1)))
[-Received-] 687.19
(:return (:ok "([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])") 1901)
[Actionlist] 687.19
1901: finished :operator-arglist 
params: "([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])"
[---Sent---] 687.19
(:emacs-rex (swank:describe-function "defn") "image-processing.core" t 1902)

[-Received-] 687.2
(:indentation-update (("with-bindings" . 0)))
[-Received-] 687.21
(:return (:ok "-------------------------
clojure.core/defn
([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])
Macro
  Same as (def name (fn [params* ] exprs*)) or (def
    name (fn ([params* ] exprs*)+)) with any doc-string or attrs added
    to the var metadata
") 1902)
[Actionlist] 687.21
1902: finished :describe-function 
params: "-------------------------
clojure.core/defn
([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])
Macro
  Same as (def name (fn [params* ] exprs*)) or (def
    name (fn ([params* ] exprs*)+)) with any doc-string or attrs added
    to the var metadata
"
[---Sent---] 687.58
(:emacs-rex (swank:operator-arglist "square" "image-processing.core") "image-processing.core" t 1903)

[-Received-] 687.58
(:indentation-update (("with-bindings" . 1)))
[-Received-] 687.58
(:return (:ok nil) 1903)
[Actionlist] 687.58
1903: finished :operator-arglist 
params: nil
[---Sent---] 687.86
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.basic-math") "image-processing.basic-math" t 1904)

[-Received-] 687.87
(:indentation-update (("with-bindings" . 0)))
[-Received-] 687.87
(:return (:ok nil) 1904)
[Actionlist] 687.87
1904: finished :operator-arglist 
params: nil
[---Sent---] 687.93
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.basic-math") "image-processing.basic-math" t 1905)

[-Received-] 687.95
(:indentation-update (("with-bindings" . 1)))
[-Received-] 687.95
(:return (:ok nil) 1905)
[Actionlist] 687.95
1905: finished :operator-arglist 
params: nil
[---Sent---] 688.0
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.basic-math") "image-processing.basic-math" t 1906)

[-Received-] 688.01
(:indentation-update (("with-bindings" . 0)))
[-Received-] 688.01
(:return (:ok nil) 1906)
[Actionlist] 688.01
1906: finished :operator-arglist 
params: nil
[---Sent---] 688.05
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.basic-math") "image-processing.basic-math" t 1907)

[-Received-] 688.06
(:indentation-update (("with-bindings" . 1)))
[-Received-] 688.06
(:return (:ok nil) 1907)
[Actionlist] 688.06
1907: finished :operator-arglist 
params: nil
[---Sent---] 688.09
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.basic-math") "image-processing.basic-math" t 1908)

[-Received-] 688.09
(:indentation-update (("with-bindings" . 0)))
[-Received-] 688.09
(:return (:ok nil) 1908)
[Actionlist] 688.09
1908: finished :operator-arglist 
params: nil
[---Sent---] 688.4
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.basic-math") "image-processing.basic-math" t 1909)

[-Received-] 688.4
(:indentation-update (("with-bindings" . 1)))
[-Received-] 688.41
(:return (:ok nil) 1909)
[Actionlist] 688.41
1909: finished :operator-arglist 
params: nil
[---Sent---] 688.43
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.basic-math") "image-processing.basic-math" t 1910)

[-Received-] 688.44
(:indentation-update (("with-bindings" . 0)))
[-Received-] 688.44
(:return (:ok nil) 1910)
[Actionlist] 688.44
1910: finished :operator-arglist 
params: nil
[---Sent---] 688.58
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.basic-math") "image-processing.basic-math" t 1911)

[-Received-] 688.59
(:indentation-update (("with-bindings" . 1)))
[-Received-] 688.59
(:return (:ok nil) 1911)
[Actionlist] 688.59
1911: finished :operator-arglist 
params: nil
[---Sent---] 688.61
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.basic-math") "image-processing.basic-math" t 1912)

[-Received-] 688.61
(:indentation-update (("with-bindings" . 0)))
[-Received-] 688.61
(:return (:ok nil) 1912)
[Actionlist] 688.61
1912: finished :operator-arglist 
params: nil
[---Sent---] 688.67
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.basic-math") "image-processing.basic-math" t 1913)

[-Received-] 688.68
(:indentation-update (("with-bindings" . 1)))
[-Received-] 688.68
(:return (:ok nil) 1913)
[Actionlist] 688.68
1913: finished :operator-arglist 
params: nil
[---Sent---] 688.76
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.basic-math") "image-processing.basic-math" t 1914)

[-Received-] 688.77
(:indentation-update (("with-bindings" . 0)))
[-Received-] 688.77
(:return (:ok nil) 1914)
[Actionlist] 688.77
1914: finished :operator-arglist 
params: nil
[---Sent---] 688.8
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.basic-math") "image-processing.basic-math" t 1915)

[-Received-] 688.8
(:indentation-update (("with-bindings" . 1)))
[-Received-] 688.8
(:return (:ok nil) 1915)
[Actionlist] 688.8
1915: finished :operator-arglist 
params: nil
[---Sent---] 688.84
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.basic-math") "image-processing.basic-math" t 1916)

[-Received-] 688.84
(:indentation-update (("with-bindings" . 0)))
[-Received-] 688.84
(:return (:ok nil) 1916)
[Actionlist] 688.84
1916: finished :operator-arglist 
params: nil
[---Sent---] 688.87
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.basic-math") "image-processing.basic-math" t 1917)

[-Received-] 688.88
(:indentation-update (("with-bindings" . 1)))
[-Received-] 688.88
(:return (:ok nil) 1917)
[Actionlist] 688.88
1917: finished :operator-arglist 
params: nil
[---Sent---] 688.89
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.basic-math") "image-processing.basic-math" t 1918)

[-Received-] 688.9
(:indentation-update (("with-bindings" . 0)))
[-Received-] 688.9
(:return (:ok nil) 1918)
[Actionlist] 688.9
1918: finished :operator-arglist 
params: nil
[---Sent---] 689.54
(:emacs-rex (swank:listener-eval "(ns image-processing.core
    (:import
      (java.lang Math)
      (javax.imageio ImageIO)
      (java.io File)
      (java.awt.image BufferedImage)
      (image_processing.image Image))
    (:use 
      image-processing.image
      [image-processing :only (square mean)]))


(defn intcolor-to-argb
  \"Convert the 32 bits color to ARGB. It returns a vector [A R G B].\"
  [color]
  [(bit-and (bit-shift-right color 24) 0xff)
   (bit-and (bit-shift-right color 16) 0xff)
   (bit-and (bit-shift-right color 8) 0xff)
   (bit-and color 0xff)])


(defn get-argb
  \"Get the [a r g b] color of a pixel [x y] of IMG.\"
  [img coord]
  (let [[x y] coord]
    (intcolor-to-argb (.getRGB img x y))))


(defn set-argb
  \"Set the ARGB color of a pixel COORD of the image IMG.\"
  #^{:arglists [img coord argb-color]}
  [img coord argb-color]
  (let [[x y] coord
        [a r g b] argb-color
        int-color (bit-or (bit-shift-left a 24)
                          (bit-or (bit-shift-left r 16)
                                  (bit-or (bit-shift-left g 8) b)))]
    (.setRGB img x y int-color)))


(defn get-img-coords
  \"Returns a sequence of all coordinates of the image.\"
  #^{:arglists [img]}
  [img]
  (for [y (range (.getHeight img))
        x (range (.getWidth img))]
       [x y]))


(defn get-rgb-only
  \"Returns a vec with [r g b] if COLOR is [a r g b], or returns COLOR if it already is
      just [r g b].\"
  #^{:arglists [color]}
  [color]
  (if (> (count color) 3) color (subvec color 1)))


(defn convert-buffImg-to-image
  \"Doc\"
  #^{:arglists [buffered-image]}
  [buffered-image]
  (let [argb-values (reduce #(conj %1 (get-argb buffered-image %2))
                            []
                            (get-img-coords buffered-image))]
    (Image. argb-values (.getWidth buffered-image))))


(defn euclidian-argb-distance
  \"Euclidian distance between two [a r g b] colors.\"
  [color1 color2]
  (Math/sqrt (reduce #(+ %1 (square (- (first %2) (second %2))))
                     0.0
                     (partition 2 (interleave 
                                    (get-rgb-only color1)
                                    (get-rgb-only color2))))))


(defn get-grayscale-values
  \"Returns a lazy sequence of the grayscale value of the image's pixels.\"
  #^{:arglists [img]}
  [img]
  (map #(int (mean (rest (get-argb img %)))) (get-img-coords img)))


(defn get-binarized-values
  \"Returns a lazy sequence of the binarized value of the image's pixels.
      If pixel < threshold, then pixel=BLACK (0) else pixel=WHITE (255).\"
  #^{:arglists [img threshold]}
  [img threshold]
  (map #(if (< % threshold) 0 255) (get-grayscale-values img)))


;(defn vertical-histogram
;  \"Doc\"
;  #^{:arglists [img]}
;  [img]
;  )
;  TODO: partition & interleave

;(def img-path \"/home/boechat/Dropbox/Documents/Coding/Hough_transform/straight_lines.png\")
;(def buffered-image (ImageIO/read (File. img-path)))
") "image-processing.basic-math" :repl-thread 1919)

[-Received-] 689.59
(:new-package "image-processing.core" "image-processing.core")
[-Received-] 689.59
(:debug 1 1 ("Could not locate image_processing__init.class or image_processing.clj on classpath: " "  [Thrown class java.io.FileNotFoundException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "        RT.java:430 clojure.lang.RT.load" (:restartable nil)) (1 "        RT.java:398 clojure.lang.RT.load" (:restartable nil)) (2 "      core.clj:5386 clojure.core/load[fn]" (:restartable nil)) (3 "      core.clj:5385 clojure.core/load" (:restartable nil)) (4 "    RestFn.java:408 clojure.lang.RestFn.invoke" (:restartable nil)) (5 "      core.clj:5200 clojure.core/load-one" (:restartable nil)) (6 "      core.clj:5237 clojure.core/load-lib" (:restartable nil)) (7 "    RestFn.java:142 clojure.lang.RestFn.applyTo" (:restartable nil)) (8 "       core.clj:602 clojure.core/apply" (:restartable nil)) (9 "      core.clj:5271 clojure.core/load-libs" (:restartable nil))) (nil))
[-Received-] 689.59
(:debug-activate 1 1 nil)
[---Sent---] 691.8
(:emacs-rex (swank:listener-eval "(ns image-processing.core
    (:import
      (java.lang Math)
      (javax.imageio ImageIO)
      (java.io File)
      (java.awt.image BufferedImage)
      (image_processing.image Image))
    (:use 
      image-processing.image
      [image-processing.basic-math :only (square mean)]))


(defn intcolor-to-argb
  \"Convert the 32 bits color to ARGB. It returns a vector [A R G B].\"
  [color]
  [(bit-and (bit-shift-right color 24) 0xff)
   (bit-and (bit-shift-right color 16) 0xff)
   (bit-and (bit-shift-right color 8) 0xff)
   (bit-and color 0xff)])


(defn get-argb
  \"Get the [a r g b] color of a pixel [x y] of IMG.\"
  [img coord]
  (let [[x y] coord]
    (intcolor-to-argb (.getRGB img x y))))


(defn set-argb
  \"Set the ARGB color of a pixel COORD of the image IMG.\"
  #^{:arglists [img coord argb-color]}
  [img coord argb-color]
  (let [[x y] coord
        [a r g b] argb-color
        int-color (bit-or (bit-shift-left a 24)
                          (bit-or (bit-shift-left r 16)
                                  (bit-or (bit-shift-left g 8) b)))]
    (.setRGB img x y int-color)))


(defn get-img-coords
  \"Returns a sequence of all coordinates of the image.\"
  #^{:arglists [img]}
  [img]
  (for [y (range (.getHeight img))
        x (range (.getWidth img))]
       [x y]))


(defn get-rgb-only
  \"Returns a vec with [r g b] if COLOR is [a r g b], or returns COLOR if it already is
      just [r g b].\"
  #^{:arglists [color]}
  [color]
  (if (> (count color) 3) color (subvec color 1)))


(defn convert-buffImg-to-image
  \"Doc\"
  #^{:arglists [buffered-image]}
  [buffered-image]
  (let [argb-values (reduce #(conj %1 (get-argb buffered-image %2))
                            []
                            (get-img-coords buffered-image))]
    (Image. argb-values (.getWidth buffered-image))))


(defn euclidian-argb-distance
  \"Euclidian distance between two [a r g b] colors.\"
  [color1 color2]
  (Math/sqrt (reduce #(+ %1 (square (- (first %2) (second %2))))
                     0.0
                     (partition 2 (interleave 
                                    (get-rgb-only color1)
                                    (get-rgb-only color2))))))


(defn get-grayscale-values
  \"Returns a lazy sequence of the grayscale value of the image's pixels.\"
  #^{:arglists [img]}
  [img]
  (map #(int (mean (rest (get-argb img %)))) (get-img-coords img)))


(defn get-binarized-values
  \"Returns a lazy sequence of the binarized value of the image's pixels.
      If pixel < threshold, then pixel=BLACK (0) else pixel=WHITE (255).\"
  #^{:arglists [img threshold]}
  [img threshold]
  (map #(if (< % threshold) 0 255) (get-grayscale-values img)))


;(defn vertical-histogram
;  \"Doc\"
;  #^{:arglists [img]}
;  [img]
;  )
;  TODO: partition & interleave

;(def img-path \"/home/boechat/Dropbox/Documents/Coding/Hough_transform/straight_lines.png\")
;(def buffered-image (ImageIO/read (File. img-path)))
") "image-processing.core" :repl-thread 1920)

[-Received-] 691.86
(:write-string "#'image-processing.core/get-binarized-values
" :repl-result)
[-Received-] 691.86
(:indentation-update (("with-bindings" . 1)))
[-Received-] 691.86
(:return (:ok nil) 1920)
[Actionlist] 691.86
1919: pending  :listener-eval 
1920: finished :listener-eval 
params: nil
[-Received-] 691.86
(:debug-activate 1 1 nil)
[---Sent---] 692.2
(:emacs-rex (swank:throw-to-toplevel) nil 1 1921)

[-Received-] 692.2
(:return (:abort) 1921)
[Actionlist] 692.2
1919: pending  :listener-eval 
1921: finished :throw-to-toplevel 
[-Received-] 692.2
(:debug-return 1 1 nil)
[-Received-] 692.2
(:return (:abort) 1919)
[Actionlist] 692.2
1919: finished :listener-eval 
1921: finished :throw-to-toplevel 
[---Sent---] 692.44
(:emacs-rex (swank:listener-eval "(ns image-processing.core
    (:import
      (java.lang Math)
      (javax.imageio ImageIO)
      (java.io File)
      (java.awt.image BufferedImage)
      (image_processing.image Image))
    (:use 
      image-processing.image
      [image-processing.basic-math :only (square mean)]))
") "image-processing.core" :repl-thread 1922)

[-Received-] 692.5
(:write-string "nil
" :repl-result)
[-Received-] 692.5
(:indentation-update (("with-bindings" . 0)))
[-Received-] 692.51
(:return (:ok nil) 1922)
[Actionlist] 692.51
1922: finished :listener-eval 
params: nil
[---Sent---] 692.69
(:emacs-rex (swank:listener-eval "(ns image-processing.core
    (:import
      (java.lang Math)
      (javax.imageio ImageIO)
      (java.io File)
      (java.awt.image BufferedImage)
      (image_processing.image Image))
    (:use 
      image-processing.image
      [image-processing.basic-math :only (square mean)]))


(defn intcolor-to-argb
  \"Convert the 32 bits color to ARGB. It returns a vector [A R G B].\"
  [color]
  [(bit-and (bit-shift-right color 24) 0xff)
   (bit-and (bit-shift-right color 16) 0xff)
   (bit-and (bit-shift-right color 8) 0xff)
   (bit-and color 0xff)])


(defn get-argb
  \"Get the [a r g b] color of a pixel [x y] of IMG.\"
  [img coord]
  (let [[x y] coord]
    (intcolor-to-argb (.getRGB img x y))))


(defn set-argb
  \"Set the ARGB color of a pixel COORD of the image IMG.\"
  #^{:arglists [img coord argb-color]}
  [img coord argb-color]
  (let [[x y] coord
        [a r g b] argb-color
        int-color (bit-or (bit-shift-left a 24)
                          (bit-or (bit-shift-left r 16)
                                  (bit-or (bit-shift-left g 8) b)))]
    (.setRGB img x y int-color)))


(defn get-img-coords
  \"Returns a sequence of all coordinates of the image.\"
  #^{:arglists [img]}
  [img]
  (for [y (range (.getHeight img))
        x (range (.getWidth img))]
       [x y]))


(defn get-rgb-only
  \"Returns a vec with [r g b] if COLOR is [a r g b], or returns COLOR if it already is
      just [r g b].\"
  #^{:arglists [color]}
  [color]
  (if (> (count color) 3) color (subvec color 1)))


(defn convert-buffImg-to-image
  \"Doc\"
  #^{:arglists [buffered-image]}
  [buffered-image]
  (let [argb-values (reduce #(conj %1 (get-argb buffered-image %2))
                            []
                            (get-img-coords buffered-image))]
    (Image. argb-values (.getWidth buffered-image))))


(defn euclidian-argb-distance
  \"Euclidian distance between two [a r g b] colors.\"
  [color1 color2]
  (Math/sqrt (reduce #(+ %1 (square (- (first %2) (second %2))))
                     0.0
                     (partition 2 (interleave 
                                    (get-rgb-only color1)
                                    (get-rgb-only color2))))))


(defn get-grayscale-values
  \"Returns a lazy sequence of the grayscale value of the image's pixels.\"
  #^{:arglists [img]}
  [img]
  (map #(int (mean (rest (get-argb img %)))) (get-img-coords img)))


(defn get-binarized-values
  \"Returns a lazy sequence of the binarized value of the image's pixels.
      If pixel < threshold, then pixel=BLACK (0) else pixel=WHITE (255).\"
  #^{:arglists [img threshold]}
  [img threshold]
  (map #(if (< % threshold) 0 255) (get-grayscale-values img)))


;(defn vertical-histogram
;  \"Doc\"
;  #^{:arglists [img]}
;  [img]
;  )
;  TODO: partition & interleave

;(def img-path \"/home/boechat/Dropbox/Documents/Coding/Hough_transform/straight_lines.png\")
;(def buffered-image (ImageIO/read (File. img-path)))
") "image-processing.core" :repl-thread 1923)

[-Received-] 692.74
(:write-string "#'image-processing.core/get-binarized-values
" :repl-result)
[-Received-] 692.74
(:indentation-update (("with-bindings" . 1)))
[-Received-] 692.74
(:return (:ok nil) 1923)
[Actionlist] 692.74
1923: finished :listener-eval 
params: nil
[---Sent---] 693.55
(:emacs-rex (swank:listener-eval "(def x (map #(ImageIO/read (File. %)) 
            '(\"test/image_processing/test/1a7r.gif\" 
              \"test/image_processing/test/1azc.gif\")))
") "image-processing.test.hist-view-gui" :repl-thread 1924)

[-Received-] 693.61
(:debug 1 1 ("No such namespace: ImageIO" "  [Thrown class java.lang.RuntimeException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "              Util.java:156 clojure.lang.Util.runtimeException" (:restartable nil)) (1 "         Compiler.java:6690 clojure.lang.Compiler.resolveIn" (:restartable nil)) (2 "         Compiler.java:6664 clojure.lang.Compiler.resolve" (:restartable nil)) (3 "         Compiler.java:6625 clojure.lang.Compiler.analyzeSymbol" (:restartable nil)) (4 "         Compiler.java:6198 clojure.lang.Compiler.analyze" (:restartable nil)) (5 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil)) (6 "         Compiler.java:3452 clojure.lang.Compiler$InvokeExpr.parse" (:restartable nil)) (7 "         Compiler.java:6411 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (8 "         Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil)) (9 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil))) (nil))
[-Received-] 693.61
(:debug-activate 1 1 nil)
[---Sent---] 693.79
(:emacs-rex (swank:throw-to-toplevel) nil 1 1925)

[-Received-] 693.8
(:return (:abort) 1925)
[Actionlist] 693.8
1924: pending  :listener-eval 
1925: finished :throw-to-toplevel 
[-Received-] 693.8
(:debug-return 1 1 nil)
[-Received-] 693.8
(:return (:abort) 1924)
[Actionlist] 693.8
1924: finished :listener-eval 
1925: finished :throw-to-toplevel 
[---Sent---] 694.19
(:emacs-rex (swank:operator-arglist "import" "image-processing.core") "image-processing.core" t 1926)

[-Received-] 694.19
(:indentation-update (("with-bindings" . 0)))
[-Received-] 694.2
(:return (:ok "([& import-symbols-or-lists])") 1926)
[Actionlist] 694.2
1926: finished :operator-arglist 
params: "([& import-symbols-or-lists])"
[---Sent---] 694.48
(:emacs-rex (swank:operator-arglist "java" "image-processing.core") "image-processing.core" t 1927)

[-Received-] 694.5
(:indentation-update (("with-bindings" . 1)))
[-Received-] 694.5
(:return (:ok nil) 1927)
[Actionlist] 694.5
1927: finished :operator-arglist 
params: nil
[---Sent---] 694.7
(:emacs-rex (swank:listener-eval "(import '(java.imageio ImageIO))
") "image-processing.core" :repl-thread 1928)

[-Received-] 694.77
(:debug 1 1 ("java.imageio.ImageIO" "  [Thrown class java.lang.ClassNotFoundException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "    URLClassLoader.java:366 java.net.URLClassLoader$1.run" (:restartable nil)) (1 "    URLClassLoader.java:355 java.net.URLClassLoader$1.run" (:restartable nil)) (2 "           (Unknown Source) java.security.AccessController.doPrivileged" (:restartable nil)) (3 "    URLClassLoader.java:354 java.net.URLClassLoader.findClass" (:restartable nil)) (4 " DynamicClassLoader.java:61 clojure.lang.DynamicClassLoader.findClass" (:restartable nil)) (5 "       ClassLoader.java:423 java.lang.ClassLoader.loadClass" (:restartable nil)) (6 "       ClassLoader.java:356 java.lang.ClassLoader.loadClass" (:restartable nil)) (7 "           (Unknown Source) java.lang.Class.forName0" (:restartable nil)) (8 "             Class.java:186 java.lang.Class.forName" (:restartable nil)) (9 "           NO_SOURCE_FILE:1 image-processing.core/eval4493" (:restartable nil))) (nil))
[---Sent---] 695.37
(:emacs-rex (swank:listener-eval "(import '(javax.imageio ImageIO))
") "image-processing.core" :repl-thread 1930)

[-Received-] 695.37
(:write-string "javax.imageio.ImageIO
" :repl-result)
[-Received-] 695.46
(:indentation-update (("with-bindings" . 0)))
[-Received-] 695.46
(:return (:ok nil) 1930)
[Actionlist] 695.46
1930: finished :listener-eval 
params: nil
[---Sent---] 695.73
(:emacs-rex (swank:listener-eval "(def x (map #(ImageIO/read (File. %)) 
            '(\"test/image_processing/test/1a7r.gif\" 
              \"test/image_processing/test/1azc.gif\")))
") "image-processing.test.hist-view-gui" :repl-thread 1931)

[-Received-] 695.8
(:debug 1 1 ("No such namespace: ImageIO" "  [Thrown class java.lang.RuntimeException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "              Util.java:156 clojure.lang.Util.runtimeException" (:restartable nil)) (1 "         Compiler.java:6690 clojure.lang.Compiler.resolveIn" (:restartable nil)) (2 "         Compiler.java:6664 clojure.lang.Compiler.resolve" (:restartable nil)) (3 "         Compiler.java:6625 clojure.lang.Compiler.analyzeSymbol" (:restartable nil)) (4 "         Compiler.java:6198 clojure.lang.Compiler.analyze" (:restartable nil)) (5 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil)) (6 "         Compiler.java:3452 clojure.lang.Compiler$InvokeExpr.parse" (:restartable nil)) (7 "         Compiler.java:6411 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (8 "         Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil)) (9 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil))) (nil))
[-Received-] 695.8
(:debug-activate 1 1 nil)
[---Sent---] 696.09
(:emacs-rex (swank:throw-to-toplevel) nil 1 1932)

[-Received-] 696.09
(:return (:abort) 1932)
[Actionlist] 696.09
1931: pending  :listener-eval 
1932: finished :throw-to-toplevel 
[-Received-] 696.09
(:debug-return 1 1 nil)
[-Received-] 696.09
(:return (:abort) 1931)
[Actionlist] 696.09
1931: finished :listener-eval 
1932: finished :throw-to-toplevel 
[---Sent---] 696.48
(:emacs-rex (swank:listener-eval "(ns image-processing.test.hist-view-gui
    (:import
      (javax.imageio ImageIO) 
      (java.io File))
    (:use
      [clojure.test]
      [seesaw core make-widget border]
      [image-processing.hist-view-gui]))

; FIXME: wait for a user action.


(def x (map #(ImageIO/read (File. %)) 
            '(\"test/image_processing/test/1a7r.gif\" 
              \"test/image_processing/test/1azc.gif\")))


(defn create-frame []
  (let [panel-info (create-hist-panel)
        hist-panel (first panel-info)
        img-group (second panel-info)]
    (add-imgs hist-panel img-group (first x) (second x))
    (-> (frame :title \"Hello\",
               :content  (scrollable hist-panel))
        ;:on-close :exit) 
        pack! 
        show!)
    [hist-panel img-group]))

(def z (create-frame))

(get-selected-img (second z))
") "image-processing.core" :repl-thread 1933)

[-Received-] 697.23
(:write-string "nil
" :repl-result)
[-Received-] 697.23
(:new-package "image-processing.test.hist-view-gui" "image-processing.test.hist-view-gui")
[-Received-] 697.23
(:indentation-update (("deftest-" . 1) ("deftest" . 1) ("testing" . 1) ("with-test-out" . 0) ("set-test" . 1) ("with-test" . 1) ("with-bindings" . 1) ("with-widgets" . 1) ("invoke-now" . 0) ("invoke-soon" . 0) ("signaller" . 1) ("invoke-later" . 0)))
[-Received-] 697.24
(:return (:ok nil) 1933)
[Actionlist] 697.24
1933: finished :listener-eval 
params: nil
[---Sent---] 697.56
(:emacs-rex (swank:operator-arglist "ns" "image-processing.test.hist-view-gui") "image-processing.test.hist-view-gui" t 1934)

[-Received-] 697.57
(:indentation-update (("with-bindings" . 0)))
[-Received-] 697.57
(:return (:ok "([name docstring? attr-map? references*])") 1934)
[Actionlist] 697.57
1934: finished :operator-arglist 
params: "([name docstring? attr-map? references*])"
[---Sent---] 697.97
(:emacs-rex (swank:listener-eval "(ns image-processing.core)
") "image-processing.test.hist-view-gui" :repl-thread 1935)

[-Received-] 698.03
(:write-string "nil
" :repl-result)
[-Received-] 698.04
(:new-package "image-processing.core" "image-processing.core")
[-Received-] 698.04
(:indentation-update (("with-bindings" . 1)))
[-Received-] 698.04
(:return (:ok nil) 1935)
[Actionlist] 698.04
1935: finished :listener-eval 
params: nil
[---Sent---] 698.3
(:emacs-rex (swank:operator-arglist "convert-buffImg-to-image" "image-processing.core") "image-processing.core" t 1936)

[-Received-] 698.31
(:indentation-update (("with-bindings" . 0)))
[-Received-] 698.31
(:return (:ok "([buffered-image])") 1936)
[Actionlist] 698.31
1936: finished :operator-arglist 
params: "([buffered-image])"
[---Sent---] 698.53
(:emacs-rex (swank:operator-arglist "first" "image-processing.core") "image-processing.core" t 1937)

[-Received-] 698.55
(:indentation-update (("with-bindings" . 1)))
[-Received-] 698.56
(:return (:ok "([coll])") 1937)
[Actionlist] 698.56
1937: finished :operator-arglist 
params: "([coll])"
[---Sent---] 698.65
(:emacs-rex (swank:listener-eval "(convert-buffImg-to-image (first x)) 
") "image-processing.core" :repl-thread 1938)

[-Received-] 698.72
(:debug 1 1 ("Unable to resolve symbol: x in this context" "  [Thrown class java.lang.RuntimeException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "              Util.java:156 clojure.lang.Util.runtimeException" (:restartable nil)) (1 "         Compiler.java:6720 clojure.lang.Compiler.resolveIn" (:restartable nil)) (2 "         Compiler.java:6664 clojure.lang.Compiler.resolve" (:restartable nil)) (3 "         Compiler.java:6625 clojure.lang.Compiler.analyzeSymbol" (:restartable nil)) (4 "         Compiler.java:6198 clojure.lang.Compiler.analyze" (:restartable nil)) (5 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil)) (6 "         Compiler.java:3503 clojure.lang.Compiler$InvokeExpr.parse" (:restartable nil)) (7 "         Compiler.java:6411 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (8 "         Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil)) (9 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil))) (nil))
[---Sent---] 699.63
(:emacs-rex (swank:listener-eval "(convert-buffImg-to-image (first
                                                   image-processing.test.hist-view-gui/x))
") "image-processing.core" :repl-thread 1940)

[-Received-] 699.75
(:write-string "#image_processing.image.Image{:points [[255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 255] [255 153 204 204] [255 204 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 153 204 204] [255 204 255 204] [255 153 204 153] [255 204 204 204] [255 153 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 204] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 204] [255 255 255 255] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 153 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 153] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 255 255 255] [255 204 204 204] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 255 255] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 102 153 102] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 255 255 255] [255 255 255 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 255 255 255] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 153 204 204] [255 255 255 255] [255 204 255 204] [255 204 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 153 153 153] [255 102 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 102 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 102 153 102] [255 153 204 204] [255 153 204 204] [255 204 255 255] [255 204 255 255] [255 255 255 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 255 255 255] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 153 204 204] [255 204 255 255] [255 204 255 255] [255 204 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 102 153 153] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 255] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 153 204 204] [255 204 255 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 153] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 255 255 255] [255 204 255 255] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 255 255 204] [255 204 255 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 153 153 153] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 153 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 255 255 255] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 204] [255 153 153 153] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 153 204 204] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 153] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 153 204] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 204] [255 153 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 153 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 255 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 153 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 204 255] [255 204 204 204] [255 204 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 153] [255 204 204 204] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 255 255 255] [255 255 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 153 204 204] [255 204 204 255] [255 153 204 204] [255 204 255 255] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 204 204 204] [255 204 255 204] [255 204 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 255 255] [255 204 204 255] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 153 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 255 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 153 153 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 153] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 153 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 204 153 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 102 102 102] [255 153 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 153 204 204] [255 153 204 204] [255 204 204 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 153 153 204] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 153 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 255 204 204] [255 204 204 204] [255 204 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 153 153 204] [255 102 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 153 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 102 102 102] [255 153 204 153] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 153 204 204] [255 204 204 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 102 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 255 255 255] [255 204 204 204] [255 153 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 102 102 102] [255 153 153 153] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 153 204 204] [255 153 153 204] [255 153 204 204] [255 153 153 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 102 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 153 204 204] [255 153 153 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 255 255 255] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 153 204 204] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 255 255] [255 204 204 255] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 153 204 204] [255 153 153 204] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 255 255 255] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 255] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 255 255 255] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 204 204 204] [255 204 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 255 255 255] [255 153 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 255 255 255] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 153 204 153] [255 153 153 153] [255 204 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 204 255 255] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 153] [255 255 255 255] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 153] [255 153 153 102] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 204] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 204 204] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 153 153 204] [255 153 153 204] [255 153 153 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 255 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 153 153 153] [255 204 204 255] [255 204 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 153 204 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 102 153 153] [255 153 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 153 153 204] [255 153 153 153] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 204] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 153 153 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 204 204 255] [255 204 153 204] [255 204 204 255] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 204] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 255] [255 153 204 204] [255 102 153 153] [255 153 153 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 153 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 153] [255 102 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 204] [255 255 204 255] [255 255 255 255] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 255] [255 102 153 153] [255 153 153 153] [255 102 153 153] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 204 255 255] [255 204 204 153] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 153 204 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 204 153 204] [255 204 204 255] [255 153 153 204] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 204 204] [255 102 153 153] [255 153 153 204] [255 153 153 153] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 153 153 204] [255 153 153 204] [255 102 153 153] [255 153 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 153 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 153 153 204] [255 102 102 153] [255 153 204 204] [255 204 204 255] [255 255 204 255] [255 255 204 204] [255 255 255 255] [255 255 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 255 255 255] [255 255 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 153 153 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 153] [255 153 204 204] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 153] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 255 255 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 204 153 204] [255 204 204 255] [255 204 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 102 102 153] [255 153 153 204] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 204 153 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 153 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 153 153 204] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 153 153 153] [255 0 0 0] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 102 153 153] [255 153 204 204] [255 153 153 153] [255 204 255 255] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 204 153 204] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 204] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 153] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 153 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 255 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 153 204] [255 153 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 204 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 255] [255 204 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 102 153 153] [255 153 153 153] [255 102 153 153] [255 204 255 255] [255 153 204 204] [255 153 153 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 204 153 204] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 153 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 255 255 255] [255 204 204 255] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 255 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 153 204 204] [255 153 153 204] [255 102 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 204 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 153 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 153 204] [255 204 204 255] [255 153 153 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 102 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 102 153 153] [255 153 153 153] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 153 153 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 204 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 153 153 204] [255 153 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 153 153 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 153 153 153] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 102 153 153] [255 153 153 153] [255 102 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 255 255 255] [255 204 153 204] [255 204 204 204] [255 204 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 255 255] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 153 153 204] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 255 255] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 153 153 204] [255 102 153 153] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 204] [255 204 255 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 153] [255 204 255 204] [255 204 204 153] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 102 102 102] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 102 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 102 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 204 153 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 102 153 153] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 153 153 204] [255 153 204 204] [255 153 153 204] [255 153 204 204] [255 153 153 153] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 204 153 204] [255 204 153 204] [255 153 153 153] [255 153 153 153] [255 204 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 204] [255 102 153 153] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 153] [255 102 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 0 0 0] [255 102 153 153] [255 153 204 204] [255 102 153 153] [255 153 153 204] [255 204 204 204] [255 204 204 255] [255 153 153 153] [255 153 153 153] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 255 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 153 153 204] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 102 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 204] [255 204 255 255] [255 204 204 255] [255 204 204 255] [255 153 153 153] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 255] [255 153 153 153] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 102 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 0 0 0] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 204] [255 153 153 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 153 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 255 204] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 102 153 153] [255 153 153 204] [255 102 153 153] [255 153 153 204] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 204] [255 153 204 204] [255 204 255 204] [255 153 204 153] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 153 204 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 255 204] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 153 153 204] [255 153 153 204] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 204] [255 204 204 204] [255 204 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 204 255 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 0 0 0] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 153 204 204] [255 153 204 153] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 153 153 204] [255 153 153 204] [255 204 204 255] [255 204 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 204 255 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 204] [255 153 153 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 153 153 204] [255 102 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 204] [255 102 153 153] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 204] [255 153 153 204] [255 153 153 153] [255 204 204 255] [255 204 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 204 204 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 255 255] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 204] [255 153 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 153 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 153 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 255 255] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 102 153 153] [255 153 153 204] [255 204 153 204] [255 204 204 255] [255 204 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 204 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 255 255] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 0 0 0] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 255 255] [255 204 255 255] [255 153 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 153 204 204] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 102 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 153 153 204] [255 102 153 153] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 153 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 255 255] [255 204 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 153 204 204] [255 204 255 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 204 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 153 153 204] [255 153 204 204] [255 204 204 255] [255 204 153 204] [255 204 204 204] [255 204 153 204] [255 204 204 255] [255 204 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 102 153 153] [255 153 153 153] [255 153 153 153] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 153 153 204] [255 153 153 204] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 204 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 204 255 255] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 153 204] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 153 153 204] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 204] [255 204 204 255] [255 204 153 204] [255 204 204 255] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 153 153 204] [255 102 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 102 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 102 102 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 255 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 204] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 204] [255 153 153 204] [255 153 153 153] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 153 204 204] [255 204 255 204] [255 204 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 153 204 204] [255 102 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 204] [255 102 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 102 153 153] [255 153 153 204] [255 153 153 204] [255 153 204 204] [255 102 153 153] [255 204 204 204] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 153 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 153 153 204] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 204] [255 204 204 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 204 255 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 153 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 204] [255 102 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 204] [255 153 153 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 153 153 204] [255 102 153 153] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 153 153 204] [255 153 204 204] [255 204 255 255] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 204 255 255] [255 204 255 255] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 153 204 204] [255 204 255 204] [255 153 204 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 204] [255 204 255 204] [255 153 204 153] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 204 204] [255 153 204 204] [255 153 153 204] [255 153 153 204] [255 102 153 153] [255 153 153 204] [255 102 153 153] [255 153 153 204] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 102 153 153] [255 153 204 204] [255 153 153 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 204 153] [255 204 204 204] [255 153 204 204] [255 204 255 204] [255 153 204 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204]], :width 200}
" :repl-result)
[-Received-] 700.22
(:indentation-update (("with-bindings" . 0)))
[-Received-] 700.22
(:return (:ok nil) 1940)
[Actionlist] 700.22
1940: finished :listener-eval 
params: nil
[---Sent---] 704.91
(:emacs-rex (swank:operator-arglist "first" "image-processing.core") "image-processing.core" t 1941)

[-Received-] 704.93
(:indentation-update (("with-bindings" . 1)))
[-Received-] 704.93
(:return (:ok "([coll])") 1941)
[Actionlist] 704.93
1941: finished :operator-arglist 
params: "([coll])"
[---Sent---] 705.5
(:emacs-rex (swank:operator-arglist "def" "image-processing.core") "image-processing.core" t 1942)

[-Received-] 705.51
(:indentation-update (("with-bindings" . 0)))
[-Received-] 705.51
(:return (:ok nil) 1942)
[Actionlist] 705.51
1942: finished :operator-arglist 
params: nil
[---Sent---] 705.93
(:emacs-rex (swank:listener-eval "(def y (convert-buffImg-to-image (first image-processing.test.hist-view-gui/x))) 
") "image-processing.core" :repl-thread 1943)

[-Received-] 709.42
(:write-string "#'image-processing.core/y
" :repl-result)
[-Received-] 709.43
(:indentation-update (("with-bindings" . 1)))
[-Received-] 709.43
(:return (:ok nil) 1943)
[Actionlist] 709.44
1943: finished :listener-eval 
params: nil
[---Sent---] 715.19
(:emacs-rex (swank:operator-arglist "204" "image-processing.core") "image-processing.core" t 1944)

[-Received-] 715.2
(:indentation-update (("with-bindings" . 0)))
[-Received-] 715.2
(:return (:ok nil) 1944)
[Actionlist] 715.2
1944: finished :operator-arglist 
params: nil
[---Sent---] 715.58
(:emacs-rex (swank:operator-arglist "type" "image-processing.core") "image-processing.core" t 1945)

[-Received-] 715.59
(:indentation-update (("with-bindings" . 1)))
[-Received-] 715.59
(:return (:ok "([x])") 1945)
[Actionlist] 715.6
1945: finished :operator-arglist 
params: "([x])"
[---Sent---] 715.79
(:emacs-rex (swank:listener-eval "(type y)
") "image-processing.core" :repl-thread 1946)

[-Received-] 715.79
(:write-string "image_processing.image.Image
" :repl-result)
[-Received-] 719.42
(:indentation-update (("with-bindings" . 0)))
[-Received-] 719.43
(:return (:ok nil) 1946)
[Actionlist] 719.43
1946: finished :listener-eval 
params: nil
[---Sent---] 723.24
(:emacs-rex (swank:operator-arglist "get-point" "image-processing.core") "image-processing.core" t 1947)

[-Received-] 723.26
(:indentation-update (("with-bindings" . 1)))
[-Received-] 723.26
(:return (:ok "([this x y])") 1947)
[Actionlist] 723.26
1947: finished :operator-arglist 
params: "([this x y])"
[---Sent---] 723.31
(:emacs-rex (swank:operator-arglist "get-point" "image-processing.core") "image-processing.core" t 1948)

[-Received-] 723.32
(:indentation-update (("with-bindings" . 0)))
[-Received-] 723.32
(:return (:ok "([this x y])") 1948)
[Actionlist] 723.32
1948: finished :operator-arglist 
params: "([this x y])"
[---Sent---] 723.38
(:emacs-rex (swank:operator-arglist "get-point" "image-processing.core") "image-processing.core" t 1949)

[-Received-] 723.4
(:indentation-update (("with-bindings" . 1)))
[-Received-] 723.4
(:return (:ok "([this x y])") 1949)
[Actionlist] 723.4
1949: finished :operator-arglist 
params: "([this x y])"
[---Sent---] 723.46
(:emacs-rex (swank:listener-eval "(get-point y 10 2) 
") "image-processing.core" :repl-thread 1950)

[-Received-] 723.47
(:write-string "[255 255 255 255]
" :repl-result)
[-Received-] 727.17
(:indentation-update (("with-bindings" . 0)))
[-Received-] 727.17
(:return (:ok nil) 1950)
[Actionlist] 727.18
1950: finished :listener-eval 
params: nil
[---Sent---] 730.83
(:emacs-rex (swank:listener-eval "(type (:points y))
") "image-processing.core" :repl-thread 1951)

[-Received-] 730.83
(:write-string "clojure.lang.PersistentVector
" :repl-result)
[-Received-] 734.41
(:indentation-update (("with-bindings" . 1)))
[-Received-] 734.41
(:return (:ok nil) 1951)
[Actionlist] 734.41
1951: finished :listener-eval 
params: nil
[---Sent---] 738.56
(:emacs-rex (swank:operator-arglist "def" "image-processing.core") "image-processing.core" t 1952)

[-Received-] 738.57
(:indentation-update (("with-bindings" . 0)))
[-Received-] 738.57
(:return (:ok nil) 1952)
[Actionlist] 738.57
1952: finished :operator-arglist 
params: nil
[---Sent---] 738.61
(:emacs-rex (swank:operator-arglist "def" "image-processing.core") "image-processing.core" t 1953)

[-Received-] 738.62
(:indentation-update (("with-bindings" . 1)))
[-Received-] 738.62
(:return (:ok nil) 1953)
[Actionlist] 738.62
1953: finished :operator-arglist 
params: nil
[---Sent---] 738.73
(:emacs-rex (swank:operator-arglist "reduce" "image-processing.core") "image-processing.core" t 1954)

[-Received-] 738.74
(:indentation-update (("with-bindings" . 0)))
[-Received-] 738.74
(:return (:ok "([f coll] [f val coll])") 1954)
[Actionlist] 738.75
1954: finished :operator-arglist 
params: "([f coll] [f val coll])"
[---Sent---] 738.87
(:emacs-rex (swank:operator-arglist "conj" "image-processing.core") "image-processing.core" t 1955)

[-Received-] 738.88
(:indentation-update (("with-bindings" . 1)))
[-Received-] 738.88
(:return (:ok "([coll x] [coll x & xs])") 1955)
[Actionlist] 738.88
1955: finished :operator-arglist 
params: "([coll x] [coll x & xs])"
[---Sent---] 738.94
(:emacs-rex (swank:operator-arglist "conj" "image-processing.core") "image-processing.core" t 1956)

[-Received-] 738.95
(:indentation-update (("with-bindings" . 0)))
[-Received-] 738.95
(:return (:ok "([coll x] [coll x & xs])") 1956)
[Actionlist] 738.95
1956: finished :operator-arglist 
params: "([coll x] [coll x & xs])"
[---Sent---] 739.3
(:emacs-rex (swank:operator-arglist "reduce" "image-processing.core") "image-processing.core" t 1957)

[-Received-] 739.31
(:indentation-update (("with-bindings" . 1)))
[-Received-] 739.31
(:return (:ok "([f coll] [f val coll])") 1957)
[Actionlist] 739.31
1957: finished :operator-arglist 
params: "([f coll] [f val coll])"
[---Sent---] 739.48
(:emacs-rex (swank:operator-arglist "range" "image-processing.core") "image-processing.core" t 1958)

[-Received-] 739.49
(:indentation-update (("with-bindings" . 0)))
[-Received-] 739.49
(:return (:ok "([] [end] [start end] [start end step])") 1958)
[Actionlist] 739.49
1958: finished :operator-arglist 
params: "([] [end] [start end] [start end step])"
[---Sent---] 739.7
(:emacs-rex (swank:listener-eval "(def z (reduce conj [] (range 1000000000))) 
") "image-processing.core" :repl-thread 1959)

[---Sent---] 743.9
(:emacs-interrupt :repl-thread)
[---Sent---] 743.99
(:emacs-interrupt :repl-thread)
[-Received-] 744.01
(:debug 1 1 ("No message." "  [Thrown class java.lang.ThreadDeath]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "    Thread.java:813 java.lang.Thread.stop" (:restartable nil)) (1 "       core.clj:551 swank.core/eval841[fn]" (:restartable nil)) (2 "        AFn.java:18 clojure.lang.AFn.call" (:restartable nil)) (3 "LockingTransaction.java:263 clojure.lang.LockingTransaction.run" (:restartable nil)) (4 "LockingTransaction.java:231 clojure.lang.LockingTransaction.runInTransaction" (:restartable nil)) (5 "       core.clj:546 swank.core/eval841[fn]" (:restartable nil)) (6 "   MultiFn.java:172 clojure.lang.MultiFn.invoke" (:restartable nil)) (7 "       core.clj:513 swank.core/dispatch-event" (:restartable nil)) (8 "       core.clj:525 swank.core/control-loop" (:restartable nil)) (9 "       swank.clj:25 swank.swank/connection-serve[fn]" (:restartable nil))) (nil))
[---Sent---] 754.1
(:emacs-rex (swank:operator-arglist "Math/sqrt" "image-processing.core") "image-processing.core" t 1961)

[-Received-] 754.12
(:indentation-update (("with-bindings" . 1)))
[-Received-] 754.12
(:return (:ok nil) 1961)
[Actionlist] 754.12
1961: finished :operator-arglist 
params: nil
[---Sent---] 754.3
(:emacs-rex (swank:operator-arglist "rduce" "image-processing.core") "image-processing.core" t 1962)

[-Received-] 754.31
(:indentation-update (("with-bindings" . 0)))
[-Received-] 754.31
(:return (:ok nil) 1962)
[Actionlist] 754.31
1962: finished :operator-arglist 
params: nil
[---Sent---] 754.51
(:emacs-rex (swank:operator-arglist "reduce" "image-processing.core") "image-processing.core" t 1963)

[-Received-] 754.52
(:indentation-update (("with-bindings" . 1)))
[-Received-] 754.52
(:return (:ok "([f coll] [f val coll])") 1963)
[Actionlist] 754.52
1963: finished :operator-arglist 
params: "([f coll] [f val coll])"
[---Sent---] 754.59
(:emacs-rex (swank:operator-arglist "reduce" "image-processing.core") "image-processing.core" t 1964)

[-Received-] 754.59
(:indentation-update (("with-bindings" . 0)))
[-Received-] 754.59
(:return (:ok "([f coll] [f val coll])") 1964)
[Actionlist] 754.59
1964: finished :operator-arglist 
params: "([f coll] [f val coll])"
[---Sent---] 754.76
(:emacs-rex (swank:operator-arglist "map" "image-processing.core") "image-processing.core" t 1965)

[-Received-] 754.77
(:indentation-update (("with-bindings" . 1)))
[-Received-] 754.77
(:return (:ok "([f coll] [f c1 c2] [f c1 c2 c3] [f c1 c2 c3 & colls])") 1965)
[Actionlist] 754.77
1965: finished :operator-arglist 
params: "([f coll] [f c1 c2] [f c1 c2 c3] [f c1 c2 c3 & colls])"
[---Sent---] 755.2
(:emacs-rex (swank:operator-arglist "square" "image-processing.core") "image-processing.core" t 1966)

[-Received-] 755.21
(:indentation-update (("with-bindings" . 0)))
[-Received-] 755.21
(:return (:ok "([x])") 1966)
[Actionlist] 755.21
1966: finished :operator-arglist 
params: "([x])"
[---Sent---] 755.37
(:emacs-rex (swank:operator-arglist "-" "image-processing.core") "image-processing.core" t 1967)

[-Received-] 755.4
(:indentation-update (("with-bindings" . 1)))
[-Received-] 755.4
(:return (:ok "([x] [x y] [x y & more])") 1967)
[Actionlist] 755.4
1967: finished :operator-arglist 
params: "([x] [x y] [x y & more])"
[---Sent---] 755.47
(:emacs-rex (swank:operator-arglist "-" "image-processing.core") "image-processing.core" t 1968)

[-Received-] 755.48
(:indentation-update (("with-bindings" . 0)))
[-Received-] 755.48
(:return (:ok "([x] [x y] [x y & more])") 1968)
[Actionlist] 755.48
1968: finished :operator-arglist 
params: "([x] [x y] [x y & more])"
[---Sent---] 755.99
(:emacs-rex (swank:operator-arglist "get-rgb-only" "image-processing.core") "image-processing.core" t 1969)

[-Received-] 756.0
(:indentation-update (("with-bindings" . 1)))
[-Received-] 756.0
(:return (:ok "([color])") 1969)
[Actionlist] 756.0
1969: finished :operator-arglist 
params: "([color])"
[---Sent---] 756.5
(:emacs-rex (swank:operator-arglist "get-rgb-only" "image-processing.core") "image-processing.core" t 1970)

[-Received-] 756.52
(:indentation-update (("with-bindings" . 0)))
[-Received-] 756.52
(:return (:ok "([color])") 1970)
[Actionlist] 756.52
1970: finished :operator-arglist 
params: "([color])"
[---Sent---] 757.57
(:emacs-rex (swank:listener-eval "(defn euclidian-argb-distance
  \"Euclidian distance between two [a r g b] colors.\"
  [color1 color2]
  (Math/sqrt (reduce + (map #(square (- %1 %2))
                            (get-rgb-only color1)
                            (get-rgb-only color2)))))
") "image-processing.core" :repl-thread 1971)

[-Received-] 757.57
(:write-string "#'image-processing.core/euclidian-argb-distance
" :repl-result)
[-Received-] 757.57
(:indentation-update (("with-bindings" . 1)))
[-Received-] 757.58
(:return (:ok nil) 1971)
[Actionlist] 757.58
1971: finished :listener-eval 
params: nil
[---Sent---] 761.09
(:emacs-rex (swank:operator-arglist "euclidian-argb-distance" "image-processing.core") "image-processing.core" t 1972)

[-Received-] 761.09
(:indentation-update (("with-bindings" . 0)))
[-Received-] 761.09
(:return (:ok "([color1 color2])") 1972)
[Actionlist] 761.09
1972: finished :operator-arglist 
params: "([color1 color2])"
[---Sent---] 761.18
(:emacs-rex (swank:operator-arglist "euclidian-argb-distance" "image-processing.core") "image-processing.core" t 1973)

[-Received-] 761.2
(:indentation-update (("with-bindings" . 1)))
[-Received-] 761.2
(:return (:ok "([color1 color2])") 1973)
[Actionlist] 761.2
1973: finished :operator-arglist 
params: "([color1 color2])"
[---Sent---] 761.25
(:emacs-rex (swank:operator-arglist "euclidian-argb-distance" "image-processing.core") "image-processing.core" t 1974)

[-Received-] 761.25
(:indentation-update (("with-bindings" . 0)))
[-Received-] 761.25
(:return (:ok "([color1 color2])") 1974)
[Actionlist] 761.25
1974: finished :operator-arglist 
params: "([color1 color2])"
[---Sent---] 761.41
(:emacs-rex (swank:operator-arglist "euclidian-argb-distance" "image-processing.core") "image-processing.core" t 1975)

[-Received-] 761.42
(:indentation-update (("with-bindings" . 1)))
[-Received-] 761.42
(:return (:ok "([color1 color2])") 1975)
[Actionlist] 761.42
1975: finished :operator-arglist 
params: "([color1 color2])"
[---Sent---] 761.47
(:emacs-rex (swank:operator-arglist "euclidian-argb-distance" "image-processing.core") "image-processing.core" t 1976)

[-Received-] 761.48
(:indentation-update (("with-bindings" . 0)))
[-Received-] 761.48
(:return (:ok "([color1 color2])") 1976)
[Actionlist] 761.48
1976: finished :operator-arglist 
params: "([color1 color2])"
[---Sent---] 761.6
(:emacs-rex (swank:listener-eval "(euclidian-argb-distance [1 1 1] [3 3 3])
") "image-processing.core" :repl-thread 1977)

[-Received-] 761.61
(:write-string "2.8284271247461903
" :repl-result)
[-Received-] 765.04
(:indentation-update (("with-bindings" . 1)))
[-Received-] 765.04
(:return (:ok nil) 1977)
[Actionlist] 765.04
1977: finished :listener-eval 
params: nil
[---Sent---] 768.74
(:emacs-rex (swank:operator-arglist "color" "image-processing.core") "image-processing.core" t 1978)

[-Received-] 768.75
(:indentation-update (("with-bindings" . 0)))
[-Received-] 768.75
(:return (:ok nil) 1978)
[Actionlist] 768.75
1978: finished :operator-arglist 
params: nil
[---Sent---] 769.11
(:emacs-rex (swank:listener-eval "(defn get-rgb-only
  \"Returns a vec with [r g b] if COLOR is [a r g b], or returns COLOR if it already is
      just [r g b].\"
  #^{:arglists [color]}
  [color]
  (if (> (count color) 3) (subvec color 1) color))
") "image-processing.core" :repl-thread 1979)

[-Received-] 769.11
(:write-string "#'image-processing.core/get-rgb-only
" :repl-result)
[-Received-] 772.46
(:indentation-update (("with-bindings" . 1)))
[-Received-] 772.46
(:return (:ok nil) 1979)
[Actionlist] 772.46
1979: finished :listener-eval 
params: nil
[---Sent---] 776.15
(:emacs-rex (swank:listener-eval "(euclidian-argb-distance [1 1 1] [3 3 3])
") "image-processing.core" :repl-thread 1980)

[-Received-] 776.15
(:write-string "3.4641016151377544
" :repl-result)
[-Received-] 779.68
(:indentation-update (("with-bindings" . 0)))
[-Received-] 779.68
(:return (:ok nil) 1980)
[Actionlist] 779.69
1980: finished :listener-eval 
params: nil
[---Sent---] 783.46
(:emacs-rex (swank:operator-arglist "Image" "image-processing.core") "image-processing.core" t 1981)

[-Received-] 783.48
(:indentation-update (("with-bindings" . 1)))
[-Received-] 783.49
(:return (:ok nil) 1981)
[Actionlist] 783.49
1981: finished :operator-arglist 
params: nil
[---Sent---] 783.89
(:emacs-rex (swank:operator-arglist "Math/sqrt" "image-processing.basic-math") "image-processing.basic-math" t 1982)

[-Received-] 783.9
(:indentation-update (("with-bindings" . 0)))
[-Received-] 783.9
(:return (:ok nil) 1982)
[Actionlist] 783.9
1982: finished :operator-arglist 
params: nil
[---Sent---] 783.92
(:emacs-rex (swank:operator-arglist "reduce" "image-processing.basic-math") "image-processing.basic-math" t 1983)

[-Received-] 783.93
(:indentation-update (("with-bindings" . 1)))
[-Received-] 783.93
(:return (:ok "([f coll] [f val coll])") 1983)
[Actionlist] 783.93
1983: finished :operator-arglist 
params: "([f coll] [f val coll])"
[---Sent---] 783.93
(:emacs-rex (swank:describe-function "reduce") "image-processing.basic-math" t 1984)

[-Received-] 783.93
(:indentation-update (("with-bindings" . 0)))
[-Received-] 783.94
(:return (:ok "-------------------------
clojure.core/reduce
([f coll] [f val coll])
  f should be a function of 2 arguments. If val is not supplied,
  returns the result of applying f to the first 2 items in coll, then
  applying f to that result and the 3rd item, etc. If coll contains no
  items, f must accept no arguments as well, and reduce returns the
  result of calling f with no arguments.  If coll has only 1 item, it
  is returned and f is not called.  If val is supplied, returns the
  result of applying f to val and the first item in coll, then
  applying f to that result and the 2nd item, etc. If coll contains no
  items, returns val and f is not called.
") 1984)
[Actionlist] 783.94
1984: finished :describe-function 
params: "-------------------------
clojure.core/reduce
([f coll] [f val coll])
  f should be a function of 2 arguments. If val is not supplied,
  returns the result of applying f to the first 2 items in coll, then
  applying f to that result and the 3rd item, etc. If coll contains no
  items, f must accept no arguments as well, and reduce returns the
  result of calling f with no arguments.  If coll has only 1 item, it
  is returned and f is not called.  If val is supplied, returns the
  result of applying f to val and the first item in coll, then
  applying f to that result and the 2nd item, etc. If coll contains no
  items, returns val and f is not called.
"
[---Sent---] 783.98
(:emacs-rex (swank:operator-arglist "get-rgb-only" "image-processing.core") "image-processing.core" t 1985)

[-Received-] 784.0
(:indentation-update (("with-bindings" . 1)))
[-Received-] 784.0
(:return (:ok "([color])") 1985)
[Actionlist] 784.0
1985: finished :operator-arglist 
params: "([color])"
[---Sent---] 784.0
(:emacs-rex (swank:describe-function "get-rgb-only") "image-processing.core" t 1986)

[-Received-] 784.0
(:indentation-update (("with-bindings" . 0)))
[-Received-] 784.0
(:return (:ok "-------------------------
image-processing.core/get-rgb-only
([color])
  Returns a vec with [r g b] if COLOR is [a r g b], or returns COLOR if it already is
      just [r g b].
") 1986)
[Actionlist] 784.01
1986: finished :describe-function 
params: "-------------------------
image-processing.core/get-rgb-only
([color])
  Returns a vec with [r g b] if COLOR is [a r g b], or returns COLOR if it already is
      just [r g b].
"
[---Sent---] 784.17
(:emacs-rex (swank:operator-arglist "Math/sqrt" "image-processing.core") "image-processing.core" t 1987)

[-Received-] 784.18
(:indentation-update (("with-bindings" . 1)))
[-Received-] 784.18
(:return (:ok nil) 1987)
[Actionlist] 784.18
1987: finished :operator-arglist 
params: nil
[---Sent---] 784.59
(:emacs-rex (swank:listener-eval "(get-point y 10 10)
") "image-processing.core" :repl-thread 1988)

[-Received-] 788.08
(:write-string "[255 255 255 255]
" :repl-result)
[-Received-] 788.08
(:indentation-update (("with-bindings" . 0)))
[-Received-] 788.08
(:return (:ok nil) 1988)
[Actionlist] 788.08
1988: finished :listener-eval 
params: nil
[---Sent---] 791.6
(:emacs-rex (swank:listener-eval "(get-point y 110 10)
") "image-processing.core" :repl-thread 1989)

[-Received-] 795.23
(:write-string "[255 204 204 204]
" :repl-result)
[-Received-] 795.23
(:indentation-update (("with-bindings" . 1)))
[-Received-] 795.23
(:return (:ok nil) 1989)
[Actionlist] 795.23
1989: finished :listener-eval 
params: nil
[---Sent---] 799.16
(:emacs-rex (swank:operator-arglist "def" "image-processing.core") "image-processing.core" t 1990)

[-Received-] 799.17
(:indentation-update (("with-bindings" . 0)))
[-Received-] 799.17
(:return (:ok nil) 1990)
[Actionlist] 799.17
1990: finished :operator-arglist 
params: nil
[---Sent---] 799.23
(:emacs-rex (swank:operator-arglist "def" "image-processing.core") "image-processing.core" t 1991)

[-Received-] 799.26
(:indentation-update (("with-bindings" . 1)))
[-Received-] 799.26
(:return (:ok nil) 1991)
[Actionlist] 799.26
1991: finished :operator-arglist 
params: nil
[---Sent---] 799.41
(:emacs-rex (swank:operator-arglist "range" "image-processing.core") "image-processing.core" t 1992)

[-Received-] 799.42
(:indentation-update (("with-bindings" . 0)))
[-Received-] 799.42
(:return (:ok "([] [end] [start end] [start end step])") 1992)
[Actionlist] 799.42
1992: finished :operator-arglist 
params: "([] [end] [start end] [start end step])"
[---Sent---] 799.54
(:emacs-rex (swank:listener-eval "(def z (range 10))
") "image-processing.core" :repl-thread 1993)

[-Received-] 799.54
(:write-string "#'image-processing.core/z
" :repl-result)
[-Received-] 803.28
(:indentation-update (("with-bindings" . 1)))
[-Received-] 803.28
(:return (:ok nil) 1993)
[Actionlist] 803.28
1993: finished :listener-eval 
params: nil
[---Sent---] 807.06
(:emacs-rex (swank:operator-arglist "type" "image-processing.core") "image-processing.core" t 1994)

[-Received-] 807.07
(:indentation-update (("with-bindings" . 0)))
[-Received-] 807.07
(:return (:ok "([x])") 1994)
[Actionlist] 807.07
1994: finished :operator-arglist 
params: "([x])"
[---Sent---] 807.17
(:emacs-rex (swank:listener-eval "(type z) 
") "image-processing.core" :repl-thread 1995)

[-Received-] 807.17
(:write-string "clojure.lang.LazySeq
" :repl-result)
[-Received-] 810.77
(:indentation-update (("with-bindings" . 1)))
[-Received-] 810.77
(:return (:ok nil) 1995)
[Actionlist] 810.77
1995: finished :listener-eval 
params: nil
[---Sent---] 815.08
(:emacs-rex (swank:listener-eval "(type (type z)) 
") "image-processing.core" :repl-thread 1996)

[-Received-] 815.08
(:write-string "java.lang.Class
" :repl-result)
[-Received-] 818.49
(:indentation-update (("with-bindings" . 0)))
[-Received-] 818.49
(:return (:ok nil) 1996)
[Actionlist] 818.49
1996: finished :listener-eval 
params: nil
[---Sent---] 823.85
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 1997)

[-Received-] 823.86
(:indentation-update (("with-bindings" . 1)))
[-Received-] 823.86
(:return (:ok nil) 1997)
[Actionlist] 823.86
1997: finished :operator-arglist 
params: nil
[---Sent---] 823.93
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 1998)

[-Received-] 823.93
(:indentation-update (("with-bindings" . 0)))
[-Received-] 823.94
(:return (:ok nil) 1998)
[Actionlist] 823.94
1998: finished :operator-arglist 
params: nil
[---Sent---] 824.0
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 1999)

[-Received-] 824.01
(:indentation-update (("with-bindings" . 1)))
[-Received-] 824.01
(:return (:ok nil) 1999)
[Actionlist] 824.01
1999: finished :operator-arglist 
params: nil
[---Sent---] 824.06
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 2000)

[-Received-] 824.08
(:indentation-update (("with-bindings" . 0)))
[-Received-] 824.08
(:return (:ok nil) 2000)
[Actionlist] 824.08
2000: finished :operator-arglist 
params: nil
[---Sent---] 824.09
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 2001)

[-Received-] 824.1
(:indentation-update (("with-bindings" . 1)))
[-Received-] 824.1
(:return (:ok nil) 2001)
[Actionlist] 824.1
2001: finished :operator-arglist 
params: nil
[---Sent---] 824.38
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 2002)

[-Received-] 824.39
(:indentation-update (("with-bindings" . 0)))
[-Received-] 824.39
(:return (:ok nil) 2002)
[Actionlist] 824.39
2002: finished :operator-arglist 
params: nil
[---Sent---] 824.41
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 2003)

[-Received-] 824.42
(:indentation-update (("with-bindings" . 1)))
[-Received-] 824.42
(:return (:ok nil) 2003)
[Actionlist] 824.42
2003: finished :operator-arglist 
params: nil
[---Sent---] 826.24
(:emacs-rex (swank:operator-arglist "lt" "image-processing.core") "image-processing.core" t 2004)

[-Received-] 826.25
(:indentation-update (("with-bindings" . 0)))
[-Received-] 826.26
(:return (:ok nil) 2004)
[Actionlist] 826.26
2004: finished :operator-arglist 
params: nil
[---Sent---] 826.35
(:emacs-rex (swank:operator-arglist "let" "image-processing.core") "image-processing.core" t 2005)

[-Received-] 826.37
(:indentation-update (("with-bindings" . 1)))
[-Received-] 826.37
(:return (:ok "([bindings & body])") 2005)
[Actionlist] 826.37
2005: finished :operator-arglist 
params: "([bindings & body])"
[---Sent---] 826.58
(:emacs-rex (swank:operator-arglist "let" "image-processing.core") "image-processing.core" t 2006)

[-Received-] 826.59
(:indentation-update (("with-bindings" . 0)))
[-Received-] 826.59
(:return (:ok "([bindings & body])") 2006)
[Actionlist] 826.59
2006: finished :operator-arglist 
params: "([bindings & body])"
[---Sent---] 828.51
(:emacs-rex (swank:operator-arglist "get-width" "image-processing.image") "image-processing.image" t 2007)

[-Received-] 828.51
(:indentation-update (("with-bindings" . 1)))
[-Received-] 828.51
(:return (:ok nil) 2007)
[Actionlist] 828.51
2007: finished :operator-arglist 
params: nil
[---Sent---] 828.93
(:emacs-rex (swank:operator-arglist "get-height" "image-processing.image") "image-processing.image" t 2008)

[-Received-] 828.94
(:indentation-update (("with-bindings" . 0)))
[-Received-] 828.94
(:return (:ok nil) 2008)
[Actionlist] 828.94
2008: finished :operator-arglist 
params: nil
[---Sent---] 829.42
(:emacs-rex (swank:operator-arglist "get-width" "image-processing.image") "image-processing.image" t 2009)

[-Received-] 829.43
(:indentation-update (("with-bindings" . 1)))
[-Received-] 829.43
(:return (:ok nil) 2009)
[Actionlist] 829.43
2009: finished :operator-arglist 
params: nil
[---Sent---] 829.86
(:emacs-rex (swank:operator-arglist "get-height" "image-processing.image") "image-processing.image" t 2010)

[-Received-] 829.86
(:indentation-update (("with-bindings" . 0)))
[-Received-] 829.86
(:return (:ok nil) 2010)
[Actionlist] 829.86
2010: finished :operator-arglist 
params: nil
[---Sent---] 830.18
(:emacs-rex (swank:operator-arglist "get-height" "image-processing.image") "image-processing.image" t 2011)

[-Received-] 830.19
(:indentation-update (("with-bindings" . 1)))
[-Received-] 830.19
(:return (:ok nil) 2011)
[Actionlist] 830.19
2011: finished :operator-arglist 
params: nil
[---Sent---] 830.19
(:emacs-rex (swank:operator-arglist "))" "image-processing.image") "image-processing.image" t 2012)

[-Received-] 830.2
(:indentation-update (("with-bindings" . 0)))
[-Received-] 830.21
(:return (:ok nil) 2012)
[Actionlist] 830.21
2012: finished :operator-arglist 
params: nil
[---Sent---] 830.25
(:emacs-rex (swank:operator-arglist "))" "image-processing.image") "image-processing.image" t 2013)

[-Received-] 830.26
(:indentation-update (("with-bindings" . 1)))
[-Received-] 830.26
(:return (:ok nil) 2013)
[Actionlist] 830.26
2013: finished :operator-arglist 
params: nil
[---Sent---] 830.67
(:emacs-rex (swank:operator-arglist "/" "image-processing.image") "image-processing.image" t 2014)

[-Received-] 830.67
(:indentation-update (("with-bindings" . 0)))
[-Received-] 830.68
(:return (:ok "([x] [x y] [x y & more])") 2014)
[Actionlist] 830.68
2014: finished :operator-arglist 
params: "([x] [x y] [x y & more])"
[---Sent---] 830.79
(:emacs-rex (swank:operator-arglist "count" "image-processing.image") "image-processing.image" t 2015)

[-Received-] 830.79
(:indentation-update (("with-bindings" . 1)))
[-Received-] 830.8
(:return (:ok "([coll])") 2015)
[Actionlist] 830.8
2015: finished :operator-arglist 
params: "([coll])"
[---Sent---] 831.8
(:emacs-rex (swank:operator-arglist "get-width" "image-processing.core") "image-processing.core" t 2016)

[-Received-] 831.82
(:indentation-update (("with-bindings" . 0)))
[-Received-] 831.82
(:return (:ok nil) 2016)
[Actionlist] 831.82
2016: finished :operator-arglist 
params: nil
[---Sent---] 832.2
(:emacs-rex (swank:operator-arglist "get-height" "image-processing.core") "image-processing.core" t 2017)

[-Received-] 832.21
(:indentation-update (("with-bindings" . 1)))
[-Received-] 832.21
(:return (:ok nil) 2017)
[Actionlist] 832.21
2017: finished :operator-arglist 
params: nil
[---Sent---] 832.5
(:emacs-rex (swank:fuzzy-completions "Buffe" "image-processing.core" :limit 200 :time-limit-in-msec 2000) nil t 2018)

[-Received-] 832.51
(:indentation-update (("with-bindings" . 0)))
[-Received-] 832.52
(:return (:ok ((nil) nil)) 2018)
[Actionlist] 832.52
2018: finished :fuzzy-completions 
params: [['nil'], 'nil']
[---Sent---] 834.12
(:emacs-rex (swank:operator-arglist "let" "image-processing.image") "image-processing.image" t 2019)

[-Received-] 834.13
(:indentation-update (("with-bindings" . 1)))
[-Received-] 834.13
(:return (:ok "([bindings & body])") 2019)
[Actionlist] 834.13
2019: finished :operator-arglist 
params: "([bindings & body])"
[---Sent---] 834.24
(:emacs-rex (swank:operator-arglist "let" "image-processing.image") "image-processing.image" t 2020)

[-Received-] 834.26
(:indentation-update (("with-bindings" . 0)))
[-Received-] 834.27
(:return (:ok "([bindings & body])") 2020)
[Actionlist] 834.27
2020: finished :operator-arglist 
params: "([bindings & body])"
[---Sent---] 836.46
(:emacs-rex (swank:operator-arglist "let" "image-processing.core") "image-processing.core" t 2021)

[-Received-] 836.48
(:indentation-update (("with-bindings" . 1)))
[-Received-] 836.48
(:return (:ok "([bindings & body])") 2021)
[Actionlist] 836.48
2021: finished :operator-arglist 
params: "([bindings & body])"
[---Sent---] 836.62
(:emacs-rex (swank:operator-arglist "/" "image-processing.core") "image-processing.core" t 2022)

[-Received-] 836.63
(:indentation-update (("with-bindings" . 0)))
[-Received-] 836.63
(:return (:ok "([x] [x y] [x y & more])") 2022)
[Actionlist] 836.63
2022: finished :operator-arglist 
params: "([x] [x y] [x y & more])"
[---Sent---] 836.81
(:emacs-rex (swank:operator-arglist "count" "image-processing.core") "image-processing.core" t 2023)

[-Received-] 836.82
(:indentation-update (("with-bindings" . 1)))
[-Received-] 836.82
(:return (:ok "([coll])") 2023)
[Actionlist] 836.82
2023: finished :operator-arglist 
params: "([coll])"
[---Sent---] 837.04
(:emacs-rex (swank:operator-arglist ":points" "image-processing.core") "image-processing.core" t 2024)

[-Received-] 837.06
(:indentation-update (("with-bindings" . 0)))
[-Received-] 837.06
(:return (:ok "([map])") 2024)
[Actionlist] 837.06
2024: finished :operator-arglist 
params: "([map])"
[---Sent---] 837.39
(:emacs-rex (swank:operator-arglist ":width" "image-processing.core") "image-processing.core" t 2025)

[-Received-] 837.4
(:indentation-update (("with-bindings" . 1)))
[-Received-] 837.4
(:return (:ok "([map])") 2025)
[Actionlist] 837.4
2025: finished :operator-arglist 
params: "([map])"
[---Sent---] 837.67
(:emacs-rex (swank:operator-arglist ":width" "image-processing.core") "image-processing.core" t 2026)

[-Received-] 837.68
(:indentation-update (("with-bindings" . 0)))
[-Received-] 837.68
(:return (:ok "([map])") 2026)
[Actionlist] 837.68
2026: finished :operator-arglist 
params: "([map])"
[---Sent---] 837.81
(:emacs-rex (swank:operator-arglist "height" "image-processing.core") "image-processing.core" t 2027)

[-Received-] 837.82
(:indentation-update (("with-bindings" . 1)))
[-Received-] 837.82
(:return (:ok nil) 2027)
[Actionlist] 837.82
2027: finished :operator-arglist 
params: nil
[---Sent---] 838.21
(:emacs-rex (swank:operator-arglist "buff-img" "image-processing.core") "image-processing.core" t 2028)

[-Received-] 838.23
(:indentation-update (("with-bindings" . 0)))
[-Received-] 838.23
(:return (:ok nil) 2028)
[Actionlist] 838.23
2028: finished :operator-arglist 
params: nil
[---Sent---] 838.54
(:emacs-rex (swank:operator-arglist "threshold" "image-processing.core") "image-processing.core" t 2029)

[-Received-] 838.55
(:indentation-update (("with-bindings" . 1)))
[-Received-] 838.55
(:return (:ok nil) 2029)
[Actionlist] 838.55
2029: finished :operator-arglist 
params: nil
[---Sent---] 838.74
(:emacs-rex (swank:operator-arglist "height" "image-processing.core") "image-processing.core" t 2030)

[-Received-] 838.76
(:indentation-update (("with-bindings" . 0)))
[-Received-] 838.76
(:return (:ok nil) 2030)
[Actionlist] 838.76
2030: finished :operator-arglist 
params: nil
[---Sent---] 838.85
(:emacs-rex (swank:operator-arglist "doseq" "image-processing.core") "image-processing.core" t 2031)

[-Received-] 838.86
(:indentation-update (("with-bindings" . 1)))
[-Received-] 838.86
(:return (:ok "([seq-exprs & body])") 2031)
[Actionlist] 838.86
2031: finished :operator-arglist 
params: "([seq-exprs & body])"
[---Sent---] 839.06
(:emacs-rex (swank:operator-arglist "doseq" "image-processing.core") "image-processing.core" t 2032)

[-Received-] 839.07
(:indentation-update (("with-bindings" . 0)))
[-Received-] 839.07
(:return (:ok "([seq-exprs & body])") 2032)
[Actionlist] 839.07
2032: finished :operator-arglist 
params: "([seq-exprs & body])"
[---Sent---] 839.44
(:emacs-rex (swank:operator-arglist "get-img-coords" "image-processing.core") "image-processing.core" t 2033)

[-Received-] 839.45
(:indentation-update (("with-bindings" . 1)))
[-Received-] 839.45
(:return (:ok "([img])") 2033)
[Actionlist] 839.45
2033: finished :operator-arglist 
params: "([img])"
[---Sent---] 840.16
(:emacs-rex (swank:operator-arglist "euclidian-argb-distance" "image-processing.core") "image-processing.core" t 2034)

[-Received-] 840.17
(:indentation-update (("with-bindings" . 0)))
[-Received-] 840.17
(:return (:ok "([color1 color2])") 2034)
[Actionlist] 840.17
2034: finished :operator-arglist 
params: "([color1 color2])"
[---Sent---] 840.17
(:emacs-rex (swank:describe-function "euclidian-argb-distance") "image-processing.core" t 2035)

[-Received-] 840.18
(:indentation-update (("with-bindings" . 1)))
[-Received-] 840.19
(:return (:ok "-------------------------
image-processing.core/euclidian-argb-distance
([color1 color2])
  Euclidian distance between two [a r g b] colors.
") 2035)
[Actionlist] 840.19
2035: finished :describe-function 
params: "-------------------------
image-processing.core/euclidian-argb-distance
([color1 color2])
  Euclidian distance between two [a r g b] colors.
"
[---Sent---] 840.19
(:emacs-rex (swank:operator-arglist "euclidian-argb-distance" "image-processing.core") "image-processing.core" t 2036)

[-Received-] 840.2
(:indentation-update (("with-bindings" . 0)))
[-Received-] 840.2
(:return (:ok "([color1 color2])") 2036)
[Actionlist] 840.2
2036: finished :operator-arglist 
params: "([color1 color2])"
[---Sent---] 840.2
(:emacs-rex (swank:describe-function "euclidian-argb-distance") "image-processing.core" t 2037)

[-Received-] 840.2
(:indentation-update (("with-bindings" . 1)))
[-Received-] 840.22
(:return (:ok "-------------------------
image-processing.core/euclidian-argb-distance
([color1 color2])
  Euclidian distance between two [a r g b] colors.
") 2037)
[Actionlist] 840.22
2037: finished :describe-function 
params: "-------------------------
image-processing.core/euclidian-argb-distance
([color1 color2])
  Euclidian distance between two [a r g b] colors.
"
[---Sent---] 840.22
(:emacs-rex (swank:operator-arglist "euclidian-argb-distance" "image-processing.core") "image-processing.core" t 2038)

[-Received-] 840.23
(:indentation-update (("with-bindings" . 0)))
[-Received-] 840.23
(:return (:ok "([color1 color2])") 2038)
[Actionlist] 840.23
2038: finished :operator-arglist 
params: "([color1 color2])"
[---Sent---] 840.23
(:emacs-rex (swank:describe-function "euclidian-argb-distance") "image-processing.core" t 2039)

[-Received-] 840.24
(:indentation-update (("with-bindings" . 1)))
[-Received-] 840.24
(:return (:ok "-------------------------
image-processing.core/euclidian-argb-distance
([color1 color2])
  Euclidian distance between two [a r g b] colors.
") 2039)
[Actionlist] 840.24
2039: finished :describe-function 
params: "-------------------------
image-processing.core/euclidian-argb-distance
([color1 color2])
  Euclidian distance between two [a r g b] colors.
"
[---Sent---] 840.24
(:emacs-rex (swank:operator-arglist "euclidian-argb-distance" "image-processing.core") "image-processing.core" t 2040)

[-Received-] 840.25
(:indentation-update (("with-bindings" . 0)))
[-Received-] 840.26
(:return (:ok "([color1 color2])") 2040)
[Actionlist] 840.26
2040: finished :operator-arglist 
params: "([color1 color2])"
[---Sent---] 840.26
(:emacs-rex (swank:describe-function "euclidian-argb-distance") "image-processing.core" t 2041)

[-Received-] 840.26
(:indentation-update (("with-bindings" . 1)))
[-Received-] 840.27
(:return (:ok "-------------------------
image-processing.core/euclidian-argb-distance
([color1 color2])
  Euclidian distance between two [a r g b] colors.
") 2041)
[Actionlist] 840.27
2041: finished :describe-function 
params: "-------------------------
image-processing.core/euclidian-argb-distance
([color1 color2])
  Euclidian distance between two [a r g b] colors.
"
[---Sent---] 840.27
(:emacs-rex (swank:operator-arglist "euclidian-argb-distance" "image-processing.core") "image-processing.core" t 2042)

[-Received-] 840.28
(:indentation-update (("with-bindings" . 0)))
[-Received-] 840.28
(:return (:ok "([color1 color2])") 2042)
[Actionlist] 840.28
2042: finished :operator-arglist 
params: "([color1 color2])"
[---Sent---] 840.28
(:emacs-rex (swank:describe-function "euclidian-argb-distance") "image-processing.core" t 2043)

[-Received-] 840.3
(:indentation-update (("with-bindings" . 1)))
[-Received-] 840.3
(:return (:ok "-------------------------
image-processing.core/euclidian-argb-distance
([color1 color2])
  Euclidian distance between two [a r g b] colors.
") 2043)
[Actionlist] 840.3
2043: finished :describe-function 
params: "-------------------------
image-processing.core/euclidian-argb-distance
([color1 color2])
  Euclidian distance between two [a r g b] colors.
"
[---Sent---] 840.31
(:emacs-rex (swank:operator-arglist "euclidian-argb-distance" "image-processing.core") "image-processing.core" t 2044)

[-Received-] 840.31
(:indentation-update (("with-bindings" . 0)))
[-Received-] 840.31
(:return (:ok "([color1 color2])") 2044)
[Actionlist] 840.31
2044: finished :operator-arglist 
params: "([color1 color2])"
[---Sent---] 840.31
(:emacs-rex (swank:describe-function "euclidian-argb-distance") "image-processing.core" t 2045)

[-Received-] 840.32
(:indentation-update (("with-bindings" . 1)))
[-Received-] 840.32
(:return (:ok "-------------------------
image-processing.core/euclidian-argb-distance
([color1 color2])
  Euclidian distance between two [a r g b] colors.
") 2045)
[Actionlist] 840.32
2045: finished :describe-function 
params: "-------------------------
image-processing.core/euclidian-argb-distance
([color1 color2])
  Euclidian distance between two [a r g b] colors.
"
[---Sent---] 840.33
(:emacs-rex (swank:operator-arglist "euclidian-argb-distance" "image-processing.core") "image-processing.core" t 2046)

[-Received-] 840.34
(:indentation-update (("with-bindings" . 0)))
[-Received-] 840.34
(:return (:ok "([color1 color2])") 2046)
[Actionlist] 840.34
2046: finished :operator-arglist 
params: "([color1 color2])"
[---Sent---] 840.34
(:emacs-rex (swank:describe-function "euclidian-argb-distance") "image-processing.core" t 2047)

[-Received-] 840.35
(:indentation-update (("with-bindings" . 1)))
[-Received-] 840.35
(:return (:ok "-------------------------
image-processing.core/euclidian-argb-distance
([color1 color2])
  Euclidian distance between two [a r g b] colors.
") 2047)
[Actionlist] 840.35
2047: finished :describe-function 
params: "-------------------------
image-processing.core/euclidian-argb-distance
([color1 color2])
  Euclidian distance between two [a r g b] colors.
"
[---Sent---] 840.35
(:emacs-rex (swank:operator-arglist "euclidian-argb-distance" "image-processing.core") "image-processing.core" t 2048)

[-Received-] 840.36
(:indentation-update (("with-bindings" . 0)))
[-Received-] 840.36
(:return (:ok "([color1 color2])") 2048)
[Actionlist] 840.36
2048: finished :operator-arglist 
params: "([color1 color2])"
[---Sent---] 840.36
(:emacs-rex (swank:describe-function "euclidian-argb-distance") "image-processing.core" t 2049)

[-Received-] 840.38
(:indentation-update (("with-bindings" . 1)))
[-Received-] 840.38
(:return (:ok "-------------------------
image-processing.core/euclidian-argb-distance
([color1 color2])
  Euclidian distance between two [a r g b] colors.
") 2049)
[Actionlist] 840.38
2049: finished :describe-function 
params: "-------------------------
image-processing.core/euclidian-argb-distance
([color1 color2])
  Euclidian distance between two [a r g b] colors.
"
[---Sent---] 840.39
(:emacs-rex (swank:operator-arglist "euclidian-argb-distance" "image-processing.core") "image-processing.core" t 2050)

[-Received-] 840.4
(:indentation-update (("with-bindings" . 0)))
[-Received-] 840.4
(:return (:ok "([color1 color2])") 2050)
[Actionlist] 840.4
2050: finished :operator-arglist 
params: "([color1 color2])"
[---Sent---] 840.4
(:emacs-rex (swank:describe-function "euclidian-argb-distance") "image-processing.core" t 2051)

[-Received-] 840.41
(:indentation-update (("with-bindings" . 1)))
[-Received-] 840.41
(:return (:ok "-------------------------
image-processing.core/euclidian-argb-distance
([color1 color2])
  Euclidian distance between two [a r g b] colors.
") 2051)
[Actionlist] 840.41
2051: finished :describe-function 
params: "-------------------------
image-processing.core/euclidian-argb-distance
([color1 color2])
  Euclidian distance between two [a r g b] colors.
"
[---Sent---] 840.42
(:emacs-rex (swank:operator-arglist "euclidian-argb-distance" "image-processing.core") "image-processing.core" t 2052)

[-Received-] 840.43
(:indentation-update (("with-bindings" . 0)))
[-Received-] 840.43
(:return (:ok "([color1 color2])") 2052)
[Actionlist] 840.43
2052: finished :operator-arglist 
params: "([color1 color2])"
[---Sent---] 840.44
(:emacs-rex (swank:describe-function "euclidian-argb-distance") "image-processing.core" t 2053)

[-Received-] 840.45
(:indentation-update (("with-bindings" . 1)))
[-Received-] 840.45
(:return (:ok "-------------------------
image-processing.core/euclidian-argb-distance
([color1 color2])
  Euclidian distance between two [a r g b] colors.
") 2053)
[Actionlist] 840.45
2053: finished :describe-function 
params: "-------------------------
image-processing.core/euclidian-argb-distance
([color1 color2])
  Euclidian distance between two [a r g b] colors.
"
[---Sent---] 840.45
(:emacs-rex (swank:operator-arglist "euclidian-argb-distance" "image-processing.core") "image-processing.core" t 2054)

[-Received-] 840.46
(:indentation-update (("with-bindings" . 0)))
[-Received-] 840.46
(:return (:ok "([color1 color2])") 2054)
[Actionlist] 840.46
2054: finished :operator-arglist 
params: "([color1 color2])"
[---Sent---] 840.46
(:emacs-rex (swank:describe-function "euclidian-argb-distance") "image-processing.core" t 2055)

[-Received-] 840.47
(:indentation-update (("with-bindings" . 1)))
[-Received-] 840.47
(:return (:ok "-------------------------
image-processing.core/euclidian-argb-distance
([color1 color2])
  Euclidian distance between two [a r g b] colors.
") 2055)
[Actionlist] 840.47
2055: finished :describe-function 
params: "-------------------------
image-processing.core/euclidian-argb-distance
([color1 color2])
  Euclidian distance between two [a r g b] colors.
"
[---Sent---] 840.48
(:emacs-rex (swank:operator-arglist "euclidian-argb-distance" "image-processing.core") "image-processing.core" t 2056)

[-Received-] 840.49
(:indentation-update (("with-bindings" . 0)))
[-Received-] 840.49
(:return (:ok "([color1 color2])") 2056)
[Actionlist] 840.49
2056: finished :operator-arglist 
params: "([color1 color2])"
[---Sent---] 840.49
(:emacs-rex (swank:describe-function "euclidian-argb-distance") "image-processing.core" t 2057)

[-Received-] 840.5
(:indentation-update (("with-bindings" . 1)))
[-Received-] 840.5
(:return (:ok "-------------------------
image-processing.core/euclidian-argb-distance
([color1 color2])
  Euclidian distance between two [a r g b] colors.
") 2057)
[Actionlist] 840.5
2057: finished :describe-function 
params: "-------------------------
image-processing.core/euclidian-argb-distance
([color1 color2])
  Euclidian distance between two [a r g b] colors.
"
[---Sent---] 840.5
(:emacs-rex (swank:operator-arglist "euclidian-argb-distance" "image-processing.core") "image-processing.core" t 2058)

[-Received-] 840.51
(:indentation-update (("with-bindings" . 0)))
[-Received-] 840.51
(:return (:ok "([color1 color2])") 2058)
[Actionlist] 840.51
2058: finished :operator-arglist 
params: "([color1 color2])"
[---Sent---] 840.52
(:emacs-rex (swank:describe-function "euclidian-argb-distance") "image-processing.core" t 2059)

[-Received-] 840.53
(:indentation-update (("with-bindings" . 1)))
[-Received-] 840.54
(:return (:ok "-------------------------
image-processing.core/euclidian-argb-distance
([color1 color2])
  Euclidian distance between two [a r g b] colors.
") 2059)
[Actionlist] 840.54
2059: finished :describe-function 
params: "-------------------------
image-processing.core/euclidian-argb-distance
([color1 color2])
  Euclidian distance between two [a r g b] colors.
"
[---Sent---] 840.54
(:emacs-rex (swank:operator-arglist "euclidian-argb-distance" "image-processing.core") "image-processing.core" t 2060)

[-Received-] 840.55
(:indentation-update (("with-bindings" . 0)))
[-Received-] 840.55
(:return (:ok "([color1 color2])") 2060)
[Actionlist] 840.55
2060: finished :operator-arglist 
params: "([color1 color2])"
[---Sent---] 840.55
(:emacs-rex (swank:describe-function "euclidian-argb-distance") "image-processing.core" t 2061)

[-Received-] 840.56
(:indentation-update (("with-bindings" . 1)))
[-Received-] 840.56
(:return (:ok "-------------------------
image-processing.core/euclidian-argb-distance
([color1 color2])
  Euclidian distance between two [a r g b] colors.
") 2061)
[Actionlist] 840.56
2061: finished :describe-function 
params: "-------------------------
image-processing.core/euclidian-argb-distance
([color1 color2])
  Euclidian distance between two [a r g b] colors.
"
[---Sent---] 840.56
(:emacs-rex (swank:operator-arglist "euclidian-argb-distance" "image-processing.core") "image-processing.core" t 2062)

[-Received-] 840.57
(:indentation-update (("with-bindings" . 0)))
[-Received-] 840.57
(:return (:ok "([color1 color2])") 2062)
[Actionlist] 840.57
2062: finished :operator-arglist 
params: "([color1 color2])"
[---Sent---] 840.58
(:emacs-rex (swank:describe-function "euclidian-argb-distance") "image-processing.core" t 2063)

[-Received-] 840.58
(:indentation-update (("with-bindings" . 1)))
[-Received-] 840.59
(:return (:ok "-------------------------
image-processing.core/euclidian-argb-distance
([color1 color2])
  Euclidian distance between two [a r g b] colors.
") 2063)
[Actionlist] 840.59
2063: finished :describe-function 
params: "-------------------------
image-processing.core/euclidian-argb-distance
([color1 color2])
  Euclidian distance between two [a r g b] colors.
"
[---Sent---] 840.6
(:emacs-rex (swank:operator-arglist "euclidian-argb-distance" "image-processing.core") "image-processing.core" t 2064)

[-Received-] 840.61
(:indentation-update (("with-bindings" . 0)))
[-Received-] 840.61
(:return (:ok "([color1 color2])") 2064)
[Actionlist] 840.61
2064: finished :operator-arglist 
params: "([color1 color2])"
[---Sent---] 840.61
(:emacs-rex (swank:describe-function "euclidian-argb-distance") "image-processing.core" t 2065)

[-Received-] 840.61
(:indentation-update (("with-bindings" . 1)))
[-Received-] 840.62
(:return (:ok "-------------------------
image-processing.core/euclidian-argb-distance
([color1 color2])
  Euclidian distance between two [a r g b] colors.
") 2065)
[Actionlist] 840.62
2065: finished :describe-function 
params: "-------------------------
image-processing.core/euclidian-argb-distance
([color1 color2])
  Euclidian distance between two [a r g b] colors.
"
[---Sent---] 840.62
(:emacs-rex (swank:operator-arglist "euclidian-argb-distance" "image-processing.core") "image-processing.core" t 2066)

[-Received-] 840.63
(:indentation-update (("with-bindings" . 0)))
[-Received-] 840.63
(:return (:ok "([color1 color2])") 2066)
[Actionlist] 840.63
2066: finished :operator-arglist 
params: "([color1 color2])"
[---Sent---] 840.63
(:emacs-rex (swank:describe-function "euclidian-argb-distance") "image-processing.core" t 2067)

[-Received-] 840.64
(:indentation-update (("with-bindings" . 1)))
[-Received-] 840.65
(:return (:ok "-------------------------
image-processing.core/euclidian-argb-distance
([color1 color2])
  Euclidian distance between two [a r g b] colors.
") 2067)
[Actionlist] 840.65
2067: finished :describe-function 
params: "-------------------------
image-processing.core/euclidian-argb-distance
([color1 color2])
  Euclidian distance between two [a r g b] colors.
"
[---Sent---] 840.65
(:emacs-rex (swank:operator-arglist "euclidian-argb-distance" "image-processing.core") "image-processing.core" t 2068)

[-Received-] 840.66
(:indentation-update (("with-bindings" . 0)))
[-Received-] 840.67
(:return (:ok "([color1 color2])") 2068)
[Actionlist] 840.67
2068: finished :operator-arglist 
params: "([color1 color2])"
[---Sent---] 840.67
(:emacs-rex (swank:describe-function "euclidian-argb-distance") "image-processing.core" t 2069)

[-Received-] 840.68
(:indentation-update (("with-bindings" . 1)))
[-Received-] 840.68
(:return (:ok "-------------------------
image-processing.core/euclidian-argb-distance
([color1 color2])
  Euclidian distance between two [a r g b] colors.
") 2069)
[Actionlist] 840.68
2069: finished :describe-function 
params: "-------------------------
image-processing.core/euclidian-argb-distance
([color1 color2])
  Euclidian distance between two [a r g b] colors.
"
[---Sent---] 840.68
(:emacs-rex (swank:operator-arglist "euclidian-argb-distance" "image-processing.core") "image-processing.core" t 2070)

[-Received-] 840.69
(:indentation-update (("with-bindings" . 0)))
[-Received-] 840.7
(:return (:ok "([color1 color2])") 2070)
[Actionlist] 840.7
2070: finished :operator-arglist 
params: "([color1 color2])"
[---Sent---] 840.7
(:emacs-rex (swank:describe-function "euclidian-argb-distance") "image-processing.core" t 2071)

[-Received-] 840.7
(:indentation-update (("with-bindings" . 1)))
[-Received-] 840.71
(:return (:ok "-------------------------
image-processing.core/euclidian-argb-distance
([color1 color2])
  Euclidian distance between two [a r g b] colors.
") 2071)
[Actionlist] 840.71
2071: finished :describe-function 
params: "-------------------------
image-processing.core/euclidian-argb-distance
([color1 color2])
  Euclidian distance between two [a r g b] colors.
"
[---Sent---] 840.71
(:emacs-rex (swank:operator-arglist "euclidian-argb-distance" "image-processing.core") "image-processing.core" t 2072)

[-Received-] 840.73
(:indentation-update (("with-bindings" . 0)))
[-Received-] 840.73
(:return (:ok "([color1 color2])") 2072)
[Actionlist] 840.73
2072: finished :operator-arglist 
params: "([color1 color2])"
[---Sent---] 840.73
(:emacs-rex (swank:describe-function "euclidian-argb-distance") "image-processing.core" t 2073)

[-Received-] 840.73
(:indentation-update (("with-bindings" . 1)))
[-Received-] 840.74
(:return (:ok "-------------------------
image-processing.core/euclidian-argb-distance
([color1 color2])
  Euclidian distance between two [a r g b] colors.
") 2073)
[Actionlist] 840.74
2073: finished :describe-function 
params: "-------------------------
image-processing.core/euclidian-argb-distance
([color1 color2])
  Euclidian distance between two [a r g b] colors.
"
[---Sent---] 840.74
(:emacs-rex (swank:operator-arglist "euclidian-argb-distance" "image-processing.core") "image-processing.core" t 2074)

[-Received-] 840.74
(:indentation-update (("with-bindings" . 0)))
[-Received-] 840.75
(:return (:ok "([color1 color2])") 2074)
[Actionlist] 840.75
2074: finished :operator-arglist 
params: "([color1 color2])"
[---Sent---] 840.75
(:emacs-rex (swank:describe-function "euclidian-argb-distance") "image-processing.core" t 2075)

[-Received-] 840.76
(:indentation-update (("with-bindings" . 1)))
[-Received-] 840.76
(:return (:ok "-------------------------
image-processing.core/euclidian-argb-distance
([color1 color2])
  Euclidian distance between two [a r g b] colors.
") 2075)
[Actionlist] 840.76
2075: finished :describe-function 
params: "-------------------------
image-processing.core/euclidian-argb-distance
([color1 color2])
  Euclidian distance between two [a r g b] colors.
"
[---Sent---] 840.76
(:emacs-rex (swank:operator-arglist "euclidian-argb-distance" "image-processing.core") "image-processing.core" t 2076)

[-Received-] 840.78
(:indentation-update (("with-bindings" . 0)))
[-Received-] 840.78
(:return (:ok "([color1 color2])") 2076)
[Actionlist] 840.78
2076: finished :operator-arglist 
params: "([color1 color2])"
[---Sent---] 840.78
(:emacs-rex (swank:describe-function "euclidian-argb-distance") "image-processing.core" t 2077)

[-Received-] 840.78
(:indentation-update (("with-bindings" . 1)))
[-Received-] 840.79
(:return (:ok "-------------------------
image-processing.core/euclidian-argb-distance
([color1 color2])
  Euclidian distance between two [a r g b] colors.
") 2077)
[Actionlist] 840.79
2077: finished :describe-function 
params: "-------------------------
image-processing.core/euclidian-argb-distance
([color1 color2])
  Euclidian distance between two [a r g b] colors.
"
[---Sent---] 840.79
(:emacs-rex (swank:operator-arglist "euclidian-argb-distance" "image-processing.core") "image-processing.core" t 2078)

[-Received-] 840.8
(:indentation-update (("with-bindings" . 0)))
[-Received-] 840.8
(:return (:ok "([color1 color2])") 2078)
[Actionlist] 840.8
2078: finished :operator-arglist 
params: "([color1 color2])"
[---Sent---] 840.8
(:emacs-rex (swank:describe-function "euclidian-argb-distance") "image-processing.core" t 2079)

[-Received-] 840.81
(:indentation-update (("with-bindings" . 1)))
[-Received-] 840.81
(:return (:ok "-------------------------
image-processing.core/euclidian-argb-distance
([color1 color2])
  Euclidian distance between two [a r g b] colors.
") 2079)
[Actionlist] 840.81
2079: finished :describe-function 
params: "-------------------------
image-processing.core/euclidian-argb-distance
([color1 color2])
  Euclidian distance between two [a r g b] colors.
"
[---Sent---] 840.82
(:emacs-rex (swank:operator-arglist "euclidian-argb-distance" "image-processing.core") "image-processing.core" t 2080)

[-Received-] 840.83
(:indentation-update (("with-bindings" . 0)))
[-Received-] 840.83
(:return (:ok "([color1 color2])") 2080)
[Actionlist] 840.83
2080: finished :operator-arglist 
params: "([color1 color2])"
[---Sent---] 840.83
(:emacs-rex (swank:describe-function "euclidian-argb-distance") "image-processing.core" t 2081)

[-Received-] 840.84
(:indentation-update (("with-bindings" . 1)))
[-Received-] 840.84
(:return (:ok "-------------------------
image-processing.core/euclidian-argb-distance
([color1 color2])
  Euclidian distance between two [a r g b] colors.
") 2081)
[Actionlist] 840.84
2081: finished :describe-function 
params: "-------------------------
image-processing.core/euclidian-argb-distance
([color1 color2])
  Euclidian distance between two [a r g b] colors.
"
[---Sent---] 840.85
(:emacs-rex (swank:operator-arglist "euclidian-argb-distance" "image-processing.core") "image-processing.core" t 2082)

[-Received-] 840.86
(:indentation-update (("with-bindings" . 0)))
[-Received-] 840.86
(:return (:ok "([color1 color2])") 2082)
[Actionlist] 840.86
2082: finished :operator-arglist 
params: "([color1 color2])"
[---Sent---] 840.86
(:emacs-rex (swank:describe-function "euclidian-argb-distance") "image-processing.core" t 2083)

[-Received-] 840.87
(:indentation-update (("with-bindings" . 1)))
[-Received-] 840.89
(:return (:ok "-------------------------
image-processing.core/euclidian-argb-distance
([color1 color2])
  Euclidian distance between two [a r g b] colors.
") 2083)
[Actionlist] 840.89
2083: finished :describe-function 
params: "-------------------------
image-processing.core/euclidian-argb-distance
([color1 color2])
  Euclidian distance between two [a r g b] colors.
"
[---Sent---] 841.28
(:emacs-rex (swank:operator-arglist "set-argb" "image-processing.core") "image-processing.core" t 2084)

[-Received-] 841.28
(:indentation-update (("with-bindings" . 0)))
[-Received-] 841.28
(:return (:ok "([img coord argb-color])") 2084)
[Actionlist] 841.28
2084: finished :operator-arglist 
params: "([img coord argb-color])"
[---Sent---] 841.43
(:emacs-rex (swank:operator-arglist "set-argb" "image-processing.core") "image-processing.core" t 2085)

[-Received-] 841.44
(:indentation-update (("with-bindings" . 1)))
[-Received-] 841.44
(:return (:ok "([img coord argb-color])") 2085)
[Actionlist] 841.44
2085: finished :operator-arglist 
params: "([img coord argb-color])"
[---Sent---] 841.59
(:emacs-rex (swank:operator-arglist "set-argb" "image-processing.core") "image-processing.core" t 2086)

[-Received-] 841.61
(:indentation-update (("with-bindings" . 0)))
[-Received-] 841.61
(:return (:ok "([img coord argb-color])") 2086)
[Actionlist] 841.61
2086: finished :operator-arglist 
params: "([img coord argb-color])"
[---Sent---] 841.9
(:emacs-rex (swank:operator-arglist "get-point" "image-processing.core") "image-processing.core" t 2087)

[-Received-] 841.91
(:indentation-update (("with-bindings" . 1)))
[-Received-] 841.91
(:return (:ok "([this x y])") 2087)
[Actionlist] 841.91
2087: finished :operator-arglist 
params: "([this x y])"
[---Sent---] 842.01
(:emacs-rex (swank:operator-arglist "get-point" "image-processing.core") "image-processing.core" t 2088)

[-Received-] 842.02
(:indentation-update (("with-bindings" . 0)))
[-Received-] 842.02
(:return (:ok "([this x y])") 2088)
[Actionlist] 842.02
2088: finished :operator-arglist 
params: "([this x y])"
[---Sent---] 842.41
(:emacs-rex (swank:listener-eval "(ns image-processing.core
    (:import
      (java.lang Math)
      (javax.imageio ImageIO)
      (java.io File)
      (java.awt.image BufferedImage)
      (image_processing.image Image))
    (:use 
      image-processing.image
      [image-processing.basic-math :only (square mean)]))


(defn intcolor-to-argb
  \"Convert the 32 bits color to ARGB. It returns a vector [A R G B].\"
  [color]
  [(bit-and (bit-shift-right color 24) 0xff)
   (bit-and (bit-shift-right color 16) 0xff)
   (bit-and (bit-shift-right color 8) 0xff)
   (bit-and color 0xff)])


(defn get-argb
  \"Get the [a r g b] color of a pixel [x y] of IMG.\"
  [img coord]
  (let [[x y] coord]
    (intcolor-to-argb (.getRGB img x y))))


(defn set-argb
  \"Set the ARGB color of a pixel COORD of the image IMG.\"
  #^{:arglists [img coord argb-color]}
  [img coord argb-color]
  (let [[x y] coord
        [a r g b] argb-color
        int-color (bit-or (bit-shift-left a 24)
                          (bit-or (bit-shift-left r 16)
                                  (bit-or (bit-shift-left g 8) b)))]
    (.setRGB img x y int-color)))


(defn get-img-coords
  \"Returns a sequence of all coordinates of the image.\"
  #^{:arglists [img]}
  [img]
  (for [y (range (.getHeight img))
        x (range (.getWidth img))]
       [x y]))


(defn get-rgb-only
  \"Returns a vec with [r g b] if COLOR is [a r g b], or returns COLOR if it already is
      just [r g b].\"
  #^{:arglists [color]}
  [color]
  (if (> (count color) 3) (subvec color 1) color))


(defn convert-buffImg-to-image
  \"Returns a Image from a BufferedImage.\"
  #^{:arglists [buffered-image]}
  [buffered-image]
  (let [argb-values (reduce #(conj %1 (get-argb buffered-image %2))
                            []
                            (get-img-coords buffered-image))]
    (Image. argb-values (.getWidth buffered-image))))


(defn convert-image-to-buffImg
  \"Doc\"
  #^{:arglists [img]}
  [img]
  (let [height (/ (count (:points img) (:width img)))
        buff-img (BufferedImage. (:width img) 
                                 height
                                 BufferedImage/TYPE_INT_ARGB)]
    (doseq [coord (get-img-coords buff-img)]
      (set-argb buff-img coord (get-point img coord)))))


(defn euclidian-argb-distance
  \"Euclidian distance between two [a r g b] colors.\"
  [color1 color2]
  (Math/sqrt (reduce + (map #(square (- %1 %2))
                            (get-rgb-only color1)
                            (get-rgb-only color2)))))


(defn get-grayscale-values
  \"Returns a lazy sequence of the grayscale value of the image's pixels.\"
  #^{:arglists [img]}
  [img]
  (map #(int (mean (rest (get-argb img %)))) (get-img-coords img)))


(defn get-binarized-values
  \"Returns a lazy sequence of the binarized value of the image's pixels.
      If pixel < threshold, then pixel=BLACK (0) else pixel=WHITE (255).\"
  #^{:arglists [img threshold]}
  [img threshold]
  (map #(if (< % threshold) 0 255) (get-grayscale-values img)))


;(defn vertical-histogram
;  \"Doc\"
;  #^{:arglists [img]}
;  [img]
;  )
;  TODO: partition & interleave

;(def img-path \"/home/boechat/Dropbox/Documents/Coding/Hough_transform/straight_lines.png\")
;(def buffered-image (ImageIO/read (File. img-path)))
") "image-processing.core" :repl-thread 2089)

[-Received-] 845.97
(:debug 1 1 ("Wrong number of args (2) passed to: core$count" "  [Thrown class clojure.lang.ArityException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "               AFn.java:437 clojure.lang.AFn.throwArity" (:restartable nil)) (1 "                AFn.java:43 clojure.lang.AFn.invoke" (:restartable nil)) (2 "               AFn.java:163 clojure.lang.AFn.applyToHelper" (:restartable nil)) (3 "               AFn.java:151 clojure.lang.AFn.applyTo" (:restartable nil)) (4 "         Compiler.java:6404 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (5 "         Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil)) (6 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil)) (7 "         Compiler.java:3503 clojure.lang.Compiler$InvokeExpr.parse" (:restartable nil)) (8 "         Compiler.java:6411 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (9 "         Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil))) (nil))
[-Received-] 845.98
(:debug-activate 1 1 nil)
[---Sent---] 847.13
(:emacs-rex (swank:listener-eval "(ns image-processing.core
    (:import
      (java.lang Math)
      (javax.imageio ImageIO)
      (java.io File)
      (java.awt.image BufferedImage)
      (image_processing.image Image))
    (:use 
      image-processing.image
      [image-processing.basic-math :only (square mean)]))


(defn intcolor-to-argb
  \"Convert the 32 bits color to ARGB. It returns a vector [A R G B].\"
  [color]
  [(bit-and (bit-shift-right color 24) 0xff)
   (bit-and (bit-shift-right color 16) 0xff)
   (bit-and (bit-shift-right color 8) 0xff)
   (bit-and color 0xff)])


(defn get-argb
  \"Get the [a r g b] color of a pixel [x y] of IMG.\"
  [img coord]
  (let [[x y] coord]
    (intcolor-to-argb (.getRGB img x y))))


(defn set-argb
  \"Set the ARGB color of a pixel COORD of the image IMG.\"
  #^{:arglists [img coord argb-color]}
  [img coord argb-color]
  (let [[x y] coord
        [a r g b] argb-color
        int-color (bit-or (bit-shift-left a 24)
                          (bit-or (bit-shift-left r 16)
                                  (bit-or (bit-shift-left g 8) b)))]
    (.setRGB img x y int-color)))


(defn get-img-coords
  \"Returns a sequence of all coordinates of the image.\"
  #^{:arglists [img]}
  [img]
  (for [y (range (.getHeight img))
        x (range (.getWidth img))]
       [x y]))


(defn get-rgb-only
  \"Returns a vec with [r g b] if COLOR is [a r g b], or returns COLOR if it already is
      just [r g b].\"
  #^{:arglists [color]}
  [color]
  (if (> (count color) 3) (subvec color 1) color))


(defn convert-buffImg-to-image
  \"Returns a Image from a BufferedImage.\"
  #^{:arglists [buffered-image]}
  [buffered-image]
  (let [argb-values (reduce #(conj %1 (get-argb buffered-image %2))
                            []
                            (get-img-coords buffered-image))]
    (Image. argb-values (.getWidth buffered-image))))


(defn convert-image-to-buffImg
  \"Doc\"
  #^{:arglists [img]}
  [img]
  (let [height (/ (count (:points img)) (:width img))
        buff-img (BufferedImage. (:width img) 
                                 height
                                 BufferedImage/TYPE_INT_ARGB)]
    (doseq [coord (get-img-coords buff-img)]
      (set-argb buff-img coord (get-point img coord)))))


(defn euclidian-argb-distance
  \"Euclidian distance between two [a r g b] colors.\"
  [color1 color2]
  (Math/sqrt (reduce + (map #(square (- %1 %2))
                            (get-rgb-only color1)
                            (get-rgb-only color2)))))


(defn get-grayscale-values
  \"Returns a lazy sequence of the grayscale value of the image's pixels.\"
  #^{:arglists [img]}
  [img]
  (map #(int (mean (rest (get-argb img %)))) (get-img-coords img)))


(defn get-binarized-values
  \"Returns a lazy sequence of the binarized value of the image's pixels.
      If pixel < threshold, then pixel=BLACK (0) else pixel=WHITE (255).\"
  #^{:arglists [img threshold]}
  [img threshold]
  (map #(if (< % threshold) 0 255) (get-grayscale-values img)))


;(defn vertical-histogram
;  \"Doc\"
;  #^{:arglists [img]}
;  [img]
;  )
;  TODO: partition & interleave

;(def img-path \"/home/boechat/Dropbox/Documents/Coding/Hough_transform/straight_lines.png\")
;(def buffered-image (ImageIO/read (File. img-path)))
") "image-processing.core" :repl-thread 2090)

[-Received-] 847.17
(:debug 1 2 ("No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points" "  [Thrown class java.lang.IllegalArgumentException]" nil) (("QUIT" "Quit to the SLIME top level") ("ABORT" "ABORT to SLIME level 0")) ((0 "         Compiler.java:3302 clojure.lang.Compiler$InvokeExpr.<init>" (:restartable nil)) (1 "         Compiler.java:3509 clojure.lang.Compiler$InvokeExpr.parse" (:restartable nil)) (2 "         Compiler.java:6411 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (3 "         Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil)) (4 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil)) (5 "         Compiler.java:3503 clojure.lang.Compiler$InvokeExpr.parse" (:restartable nil)) (6 "         Compiler.java:6411 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (7 "         Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil)) (8 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil)) (9 "         Compiler.java:5572 clojure.lang.Compiler$BodyExpr$Parser.parse" (:restartable nil))) (nil))
[-Received-] 847.18
(:debug-activate 1 2 nil)
[---Sent---] 847.88
(:emacs-rex (swank:throw-to-toplevel) nil 1 2091)

[-Received-] 847.89
(:return (:abort) 2091)
[Actionlist] 847.89
2089: pending  :listener-eval 
2090: pending  :listener-eval 
2091: finished :throw-to-toplevel 
[-Received-] 847.89
(:debug-return 1 2 nil)
[-Received-] 847.89
(:return (:abort) 2090)
[Actionlist] 847.89
2089: pending  :listener-eval 
2090: finished :listener-eval 
2091: finished :throw-to-toplevel 
[-Received-] 847.89
(:debug-return 1 1 nil)
[-Received-] 847.89
(:return (:abort) 2089)
[Actionlist] 847.89
2089: finished :listener-eval 
2090: finished :listener-eval 
2091: finished :throw-to-toplevel 
[---Sent---] 851.47
(:emacs-rex (swank:listener-eval "(ns image-processing.core
    (:import
      (java.lang Math)
      (javax.imageio ImageIO)
      (java.io File)
      (java.awt.image BufferedImage)
      (image_processing.image Image))
    (:use 
      image-processing.image
      [image-processing.basic-math :only (square mean)]))
") "image-processing.core" :repl-thread 2092)

[-Received-] 854.92
(:write-string "nil
" :repl-result)
[-Received-] 854.92
(:indentation-update (("with-bindings" . 1)))
[-Received-] 854.92
(:return (:ok nil) 2092)
[Actionlist] 854.92
2092: finished :listener-eval 
params: nil
[---Sent---] 858.93
(:emacs-rex (swank:connection-info) nil t 2093)

[-Received-] 859.0
(:indentation-update (("dothread-keeping-clj" . 1) ("dothread-keeping" . 1) ("dothread" . 0) ("binding-map" . 1) ("print-length-loop" . 1) ("with-pretty-writer" . 1) ("with-pprint-dispatch" . 1) ("with-connection" . 1) ("with-bindings" . 0) ("with-emacs-package" . 0) ("dothread-swank" . 0) ("with-read-line-support" . 0) ("with-package-tracking" . 0) ("doseq" . 1) ("letfn" . 1) ("cond" . 0) ("with-open" . 1) ("sync" . 1) ("let" . 1) ("dotimes" . 1) ("with-in-str" . 1) ("loop" . 1) ("with-out-str" . 0) ("when-not" . 1) ("with-loading-context" . 0) ("future" . 0) ("with-redefs" . 1) ("when-first" . 1) ("comment" . 0) ("condp" . 2) ("with-local-vars" . 1) ("with-bindings" . 1) ("when-let" . 1) ("while" . 1) ("case" . 1) ("locking" . 1) ("delay" . 0) ("io!" . 0) ("lazy-seq" . 0) ("when" . 1) ("binding" . 1) ("defslimefn" . defun) ("returning" . 1) ("continuously" . 0) ("failing-gracefully" . 0)))
[-Received-] 859.0
(:return (:ok (:pid "20940" :style :spawn :lisp-implementation (:type "Clojure" :name "clojure" :version "1.3.0") :package (:name "user" :prompt "user") :version "20100404")) 2093)
[Actionlist] 859.0
2093: finished :connection-info 
params: [':pid', '"20940"', ':style', ':spawn', ':lisp-implementation', [':type', '"Clojure"', ':name', '"clojure"', ':version', '"1.3.0"'], ':package', [':name', '"user"', ':prompt', '"user"'], ':version', '"20100404"']
 Package:user Prompt:user
[---Sent---] 859.05
(:emacs-rex (swank:create-repl nil) "user" t 2094)

[-Received-] 859.06
(:indentation-update (("with-bindings" . 0)))
[-Received-] 859.06
(:return (:ok ("user" "user")) 2094)
[Actionlist] 859.06
2094: finished :create-repl 
params: ['"user"', '"user"']
[---Sent---] 859.06
(:emacs-rex (swank:swank-require 'swank-fuzzy) nil t 2095)

[---Sent---] 862.36
(:emacs-rex (swank:listener-eval "(use '[clojure.repl :only (source apropos dir pst doc find-doc)])
(use '[clojure.java.javadoc :only (javadoc)])
(use '[clojure.pprint :only (pp pprint)])
") "user" :repl-thread 2096)

[-Received-] 862.36
(:indentation-update (("with-timeout" . 1) ("with-bindings" . 1)))
[-Received-] 862.36
(:return (:ok nil) 2095)
[Actionlist] 862.37
2095: finished :swank-require 
2096: pending  :listener-eval 
params: nil
[---Sent---] 862.48
(:emacs-rex (swank:listener-eval "(ns image-processing.core
    (:import
      (java.lang Math)
      (javax.imageio ImageIO)
      (java.io File)
      (java.awt.image BufferedImage)
      (image_processing.image Image))
    (:use 
      image-processing.image
      [image-processing.basic-math :only (square mean)]))


(defn intcolor-to-argb
  \"Convert the 32 bits color to ARGB. It returns a vector [A R G B].\"
  [color]
  [(bit-and (bit-shift-right color 24) 0xff)
   (bit-and (bit-shift-right color 16) 0xff)
   (bit-and (bit-shift-right color 8) 0xff)
   (bit-and color 0xff)])


(defn get-argb
  \"Get the [a r g b] color of a pixel [x y] of IMG.\"
  [img coord]
  (let [[x y] coord]
    (intcolor-to-argb (.getRGB img x y))))


(defn set-argb
  \"Set the ARGB color of a pixel COORD of the image IMG.\"
  #^{:arglists [img coord argb-color]}
  [img coord argb-color]
  (let [[x y] coord
        [a r g b] argb-color
        int-color (bit-or (bit-shift-left a 24)
                          (bit-or (bit-shift-left r 16)
                                  (bit-or (bit-shift-left g 8) b)))]
    (.setRGB img x y int-color)))


(defn get-img-coords
  \"Returns a sequence of all coordinates of the image.\"
  #^{:arglists [img]}
  [img]
  (for [y (range (.getHeight img))
        x (range (.getWidth img))]
       [x y]))


(defn get-rgb-only
  \"Returns a vec with [r g b] if COLOR is [a r g b], or returns COLOR if it already is
      just [r g b].\"
  #^{:arglists [color]}
  [color]
  (if (> (count color) 3) (subvec color 1) color))


(defn convert-buffImg-to-image
  \"Returns a Image from a BufferedImage.\"
  #^{:arglists [buffered-image]}
  [buffered-image]
  (let [argb-values (reduce #(conj %1 (get-argb buffered-image %2))
                            []
                            (get-img-coords buffered-image))]
    (Image. argb-values (.getWidth buffered-image))))


(defn convert-image-to-buffImg
  \"Doc\"
  #^{:arglists [img]}
  [img]
  (let [height (/ (count (:points img)) (:width img))
        buff-img (BufferedImage. (:width img) 
                                 height
                                 BufferedImage/TYPE_INT_ARGB)]
    (doseq [coord (get-img-coords buff-img)]
      (set-argb buff-img coord (get-point img coord)))))


(defn euclidian-argb-distance
  \"Euclidian distance between two [a r g b] colors.\"
  [color1 color2]
  (Math/sqrt (reduce + (map #(square (- %1 %2))
                            (get-rgb-only color1)
                            (get-rgb-only color2)))))


(defn get-grayscale-values
  \"Returns a lazy sequence of the grayscale value of the image's pixels.\"
  #^{:arglists [img]}
  [img]
  (map #(int (mean (rest (get-argb img %)))) (get-img-coords img)))


(defn get-binarized-values
  \"Returns a lazy sequence of the binarized value of the image's pixels.
      If pixel < threshold, then pixel=BLACK (0) else pixel=WHITE (255).\"
  #^{:arglists [img threshold]}
  [img threshold]
  (map #(if (< % threshold) 0 255) (get-grayscale-values img)))


;(defn vertical-histogram
;  \"Doc\"
;  #^{:arglists [img]}
;  [img]
;  )
;  TODO: partition & interleave

;(def img-path \"/home/boechat/Dropbox/Documents/Coding/Hough_transform/straight_lines.png\")
;(def buffered-image (ImageIO/read (File. img-path)))
") "user" :repl-thread 2097)

[-Received-] 862.48
(:write-string "nil
" :repl-result)
[-Received-] 866.0
(:indentation-update (("with-bindings" . 0)))
[-Received-] 866.0
(:return (:ok nil) 2096)
[Actionlist] 866.0
2096: finished :listener-eval 
2097: pending  :listener-eval 
params: nil
[-Received-] 866.0
(:new-package "image-processing.core" "image-processing.core")
[-Received-] 866.0
(:debug 1 1 ("image_processing.image.Image" "  [Thrown class java.lang.ClassNotFoundException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "    URLClassLoader.java:366 java.net.URLClassLoader$1.run" (:restartable nil)) (1 "    URLClassLoader.java:355 java.net.URLClassLoader$1.run" (:restartable nil)) (2 "           (Unknown Source) java.security.AccessController.doPrivileged" (:restartable nil)) (3 "    URLClassLoader.java:354 java.net.URLClassLoader.findClass" (:restartable nil)) (4 " DynamicClassLoader.java:61 clojure.lang.DynamicClassLoader.findClass" (:restartable nil)) (5 "       ClassLoader.java:423 java.lang.ClassLoader.loadClass" (:restartable nil)) (6 "       ClassLoader.java:356 java.lang.ClassLoader.loadClass" (:restartable nil)) (7 "           (Unknown Source) java.lang.Class.forName0" (:restartable nil)) (8 "             Class.java:186 java.lang.Class.forName" (:restartable nil)) (9 "           NO_SOURCE_FILE:1 image-processing.core/eval2222[fn]" (:restartable nil))) (nil))
[-Received-] 866.01
(:debug-activate 1 1 nil)
[---Sent---] 866.6
(:emacs-rex (swank:throw-to-toplevel) nil 1 2098)

[-Received-] 866.6
(:return (:abort) 2098)
[Actionlist] 866.6
2097: pending  :listener-eval 
2098: finished :throw-to-toplevel 
[-Received-] 869.95
(:debug-return 1 1 nil)
[-Received-] 869.95
(:return (:abort) 2097)
[Actionlist] 869.95
2097: finished :listener-eval 
[---Sent---] 873.69
(:emacs-rex (swank:listener-eval "(ns image-processing.core
    (:import
      (java.lang Math)
      (javax.imageio ImageIO)
      (java.io File)
      (java.awt.image BufferedImage)
      (image_processing.image Image))
    (:use 
      image-processing.image
      [image-processing.basic-math :only (square mean)]))
") "image-processing.core" :repl-thread 2099)

[-Received-] 877.27
(:debug 1 1 ("image_processing.image.Image" "  [Thrown class java.lang.ClassNotFoundException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "    URLClassLoader.java:366 java.net.URLClassLoader$1.run" (:restartable nil)) (1 "    URLClassLoader.java:355 java.net.URLClassLoader$1.run" (:restartable nil)) (2 "           (Unknown Source) java.security.AccessController.doPrivileged" (:restartable nil)) (3 "    URLClassLoader.java:354 java.net.URLClassLoader.findClass" (:restartable nil)) (4 " DynamicClassLoader.java:61 clojure.lang.DynamicClassLoader.findClass" (:restartable nil)) (5 "       ClassLoader.java:423 java.lang.ClassLoader.loadClass" (:restartable nil)) (6 "       ClassLoader.java:356 java.lang.ClassLoader.loadClass" (:restartable nil)) (7 "           (Unknown Source) java.lang.Class.forName0" (:restartable nil)) (8 "             Class.java:186 java.lang.Class.forName" (:restartable nil)) (9 "           NO_SOURCE_FILE:1 image-processing.core/eval2232[fn]" (:restartable nil))) (nil))
[-Received-] 877.28
(:debug-activate 1 1 nil)
[---Sent---] 877.52
(:emacs-rex (swank:throw-to-toplevel) nil 1 2100)

[-Received-] 877.52
(:return (:abort) 2100)
[Actionlist] 877.52
2099: pending  :listener-eval 
2100: finished :throw-to-toplevel 
[-Received-] 880.98
(:debug-return 1 1 nil)
[-Received-] 880.98
(:return (:abort) 2099)
[Actionlist] 880.98
2099: finished :listener-eval 
[---Sent---] 884.6
(:emacs-rex (swank:compile-file-for-emacs "/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj" t) "image-processing.core" t 2101)

[-Received-] 884.6
(:indentation-update (("with-bindings" . 1)))
[-Received-] 884.6
(:return (:ok (:compilation-result ((:message "java.lang.RuntimeException: java.lang.ClassNotFoundException: image_processing.image.Image" :severity :error :location (:error "No error location available") :references nil :short-message "java.lang.RuntimeException: java.lang.ClassNotFoundException: image_processing.image.Image") (:message "java.lang.ClassNotFoundException: image_processing.image.Image" :severity :error :location (:error "No error location available") :references nil :short-message "java.lang.ClassNotFoundException: image_processing.image.Image")) nil 0.123526785)) 2101)
[Actionlist] 884.61
2101: finished :compile-file-for-emacs 
params: [':compilation-result', [[':message', '"java.lang.RuntimeException: java.lang.ClassNotFoundException: image_processing.image.Image"', ':severity', ':error', ':location', [':error', '"No error location available"'], ':references', 'nil', ':short-message', '"java.lang.RuntimeException: java.lang.ClassNotFoundException: image_processing.image.Image"'], [':message', '"java.lang.ClassNotFoundException: image_processing.image.Image"', ':severity', ':error', ':location', [':error', '"No error location available"'], ':references', 'nil', ':short-message', '"java.lang.ClassNotFoundException: image_processing.image.Image"']], 'nil', '0.123526785']
[---Sent---] 888.77
(:emacs-rex (swank:compile-file-for-emacs "/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj" t) "image-processing.core" t 2102)

[-Received-] 888.79
(:return (:ok (:compilation-result ((:message "java.lang.RuntimeException: java.lang.ClassNotFoundException: image_processing.image.Image" :severity :error :location (:error "No error location available") :references nil :short-message "java.lang.RuntimeException: java.lang.ClassNotFoundException: image_processing.image.Image") (:message "java.lang.ClassNotFoundException: image_processing.image.Image" :severity :error :location (:error "No error location available") :references nil :short-message "java.lang.ClassNotFoundException: image_processing.image.Image")) nil 0.122325957)) 2102)
[Actionlist] 888.79
2102: finished :compile-file-for-emacs 
params: [':compilation-result', [[':message', '"java.lang.RuntimeException: java.lang.ClassNotFoundException: image_processing.image.Image"', ':severity', ':error', ':location', [':error', '"No error location available"'], ':references', 'nil', ':short-message', '"java.lang.RuntimeException: java.lang.ClassNotFoundException: image_processing.image.Image"'], [':message', '"java.lang.ClassNotFoundException: image_processing.image.Image"', ':severity', ':error', ':location', [':error', '"No error location available"'], ':references', 'nil', ':short-message', '"java.lang.ClassNotFoundException: image_processing.image.Image"']], 'nil', '0.122325957']
[---Sent---] 892.82
(:emacs-rex (swank:compile-file-for-emacs "/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj" t) "image-processing.core" t 2103)

[-Received-] 892.88
(:indentation-update (("with-bindings" . 0)))
[-Received-] 892.88
(:return (:ok (:compilation-result ((:message "java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)" :severity :error :location (:location (:file "/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj") (:line 77) nil) :references nil :short-message "java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)") (:message "java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points" :severity :error :location (:error "No error location available") :references nil :short-message "java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points")) nil 1.317597233)) 2103)
[Actionlist] 892.88
2103: finished :compile-file-for-emacs 
params: [':compilation-result', [[':message', '"java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)"', ':severity', ':error', ':location', [':location', [':file', '"/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj"'], [':line', '77'], 'nil'], ':references', 'nil', ':short-message', '"java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)"'], [':message', '"java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points"', ':severity', ':error', ':location', [':error', '"No error location available"'], ':references', 'nil', ':short-message', '"java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points"']], 'nil', '1.317597233']
{'filename':'/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj','lnum':'77','col':'1','text':'java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)'}
[---Sent---] 896.83
(:emacs-rex (swank:compile-file-for-emacs "/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj" t) "image-processing.core" t 2104)

[-Received-] 896.84
(:return (:ok (:compilation-result ((:message "java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)" :severity :error :location (:location (:file "/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj") (:line 77) nil) :references nil :short-message "java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)") (:message "java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points" :severity :error :location (:error "No error location available") :references nil :short-message "java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points")) nil 0.28168895)) 2104)
[Actionlist] 896.84
2104: finished :compile-file-for-emacs 
params: [':compilation-result', [[':message', '"java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)"', ':severity', ':error', ':location', [':location', [':file', '"/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj"'], [':line', '77'], 'nil'], ':references', 'nil', ':short-message', '"java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)"'], [':message', '"java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points"', ':severity', ':error', ':location', [':error', '"No error location available"'], ':references', 'nil', ':short-message', '"java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points"']], 'nil', '0.28168895']
{'filename':'/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj','lnum':'77','col':'1','text':'java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)'}
[---Sent---] 900.75
(:emacs-rex (swank:compile-file-for-emacs "/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj" t) "image-processing.core" t 2105)

[-Received-] 900.76
(:return (:ok (:compilation-result ((:message "java.lang.RuntimeException: java.lang.ClassNotFoundException: image-processing.image.Image" :severity :error :location (:error "No error location available") :references nil :short-message "java.lang.RuntimeException: java.lang.ClassNotFoundException: image-processing.image.Image") (:message "java.lang.ClassNotFoundException: image-processing.image.Image" :severity :error :location (:error "No error location available") :references nil :short-message "java.lang.ClassNotFoundException: image-processing.image.Image")) nil 0.028406889)) 2105)
[Actionlist] 900.76
2105: finished :compile-file-for-emacs 
params: [':compilation-result', [[':message', '"java.lang.RuntimeException: java.lang.ClassNotFoundException: image-processing.image.Image"', ':severity', ':error', ':location', [':error', '"No error location available"'], ':references', 'nil', ':short-message', '"java.lang.RuntimeException: java.lang.ClassNotFoundException: image-processing.image.Image"'], [':message', '"java.lang.ClassNotFoundException: image-processing.image.Image"', ':severity', ':error', ':location', [':error', '"No error location available"'], ':references', 'nil', ':short-message', '"java.lang.ClassNotFoundException: image-processing.image.Image"']], 'nil', '0.028406889']
[---Sent---] 904.68
(:emacs-rex (swank:operator-arglist "image_processing" "image-processing.core") "image-processing.core" t 2106)

[-Received-] 904.68
(:return (:ok nil) 2106)
[Actionlist] 904.68
2106: finished :operator-arglist 
params: nil
[---Sent---] 904.83
(:emacs-rex (swank:compile-file-for-emacs "/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj" t) "image-processing.core" t 2107)

[-Received-] 904.84
(:return (:ok (:compilation-result ((:message "java.lang.ClassCastException: clojure.lang.Var cannot be cast to java.lang.Class" :severity :error :location (:error "No error location available") :references nil :short-message "java.lang.ClassCastException: clojure.lang.Var cannot be cast to java.lang.Class")) nil 0.030587523)) 2107)
[Actionlist] 904.84
2107: finished :compile-file-for-emacs 
params: [':compilation-result', [[':message', '"java.lang.ClassCastException: clojure.lang.Var cannot be cast to java.lang.Class"', ':severity', ':error', ':location', [':error', '"No error location available"'], ':references', 'nil', ':short-message', '"java.lang.ClassCastException: clojure.lang.Var cannot be cast to java.lang.Class"']], 'nil', '0.030587523']
[---Sent---] 909.02
(:emacs-rex (swank:compile-file-for-emacs "/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj" t) "image-processing.core" t 2108)

[-Received-] 909.03
(:return (:ok (:compilation-result ((:message "java.lang.RuntimeException: java.lang.ClassNotFoundException: image-processing.image.Image" :severity :error :location (:error "No error location available") :references nil :short-message "java.lang.RuntimeException: java.lang.ClassNotFoundException: image-processing.image.Image") (:message "java.lang.ClassNotFoundException: image-processing.image.Image" :severity :error :location (:error "No error location available") :references nil :short-message "java.lang.ClassNotFoundException: image-processing.image.Image")) nil 0.123066802)) 2108)
[Actionlist] 909.03
2108: finished :compile-file-for-emacs 
params: [':compilation-result', [[':message', '"java.lang.RuntimeException: java.lang.ClassNotFoundException: image-processing.image.Image"', ':severity', ':error', ':location', [':error', '"No error location available"'], ':references', 'nil', ':short-message', '"java.lang.RuntimeException: java.lang.ClassNotFoundException: image-processing.image.Image"'], [':message', '"java.lang.ClassNotFoundException: image-processing.image.Image"', ':severity', ':error', ':location', [':error', '"No error location available"'], ':references', 'nil', ':short-message', '"java.lang.ClassNotFoundException: image-processing.image.Image"']], 'nil', '0.123066802']
[---Sent---] 912.59
(:emacs-rex (swank:compile-file-for-emacs "/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj" t) "image-processing.core" t 2109)

[-Received-] 912.6
(:return (:ok (:compilation-result ((:message "java.lang.ClassCastException: clojure.lang.Var cannot be cast to java.lang.Class" :severity :error :location (:error "No error location available") :references nil :short-message "java.lang.ClassCastException: clojure.lang.Var cannot be cast to java.lang.Class")) nil 0.086951339)) 2109)
[Actionlist] 912.6
2109: finished :compile-file-for-emacs 
params: [':compilation-result', [[':message', '"java.lang.ClassCastException: clojure.lang.Var cannot be cast to java.lang.Class"', ':severity', ':error', ':location', [':error', '"No error location available"'], ':references', 'nil', ':short-message', '"java.lang.ClassCastException: clojure.lang.Var cannot be cast to java.lang.Class"']], 'nil', '0.086951339']
[---Sent---] 916.33
(:emacs-rex (swank:compile-file-for-emacs "/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj" t) "image-processing.core" t 2110)

[-Received-] 916.34
(:return (:ok (:compilation-result ((:message "java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)" :severity :error :location (:location (:file "/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj") (:line 77) nil) :references nil :short-message "java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)") (:message "java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points" :severity :error :location (:error "No error location available") :references nil :short-message "java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points")) nil 0.196735806)) 2110)
[Actionlist] 916.34
2110: finished :compile-file-for-emacs 
params: [':compilation-result', [[':message', '"java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)"', ':severity', ':error', ':location', [':location', [':file', '"/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj"'], [':line', '77'], 'nil'], ':references', 'nil', ':short-message', '"java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)"'], [':message', '"java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points"', ':severity', ':error', ':location', [':error', '"No error location available"'], ':references', 'nil', ':short-message', '"java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points"']], 'nil', '0.196735806']
{'filename':'/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj','lnum':'77','col':'1','text':'java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)'}
[---Sent---] 916.84
(:emacs-rex (swank:operator-arglist "image-processing" "image-processing.core") "image-processing.core" t 2111)

[-Received-] 916.84
(:return (:ok nil) 2111)
[Actionlist] 916.84
2111: finished :operator-arglist 
params: nil
[---Sent---] 917.05
(:emacs-rex (swank:compile-file-for-emacs "/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj" t) "image-processing.core" t 2112)

[-Received-] 917.07
(:return (:ok (:compilation-result ((:message "java.lang.RuntimeException: java.io.FileNotFoundException: Could not locate image_processing/image/Points__init.class or image_processing/image/Points.clj on classpath: " :severity :error :location (:error "No error location available") :references nil :short-message "java.lang.RuntimeException: java.io.FileNotFoundException: Could not locate image_processing/image/Points__init.class or image_processing/image/Points.clj on classpath: ") (:message "java.io.FileNotFoundException: Could not locate image_processing/image/Points__init.class or image_processing/image/Points.clj on classpath: " :severity :error :location (:error "No error location available") :references nil :short-message "java.io.FileNotFoundException: Could not locate image_processing/image/Points__init.class or image_processing/image/Points.clj on classpath: ")) nil 0.112407263)) 2112)
[Actionlist] 917.07
2112: finished :compile-file-for-emacs 
params: [':compilation-result', [[':message', '"java.lang.RuntimeException: java.io.FileNotFoundException: Could not locate image_processing/image/Points__init.class or image_processing/image/Points.clj on classpath: "', ':severity', ':error', ':location', [':error', '"No error location available"'], ':references', 'nil', ':short-message', '"java.lang.RuntimeException: java.io.FileNotFoundException: Could not locate image_processing/image/Points__init.class or image_processing/image/Points.clj on classpath: "'], [':message', '"java.io.FileNotFoundException: Could not locate image_processing/image/Points__init.class or image_processing/image/Points.clj on classpath: "', ':severity', ':error', ':location', [':error', '"No error location available"'], ':references', 'nil', ':short-message', '"java.io.FileNotFoundException: Could not locate image_processing/image/Points__init.class or image_processing/image/Points.clj on classpath: "']], 'nil', '0.112407263']
[---Sent---] 917.34
(:emacs-rex (swank:operator-arglist "image-processing" "image-processing.core") "image-processing.core" t 2113)

[-Received-] 917.34
(:return (:ok nil) 2113)
[Actionlist] 917.34
2113: finished :operator-arglist 
params: nil
[---Sent---] 917.41
(:emacs-rex (swank:compile-file-for-emacs "/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj" t) "image-processing.core" t 2114)

[-Received-] 917.43
(:return (:ok (:compilation-result ((:message "java.lang.IllegalArgumentException: Don't know how to create ISeq from: clojure.lang.Symbol" :severity :error :location (:error "No error location available") :references nil :short-message "java.lang.IllegalArgumentException: Don't know how to create ISeq from: clojure.lang.Symbol")) nil 0.119809599)) 2114)
[Actionlist] 917.43
2114: finished :compile-file-for-emacs 
params: [':compilation-result', [[':message', '"java.lang.IllegalArgumentException: Don\'t know how to create ISeq from: clojure.lang.Symbol"', ':severity', ':error', ':location', [':error', '"No error location available"'], ':references', 'nil', ':short-message', '"java.lang.IllegalArgumentException: Don\'t know how to create ISeq from: clojure.lang.Symbol"']], 'nil', '0.119809599']
[---Sent---] 917.68
(:emacs-rex (swank:operator-arglist "32" "image-processing.core") "image-processing.core" t 2115)

[-Received-] 917.68
(:return (:ok nil) 2115)
[Actionlist] 917.68
2115: finished :operator-arglist 
params: nil
[---Sent---] 917.93
(:emacs-rex (swank:compile-file-for-emacs "/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj" t) "image-processing.core" t 2116)

[-Received-] 917.94
(:return (:ok (:compilation-result ((:message "java.lang.RuntimeException: java.lang.IllegalAccessError: ->Points does not exist" :severity :error :location (:error "No error location available") :references nil :short-message "java.lang.RuntimeException: java.lang.IllegalAccessError: ->Points does not exist") (:message "java.lang.IllegalAccessError: ->Points does not exist" :severity :error :location (:error "No error location available") :references nil :short-message "java.lang.IllegalAccessError: ->Points does not exist")) nil 0.021153486)) 2116)
[Actionlist] 917.94
2116: finished :compile-file-for-emacs 
params: [':compilation-result', [[':message', '"java.lang.RuntimeException: java.lang.IllegalAccessError: ->Points does not exist"', ':severity', ':error', ':location', [':error', '"No error location available"'], ':references', 'nil', ':short-message', '"java.lang.RuntimeException: java.lang.IllegalAccessError: ->Points does not exist"'], [':message', '"java.lang.IllegalAccessError: ->Points does not exist"', ':severity', ':error', ':location', [':error', '"No error location available"'], ':references', 'nil', ':short-message', '"java.lang.IllegalAccessError: ->Points does not exist"']], 'nil', '0.021153486']
[---Sent---] 918.42
(:emacs-rex (swank:operator-arglist "Image" "image-processing.core") "image-processing.core" t 2117)

[-Received-] 918.42
(:return (:ok nil) 2117)
[Actionlist] 918.42
2117: finished :operator-arglist 
params: nil
[---Sent---] 918.6
(:emacs-rex (swank:compile-file-for-emacs "/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj" t) "image-processing.core" t 2118)

[-Received-] 918.62
(:return (:ok (:compilation-result ((:message "java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)" :severity :error :location (:location (:file "/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj") (:line 77) nil) :references nil :short-message "java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)") (:message "java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points" :severity :error :location (:error "No error location available") :references nil :short-message "java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points")) nil 0.164331096)) 2118)
[Actionlist] 918.62
2118: finished :compile-file-for-emacs 
params: [':compilation-result', [[':message', '"java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)"', ':severity', ':error', ':location', [':location', [':file', '"/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj"'], [':line', '77'], 'nil'], ':references', 'nil', ':short-message', '"java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)"'], [':message', '"java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points"', ':severity', ':error', ':location', [':error', '"No error location available"'], ':references', 'nil', ':short-message', '"java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points"']], 'nil', '0.164331096']
{'filename':'/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj','lnum':'77','col':'1','text':'java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)'}
[---Sent---] 918.83
(:emacs-rex (swank:compile-file-for-emacs "/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj" t) "image-processing.core" t 2119)

[-Received-] 918.84
(:return (:ok (:compilation-result ((:message "java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)" :severity :error :location (:location (:file "/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj") (:line 77) nil) :references nil :short-message "java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)") (:message "java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points" :severity :error :location (:error "No error location available") :references nil :short-message "java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points")) nil 0.298225502)) 2119)
[Actionlist] 918.84
2119: finished :compile-file-for-emacs 
params: [':compilation-result', [[':message', '"java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)"', ':severity', ':error', ':location', [':location', [':file', '"/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj"'], [':line', '77'], 'nil'], ':references', 'nil', ':short-message', '"java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)"'], [':message', '"java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points"', ':severity', ':error', ':location', [':error', '"No error location available"'], ':references', 'nil', ':short-message', '"java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points"']], 'nil', '0.298225502']
{'filename':'/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj','lnum':'77','col':'1','text':'java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)'}
[---Sent---] 919.9
(:emacs-rex (swank:operator-arglist "bit-shift-right" "image-processing.core") "image-processing.core" t 2120)

[-Received-] 919.91
(:return (:ok "([x n])") 2120)
[Actionlist] 919.91
2120: finished :operator-arglist 
params: "([x n])"
[---Sent---] 919.91
(:emacs-rex (swank:describe-function "bit-shift-right") "image-processing.core" t 2121)

[-Received-] 919.91
(:return (:ok "-------------------------
clojure.core/bit-shift-right
([x n])
  Bitwise shift right
") 2121)
[Actionlist] 919.91
2121: finished :describe-function 
params: "-------------------------
clojure.core/bit-shift-right
([x n])
  Bitwise shift right
"
[---Sent---] 919.96
(:emacs-rex (swank:operator-arglist "image_processing" "image-processing.core") "image-processing.core" t 2122)

[-Received-] 919.97
(:return (:ok nil) 2122)
[Actionlist] 919.97
2122: finished :operator-arglist 
params: nil
[---Sent---] 920.23
(:emacs-rex (swank:operator-arglist "function:" "image-processing.core") "image-processing.core" t 2123)

[-Received-] 920.23
(:return (:ok nil) 2123)
[Actionlist] 920.23
2123: finished :operator-arglist 
params: nil
[---Sent---] 920.38
(:emacs-rex (swank:operator-arglist "image-processing" "image-processing.core") "image-processing.core" t 2124)

[-Received-] 920.38
(:return (:ok nil) 2124)
[Actionlist] 920.38
2124: finished :operator-arglist 
params: nil
[---Sent---] 920.47
(:emacs-rex (swank:compile-file-for-emacs "/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj" t) "image-processing.core" t 2125)

[-Received-] 920.48
(:return (:ok (:compilation-result ((:message "java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)" :severity :error :location (:location (:file "/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj") (:line 77) nil) :references nil :short-message "java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)") (:message "java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points" :severity :error :location (:error "No error location available") :references nil :short-message "java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points")) nil 0.210144578)) 2125)
[Actionlist] 920.49
2125: finished :compile-file-for-emacs 
params: [':compilation-result', [[':message', '"java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)"', ':severity', ':error', ':location', [':location', [':file', '"/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj"'], [':line', '77'], 'nil'], ':references', 'nil', ':short-message', '"java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)"'], [':message', '"java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points"', ':severity', ':error', ':location', [':error', '"No error location available"'], ':references', 'nil', ':short-message', '"java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points"']], 'nil', '0.210144578']
{'filename':'/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj','lnum':'77','col':'1','text':'java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)'}
[---Sent---] 920.71
(:emacs-rex (swank:operator-arglist "function:" "image-processing.core") "image-processing.core" t 2126)

[-Received-] 920.71
(:return (:ok nil) 2126)
[Actionlist] 920.71
2126: finished :operator-arglist 
params: nil
[---Sent---] 920.82
(:emacs-rex (swank:operator-arglist "bit-shift-right" "image-processing.core") "image-processing.core" t 2127)

[-Received-] 920.82
(:return (:ok "([x n])") 2127)
[Actionlist] 920.82
2127: finished :operator-arglist 
params: "([x n])"
[---Sent---] 920.83
(:emacs-rex (swank:describe-function "bit-shift-right") "image-processing.core" t 2128)

[-Received-] 920.83
(:return (:ok "-------------------------
clojure.core/bit-shift-right
([x n])
  Bitwise shift right
") 2128)
[Actionlist] 920.83
2128: finished :describe-function 
params: "-------------------------
clojure.core/bit-shift-right
([x n])
  Bitwise shift right
"
[---Sent---] 920.89
(:emacs-rex (swank:compile-file-for-emacs "/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj" t) "image-processing.core" t 2129)

[-Received-] 920.9
(:return (:ok (:compilation-result ((:message "java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)" :severity :error :location (:location (:file "/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj") (:line 77) nil) :references nil :short-message "java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)") (:message "java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points" :severity :error :location (:error "No error location available") :references nil :short-message "java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points")) nil 0.208104181)) 2129)
[Actionlist] 920.9
2129: finished :compile-file-for-emacs 
params: [':compilation-result', [[':message', '"java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)"', ':severity', ':error', ':location', [':location', [':file', '"/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj"'], [':line', '77'], 'nil'], ':references', 'nil', ':short-message', '"java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)"'], [':message', '"java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points"', ':severity', ':error', ':location', [':error', '"No error location available"'], ':references', 'nil', ':short-message', '"java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points"']], 'nil', '0.208104181']
{'filename':'/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj','lnum':'77','col':'1','text':'java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)'}
[---Sent---] 921.48
(:emacs-rex (swank:operator-arglist ":require" "image-processing.core") "image-processing.core" t 2130)

[-Received-] 921.49
(:return (:ok "([map])") 2130)
[Actionlist] 921.49
2130: finished :operator-arglist 
params: "([map])"
[---Sent---] 921.87
(:emacs-rex (swank:compile-file-for-emacs "/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj" t) "image-processing.core" t 2131)

[-Received-] 921.88
(:return (:ok (:compilation-result ((:message "java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)" :severity :error :location (:location (:file "/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj") (:line 77) nil) :references nil :short-message "java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)") (:message "java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points" :severity :error :location (:error "No error location available") :references nil :short-message "java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points")) nil 0.242897759)) 2131)
[Actionlist] 921.89
2131: finished :compile-file-for-emacs 
params: [':compilation-result', [[':message', '"java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)"', ':severity', ':error', ':location', [':location', [':file', '"/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj"'], [':line', '77'], 'nil'], ':references', 'nil', ':short-message', '"java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)"'], [':message', '"java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points"', ':severity', ':error', ':location', [':error', '"No error location available"'], ':references', 'nil', ':short-message', '"java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points"']], 'nil', '0.242897759']
{'filename':'/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj','lnum':'77','col':'1','text':'java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)'}
[---Sent---] 922.13
(:emacs-rex (swank:operator-arglist "bit-shift-right" "image-processing.core") "image-processing.core" t 2132)

[-Received-] 922.14
(:return (:ok "([x n])") 2132)
[Actionlist] 922.14
2132: finished :operator-arglist 
params: "([x n])"
[---Sent---] 922.14
(:emacs-rex (swank:describe-function "bit-shift-right") "image-processing.core" t 2133)

[-Received-] 922.14
(:return (:ok "-------------------------
clojure.core/bit-shift-right
([x n])
  Bitwise shift right
") 2133)
[Actionlist] 922.14
2133: finished :describe-function 
params: "-------------------------
clojure.core/bit-shift-right
([x n])
  Bitwise shift right
"
[---Sent---] 922.2
(:emacs-rex (swank:compile-file-for-emacs "/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj" t) "image-processing.core" t 2134)

[-Received-] 922.21
(:return (:ok (:compilation-result ((:message "java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)" :severity :error :location (:location (:file "/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj") (:line 77) nil) :references nil :short-message "java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)") (:message "java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points" :severity :error :location (:error "No error location available") :references nil :short-message "java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points")) nil 0.1435281)) 2134)
[Actionlist] 922.22
2134: finished :compile-file-for-emacs 
params: [':compilation-result', [[':message', '"java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)"', ':severity', ':error', ':location', [':location', [':file', '"/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj"'], [':line', '77'], 'nil'], ':references', 'nil', ':short-message', '"java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)"'], [':message', '"java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points"', ':severity', ':error', ':location', [':error', '"No error location available"'], ':references', 'nil', ':short-message', '"java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points"']], 'nil', '0.1435281']
{'filename':'/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj','lnum':'77','col':'1','text':'java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)'}
[---Sent---] 922.44
(:emacs-rex (swank:operator-arglist "of" "image-processing.core") "image-processing.core" t 2135)

[-Received-] 922.44
(:return (:ok nil) 2135)
[Actionlist] 922.44
2135: finished :operator-arglist 
params: nil
[---Sent---] 922.51
(:emacs-rex (swank:operator-arglist "protocol:" "image-processing.core") "image-processing.core" t 2136)

[-Received-] 922.51
(:return (:ok nil) 2136)
[Actionlist] 922.51
2136: finished :operator-arglist 
params: nil
[---Sent---] 923.32
(:emacs-rex (swank:compile-file-for-emacs "/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj" t) "image-processing.core" t 2137)

[-Received-] 923.33
(:return (:ok (:compilation-result ((:message "java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)" :severity :error :location (:location (:file "/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj") (:line 77) nil) :references nil :short-message "java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)") (:message "java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points" :severity :error :location (:error "No error location available") :references nil :short-message "java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points")) nil 0.196213001)) 2137)
[Actionlist] 923.33
2137: finished :compile-file-for-emacs 
params: [':compilation-result', [[':message', '"java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)"', ':severity', ':error', ':location', [':location', [':file', '"/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj"'], [':line', '77'], 'nil'], ':references', 'nil', ':short-message', '"java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)"'], [':message', '"java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points"', ':severity', ':error', ':location', [':error', '"No error location available"'], ':references', 'nil', ':short-message', '"java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points"']], 'nil', '0.196213001']
{'filename':'/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj','lnum':'77','col':'1','text':'java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)'}
[---Sent---] 923.76
(:emacs-rex (swank:compile-file-for-emacs "/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj" t) "image-processing.core" t 2138)

[-Received-] 923.77
(:return (:ok (:compilation-result ((:message "java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)" :severity :error :location (:location (:file "/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj") (:line 77) nil) :references nil :short-message "java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)") (:message "java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points" :severity :error :location (:error "No error location available") :references nil :short-message "java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points")) nil 0.253869093)) 2138)
[Actionlist] 923.78
2138: finished :compile-file-for-emacs 
params: [':compilation-result', [[':message', '"java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)"', ':severity', ':error', ':location', [':location', [':file', '"/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj"'], [':line', '77'], 'nil'], ':references', 'nil', ':short-message', '"java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)"'], [':message', '"java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points"', ':severity', ':error', ':location', [':error', '"No error location available"'], ':references', 'nil', ':short-message', '"java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points"']], 'nil', '0.253869093']
{'filename':'/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj','lnum':'77','col':'1','text':'java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)'}
[---Sent---] 924.07
(:emacs-rex (swank:operator-arglist "bit-shift-right" "image-processing.core") "image-processing.core" t 2139)

[-Received-] 924.07
(:return (:ok "([x n])") 2139)
[Actionlist] 924.07
2139: finished :operator-arglist 
params: "([x n])"
[---Sent---] 924.07
(:emacs-rex (swank:describe-function "bit-shift-right") "image-processing.core" t 2140)

[-Received-] 924.07
(:return (:ok "-------------------------
clojure.core/bit-shift-right
([x n])
  Bitwise shift right
") 2140)
[Actionlist] 924.08
2140: finished :describe-function 
params: "-------------------------
clojure.core/bit-shift-right
([x n])
  Bitwise shift right
"
[---Sent---] 924.4
(:emacs-rex (swank:compile-file-for-emacs "/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj" t) "image-processing.core" t 2141)

[-Received-] 924.41
(:return (:ok (:compilation-result ((:message "java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)" :severity :error :location (:location (:file "/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj") (:line 77) nil) :references nil :short-message "java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)") (:message "java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points" :severity :error :location (:error "No error location available") :references nil :short-message "java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points")) nil 0.100836996)) 2141)
[Actionlist] 924.41
2141: finished :compile-file-for-emacs 
params: [':compilation-result', [[':message', '"java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)"', ':severity', ':error', ':location', [':location', [':file', '"/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj"'], [':line', '77'], 'nil'], ':references', 'nil', ':short-message', '"java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)"'], [':message', '"java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points"', ':severity', ':error', ':location', [':error', '"No error location available"'], ':references', 'nil', ':short-message', '"java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points"']], 'nil', '0.100836996']
{'filename':'/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj','lnum':'77','col':'1','text':'java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)'}
[---Sent---] 924.78
(:emacs-rex (swank:operator-arglist "select-point" "image-processing.core") "image-processing.core" t 2142)

[-Received-] 924.79
(:return (:ok nil) 2142)
[Actionlist] 924.79
2142: finished :operator-arglist 
params: nil
[---Sent---] 924.89
(:emacs-rex (swank:operator-arglist "defn" "image-processing.core") "image-processing.core" t 2143)

[-Received-] 924.89
(:return (:ok "([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])") 2143)
[Actionlist] 924.89
2143: finished :operator-arglist 
params: "([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])"
[---Sent---] 924.89
(:emacs-rex (swank:describe-function "defn") "image-processing.core" t 2144)

[-Received-] 924.9
(:return (:ok "-------------------------
clojure.core/defn
([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])
Macro
  Same as (def name (fn [params* ] exprs*)) or (def
    name (fn ([params* ] exprs*)+)) with any doc-string or attrs added
    to the var metadata
") 2144)
[Actionlist] 924.9
2144: finished :describe-function 
params: "-------------------------
clojure.core/defn
([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])
Macro
  Same as (def name (fn [params* ] exprs*)) or (def
    name (fn ([params* ] exprs*)+)) with any doc-string or attrs added
    to the var metadata
"
[---Sent---] 925.47
(:emacs-rex (swank:operator-arglist "java.lang.IllegalArgumentException:" "image-processing.core") "image-processing.core" t 2147)

[-Received-] 925.47
(:return (:ok nil) 2147)
[Actionlist] 925.47
2147: finished :operator-arglist 
params: nil
[---Sent---] 925.82
(:emacs-rex (swank:operator-arglist "java" "image-processing.core") "image-processing.core" t 2148)

[-Received-] 925.82
(:return (:ok nil) 2148)
[Actionlist] 925.82
2148: finished :operator-arglist 
params: nil
[---Sent---] 926.51
(:emacs-rex (swank:operator-arglist "ns" "image-processing.core") "image-processing.core" t 2151)

[-Received-] 926.51
(:return (:ok "([name docstring? attr-map? references*])") 2151)
[Actionlist] 926.51
2151: finished :operator-arglist 
params: "([name docstring? attr-map? references*])"
[---Sent---] 926.91
(:emacs-rex (swank:listener-eval "(ns image-processing.test.image)
") "image-processing.core" :repl-thread 2152)

[-Received-] 926.97
(:write-string "nil
" :repl-result)
[-Received-] 926.97
(:new-package "image-processing.test.image" "image-processing.test.image")
[-Received-] 926.97
(:return (:ok nil) 2152)
[Actionlist] 926.97
2152: finished :listener-eval 
params: nil
[---Sent---] 927.14
(:emacs-rex (swank:operator-arglist "run" "image-processing.test.image") "image-processing.test.image" t 2153)

[-Received-] 927.14
(:return (:ok nil) 2153)
[Actionlist] 927.14
2153: finished :operator-arglist 
params: nil
[---Sent---] 927.38
(:emacs-rex (swank:listener-eval "(run-tests) 
") "image-processing.test.image" :repl-thread 2154)

[-Received-] 927.38
(:write-string "
Testing image-processing.test.image
" nil)
[-Received-] 927.47
(:write-string "
Ran 1 tests containing 2 assertions.
" nil)
[-Received-] 927.47
(:write-string "0 failures, 0 errors.
" nil)
[-Received-] 927.47
(:write-string "{:type :summary, :pass 2, :test 1, :error 0, :fail 0}
" :repl-result)
[-Received-] 927.48
(:return (:ok nil) 2154)
[Actionlist] 927.48
2154: finished :listener-eval 
params: nil
[---Sent---] 927.97
(:emacs-rex (swank:operator-arglist "image_processing" "image-processing.core") "image-processing.core" t 2155)

[-Received-] 927.98
(:return (:ok nil) 2155)
[Actionlist] 927.98
2155: finished :operator-arglist 
params: nil
[---Sent---] 928.07
(:emacs-rex (swank:compile-file-for-emacs "/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj" t) "image-processing.core" t 2156)

[-Received-] 928.08
(:return (:ok (:compilation-result ((:message "java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)" :severity :error :location (:location (:file "/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj") (:line 77) nil) :references nil :short-message "java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)") (:message "java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points" :severity :error :location (:error "No error location available") :references nil :short-message "java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points")) nil 0.300820764)) 2156)
[Actionlist] 928.09
2156: finished :compile-file-for-emacs 
params: [':compilation-result', [[':message', '"java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)"', ':severity', ':error', ':location', [':location', [':file', '"/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj"'], [':line', '77'], 'nil'], ':references', 'nil', ':short-message', '"java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)"'], [':message', '"java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points"', ':severity', ':error', ':location', [':error', '"No error location available"'], ':references', 'nil', ':short-message', '"java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points"']], 'nil', '0.300820764']
{'filename':'/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj','lnum':'77','col':'1','text':'java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)'}
[---Sent---] 930.63
(:emacs-rex (swank:operator-arglist "get-point" "image-processing.image") "image-processing.image" t 2157)

[-Received-] 930.63
(:return (:ok "([this x y])") 2157)
[Actionlist] 930.63
2157: finished :operator-arglist 
params: "([this x y])"
[---Sent---] 930.72
(:emacs-rex (swank:operator-arglist "get-point" "image-processing.image") "image-processing.image" t 2158)

[-Received-] 930.72
(:return (:ok "([this x y])") 2158)
[Actionlist] 930.72
2158: finished :operator-arglist 
params: "([this x y])"
[---Sent---] 931.12
(:emacs-rex (swank:operator-arglist "get-point" "image-processing.image") "image-processing.image" t 2159)

[-Received-] 931.12
(:return (:ok "([this x y])") 2159)
[Actionlist] 931.12
2159: finished :operator-arglist 
params: "([this x y])"
[---Sent---] 931.19
(:emacs-rex (swank:operator-arglist "get-point" "image-processing.image") "image-processing.image" t 2160)

[-Received-] 931.19
(:return (:ok "([this x y])") 2160)
[Actionlist] 931.19
2160: finished :operator-arglist 
params: "([this x y])"
[---Sent---] 931.42
(:emacs-rex (swank:operator-arglist "let" "image-processing.image") "image-processing.image" t 2161)

[-Received-] 931.42
(:return (:ok "([bindings & body])") 2161)
[Actionlist] 931.42
2161: finished :operator-arglist 
params: "([bindings & body])"
[---Sent---] 931.51
(:emacs-rex (swank:operator-arglist "let" "image-processing.image") "image-processing.image" t 2162)

[-Received-] 931.51
(:return (:ok "([bindings & body])") 2162)
[Actionlist] 931.51
2162: finished :operator-arglist 
params: "([bindings & body])"
[---Sent---] 931.86
(:emacs-rex (swank:operator-arglist "get-point" "image-processing.image") "image-processing.image" t 2163)

[-Received-] 931.87
(:return (:ok "([this x y])") 2163)
[Actionlist] 931.87
2163: finished :operator-arglist 
params: "([this x y])"
[---Sent---] 931.94
(:emacs-rex (swank:operator-arglist "get-point" "image-processing.image") "image-processing.image" t 2164)

[-Received-] 931.94
(:return (:ok "([this x y])") 2164)
[Actionlist] 931.94
2164: finished :operator-arglist 
params: "([this x y])"
[---Sent---] 932.01
(:emacs-rex (swank:operator-arglist "get-point" "image-processing.image") "image-processing.image" t 2165)

[-Received-] 932.01
(:return (:ok "([this x y])") 2165)
[Actionlist] 932.01
2165: finished :operator-arglist 
params: "([this x y])"
[---Sent---] 932.27
(:emacs-rex (swank:compile-file-for-emacs "/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj" t) "image-processing.core" t 2166)

[-Received-] 932.28
(:return (:ok (:compilation-result ((:message "java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)" :severity :error :location (:location (:file "/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj") (:line 77) nil) :references nil :short-message "java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)") (:message "java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points" :severity :error :location (:error "No error location available") :references nil :short-message "java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points")) nil 0.265608216)) 2166)
[Actionlist] 932.29
2166: finished :compile-file-for-emacs 
params: [':compilation-result', [[':message', '"java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)"', ':severity', ':error', ':location', [':location', [':file', '"/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj"'], [':line', '77'], 'nil'], ':references', 'nil', ':short-message', '"java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)"'], [':message', '"java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points"', ':severity', ':error', ':location', [':error', '"No error location available"'], ':references', 'nil', ':short-message', '"java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points"']], 'nil', '0.265608216']
{'filename':'/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj','lnum':'77','col':'1','text':'java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)'}
[---Sent---] 932.5
(:emacs-rex (swank:compile-file-for-emacs "/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj" t) "image-processing.core" t 2167)

[-Received-] 932.51
(:return (:ok (:compilation-result ((:message "java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)" :severity :error :location (:location (:file "/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj") (:line 77) nil) :references nil :short-message "java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)") (:message "java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points" :severity :error :location (:error "No error location available") :references nil :short-message "java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points")) nil 0.253309787)) 2167)
[Actionlist] 932.51
2167: finished :compile-file-for-emacs 
params: [':compilation-result', [[':message', '"java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)"', ':severity', ':error', ':location', [':location', [':file', '"/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj"'], [':line', '77'], 'nil'], ':references', 'nil', ':short-message', '"java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)"'], [':message', '"java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points"', ':severity', ':error', ':location', [':error', '"No error location available"'], ':references', 'nil', ':short-message', '"java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points"']], 'nil', '0.253309787']
{'filename':'/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj','lnum':'77','col':'1','text':'java.lang.IllegalArgumentException: No single method: get_point of interface: image_processing.image.Points found for function: get-point of protocol: Points, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)'}
[---Sent---] 933.03
(:emacs-rex (swank:operator-arglist "doseq" "image-processing.core") "image-processing.core" t 2168)

[-Received-] 933.03
(:return (:ok "([seq-exprs & body])") 2168)
[Actionlist] 933.03
2168: finished :operator-arglist 
params: "([seq-exprs & body])"
[---Sent---] 933.19
(:emacs-rex (swank:operator-arglist "get-point" "image-processing.core") "image-processing.core" t 2169)

[-Received-] 933.19
(:return (:ok "([this x y])") 2169)
[Actionlist] 933.19
2169: finished :operator-arglist 
params: "([this x y])"
[---Sent---] 933.23
(:emacs-rex (swank:operator-arglist "get-point" "image-processing.core") "image-processing.core" t 2170)

[-Received-] 933.24
(:return (:ok "([this x y])") 2170)
[Actionlist] 933.24
2170: finished :operator-arglist 
params: "([this x y])"
[---Sent---] 933.34
(:emacs-rex (swank:compile-file-for-emacs "/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj" t) "image-processing.core" t 2171)

[-Received-] 933.35
(:return (:ok (:compilation-result ((:message "java.lang.RuntimeException: Unable to resolve symbol: coord in this context, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)" :severity :error :location (:location (:file "/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj") (:line 77) nil) :references nil :short-message "java.lang.RuntimeException: Unable to resolve symbol: coord in this context, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)") (:message "java.lang.RuntimeException: Unable to resolve symbol: coord in this context" :severity :error :location (:error "No error location available") :references nil :short-message "java.lang.RuntimeException: Unable to resolve symbol: coord in this context")) nil 0.352660519)) 2171)
[Actionlist] 933.35
2171: finished :compile-file-for-emacs 
params: [':compilation-result', [[':message', '"java.lang.RuntimeException: Unable to resolve symbol: coord in this context, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)"', ':severity', ':error', ':location', [':location', [':file', '"/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj"'], [':line', '77'], 'nil'], ':references', 'nil', ':short-message', '"java.lang.RuntimeException: Unable to resolve symbol: coord in this context, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)"'], [':message', '"java.lang.RuntimeException: Unable to resolve symbol: coord in this context"', ':severity', ':error', ':location', [':error', '"No error location available"'], ':references', 'nil', ':short-message', '"java.lang.RuntimeException: Unable to resolve symbol: coord in this context"']], 'nil', '0.352660519']
{'filename':'/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj','lnum':'77','col':'1','text':'java.lang.RuntimeException: Unable to resolve symbol: coord in this context, compiling:(/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj:77)'}
[---Sent---] 933.91
(:emacs-rex (swank:operator-arglist "set-argb" "image-processing.core") "image-processing.core" t 2172)

[-Received-] 933.92
(:return (:ok "([img coord argb-color])") 2172)
[Actionlist] 933.92
2172: finished :operator-arglist 
params: "([img coord argb-color])"
[---Sent---] 934.04
(:emacs-rex (swank:compile-file-for-emacs "/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj" t) "image-processing.core" t 2173)

[-Received-] 934.06
(:return (:ok (:compilation-result nil "#'image-processing.core/get-binarized-values" 0.24513527)) 2173)
[Actionlist] 934.06
2173: finished :compile-file-for-emacs 
params: [':compilation-result', 'nil', '"#\'image-processing.core/get-binarized-values"', '0.24513527']
[---Sent---] 934.43
(:emacs-rex (swank:operator-arglist "Euclidian" "image-processing.test.image") "image-processing.test.image" t 2174)

[-Received-] 934.43
(:return (:ok nil) 2174)
[Actionlist] 934.43
2174: finished :operator-arglist 
params: nil
[---Sent---] 934.49
(:emacs-rex (swank:operator-arglist "Euclidian" "image-processing.test.image") "image-processing.test.image" t 2175)

[-Received-] 934.5
(:return (:ok nil) 2175)
[Actionlist] 934.5
2175: finished :operator-arglist 
params: nil
[---Sent---] 934.67
(:emacs-rex (swank:operator-arglist "coord" "image-processing.test.image") "image-processing.test.image" t 2176)

[-Received-] 934.67
(:return (:ok nil) 2176)
[Actionlist] 934.67
2176: finished :operator-arglist 
params: nil
[---Sent---] 934.69
(:emacs-rex (swank:operator-arglist "get-point" "image-processing.test.image") "image-processing.test.image" t 2177)

[-Received-] 934.71
(:return (:ok "([this x y])") 2177)
[Actionlist] 934.71
2177: finished :operator-arglist 
params: "([this x y])"
[---Sent---] 934.71
(:emacs-rex (swank:describe-function "get-point") "image-processing.test.image" t 2178)

[-Received-] 934.71
(:return (:ok "-------------------------
image-processing.image/get-point
([this x y])
  Returns the content of a specific point.
") 2178)
[Actionlist] 934.71
2178: finished :describe-function 
params: "-------------------------
image-processing.image/get-point
([this x y])
  Returns the content of a specific point.
"
[---Sent---] 934.88
(:emacs-rex (swank:operator-arglist "get-point" "image-processing.image") "image-processing.image" t 2179)

[-Received-] 934.88
(:return (:ok "([this x y])") 2179)
[Actionlist] 934.88
2179: finished :operator-arglist 
params: "([this x y])"
[---Sent---] 934.89
(:emacs-rex (swank:describe-function "get-point") "image-processing.image" t 2180)

[-Received-] 934.89
(:return (:ok "-------------------------
image-processing.image/get-point
([this x y])
  Returns the content of a specific point.
") 2180)
[Actionlist] 934.89
2180: finished :describe-function 
params: "-------------------------
image-processing.image/get-point
([this x y])
  Returns the content of a specific point.
"
[---Sent---] 934.96
(:emacs-rex (swank:operator-arglist "let" "image-processing.image") "image-processing.image" t 2181)

[-Received-] 934.96
(:return (:ok "([bindings & body])") 2181)
[Actionlist] 934.96
2181: finished :operator-arglist 
params: "([bindings & body])"
[---Sent---] 934.96
(:emacs-rex (swank:describe-function "let") "image-processing.image" t 2182)

[-Received-] 934.97
(:return (:ok "-------------------------
clojure.core/let
  (let [bindings*] exprs*)
Special Form
  binding => binding-form init-expr

  Evaluates the exprs in a lexical context in which the symbols in
  the binding-forms are bound to their respective init-exprs or parts
  therein.

  Please see http://clojure.org/special_forms#let
") 2182)
[Actionlist] 934.97
2182: finished :describe-function 
params: "-------------------------
clojure.core/let
  (let [bindings*] exprs*)
Special Form
  binding => binding-form init-expr

  Evaluates the exprs in a lexical context in which the symbols in
  the binding-forms are bound to their respective init-exprs or parts
  therein.

  Please see http://clojure.org/special_forms#let
"
[---Sent---] 935.14
(:emacs-rex (swank:operator-arglist "when" "image-processing.image") "image-processing.image" t 2183)

[-Received-] 935.14
(:return (:ok "([test & body])") 2183)
[Actionlist] 935.14
2183: finished :operator-arglist 
params: "([test & body])"
[---Sent---] 935.14
(:emacs-rex (swank:describe-function "when") "image-processing.image" t 2184)

[-Received-] 935.14
(:return (:ok "-------------------------
clojure.core/when
([test & body])
Macro
  Evaluates test. If logical true, evaluates body in an implicit do.
") 2184)
[Actionlist] 935.14
2184: finished :describe-function 
params: "-------------------------
clojure.core/when
([test & body])
Macro
  Evaluates test. If logical true, evaluates body in an implicit do.
"
[---Sent---] 935.22
(:emacs-rex (swank:operator-arglist "get-point" "image-processing.image") "image-processing.image" t 2185)

[-Received-] 935.22
(:return (:ok "([this x y])") 2185)
[Actionlist] 935.22
2185: finished :operator-arglist 
params: "([this x y])"
[---Sent---] 935.22
(:emacs-rex (swank:describe-function "get-point") "image-processing.image" t 2186)

[-Received-] 935.22
(:return (:ok "-------------------------
image-processing.image/get-point
([this x y])
  Returns the content of a specific point.
") 2186)
[Actionlist] 935.23
2186: finished :describe-function 
params: "-------------------------
image-processing.image/get-point
([this x y])
  Returns the content of a specific point.
"
[---Sent---] 935.31
(:emacs-rex (swank:operator-arglist "coord" "image-processing.image") "image-processing.image" t 2187)

[-Received-] 935.31
(:return (:ok nil) 2187)
[Actionlist] 935.31
2187: finished :operator-arglist 
params: nil
[---Sent---] 935.92
(:emacs-rex (swank:operator-arglist "))))))" "image-processing.image") "image-processing.image" t 2188)

[---Sent---] 937.96
(:emacs-rex (swank:operator-arglist "img" "image-processing.image") "image-processing.image" t 2189)

[---Sent---] 961.84
(:emacs-rex (swank:connection-info) nil t 2190)

[-Received-] 961.92
(:indentation-update (("dothread-keeping-clj" . 1) ("dothread-keeping" . 1) ("dothread" . 0) ("binding-map" . 1) ("print-length-loop" . 1) ("with-pretty-writer" . 1) ("with-pprint-dispatch" . 1) ("with-connection" . 1) ("with-bindings" . 0) ("with-emacs-package" . 0) ("dothread-swank" . 0) ("with-read-line-support" . 0) ("with-package-tracking" . 0) ("doseq" . 1) ("letfn" . 1) ("cond" . 0) ("with-open" . 1) ("sync" . 1) ("let" . 1) ("dotimes" . 1) ("with-in-str" . 1) ("loop" . 1) ("with-out-str" . 0) ("when-not" . 1) ("with-loading-context" . 0) ("future" . 0) ("with-redefs" . 1) ("when-first" . 1) ("comment" . 0) ("condp" . 2) ("with-local-vars" . 1) ("with-bindings" . 1) ("when-let" . 1) ("while" . 1) ("case" . 1) ("locking" . 1) ("delay" . 0) ("io!" . 0) ("lazy-seq" . 0) ("when" . 1) ("binding" . 1) ("defslimefn" . defun) ("returning" . 1) ("continuously" . 0) ("failing-gracefully" . 0)))
[-Received-] 961.94
(:return (:ok (:pid "22366" :style :spawn :lisp-implementation (:type "Clojure" :name "clojure" :version "1.3.0") :package (:name "user" :prompt "user") :version "20100404")) 2190)
[Actionlist] 961.94
2190: finished :connection-info 
params: [':pid', '"22366"', ':style', ':spawn', ':lisp-implementation', [':type', '"Clojure"', ':name', '"clojure"', ':version', '"1.3.0"'], ':package', [':name', '"user"', ':prompt', '"user"'], ':version', '"20100404"']
 Package:user Prompt:user
[---Sent---] 962.0
(:emacs-rex (swank:create-repl nil) "image-processing.core" t 2191)

[-Received-] 962.02
(:indentation-update (("with-bindings" . 0)))
[-Received-] 962.02
(:return (:ok ("user" "user")) 2191)
[Actionlist] 962.02
2191: finished :create-repl 
params: ['"user"', '"user"']
[---Sent---] 962.02
(:emacs-rex (swank:swank-require 'swank-fuzzy) nil t 2192)

[---Sent---] 962.07
(:emacs-rex (swank:listener-eval "(use '[clojure.repl :only (source apropos dir pst doc find-doc)])
(use '[clojure.java.javadoc :only (javadoc)])
(use '[clojure.pprint :only (pp pprint)])
") "image-processing.core" :repl-thread 2193)

[---Sent---] 962.14
(:emacs-rex (swank:listener-eval "(ns image-processing.core
    (:use 
      [image-processing.image] 
      [image-processing.basic-math :only (square mean)])
    (:import
      (java.lang Math)
      (javax.imageio ImageIO)
      (java.io File)
      (java.awt.image BufferedImage)
      [image_processing.image Image]))
") "user" :repl-thread 2194)

[-Received-] 962.21
(:write-string "nil
" :repl-result)
[-Received-] 962.35
(:indentation-update (("with-timeout" . 1) ("with-bindings" . 1)))
[-Received-] 962.35
(:return (:ok nil) 2193)
[Actionlist] 962.35
2192: pending  :swank-require 
2193: finished :listener-eval 
2194: pending  :listener-eval 
params: nil
[-Received-] 962.35
(:indentation-update (("with-timeout" . 1) ("with-bindings" . 1)))
[-Received-] 962.35
(:return (:ok nil) 2192)
[Actionlist] 962.35
2192: finished :swank-require 
2193: finished :listener-eval 
2194: pending  :listener-eval 
params: nil
[-Received-] 962.46
(:new-package "image-processing.core" "image-processing.core")
[-Received-] 962.47
(:debug 1 1 ("Too few arguments to if" "  [Thrown class java.lang.RuntimeException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "              Util.java:156 clojure.lang.Util.runtimeException" (:restartable nil)) (1 "         Compiler.java:2590 clojure.lang.Compiler$IfExpr$Parser.parse" (:restartable nil)) (2 "         Compiler.java:6409 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (3 "         Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil)) (4 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil)) (5 "         Compiler.java:5572 clojure.lang.Compiler$BodyExpr$Parser.parse" (:restartable nil)) (6 "         Compiler.java:7759 clojure.lang.Compiler$NewInstanceMethod.parse" (:restartable nil)) (7 "         Compiler.java:7296 clojure.lang.Compiler$NewInstanceExpr.build" (:restartable nil)) (8 "         Compiler.java:7178 clojure.lang.Compiler$NewInstanceExpr$DeftypeParser.parse" (:restartable nil)) (9 "         Compiler.java:6409 clojure.lang.Compiler.analyzeSeq" (:restartable nil))) (nil))
[-Received-] 962.47
(:debug-activate 1 1 nil)
[---Sent---] 963.04
(:emacs-rex (swank:throw-to-toplevel) nil 1 2195)

[-Received-] 963.04
(:return (:abort) 2195)
[Actionlist] 963.04
2194: pending  :listener-eval 
2195: finished :throw-to-toplevel 
[-Received-] 963.17
(:debug-return 1 1 nil)
[-Received-] 963.17
(:return (:abort) 2194)
[Actionlist] 963.17
2194: finished :listener-eval 
[---Sent---] 963.51
(:emacs-rex (swank:operator-arglist "reduce" "image-processing.core") "image-processing.core" t 2196)

[-Received-] 963.57
(:indentation-update (("with-bindings" . 0)))
[-Received-] 963.57
(:return (:ok "([f coll] [f val coll])") 2196)
[Actionlist] 963.57
2196: finished :operator-arglist 
params: "([f coll] [f val coll])"
[---Sent---] 963.67
(:emacs-rex (swank:operator-arglist "reduce" "image-processing.core") "image-processing.core" t 2197)

[-Received-] 963.68
(:return (:ok "([f coll] [f val coll])") 2197)
[Actionlist] 963.68
2197: finished :operator-arglist 
params: "([f coll] [f val coll])"
[---Sent---] 963.88
(:emacs-rex (swank:operator-arglist "1" "image-processing.core") "image-processing.core" t 2198)

[-Received-] 963.88
(:return (:ok nil) 2198)
[Actionlist] 963.88
2198: finished :operator-arglist 
params: nil
[---Sent---] 964.04
(:emacs-rex (swank:operator-arglist "1" "image-processing.core") "image-processing.core" t 2199)

[-Received-] 964.04
(:return (:ok nil) 2199)
[Actionlist] 964.04
2199: finished :operator-arglist 
params: nil
[---Sent---] 964.18
(:emacs-rex (swank:operator-arglist "1" "image-processing.core") "image-processing.core" t 2200)

[-Received-] 964.18
(:return (:ok nil) 2200)
[Actionlist] 964.18
2200: finished :operator-arglist 
params: nil
[---Sent---] 964.32
(:emacs-rex (swank:listener-eval "(reduce conj [] '([1 2] [3 4] [5 6]))
") "image-processing.core" :repl-thread 2201)

[-Received-] 964.4
(:write-string "[[1 2] [3 4] [5 6]]
" :repl-result)
[-Received-] 964.4
(:return (:ok nil) 2201)
[Actionlist] 964.4
2201: finished :listener-eval 
params: nil
[---Sent---] 964.85
(:emacs-rex (swank:operator-arglist ")))" "image-processing.image") "image-processing.image" t 2202)

[-Received-] 964.85
(:return (:ok nil) 2202)
[Actionlist] 964.85
2202: finished :operator-arglist 
params: nil
[---Sent---] 964.91
(:emacs-rex (swank:operator-arglist ")))" "image-processing.image") "image-processing.image" t 2203)

[-Received-] 964.92
(:return (:ok nil) 2203)
[Actionlist] 964.92
2203: finished :operator-arglist 
params: nil
[---Sent---] 964.95
(:emacs-rex (swank:operator-arglist "conj" "image-processing.image") "image-processing.image" t 2204)

[-Received-] 964.95
(:return (:ok "([coll x] [coll x & xs])") 2204)
[Actionlist] 964.95
2204: finished :operator-arglist 
params: "([coll x] [coll x & xs])"
[---Sent---] 964.96
(:emacs-rex (swank:describe-function "conj") "image-processing.image" t 2205)

[-Received-] 964.96
(:return (:ok "-------------------------
clojure.core/conj
([coll x] [coll x & xs])
  conj[oin]. Returns a new collection with the xs
    'added'. (conj nil item) returns (item).  The 'addition' may
    happen at different 'places' depending on the concrete type.
") 2205)
[Actionlist] 964.96
2205: finished :describe-function 
params: "-------------------------
clojure.core/conj
([coll x] [coll x & xs])
  conj[oin]. Returns a new collection with the xs
    'added'. (conj nil item) returns (item).  The 'addition' may
    happen at different 'places' depending on the concrete type.
"
[---Sent---] 965.08
(:emacs-rex (swank:operator-arglist "java.lang.RuntimeException" "image-processing.image") "image-processing.image" t 2206)

[-Received-] 965.08
(:return (:ok nil) 2206)
[Actionlist] 965.08
2206: finished :operator-arglist 
params: nil
[---Sent---] 965.15
(:emacs-rex (swank:operator-arglist "java.lang.RuntimeException" "image-processing.image") "image-processing.image" t 2207)

[-Received-] 965.15
(:return (:ok nil) 2207)
[Actionlist] 965.15
2207: finished :operator-arglist 
params: nil
[---Sent---] 965.48
(:emacs-rex (swank:operator-arglist "points" "image-processing.image") "image-processing.image" t 2208)

[-Received-] 965.48
(:return (:ok nil) 2208)
[Actionlist] 965.48
2208: finished :operator-arglist 
params: nil
[---Sent---] 965.49
(:emacs-rex (swank:operator-arglist "content" "image-processing.image") "image-processing.image" t 2209)

[-Received-] 965.49
(:return (:ok nil) 2209)
[Actionlist] 965.49
2209: finished :operator-arglist 
params: nil
[---Sent---] 965.58
(:emacs-rex (swank:operator-arglist "a" "image-processing.image") "image-processing.image" t 2210)

[-Received-] 965.58
(:return (:ok nil) 2210)
[Actionlist] 965.58
2210: finished :operator-arglist 
params: nil
[---Sent---] 966.15
(:emacs-rex (swank:operator-arglist "let" "image-processing.image") "image-processing.image" t 2211)

[-Received-] 966.15
(:return (:ok "([bindings & body])") 2211)
[Actionlist] 966.15
2211: finished :operator-arglist 
params: "([bindings & body])"
[---Sent---] 967.53
(:emacs-rex (swank:operator-arglist "assoc" "image-processing.image") "image-processing.image" t 2212)

[-Received-] 967.54
(:return (:ok "([map key val] [map key val & kvs])") 2212)
[Actionlist] 967.54
2212: finished :operator-arglist 
params: "([map key val] [map key val & kvs])"
[---Sent---] 967.65
(:emacs-rex (swank:operator-arglist "assoc" "image-processing.image") "image-processing.image" t 2213)

[-Received-] 967.65
(:return (:ok "([map key val] [map key val & kvs])") 2213)
[Actionlist] 967.65
2213: finished :operator-arglist 
params: "([map key val] [map key val & kvs])"
[---Sent---] 967.83
(:emacs-rex (swank:operator-arglist "assoc" "image-processing.image") "image-processing.image" t 2214)

[-Received-] 967.83
(:return (:ok "([map key val] [map key val & kvs])") 2214)
[Actionlist] 967.84
2214: finished :operator-arglist 
params: "([map key val] [map key val & kvs])"
[---Sent---] 968.2
(:emacs-rex (swank:operator-arglist "get" "image-processing.image") "image-processing.image" t 2215)

[-Received-] 968.21
(:return (:ok "([map key] [map key not-found])") 2215)
[Actionlist] 968.21
2215: finished :operator-arglist 
params: "([map key] [map key not-found])"
[---Sent---] 968.52
(:emacs-rex (swank:operator-arglist "get" "image-processing.image") "image-processing.image" t 2216)

[-Received-] 968.52
(:return (:ok "([map key] [map key not-found])") 2216)
[Actionlist] 968.52
2216: finished :operator-arglist 
params: "([map key] [map key not-found])"
[---Sent---] 968.61
(:emacs-rex (swank:operator-arglist "+" "image-processing.image") "image-processing.image" t 2217)

[-Received-] 968.62
(:return (:ok "([] [x] [x y] [x y & more])") 2217)
[Actionlist] 968.62
2217: finished :operator-arglist 
params: "([] [x] [x y] [x y & more])"
[---Sent---] 968.67
(:emacs-rex (swank:operator-arglist "+" "image-processing.image") "image-processing.image" t 2218)

[-Received-] 968.67
(:return (:ok "([] [x] [x y] [x y & more])") 2218)
[Actionlist] 968.67
2218: finished :operator-arglist 
params: "([] [x] [x y] [x y & more])"
[---Sent---] 968.77
(:emacs-rex (swank:operator-arglist "*" "image-processing.image") "image-processing.image" t 2219)

[-Received-] 968.77
(:return (:ok "([] [x] [x y] [x y & more])") 2219)
[Actionlist] 968.77
2219: finished :operator-arglist 
params: "([] [x] [x y] [x y & more])"
[---Sent---] 968.81
(:emacs-rex (swank:operator-arglist "*" "image-processing.image") "image-processing.image" t 2220)

[-Received-] 968.81
(:return (:ok "([] [x] [x y] [x y & more])") 2220)
[Actionlist] 968.81
2220: finished :operator-arglist 
params: "([] [x] [x y] [x y & more])"
[---Sent---] 969.33
(:emacs-rex (swank:operator-arglist "vec-points" "image-processing.image") "image-processing.image" t 2221)

[-Received-] 969.33
(:return (:ok nil) 2221)
[Actionlist] 969.33
2221: finished :operator-arglist 
params: nil
[---Sent---] 969.36
(:emacs-rex (swank:operator-arglist "+" "image-processing.image") "image-processing.image" t 2222)

[-Received-] 969.37
(:return (:ok "([] [x] [x y] [x y & more])") 2222)
[Actionlist] 969.37
2222: finished :operator-arglist 
params: "([] [x] [x y] [x y & more])"
[---Sent---] 969.37
(:emacs-rex (swank:describe-function "+") "image-processing.image" t 2223)

[-Received-] 969.37
(:return (:ok "-------------------------
clojure.core/+
([] [x] [x y] [x y & more])
  Returns the sum of nums. (+) returns 0. Does not auto-promote
  longs, will throw on overflow. See also: +'
") 2223)
[Actionlist] 969.37
2223: finished :describe-function 
params: "-------------------------
clojure.core/+
([] [x] [x y] [x y & more])
  Returns the sum of nums. (+) returns 0. Does not auto-promote
  longs, will throw on overflow. See also: +'
"
[---Sent---] 975.02
(:emacs-rex (swank:operator-arglist "def" "image-processing.core") "image-processing.core" t 2224)

[-Received-] 975.02
(:return (:ok nil) 2224)
[Actionlist] 975.02
2224: finished :operator-arglist 
params: nil
[---Sent---] 975.06
(:emacs-rex (swank:operator-arglist "def" "image-processing.core") "image-processing.core" t 2225)

[-Received-] 975.07
(:return (:ok nil) 2225)
[Actionlist] 975.07
2225: finished :operator-arglist 
params: nil
[---Sent---] 975.18
(:emacs-rex (swank:operator-arglist "reduce" "image-processing.core") "image-processing.core" t 2226)

[-Received-] 975.19
(:return (:ok "([f coll] [f val coll])") 2226)
[Actionlist] 975.19
2226: finished :operator-arglist 
params: "([f coll] [f val coll])"
[---Sent---] 975.27
(:emacs-rex (swank:operator-arglist "reduce" "image-processing.core") "image-processing.core" t 2227)

[-Received-] 975.28
(:return (:ok "([f coll] [f val coll])") 2227)
[Actionlist] 975.28
2227: finished :operator-arglist 
params: "([f coll] [f val coll])"
[---Sent---] 975.44
(:emacs-rex (swank:operator-arglist "range" "image-processing.core") "image-processing.core" t 2228)

[-Received-] 975.46
(:return (:ok "([] [end] [start end] [start end step])") 2228)
[Actionlist] 975.46
2228: finished :operator-arglist 
params: "([] [end] [start end] [start end step])"
[---Sent---] 976.68
(:emacs-rex (swank:operator-arglist "map" "image-processing.core") "image-processing.core" t 2229)

[-Received-] 976.68
(:return (:ok "([f coll] [f c1 c2] [f c1 c2 c3] [f c1 c2 c3 & colls])") 2229)
[Actionlist] 976.68
2229: finished :operator-arglist 
params: "([f coll] [f c1 c2] [f c1 c2 c3] [f c1 c2 c3 & colls])"
[---Sent---] 976.78
(:emacs-rex (swank:operator-arglist "255" "image-processing.core") "image-processing.core" t 2230)

[-Received-] 976.8
(:return (:ok nil) 2230)
[Actionlist] 976.8
2230: finished :operator-arglist 
params: nil
[---Sent---] 976.95
(:emacs-rex (swank:listener-eval "(def z (map inc (range 1000000)))
") "image-processing.core" :repl-thread 2231)

[-Received-] 976.95
(:write-string "#'image-processing.core/z
" :repl-result)
[-Received-] 977.05
(:return (:ok nil) 2231)
[Actionlist] 977.05
2231: finished :listener-eval 
params: nil
[---Sent---] 977.26
(:emacs-rex (swank:operator-arglist "type" "image-processing.core") "image-processing.core" t 2232)

[-Received-] 977.26
(:return (:ok "([x])") 2232)
[Actionlist] 977.26
2232: finished :operator-arglist 
params: "([x])"
[---Sent---] 977.35
(:emacs-rex (swank:listener-eval "(type z) 
") "image-processing.core" :repl-thread 2233)

[-Received-] 977.35
(:write-string "clojure.lang.LazySeq
" :repl-result)
[-Received-] 977.45
(:return (:ok nil) 2233)
[Actionlist] 977.46
2233: finished :listener-eval 
params: nil
[---Sent---] 977.68
(:emacs-rex (swank:operator-arglist "def" "image-processing.core") "image-processing.core" t 2234)

[-Received-] 977.68
(:return (:ok nil) 2234)
[Actionlist] 977.68
2234: finished :operator-arglist 
params: nil
[---Sent---] 977.71
(:emacs-rex (swank:operator-arglist "def" "image-processing.core") "image-processing.core" t 2235)

[-Received-] 977.71
(:return (:ok nil) 2235)
[Actionlist] 977.71
2235: finished :operator-arglist 
params: nil
[---Sent---] 977.8
(:emacs-rex (swank:operator-arglist "vec" "image-processing.core") "image-processing.core" t 2236)

[-Received-] 977.8
(:return (:ok "([coll])") 2236)
[Actionlist] 977.8
2236: finished :operator-arglist 
params: "([coll])"
[---Sent---] 977.92
(:emacs-rex (swank:listener-eval "(def z (vec z)) 
") "image-processing.core" :repl-thread 2237)

[-Received-] 977.99
(:write-string "#'image-processing.core/z
" :repl-result)
[-Received-] 977.99
(:return (:ok nil) 2237)
[Actionlist] 977.99
2237: finished :listener-eval 
params: nil
[---Sent---] 978.19
(:emacs-rex (swank:operator-arglist "type" "image-processing.core") "image-processing.core" t 2238)

[-Received-] 978.19
(:return (:ok "([x])") 2238)
[Actionlist] 978.2
2238: finished :operator-arglist 
params: "([x])"
[---Sent---] 978.29
(:emacs-rex (swank:listener-eval "(type z) 
") "image-processing.core" :repl-thread 2239)

[-Received-] 978.29
(:write-string "clojure.lang.PersistentVector
" :repl-result)
[-Received-] 978.39
(:return (:ok nil) 2239)
[Actionlist] 978.39
2239: finished :listener-eval 
params: nil
[---Sent---] 978.57
(:emacs-rex (swank:operator-arglist "z" "image-processing.core") "image-processing.core" t 2240)

[-Received-] 978.57
(:return (:ok nil) 2240)
[Actionlist] 978.57
2240: finished :operator-arglist 
params: nil
[---Sent---] 978.89
(:emacs-rex (swank:listener-eval "(def z (map inc (range 1000000)))
") "image-processing.core" :repl-thread 2241)

[-Received-] 978.89
(:write-string "#'image-processing.core/z
" :repl-result)
[-Received-] 978.99
(:return (:ok nil) 2241)
[Actionlist] 978.99
2241: finished :listener-eval 
params: nil
[---Sent---] 979.39
(:emacs-rex (swank:listener-eval "(def a (vec z))
") "image-processing.core" :repl-thread 2242)

[-Received-] 979.47
(:write-string "#'image-processing.core/a
" :repl-result)
[-Received-] 979.47
(:return (:ok nil) 2242)
[Actionlist] 979.47
2242: finished :listener-eval 
params: nil
[---Sent---] 979.99
(:emacs-rex (swank:listener-eval "(def b (list z))
") "image-processing.core" :repl-thread 2243)

[-Received-] 980.06
(:write-string "#'image-processing.core/b
" :repl-result)
[-Received-] 980.06
(:return (:ok nil) 2243)
[Actionlist] 980.06
2243: finished :listener-eval 
params: nil
[---Sent---] 980.33
(:emacs-rex (swank:operator-arglist "time" "image-processing.core") "image-processing.core" t 2244)

[-Received-] 980.33
(:return (:ok "([expr])") 2244)
[Actionlist] 980.33
2244: finished :operator-arglist 
params: "([expr])"
[---Sent---] 980.61
(:emacs-rex (swank:operator-arglist "type" "image-processing.core") "image-processing.core" t 2245)

[-Received-] 980.61
(:return (:ok "([x])") 2245)
[Actionlist] 980.61
2245: finished :operator-arglist 
params: "([x])"
[---Sent---] 980.71
(:emacs-rex (swank:listener-eval "(type b)
") "image-processing.core" :repl-thread 2246)

[-Received-] 980.71
(:write-string "clojure.lang.PersistentList
" :repl-result)
[-Received-] 980.71
(:return (:ok nil) 2246)
[Actionlist] 980.71
2246: finished :listener-eval 
params: nil
[---Sent---] 980.94
(:emacs-rex (swank:operator-arglist "time" "image-processing.core") "image-processing.core" t 2247)

[-Received-] 980.95
(:return (:ok "([expr])") 2247)
[Actionlist] 980.95
2247: finished :operator-arglist 
params: "([expr])"
[---Sent---] 981.08
(:emacs-rex (swank:operator-arglist "get" "image-processing.core") "image-processing.core" t 2248)

[-Received-] 981.08
(:return (:ok "([map key] [map key not-found])") 2248)
[Actionlist] 981.08
2248: finished :operator-arglist 
params: "([map key] [map key not-found])"
[---Sent---] 981.17
(:emacs-rex (swank:operator-arglist "get" "image-processing.core") "image-processing.core" t 2249)

[-Received-] 981.17
(:return (:ok "([map key] [map key not-found])") 2249)
[Actionlist] 981.18
2249: finished :operator-arglist 
params: "([map key] [map key not-found])"
[---Sent---] 981.41
(:emacs-rex (swank:listener-eval "(time (get a 10000))
") "image-processing.core" :repl-thread 2250)

[-Received-] 981.48
(:write-string "\"Elapsed time: 0.138874 msecs\"
" nil)
[-Received-] 981.48
(:write-string "10001
" :repl-result)
[-Received-] 981.48
(:return (:ok nil) 2250)
[Actionlist] 981.48
2250: finished :listener-eval 
params: nil
[---Sent---] 982.2
(:emacs-rex (swank:listener-eval "(time (get b 10000))
") "image-processing.core" :repl-thread 2251)

[-Received-] 982.27
(:write-string "\"Elapsed time: 0.14164 msecs\"
" nil)
[-Received-] 982.27
(:write-string "nil
" :repl-result)
[-Received-] 982.28
(:return (:ok nil) 2251)
[Actionlist] 982.28
2251: finished :listener-eval 
params: nil
[---Sent---] 982.53
(:emacs-rex (swank:listener-eval "(time (get a 10000))
") "image-processing.core" :repl-thread 2252)

[-Received-] 982.61
(:write-string "\"Elapsed time: 0.131625 msecs\"
" nil)
[-Received-] 982.61
(:write-string "10001
" :repl-result)
[-Received-] 982.61
(:return (:ok nil) 2252)
[Actionlist] 982.61
2252: finished :listener-eval 
params: nil
[---Sent---] 982.85
(:emacs-rex (swank:listener-eval "(time (get b 10000))
") "image-processing.core" :repl-thread 2253)

[-Received-] 982.86
(:write-string "\"Elapsed time: 0.135164 msecs\"
" nil)
[-Received-] 982.97
(:write-string "nil
" :repl-result)
[-Received-] 982.97
(:return (:ok nil) 2253)
[Actionlist] 982.97
2253: finished :listener-eval 
params: nil
[---Sent---] 983.26
(:emacs-rex (swank:listener-eval "(time (get b 10000))
") "image-processing.core" :repl-thread 2254)

[-Received-] 983.26
(:write-string "\"Elapsed time: 0.150542 msecs\"
" nil)
[-Received-] 983.37
(:write-string "nil
" :repl-result)
[-Received-] 983.38
(:return (:ok nil) 2254)
[Actionlist] 983.38
2254: finished :listener-eval 
params: nil
[---Sent---] 983.59
(:emacs-rex (swank:listener-eval "(time (get a 10000))
") "image-processing.core" :repl-thread 2255)

[-Received-] 983.59
(:write-string "\"Elapsed time: 0.11964 msecs\"
" nil)
[-Received-] 983.7
(:write-string "10001
" :repl-result)
[-Received-] 983.71
(:return (:ok nil) 2255)
[Actionlist] 983.71
2255: finished :listener-eval 
params: nil
[---Sent---] 983.97
(:emacs-rex (swank:listener-eval "(time (get a 100000))
") "image-processing.core" :repl-thread 2256)

[-Received-] 983.97
(:write-string "\"Elapsed time: 0.1158 msecs\"
" nil)
[-Received-] 984.09
(:write-string "100001
" :repl-result)
[-Received-] 984.09
(:return (:ok nil) 2256)
[Actionlist] 984.09
2256: finished :listener-eval 
params: nil
[---Sent---] 984.41
(:emacs-rex (swank:listener-eval "(time (get b 100000))
") "image-processing.core" :repl-thread 2257)

[-Received-] 984.48
(:write-string "\"Elapsed time: 0.084818 msecs\"
" nil)
[-Received-] 984.48
(:write-string "nil
" :repl-result)
[-Received-] 984.48
(:return (:ok nil) 2257)
[Actionlist] 984.48
2257: finished :listener-eval 
params: nil
[---Sent---] 985.79
(:emacs-rex (swank:operator-arglist "threshold" "image-processing.core") "image-processing.core" t 2258)

[-Received-] 985.79
(:return (:ok nil) 2258)
[Actionlist] 985.79
2258: finished :operator-arglist 
params: nil
[---Sent---] 986.0
(:emacs-rex (swank:operator-arglist "pixel=BLACK" "image-processing.core") "image-processing.core" t 2259)

[-Received-] 986.0
(:return (:ok nil) 2259)
[Actionlist] 986.0
2259: finished :operator-arglist 
params: nil
[---Sent---] 987.33
(:emacs-rex (swank:operator-arglist "map" "image-processing.image") "image-processing.image" t 2260)

[-Received-] 987.33
(:return (:ok "([f coll] [f c1 c2] [f c1 c2 c3] [f c1 c2 c3 & colls])") 2260)
[Actionlist] 987.33
2260: finished :operator-arglist 
params: "([f coll] [f c1 c2] [f c1 c2 c3] [f c1 c2 c3 & colls])"
[---Sent---] 987.33
(:emacs-rex (swank:describe-function "map") "image-processing.image" t 2261)

[-Received-] 987.33
(:return (:ok "-------------------------
clojure.core/map
([f coll] [f c1 c2] [f c1 c2 c3] [f c1 c2 c3 & colls])
  Returns a lazy sequence consisting of the result of applying f to the
  set of first items of each coll, followed by applying f to the set
  of second items in each coll, until any one of the colls is
  exhausted.  Any remaining items in other colls are ignored. Function
  f should accept number-of-colls arguments.
") 2261)
[Actionlist] 987.33
2261: finished :describe-function 
params: "-------------------------
clojure.core/map
([f coll] [f c1 c2] [f c1 c2 c3] [f c1 c2 c3 & colls])
  Returns a lazy sequence consisting of the result of applying f to the
  set of first items of each coll, followed by applying f to the set
  of second items in each coll, until any one of the colls is
  exhausted.  Any remaining items in other colls are ignored. Function
  f should accept number-of-colls arguments.
"
[---Sent---] 988.02
(:emacs-rex (swank:operator-arglist "defn" "image-processing.image") "image-processing.image" t 2262)

[-Received-] 988.02
(:return (:ok "([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])") 2262)
[Actionlist] 988.02
2262: finished :operator-arglist 
params: "([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])"
[---Sent---] 988.02
(:emacs-rex (swank:describe-function "defn") "image-processing.image" t 2263)

[-Received-] 988.02
(:return (:ok "-------------------------
clojure.core/defn
([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])
Macro
  Same as (def name (fn [params* ] exprs*)) or (def
    name (fn ([params* ] exprs*)+)) with any doc-string or attrs added
    to the var metadata
") 2263)
[Actionlist] 988.02
2263: finished :describe-function 
params: "-------------------------
clojure.core/defn
([name doc-string? attr-map? [params*] body] [name doc-string? attr-map? ([params*] body) + attr-map?])
Macro
  Same as (def name (fn [params* ] exprs*)) or (def
    name (fn ([params* ] exprs*)+)) with any doc-string or attrs added
    to the var metadata
"
[---Sent---] 988.03
(:emacs-rex (swank:operator-arglist "clojure" "image-processing.image") "image-processing.image" t 2264)

[-Received-] 988.03
(:return (:ok nil) 2264)
[Actionlist] 988.03
2264: finished :operator-arglist 
params: nil
[---Sent---] 989.31
(:emacs-rex (swank:listener-eval "(time (get b 100000))
") "image-processing.image" :repl-thread 2265)

[-Received-] 989.35
(:debug 1 1 ("Unable to resolve symbol: b in this context" "  [Thrown class java.lang.RuntimeException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "              Util.java:156 clojure.lang.Util.runtimeException" (:restartable nil)) (1 "         Compiler.java:6720 clojure.lang.Compiler.resolveIn" (:restartable nil)) (2 "         Compiler.java:6664 clojure.lang.Compiler.resolve" (:restartable nil)) (3 "         Compiler.java:6625 clojure.lang.Compiler.analyzeSymbol" (:restartable nil)) (4 "         Compiler.java:6198 clojure.lang.Compiler.analyze" (:restartable nil)) (5 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil)) (6 "          Compiler.java:908 clojure.lang.Compiler$HostExpr$Parser.parse" (:restartable nil)) (7 "         Compiler.java:6409 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (8 "         Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil)) (9 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil))) (nil))
[-Received-] 989.36
(:debug-activate 1 1 nil)
[---Sent---] 989.56
(:emacs-rex (swank:throw-to-toplevel) nil 1 2266)

[-Received-] 989.56
(:return (:abort) 2266)
[Actionlist] 989.56
2265: pending  :listener-eval 
2266: finished :throw-to-toplevel 
[-Received-] 989.56
(:debug-return 1 1 nil)
[-Received-] 989.56
(:return (:abort) 2265)
[Actionlist] 989.56
2265: finished :listener-eval 
2266: finished :throw-to-toplevel 
[---Sent---] 989.91
(:emacs-rex (swank:operator-arglist "pixels" "image-processing.core") "image-processing.core" t 2267)

[-Received-] 989.91
(:return (:ok nil) 2267)
[Actionlist] 989.91
2267: finished :operator-arglist 
params: nil
[---Sent---] 989.92
(:emacs-rex (swank:operator-arglist "then" "image-processing.core") "image-processing.core" t 2268)

[-Received-] 989.93
(:return (:ok nil) 2268)
[Actionlist] 989.93
2268: finished :operator-arglist 
params: nil
[---Sent---] 990.0
(:emacs-rex (swank:operator-arglist "threshold" "image-processing.core") "image-processing.core" t 2269)

[-Received-] 990.0
(:return (:ok nil) 2269)
[Actionlist] 990.01
2269: finished :operator-arglist 
params: nil
[---Sent---] 990.38
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 2270)

[-Received-] 990.38
(:return (:ok nil) 2270)
[Actionlist] 990.38
2270: finished :operator-arglist 
params: nil
[---Sent---] 990.55
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 2271)

[-Received-] 990.55
(:return (:ok nil) 2271)
[Actionlist] 990.55
2271: finished :operator-arglist 
params: nil
[---Sent---] 990.71
(:emacs-rex (swank:operator-arglist "Returns" "image-processing.core") "image-processing.core" t 2272)

[-Received-] 990.71
(:return (:ok nil) 2272)
[Actionlist] 990.71
2272: finished :operator-arglist 
params: nil
[---Sent---] 991.03
(:emacs-rex (swank:operator-arglist ":points" "image-processing.core") "image-processing.core" t 2273)

[-Received-] 991.03
(:return (:ok "([map])") 2273)
[Actionlist] 991.03
2273: finished :operator-arglist 
params: "([map])"
[---Sent---] 991.64
(:emacs-rex (swank:operator-arglist "instance?" "image-processing.core") "image-processing.core" t 2274)

[-Received-] 991.65
(:return (:ok "([c x])") 2274)
[Actionlist] 991.65
2274: finished :operator-arglist 
params: "([c x])"
[---Sent---] 991.92
(:emacs-rex (swank:operator-arglist "Image" "image-processing.core") "image-processing.core" t 2275)

[-Received-] 991.92
(:return (:ok nil) 2275)
[Actionlist] 991.92
2275: finished :operator-arglist 
params: nil
[---Sent---] 992.04
(:emacs-rex (swank:operator-arglist "Image" "image-processing.core") "image-processing.core" t 2276)

[-Received-] 992.05
(:return (:ok nil) 2276)
[Actionlist] 992.05
2276: finished :operator-arglist 
params: nil
[---Sent---] 992.1
(:emacs-rex (swank:listener-eval "(Image. 0 0)
") "image-processing.core" :repl-thread 2277)

[-Received-] 992.1
(:debug 1 1 ("Unable to resolve classname: Image" "  [Thrown class java.lang.IllegalArgumentException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "         Compiler.java:2430 clojure.lang.Compiler$NewExpr$Parser.parse" (:restartable nil)) (1 "         Compiler.java:6409 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (2 "         Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil)) (3 "         Compiler.java:6177 clojure.lang.Compiler.analyze" (:restartable nil)) (4 "         Compiler.java:5572 clojure.lang.Compiler$BodyExpr$Parser.parse" (:restartable nil)) (5 "         Compiler.java:5008 clojure.lang.Compiler$FnMethod.parse" (:restartable nil)) (6 "         Compiler.java:3629 clojure.lang.Compiler$FnExpr.parse" (:restartable nil)) (7 "         Compiler.java:6407 clojure.lang.Compiler.analyzeSeq" (:restartable nil)) (8 "         Compiler.java:6216 clojure.lang.Compiler.analyze" (:restartable nil)) (9 "         Compiler.java:6462 clojure.lang.Compiler.eval" (:restartable nil))) (nil))
[-Received-] 992.11
(:debug-activate 1 1 nil)
[---Sent---] 992.22
(:emacs-rex (swank:throw-to-toplevel) nil 1 2278)

[-Received-] 992.22
(:return (:abort) 2278)
[Actionlist] 992.22
2277: pending  :listener-eval 
2278: finished :throw-to-toplevel 
[-Received-] 992.22
(:debug-return 1 1 nil)
[-Received-] 992.22
(:return (:abort) 2277)
[Actionlist] 992.22
2277: finished :listener-eval 
2278: finished :throw-to-toplevel 
[---Sent---] 992.42
(:emacs-rex (swank:listener-eval "(ns image-processing.core
    (:use 
      [image-processing.image] 
      [image-processing.basic-math :only (square mean)])
    (:import
      (java.lang Math)
      (javax.imageio ImageIO)
      (java.io File)
      (java.awt.image BufferedImage)
      [image_processing.image Image]))
") "image-processing.core" :repl-thread 2279)

[-Received-] 992.46
(:write-string "image_processing.image.Image
" :repl-result)
[-Received-] 992.46
(:indentation-update (("with-bindings" . 1)))
[-Received-] 992.46
(:return (:ok nil) 2279)
[Actionlist] 992.46
2279: finished :listener-eval 
params: nil
[---Sent---] 992.69
(:emacs-rex (swank:operator-arglist "type" "image-processing.core") "image-processing.core" t 2280)

[-Received-] 992.7
(:indentation-update (("with-bindings" . 0)))
[-Received-] 992.71
(:return (:ok "([x])") 2280)
[Actionlist] 992.71
2280: finished :operator-arglist 
params: "([x])"
[---Sent---] 992.82
(:emacs-rex (swank:operator-arglist "Image" "image-processing.core") "image-processing.core" t 2281)

[-Received-] 992.82
(:indentation-update (("with-bindings" . 1)))
[-Received-] 992.82
(:return (:ok nil) 2281)
[Actionlist] 992.82
2281: finished :operator-arglist 
params: nil
[---Sent---] 992.89
(:emacs-rex (swank:operator-arglist "Image" "image-processing.core") "image-processing.core" t 2282)

[-Received-] 992.9
(:indentation-update (("with-bindings" . 0)))
[-Received-] 992.9
(:return (:ok nil) 2282)
[Actionlist] 992.9
2282: finished :operator-arglist 
params: nil
[---Sent---] 992.95
(:emacs-rex (swank:listener-eval "(type (Image. 0 0))
") "image-processing.core" :repl-thread 2283)

[-Received-] 992.95
(:write-string "image_processing.image.Image
" :repl-result)
[-Received-] 993.02
(:indentation-update (("with-bindings" . 1)))
[-Received-] 993.02
(:return (:ok nil) 2283)
[Actionlist] 993.02
2283: finished :listener-eval 
params: nil
[---Sent---] 993.38
(:emacs-rex (swank:operator-arglist "instance?" "image-processing.core") "image-processing.core" t 2284)

[-Received-] 993.38
(:indentation-update (("with-bindings" . 0)))
[-Received-] 993.38
(:return (:ok "([c x])") 2284)
[Actionlist] 993.38
2284: finished :operator-arglist 
params: "([c x])"
[---Sent---] 993.85
(:emacs-rex (swank:operator-arglist "instance?" "image-processing.core") "image-processing.core" t 2285)

[-Received-] 993.86
(:indentation-update (("with-bindings" . 1)))
[-Received-] 993.86
(:return (:ok "([c x])") 2285)
[Actionlist] 993.86
2285: finished :operator-arglist 
params: "([c x])"
[---Sent---] 994.0
(:emacs-rex (swank:operator-arglist "Image" "image-processing.core") "image-processing.core" t 2286)

[-Received-] 994.0
(:indentation-update (("with-bindings" . 0)))
[-Received-] 994.0
(:return (:ok nil) 2286)
[Actionlist] 994.0
2286: finished :operator-arglist 
params: nil
[---Sent---] 994.08
(:emacs-rex (swank:listener-eval "(instance? image_processing.image.Image (Image. 0 0)) 
") "image-processing.core" :repl-thread 2287)

[-Received-] 994.08
(:write-string "true
" :repl-result)
[-Received-] 994.15
(:indentation-update (("with-bindings" . 1)))
[-Received-] 994.15
(:return (:ok nil) 2287)
[Actionlist] 994.15
2287: finished :listener-eval 
params: nil
[---Sent---] 994.45
(:emacs-rex (swank:operator-arglist "instance" "image-processing.image") "image-processing.image" t 2288)

[-Received-] 994.45
(:indentation-update (("with-bindings" . 0)))
[-Received-] 994.45
(:return (:ok nil) 2288)
[Actionlist] 994.46
2288: finished :operator-arglist 
params: nil
[---Sent---] 994.5
(:emacs-rex (swank:operator-arglist "instance?" "image-processing.image") "image-processing.image" t 2289)

[-Received-] 994.51
(:indentation-update (("with-bindings" . 1)))
[-Received-] 994.51
(:return (:ok "([c x])") 2289)
[Actionlist] 994.51
2289: finished :operator-arglist 
params: "([c x])"
[---Sent---] 994.84
(:emacs-rex (swank:operator-arglist "instance?" "image-processing.image") "image-processing.image" t 2290)

[-Received-] 994.85
(:indentation-update (("with-bindings" . 0)))
[-Received-] 994.85
(:return (:ok "([c x])") 2290)
[Actionlist] 994.85
2290: finished :operator-arglist 
params: "([c x])"
[---Sent---] 995.49
(:emacs-rex (swank:operator-arglist ":pre" "image-processing.core") "image-processing.core" t 2291)

[-Received-] 995.52
(:indentation-update (("with-bindings" . 1)))
[-Received-] 995.52
(:return (:ok "([map])") 2291)
[Actionlist] 995.52
2291: finished :operator-arglist 
params: "([map])"
[---Sent---] 995.86
(:emacs-rex (swank:operator-arglist "image" "image-processing.core") "image-processing.core" t 2292)

[-Received-] 995.86
(:indentation-update (("with-bindings" . 0)))
[-Received-] 995.86
(:return (:ok nil) 2292)
[Actionlist] 995.86
2292: finished :operator-arglist 
params: nil
[---Sent---] 995.92
(:emacs-rex (swank:operator-arglist "image?" "image-processing.core") "image-processing.core" t 2293)

[-Received-] 995.92
(:indentation-update (("with-bindings" . 1)))
[-Received-] 995.92
(:return (:ok "([arg])") 2293)
[Actionlist] 995.92
2293: finished :operator-arglist 
params: "([arg])"
[---Sent---] 996.46
(:emacs-rex (swank:operator-arglist "img" "image-processing.core") "image-processing.core" t 2294)

[-Received-] 996.47
(:indentation-update (("with-bindings" . 0)))
[-Received-] 996.48
(:return (:ok nil) 2294)
[Actionlist] 996.48
2294: finished :operator-arglist 
params: nil
[---Sent---] 996.54
(:emacs-rex (swank:operator-arglist "rest" "image-processing.core") "image-processing.core" t 2295)

[-Received-] 996.55
(:indentation-update (("with-bindings" . 1)))
[-Received-] 996.55
(:return (:ok "([coll])") 2295)
[Actionlist] 996.55
2295: finished :operator-arglist 
params: "([coll])"
[---Sent---] 996.55
(:emacs-rex (swank:describe-function "rest") "image-processing.core" t 2296)

[-Received-] 996.55
(:indentation-update (("with-bindings" . 0)))
[-Received-] 996.56
(:return (:ok "-------------------------
clojure.core/rest
([coll])
  Returns a possibly empty seq of the items after the first. Calls seq on its
  argument.
") 2296)
[Actionlist] 996.56
2296: finished :describe-function 
params: "-------------------------
clojure.core/rest
([coll])
  Returns a possibly empty seq of the items after the first. Calls seq on its
  argument.
"
[---Sent---] 996.59
(:emacs-rex (swank:operator-arglist "get-binarized-values" "image-processing.core") "image-processing.core" t 2297)

[-Received-] 996.59
(:indentation-update (("with-bindings" . 1)))
[-Received-] 996.6
(:return (:ok nil) 2297)
[Actionlist] 996.6
2297: finished :operator-arglist 
params: nil
[---Sent---] 996.72
(:emacs-rex (swank:operator-arglist ")]}" "image-processing.core") "image-processing.core" t 2298)

[-Received-] 996.72
(:indentation-update (("with-bindings" . 0)))
[-Received-] 996.72
(:return (:ok nil) 2298)
[Actionlist] 996.72
2298: finished :operator-arglist 
params: nil
[---Sent---] 996.82
(:emacs-rex (swank:operator-arglist ":points" "image-processing.core") "image-processing.core" t 2299)

[-Received-] 996.82
(:indentation-update (("with-bindings" . 1)))
[-Received-] 996.82
(:return (:ok "([map])") 2299)
[Actionlist] 996.82
2299: finished :operator-arglist 
params: "([map])"
[---Sent---] 996.82
(:emacs-rex (swank:describe-function ":points") "image-processing.core" t 2300)

[-Received-] 996.82
(:indentation-update (("with-bindings" . 0)))
[-Received-] 996.83
(:return (:ok nil) 2300)
[Actionlist] 996.83
2300: finished :describe-function 
params: nil
[---Sent---] 997.07
(:emacs-rex (swank:operator-arglist "get-argb" "image-processing.core") "image-processing.core" t 2301)

[-Received-] 997.07
(:indentation-update (("with-bindings" . 1)))
[-Received-] 997.07
(:return (:ok nil) 2301)
[Actionlist] 997.07
2301: finished :operator-arglist 
params: nil
[---Sent---] 997.07
(:emacs-rex (swank:operator-arglist "get-argb" "image-processing.core") "image-processing.core" t 2302)

[-Received-] 997.08
(:indentation-update (("with-bindings" . 0)))
[-Received-] 997.09
(:return (:ok nil) 2302)
[Actionlist] 997.09
2302: finished :operator-arglist 
params: nil
[---Sent---] 997.46
(:emacs-rex (swank:operator-arglist "fn" "image-processing.core") "image-processing.core" t 2303)

[-Received-] 997.46
(:indentation-update (("with-bindings" . 1)))
[-Received-] 997.46
(:return (:ok "([& sigs])") 2303)
[Actionlist] 997.46
2303: finished :operator-arglist 
params: "([& sigs])"
[---Sent---] 998.02
(:emacs-rex (swank:operator-arglist "let" "image-processing.core") "image-processing.core" t 2304)

[-Received-] 998.03
(:indentation-update (("with-bindings" . 0)))
[-Received-] 998.03
(:return (:ok "([bindings & body])") 2304)
[Actionlist] 998.03
2304: finished :operator-arglist 
params: "([bindings & body])"
[---Sent---] 998.54
(:emacs-rex (swank:operator-arglist "let" "image-processing.core") "image-processing.core" t 2305)

[-Received-] 998.55
(:indentation-update (("with-bindings" . 1)))
[-Received-] 998.55
(:return (:ok "([bindings & body])") 2305)
[Actionlist] 998.55
2305: finished :operator-arglist 
params: "([bindings & body])"
[---Sent---] 998.95
(:emacs-rex (swank:operator-arglist "first" "image-processing.core") "image-processing.core" t 2306)

[-Received-] 998.96
(:indentation-update (("with-bindings" . 0)))
[-Received-] 998.96
(:return (:ok "([coll])") 2306)
[Actionlist] 998.96
2306: finished :operator-arglist 
params: "([coll])"
[---Sent---] 999.48
(:emacs-rex (swank:operator-arglist "grayscale" "image-processing.core") "image-processing.core" t 2307)

[-Received-] 999.48
(:indentation-update (("with-bindings" . 1)))
[-Received-] 999.48
(:return (:ok nil) 2307)
[Actionlist] 999.48
2307: finished :operator-arglist 
params: nil
[---Sent---] 999.65
(:emacs-rex (swank:operator-arglist "let" "image-processing.core") "image-processing.core" t 2308)

[-Received-] 999.65
(:indentation-update (("with-bindings" . 0)))
[-Received-] 999.65
(:return (:ok "([bindings & body])") 2308)
[Actionlist] 999.65
2308: finished :operator-arglist 
params: "([bindings & body])"
[---Sent---] 999.83
(:emacs-rex (swank:operator-arglist "let" "image-processing.core") "image-processing.core" t 2309)

[-Received-] 999.83
(:indentation-update (("with-bindings" . 1)))
[-Received-] 999.83
(:return (:ok "([bindings & body])") 2309)
[Actionlist] 999.83
2309: finished :operator-arglist 
params: "([bindings & body])"
[---Sent---] 1000.06
(:emacs-rex (swank:operator-arglist "first" "image-processing.core") "image-processing.core" t 2310)

[-Received-] 1000.06
(:indentation-update (("with-bindings" . 0)))
[-Received-] 1000.06
(:return (:ok "([coll])") 2310)
[Actionlist] 1000.06
2310: finished :operator-arglist 
params: "([coll])"
[---Sent---] 1000.12
(:emacs-rex (swank:operator-arglist "first" "image-processing.core") "image-processing.core" t 2311)

[-Received-] 1000.12
(:indentation-update (("with-bindings" . 1)))
[-Received-] 1000.13
(:return (:ok "([coll])") 2311)
[Actionlist] 1000.13
2311: finished :operator-arglist 
params: "([coll])"
[---Sent---] 1001.07
(:emacs-rex (swank:operator-arglist ":width" "image-processing.core") "image-processing.core" t 2312)

[-Received-] 1001.08
(:indentation-update (("with-bindings" . 0)))
[-Received-] 1001.09
(:return (:ok "([map])") 2312)
[Actionlist] 1001.09
2312: finished :operator-arglist 
params: "([map])"
[---Sent---] 1001.91
(:emacs-rex (swank:listener-eval "(defn get-grayscale-values
  \"Returns a lazy sequence of the grayscale value of the Image's pixels.\"
  #^{:arglists [img]}
  [img]
  {:pre [(image? img)]}
  (Image.  (vec (map #(fn [argb]
                          (let [gv (int (mean (rest argb)))] ; grayscale value
                            [(first argb) gv gv gv]))  
                     (:points img))) 
           (:width img)))
") "image-processing.core" :repl-thread 2313)

[-Received-] 1001.92
(:write-string "#'image-processing.core/get-grayscale-values
" :repl-result)
[-Received-] 1001.92
(:indentation-update (("with-bindings" . 1)))
[-Received-] 1001.92
(:return (:ok nil) 2313)
[Actionlist] 1001.92
2313: finished :listener-eval 
params: nil
[---Sent---] 1002.23
(:emacs-rex (swank:operator-arglist "reduce" "image-processing.core") "image-processing.core" t 2314)

[-Received-] 1002.23
(:indentation-update (("with-bindings" . 0)))
[-Received-] 1002.24
(:return (:ok "([f coll] [f val coll])") 2314)
[Actionlist] 1002.24
2314: finished :operator-arglist 
params: "([f coll] [f val coll])"
[---Sent---] 1002.24
(:emacs-rex (swank:describe-function "reduce") "image-processing.core" t 2315)

[-Received-] 1002.24
(:indentation-update (("with-bindings" . 1)))
[-Received-] 1002.24
(:return (:ok "-------------------------
clojure.core/reduce
([f coll] [f val coll])
  f should be a function of 2 arguments. If val is not supplied,
  returns the result of applying f to the first 2 items in coll, then
  applying f to that result and the 3rd item, etc. If coll contains no
  items, f must accept no arguments as well, and reduce returns the
  result of calling f with no arguments.  If coll has only 1 item, it
  is returned and f is not called.  If val is supplied, returns the
  result of applying f to val and the first item in coll, then
  applying f to that result and the 2nd item, etc. If coll contains no
  items, returns val and f is not called.
") 2315)
[Actionlist] 1002.24
2315: finished :describe-function 
params: "-------------------------
clojure.core/reduce
([f coll] [f val coll])
  f should be a function of 2 arguments. If val is not supplied,
  returns the result of applying f to the first 2 items in coll, then
  applying f to that result and the 3rd item, etc. If coll contains no
  items, f must accept no arguments as well, and reduce returns the
  result of calling f with no arguments.  If coll has only 1 item, it
  is returned and f is not called.  If val is supplied, returns the
  result of applying f to val and the first item in coll, then
  applying f to that result and the 2nd item, etc. If coll contains no
  items, returns val and f is not called.
"
[---Sent---] 1002.29
(:emacs-rex (swank:operator-arglist "reduce" "image-processing.core") "image-processing.core" t 2316)

[-Received-] 1002.29
(:indentation-update (("with-bindings" . 0)))
[-Received-] 1002.29
(:return (:ok "([f coll] [f val coll])") 2316)
[Actionlist] 1002.29
2316: finished :operator-arglist 
params: "([f coll] [f val coll])"
[---Sent---] 1002.29
(:emacs-rex (swank:describe-function "reduce") "image-processing.core" t 2317)

[-Received-] 1002.29
(:indentation-update (("with-bindings" . 1)))
[-Received-] 1002.29
(:return (:ok "-------------------------
clojure.core/reduce
([f coll] [f val coll])
  f should be a function of 2 arguments. If val is not supplied,
  returns the result of applying f to the first 2 items in coll, then
  applying f to that result and the 3rd item, etc. If coll contains no
  items, f must accept no arguments as well, and reduce returns the
  result of calling f with no arguments.  If coll has only 1 item, it
  is returned and f is not called.  If val is supplied, returns the
  result of applying f to val and the first item in coll, then
  applying f to that result and the 2nd item, etc. If coll contains no
  items, returns val and f is not called.
") 2317)
[Actionlist] 1002.29
2317: finished :describe-function 
params: "-------------------------
clojure.core/reduce
([f coll] [f val coll])
  f should be a function of 2 arguments. If val is not supplied,
  returns the result of applying f to the first 2 items in coll, then
  applying f to that result and the 3rd item, etc. If coll contains no
  items, f must accept no arguments as well, and reduce returns the
  result of calling f with no arguments.  If coll has only 1 item, it
  is returned and f is not called.  If val is supplied, returns the
  result of applying f to val and the first item in coll, then
  applying f to that result and the 2nd item, etc. If coll contains no
  items, returns val and f is not called.
"
[---Sent---] 1002.41
(:emacs-rex (swank:operator-arglist "map" "image-processing.core") "image-processing.core" t 2318)

[-Received-] 1002.41
(:indentation-update (("with-bindings" . 0)))
[-Received-] 1002.41
(:return (:ok "([f coll] [f c1 c2] [f c1 c2 c3] [f c1 c2 c3 & colls])") 2318)
[Actionlist] 1002.41
2318: finished :operator-arglist 
params: "([f coll] [f c1 c2] [f c1 c2 c3] [f c1 c2 c3 & colls])"
[---Sent---] 1004.3
(:emacs-rex (swank:operator-arglist "buffered-image" "image-processing.core") "image-processing.core" t 2319)

[-Received-] 1004.31
(:indentation-update (("with-bindings" . 1)))
[-Received-] 1004.31
(:return (:ok nil) 2319)
[Actionlist] 1004.31
2319: finished :operator-arglist 
params: nil
[---Sent---] 1004.38
(:emacs-rex (swank:operator-arglist "get-img-coords" "image-processing.core") "image-processing.core" t 2320)

[-Received-] 1004.38
(:indentation-update (("with-bindings" . 0)))
[-Received-] 1004.38
(:return (:ok nil) 2320)
[Actionlist] 1004.38
2320: finished :operator-arglist 
params: nil
[---Sent---] 1004.4
(:emacs-rex (swank:operator-arglist "buffered-image" "image-processing.core") "image-processing.core" t 2321)

[-Received-] 1004.42
(:indentation-update (("with-bindings" . 1)))
[-Received-] 1004.42
(:return (:ok nil) 2321)
[Actionlist] 1004.42
2321: finished :operator-arglist 
params: nil
[---Sent---] 1004.46
(:emacs-rex (swank:operator-arglist "get-img-coords" "image-processing.core") "image-processing.core" t 2322)

[-Received-] 1004.47
(:indentation-update (("with-bindings" . 0)))
[-Received-] 1004.47
(:return (:ok nil) 2322)
[Actionlist] 1004.47
2322: finished :operator-arglist 
params: nil
[---Sent---] 1004.55
(:emacs-rex (swank:operator-arglist "buffered-image" "image-processing.core") "image-processing.core" t 2323)

[-Received-] 1004.55
(:indentation-update (("with-bindings" . 1)))
[-Received-] 1004.55
(:return (:ok nil) 2323)
[Actionlist] 1004.55
2323: finished :operator-arglist 
params: nil
[---Sent---] 1004.6
(:emacs-rex (swank:operator-arglist "get-argb" "image-processing.core") "image-processing.core" t 2324)

[-Received-] 1004.65
(:indentation-update (("with-bindings" . 0)))
[-Received-] 1004.65
(:return (:ok nil) 2324)
[Actionlist] 1004.65
2324: finished :operator-arglist 
params: nil
[---Sent---] 1004.87
(:emacs-rex (swank:operator-arglist "get-img-coords" "image-processing.core") "image-processing.core" t 2325)

[-Received-] 1004.89
(:indentation-update (("with-bindings" . 1)))
[-Received-] 1004.89
(:return (:ok nil) 2325)
[Actionlist] 1004.89
2325: finished :operator-arglist 
params: nil
[---Sent---] 1005.41
(:emacs-rex (swank:listener-eval "(ns image-processing.core
    (:use 
      [image-processing.image] 
      [image-processing.basic-math :only (square mean)])
    (:import
      (java.lang Math)
      (javax.imageio ImageIO)
      (java.io File)
      (java.awt.image BufferedImage)
      [image_processing.image Image]))


(defn intcolor-to-argb
  \"Convert the 32 bits color to ARGB. It returns a vector [A R G B].\"
  [color]
  [(bit-and (bit-shift-right color 24) 0xff)
   (bit-and (bit-shift-right color 16) 0xff)
   (bit-and (bit-shift-right color 8) 0xff)
   (bit-and color 0xff)])


(defn get-argb
  \"Get the [a r g b] color of a pixel [x y] of IMG.\"
  [img coord]
  (let [[x y] coord]
    (intcolor-to-argb (.getRGB img x y))))


(defn set-argb
  \"Set the ARGB color of a pixel COORD of the image IMG.\"
  #^{:arglists [img coord argb-color]}
  [img coord argb-color]
  (let [[x y] coord
        [a r g b] argb-color
        int-color (bit-or (bit-shift-left a 24)
                          (bit-or (bit-shift-left r 16)
                                  (bit-or (bit-shift-left g 8) b)))]
    (.setRGB img x y int-color)))


(defn get-img-coords
  \"Returns a sequence of all coordinates of the image.\"
  #^{:arglists [img]}
  [img]
  (for [y (range (.getHeight img))
        x (range (.getWidth img))]
       [x y]))


(defn get-rgb-only
  \"Returns a vec with [r g b] if COLOR is [a r g b], or returns COLOR if it already is
      just [r g b].\"
  #^{:arglists [color]}
  [color]
  (if (> (count color) 3) (subvec color 1) color))


(defn convert-buffImg-to-image
  \"Returns a Image from a BufferedImage.\"
  #^{:arglists [buffered-image]}
  [buffered-image]
  (let [argb-values (map #(get-argb buffered-image %)
                         (get-img-coords buffered-image))]
    (Image. argb-values (.getWidth buffered-image))))


(defn convert-image-to-buffImg
  \"Returns a BufferedImage from a Image.\"
  #^{:arglists [img]}
  [img]
  (let [height (/ (count (:points img)) (:width img))
        buff-img (BufferedImage. (:width img) 
                                 height
                                 BufferedImage/TYPE_INT_ARGB)]
    (doseq [[x y] (get-img-coords buff-img)]
      (set-argb buff-img [x y] (get-point img x y)))))


(defn euclidian-argb-distance
  \"Euclidian distance between two [a r g b] colors.\"
  [color1 color2]
  (Math/sqrt (reduce + (map #(square (- %1 %2))
                            (get-rgb-only color1)
                            (get-rgb-only color2)))))


(defn get-grayscale-values
  \"Returns a lazy sequence of the grayscale value of the Image's pixels.\"
  #^{:arglists [img]}
  [img]
  {:pre [(image? img)]}
  (Image.  (vec (map #(fn [argb]
                          (let [gv (int (mean (rest argb)))] ; grayscale value
                            [(first argb) gv gv gv]))  
                     (:points img))) 
           (:width img)))


(defn get-binarized-values
  \"Returns a lazy sequence of the binarized value of the image's pixels.
      If pixel < threshold, then pixel=BLACK (0) else pixel=WHITE (255).\"
  #^{:arglists [img threshold]}
  [img threshold]
  (map #(if (< % threshold) 0 255) (get-grayscale-values img)))


;(defn vertical-histogram
;  \"Doc\"
;  #^{:arglists [img]}
;  [img]
;  )
;  TODO: partition & interleave

;(def img-path \"/home/boechat/Dropbox/Documents/Coding/Hough_transform/straight_lines.png\")
;(def buffered-image (ImageIO/read (File. img-path)))
") "image-processing.core" :repl-thread 2326)

[-Received-] 1005.44
(:write-string "#'image-processing.core/get-binarized-values
" :repl-result)
[-Received-] 1005.44
(:indentation-update (("with-bindings" . 0)))
[-Received-] 1005.44
(:return (:ok nil) 2326)
[Actionlist] 1005.44
2326: finished :listener-eval 
params: nil
[---Sent---] 1005.56
(:emacs-rex (swank:compile-file-for-emacs "/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj" t) "image-processing.core" t 2327)

[-Received-] 1005.57
(:indentation-update (("with-bindings" . 1)))
[-Received-] 1005.57
(:return (:ok (:compilation-result nil "#'image-processing.core/get-binarized-values" 0.091225987)) 2327)
[Actionlist] 1005.57
2327: finished :compile-file-for-emacs 
params: [':compilation-result', 'nil', '"#\'image-processing.core/get-binarized-values"', '0.091225987']
[---Sent---] 1006.63
(:emacs-rex (swank:operator-arglist "import" "image-processing.core") "image-processing.core" t 2328)

[-Received-] 1006.63
(:indentation-update (("with-bindings" . 0)))
[-Received-] 1006.63
(:return (:ok "([& import-symbols-or-lists])") 2328)
[Actionlist] 1006.63
2328: finished :operator-arglist 
params: "([& import-symbols-or-lists])"
[---Sent---] 1011.47
(:emacs-rex (swank:operator-arglist "import" "image-processing.core") "image-processing.core" t 2329)

[-Received-] 1011.47
(:indentation-update (("with-bindings" . 1)))
[-Received-] 1011.47
(:return (:ok "([& import-symbols-or-lists])") 2329)
[Actionlist] 1011.47
2329: finished :operator-arglist 
params: "([& import-symbols-or-lists])"
[---Sent---] 1011.84
(:emacs-rex (swank:operator-arglist "import" "image-processing.core") "image-processing.core" t 2330)

[-Received-] 1011.84
(:indentation-update (("with-bindings" . 0)))
[-Received-] 1011.84
(:return (:ok "([& import-symbols-or-lists])") 2330)
[Actionlist] 1011.84
2330: finished :operator-arglist 
params: "([& import-symbols-or-lists])"
[---Sent---] 1011.97
(:emacs-rex (swank:listener-eval "(import [javax.imageio ImageIO] [java.io File])
") "image-processing.core" :repl-thread 2331)

[-Received-] 1011.98
(:write-string "java.io.File
" :repl-result)
[-Received-] 1012.04
(:indentation-update (("with-bindings" . 1)))
[-Received-] 1012.04
(:return (:ok nil) 2331)
[Actionlist] 1012.04
2331: finished :listener-eval 
params: nil
[---Sent---] 1012.91
(:emacs-rex (swank:operator-arglist "ImageIO" "image-processing.core") "image-processing.core" t 2332)

[-Received-] 1012.92
(:indentation-update (("with-bindings" . 0)))
[-Received-] 1012.92
(:return (:ok nil) 2332)
[Actionlist] 1012.92
2332: finished :operator-arglist 
params: nil
[---Sent---] 1013.09
(:emacs-rex (swank:listener-eval "(def x (map #(ImageIO/read (File. %)) 
            '(\"test/image_processing/test/1a7r.gif\" 
              \"test/image_processing/test/1azc.gif\")))
") "image-processing.core" :repl-thread 2333)

[-Received-] 1013.09
(:write-string "#'image-processing.core/x
" :repl-result)
[-Received-] 1013.15
(:indentation-update (("with-bindings" . 1)))
[-Received-] 1013.15
(:return (:ok nil) 2333)
[Actionlist] 1013.15
2333: finished :listener-eval 
params: nil
[---Sent---] 1013.4
(:emacs-rex (swank:fuzzy-completions "convert-" "image-processing.core" :limit 200 :time-limit-in-msec 2000) nil t 2334)

[-Received-] 1013.41
(:indentation-update (("with-bindings" . 0)))
[-Received-] 1013.41
(:return (:ok ((("convert-buffImg-to-image" "89.03" ((0 "convert-")) "-f------") ("convert-image-to-buffImg" "89.03" ((0 "convert-")) "-f------")) nil)) 2334)
[Actionlist] 1013.41
2334: finished :fuzzy-completions 
params: [[['"convert-buffImg-to-image"', '"89.03"', [['0', '"convert-"']], '"-f------"'], ['"convert-image-to-buffImg"', '"89.03"', [['0', '"convert-"']], '"-f------"']], 'nil']
[---Sent---] 1013.43
(:emacs-rex (swank:operator-arglist "convert-buffImg-to-image" "image-processing.core") "image-processing.core" t 2335)

[-Received-] 1013.43
(:indentation-update (("with-bindings" . 1)))
[-Received-] 1013.43
(:return (:ok "([buffered-image])") 2335)
[Actionlist] 1013.43
2335: finished :operator-arglist 
params: "([buffered-image])"
[---Sent---] 1013.6
(:emacs-rex (swank:operator-arglist "first" "image-processing.core") "image-processing.core" t 2336)

[-Received-] 1013.6
(:indentation-update (("with-bindings" . 0)))
[-Received-] 1013.6
(:return (:ok "([coll])") 2336)
[Actionlist] 1013.6
2336: finished :operator-arglist 
params: "([coll])"
[---Sent---] 1013.75
(:emacs-rex (swank:operator-arglist "def" "image-processing.core") "image-processing.core" t 2337)

[-Received-] 1013.75
(:indentation-update (("with-bindings" . 1)))
[-Received-] 1013.75
(:return (:ok nil) 2337)
[Actionlist] 1013.75
2337: finished :operator-arglist 
params: nil
[---Sent---] 1013.87
(:emacs-rex (swank:listener-eval "(def z (convert-buffImg-to-image (first x))) 
") "image-processing.core" :repl-thread 2338)

[-Received-] 1013.91
(:write-string "#'image-processing.core/z
" :repl-result)
[-Received-] 1013.91
(:indentation-update (("with-bindings" . 0)))
[-Received-] 1013.91
(:return (:ok nil) 2338)
[Actionlist] 1013.91
2338: finished :listener-eval 
params: nil
[---Sent---] 1014.08
(:emacs-rex (swank:operator-arglist "type" "image-processing.core") "image-processing.core" t 2339)

[-Received-] 1014.08
(:indentation-update (("with-bindings" . 1)))
[-Received-] 1014.08
(:return (:ok "([x])") 2339)
[Actionlist] 1014.08
2339: finished :operator-arglist 
params: "([x])"
[---Sent---] 1014.16
(:emacs-rex (swank:listener-eval "(type z) 
") "image-processing.core" :repl-thread 2340)

[-Received-] 1014.16
(:write-string "image_processing.image.Image
" :repl-result)
[-Received-] 1014.23
(:indentation-update (("with-bindings" . 0)))
[-Received-] 1014.23
(:return (:ok nil) 2340)
[Actionlist] 1014.23
2340: finished :listener-eval 
params: nil
[---Sent---] 1014.36
(:emacs-rex (swank:listener-eval "z 
") "image-processing.core" :repl-thread 2341)

[-Received-] 1014.41
(:write-string "#image_processing.image.Image{:points ([255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 255] [255 153 204 204] [255 204 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 153 204 204] [255 204 255 204] [255 153 204 153] [255 204 204 204] [255 153 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 204] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 204] [255 255 255 255] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 153 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 153] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 255 255 255] [255 204 204 204] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 255 255] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 102 153 102] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 255 255 255] [255 255 255 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 255 255 255] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 153 204 204] [255 255 255 255] [255 204 255 204] [255 204 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 153 153 153] [255 102 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 102 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 102 153 102] [255 153 204 204] [255 153 204 204] [255 204 255 255] [255 204 255 255] [255 255 255 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 255 255 255] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 153 204 204] [255 204 255 255] [255 204 255 255] [255 204 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 102 153 153] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 255] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 153 204 204] [255 204 255 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 153] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 255 255 255] [255 204 255 255] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 255 255 204] [255 204 255 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 153 153 153] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 153 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 255 255 255] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 204] [255 153 153 153] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 153 204 204] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 153] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 153 204] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 204] [255 153 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 153 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 255 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 153 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 204 255] [255 204 204 204] [255 204 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 153] [255 204 204 204] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 255 255 255] [255 255 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 153 204 204] [255 204 204 255] [255 153 204 204] [255 204 255 255] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 204 204 204] [255 204 255 204] [255 204 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 255 255] [255 204 204 255] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 153 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 255 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 153 153 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 153] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 153 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 204 153 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 102 102 102] [255 153 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 153 204 204] [255 153 204 204] [255 204 204 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 153 153 204] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 153 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 255 204 204] [255 204 204 204] [255 204 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 153 153 204] [255 102 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 153 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 102 102 102] [255 153 204 153] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 153 204 204] [255 204 204 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 102 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 255 255 255] [255 204 204 204] [255 153 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 102 102 102] [255 153 153 153] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 153 204 204] [255 153 153 204] [255 153 204 204] [255 153 153 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 102 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 153 204 204] [255 153 153 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 255 255 255] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 153 204 204] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 255 255] [255 204 204 255] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 153 204 204] [255 153 153 204] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 255 255 255] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 255] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 255 255 255] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 204 204 204] [255 204 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 255 255 255] [255 153 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 255 255 255] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 153 204 153] [255 153 153 153] [255 204 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 204 255 255] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 153] [255 255 255 255] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 153] [255 153 153 102] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 204] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 204 204] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 153 153 204] [255 153 153 204] [255 153 153 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 255 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 153 153 153] [255 204 204 255] [255 204 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 153 204 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 102 153 153] [255 153 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 153 153 204] [255 153 153 153] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 204] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 153 153 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 204 204 255] [255 204 153 204] [255 204 204 255] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 204] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 255] [255 153 204 204] [255 102 153 153] [255 153 153 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 153 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 153] [255 102 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 204] [255 255 204 255] [255 255 255 255] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 255] [255 102 153 153] [255 153 153 153] [255 102 153 153] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 204 255 255] [255 204 204 153] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 153 204 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 204 153 204] [255 204 204 255] [255 153 153 204] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 204 204] [255 102 153 153] [255 153 153 204] [255 153 153 153] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 153 153 204] [255 153 153 204] [255 102 153 153] [255 153 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 153 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 153 153 204] [255 102 102 153] [255 153 204 204] [255 204 204 255] [255 255 204 255] [255 255 204 204] [255 255 255 255] [255 255 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 255 255 255] [255 255 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 153 153 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 153] [255 153 204 204] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 153] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 255 255 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 204 153 204] [255 204 204 255] [255 204 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 102 102 153] [255 153 153 204] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 204 153 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 153 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 153 153 204] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 153 153 153] [255 0 0 0] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 102 153 153] [255 153 204 204] [255 153 153 153] [255 204 255 255] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 204 153 204] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 204] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 153] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 153 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 255 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 153 204] [255 153 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 204 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 255] [255 204 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 102 153 153] [255 153 153 153] [255 102 153 153] [255 204 255 255] [255 153 204 204] [255 153 153 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 204 153 204] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 153 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 255 255 255] [255 204 204 255] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 255 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 153 204 204] [255 153 153 204] [255 102 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 204 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 153 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 153 204] [255 204 204 255] [255 153 153 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 102 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 102 153 153] [255 153 153 153] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 153 153 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 204 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 153 153 204] [255 153 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 153 153 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 153 153 153] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 102 153 153] [255 153 153 153] [255 102 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 255 255 255] [255 204 153 204] [255 204 204 204] [255 204 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 255 255] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 153 153 204] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 255 255] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 153 153 204] [255 102 153 153] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 204] [255 204 255 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 153] [255 204 255 204] [255 204 204 153] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 102 102 102] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 102 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 102 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 204 153 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 102 153 153] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 153 153 204] [255 153 204 204] [255 153 153 204] [255 153 204 204] [255 153 153 153] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 204 153 204] [255 204 153 204] [255 153 153 153] [255 153 153 153] [255 204 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 204] [255 102 153 153] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 153] [255 102 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 0 0 0] [255 102 153 153] [255 153 204 204] [255 102 153 153] [255 153 153 204] [255 204 204 204] [255 204 204 255] [255 153 153 153] [255 153 153 153] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 255 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 153 153 204] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 102 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 204] [255 204 255 255] [255 204 204 255] [255 204 204 255] [255 153 153 153] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 255] [255 153 153 153] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 102 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 0 0 0] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 204] [255 153 153 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 153 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 255 204] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 102 153 153] [255 153 153 204] [255 102 153 153] [255 153 153 204] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 204] [255 153 204 204] [255 204 255 204] [255 153 204 153] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 153 204 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 255 204] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 153 153 204] [255 153 153 204] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 204] [255 204 204 204] [255 204 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 204 255 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 0 0 0] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 153 204 204] [255 153 204 153] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 153 153 204] [255 153 153 204] [255 204 204 255] [255 204 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 204 255 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 204] [255 153 153 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 153 153 204] [255 102 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 204] [255 102 153 153] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 204] [255 153 153 204] [255 153 153 153] [255 204 204 255] [255 204 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 204 204 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 255 255] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 204] [255 153 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 153 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 153 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 255 255] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 102 153 153] [255 153 153 204] [255 204 153 204] [255 204 204 255] [255 204 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 204 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 255 255] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 0 0 0] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 255 255] [255 204 255 255] [255 153 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 153 204 204] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 102 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 153 153 204] [255 102 153 153] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 153 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 255 255] [255 204 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 153 204 204] [255 204 255 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 204 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 153 153 204] [255 153 204 204] [255 204 204 255] [255 204 153 204] [255 204 204 204] [255 204 153 204] [255 204 204 255] [255 204 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 102 153 153] [255 153 153 153] [255 153 153 153] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 153 153 204] [255 153 153 204] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 204 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 204 255 255] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 153 204] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 153 153 204] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 204] [255 204 204 255] [255 204 153 204] [255 204 204 255] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 153 153 204] [255 102 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 102 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 102 102 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 255 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 204] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 204] [255 153 153 204] [255 153 153 153] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 153 204 204] [255 204 255 204] [255 204 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 153 204 204] [255 102 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 204] [255 102 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 102 153 153] [255 153 153 204] [255 153 153 204] [255 153 204 204] [255 102 153 153] [255 204 204 204] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 153 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 153 153 204] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 204] [255 204 204 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 204 255 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 153 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 204] [255 102 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 204] [255 153 153 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 153 153 204] [255 102 153 153] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 153 153 204] [255 153 204 204] [255 204 255 255] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 204 255 255] [255 204 255 255] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 153 204 204] [255 204 255 204] [255 153 204 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 204] [255 204 255 204] [255 153 204 153] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 204 204] [255 153 204 204] [255 153 153 204] [255 153 153 204] [255 102 153 153] [255 153 153 204] [255 102 153 153] [255 153 153 204] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 102 153 153] [255 153 204 204] [255 153 153 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 204 153] [255 204 204 204] [255 153 204 204] [255 204 255 204] [255 153 204 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204]), :width 200}
" :repl-result)
[-Received-] 1014.85
(:indentation-update (("with-bindings" . 1)))
[-Received-] 1014.85
(:return (:ok nil) 2341)
[Actionlist] 1014.85
2341: finished :listener-eval 
params: nil
[---Sent---] 1020.59
(:emacs-rex (swank:listener-eval "
") "image-processing.core" :repl-thread 2342)

[-Received-] 1023.21
(:write-string "nil
" :repl-result)
[-Received-] 1023.21
(:indentation-update (("with-bindings" . 0)))
[-Received-] 1023.21
(:return (:ok nil) 2342)
[Actionlist] 1023.21
2342: finished :listener-eval 
params: nil
[---Sent---] 1027.9
(:emacs-rex (swank:operator-arglist "204" "image-processing.core") "image-processing.core" t 2343)

[-Received-] 1027.9
(:indentation-update (("with-bindings" . 1)))
[-Received-] 1027.9
(:return (:ok nil) 2343)
[Actionlist] 1027.9
2343: finished :operator-arglist 
params: nil
[---Sent---] 1028.1
(:emacs-rex (swank:listener-eval "
") "image-processing.core" :repl-thread 2344)

[-Received-] 1028.1
(:write-string "nil
" :repl-result)
[-Received-] 1030.71
(:indentation-update (("with-bindings" . 0)))
[-Received-] 1030.71
(:return (:ok nil) 2344)
[Actionlist] 1030.71
2344: finished :listener-eval 
params: nil
[---Sent---] 1033.6
(:emacs-rex (swank:operator-arglist "[" "image-processing.core") "image-processing.core" t 2345)

[-Received-] 1033.6
(:indentation-update (("with-bindings" . 1)))
[-Received-] 1033.61
(:return (:ok nil) 2345)
[Actionlist] 1033.61
2345: finished :operator-arglist 
params: nil
[---Sent---] 1033.79
(:emacs-rex (swank:operator-arglist "def" "image-processing.core") "image-processing.core" t 2346)

[-Received-] 1033.79
(:indentation-update (("with-bindings" . 0)))
[-Received-] 1033.79
(:return (:ok nil) 2346)
[Actionlist] 1033.79
2346: finished :operator-arglist 
params: nil
[---Sent---] 1034.33
(:emacs-rex (swank:operator-arglist "buff-img" "image-processing.core") "image-processing.core" t 2347)

[-Received-] 1034.35
(:indentation-update (("with-bindings" . 1)))
[-Received-] 1034.35
(:return (:ok nil) 2347)
[Actionlist] 1034.35
2347: finished :operator-arglist 
params: nil
[---Sent---] 1034.43
(:emacs-rex (swank:operator-arglist "buff-img" "image-processing.core") "image-processing.core" t 2348)

[-Received-] 1034.44
(:indentation-update (("with-bindings" . 0)))
[-Received-] 1034.44
(:return (:ok nil) 2348)
[Actionlist] 1034.44
2348: finished :operator-arglist 
params: nil
[---Sent---] 1034.45
(:emacs-rex (swank:operator-arglist "buff-img" "image-processing.core") "image-processing.core" t 2349)

[-Received-] 1034.46
(:indentation-update (("with-bindings" . 1)))
[-Received-] 1034.47
(:return (:ok nil) 2349)
[Actionlist] 1034.47
2349: finished :operator-arglist 
params: nil
[---Sent---] 1035.59
(:emacs-rex (swank:operator-arglist "threshold" "image-processing.core") "image-processing.core" t 2350)

[-Received-] 1035.6
(:indentation-update (("with-bindings" . 0)))
[-Received-] 1035.6
(:return (:ok nil) 2350)
[Actionlist] 1035.6
2350: finished :operator-arglist 
params: nil
[---Sent---] 1035.7
(:emacs-rex (swank:operator-arglist "let" "image-processing.core") "image-processing.core" t 2351)

[-Received-] 1035.71
(:indentation-update (("with-bindings" . 1)))
[-Received-] 1035.71
(:return (:ok "([bindings & body])") 2351)
[Actionlist] 1035.71
2351: finished :operator-arglist 
params: "([bindings & body])"
[---Sent---] 1035.71
(:emacs-rex (swank:describe-function "let") "image-processing.core" t 2352)

[-Received-] 1035.71
(:indentation-update (("with-bindings" . 0)))
[-Received-] 1035.71
(:return (:ok "-------------------------
clojure.core/let
  (let [bindings*] exprs*)
Special Form
  binding => binding-form init-expr

  Evaluates the exprs in a lexical context in which the symbols in
  the binding-forms are bound to their respective init-exprs or parts
  therein.

  Please see http://clojure.org/special_forms#let
") 2352)
[Actionlist] 1035.71
2352: finished :describe-function 
params: "-------------------------
clojure.core/let
  (let [bindings*] exprs*)
Special Form
  binding => binding-form init-expr

  Evaluates the exprs in a lexical context in which the symbols in
  the binding-forms are bound to their respective init-exprs or parts
  therein.

  Please see http://clojure.org/special_forms#let
"
[---Sent---] 1035.79
(:emacs-rex (swank:operator-arglist ")))" "image-processing.core") "image-processing.core" t 2353)

[-Received-] 1035.8
(:indentation-update (("with-bindings" . 1)))
[-Received-] 1035.8
(:return (:ok nil) 2353)
[Actionlist] 1035.8
2353: finished :operator-arglist 
params: nil
[---Sent---] 1036.54
(:emacs-rex (swank:operator-arglist ":width" "image-processing.core") "image-processing.core" t 2354)

[-Received-] 1036.54
(:indentation-update (("with-bindings" . 0)))
[-Received-] 1036.54
(:return (:ok "([map])") 2354)
[Actionlist] 1036.54
2354: finished :operator-arglist 
params: "([map])"
[---Sent---] 1036.54
(:emacs-rex (swank:describe-function ":width") "image-processing.core" t 2355)

[-Received-] 1036.55
(:indentation-update (("with-bindings" . 1)))
[-Received-] 1036.55
(:return (:ok nil) 2355)
[Actionlist] 1036.55
2355: finished :describe-function 
params: nil
[---Sent---] 1036.83
(:emacs-rex (swank:operator-arglist "%" "image-processing.core") "image-processing.core" t 2356)

[-Received-] 1036.83
(:indentation-update (("with-bindings" . 0)))
[-Received-] 1036.83
(:return (:ok nil) 2356)
[Actionlist] 1036.83
2356: finished :operator-arglist 
params: nil
[---Sent---] 1036.9
(:emacs-rex (swank:operator-arglist "a" "image-processing.core") "image-processing.core" t 2357)

[-Received-] 1036.91
(:indentation-update (("with-bindings" . 1)))
[-Received-] 1036.91
(:return (:ok nil) 2357)
[Actionlist] 1036.91
2357: finished :operator-arglist 
params: nil
[---Sent---] 1037.24
(:emacs-rex (swank:operator-arglist "the" "image-processing.core") "image-processing.core" t 2358)

[-Received-] 1037.25
(:indentation-update (("with-bindings" . 0)))
[-Received-] 1037.25
(:return (:ok nil) 2358)
[Actionlist] 1037.25
2358: finished :operator-arglist 
params: nil
[---Sent---] 1037.71
(:emacs-rex (swank:operator-arglist "def" "image-processing.core") "image-processing.core" t 2359)

[-Received-] 1037.72
(:indentation-update (("with-bindings" . 1)))
[-Received-] 1037.72
(:return (:ok nil) 2359)
[Actionlist] 1037.72
2359: finished :operator-arglist 
params: nil
[---Sent---] 1037.85
(:emacs-rex (swank:operator-arglist "def" "image-processing.core") "image-processing.core" t 2360)

[-Received-] 1037.85
(:indentation-update (("with-bindings" . 0)))
[-Received-] 1037.85
(:return (:ok nil) 2360)
[Actionlist] 1037.85
2360: finished :operator-arglist 
params: nil
[---Sent---] 1038.34
(:emacs-rex (swank:fuzzy-completions "get-grays" "image-processing.core" :limit 200 :time-limit-in-msec 2000) nil t 2361)

[-Received-] 1038.34
(:indentation-update (("with-bindings" . 1)))
[-Received-] 1038.35
(:return (:ok ((("get-grayscale-values" "105.81" ((0 "get-grays")) "-f------")) nil)) 2361)
[Actionlist] 1038.35
2361: finished :fuzzy-completions 
params: [[['"get-grayscale-values"', '"105.81"', [['0', '"get-grays"']], '"-f------"']], 'nil']
[---Sent---] 1038.46
(:emacs-rex (swank:operator-arglist "get-grayscale-values" "image-processing.core") "image-processing.core" t 2362)

[-Received-] 1038.47
(:indentation-update (("with-bindings" . 0)))
[-Received-] 1038.47
(:return (:ok "([img])") 2362)
[Actionlist] 1038.47
2362: finished :operator-arglist 
params: "([img])"
[---Sent---] 1038.69
(:emacs-rex (swank:listener-eval "(def y (get-grayscale-values z))
") "image-processing.core" :repl-thread 2363)

[-Received-] 1042.75
(:debug 1 1 ("Wrong number of args (1) passed to: core$get-grayscale-values$fn" "  [Thrown class clojure.lang.ArityException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "       AFn.java:437 clojure.lang.AFn.throwArity" (:restartable nil)) (1 "        AFn.java:39 clojure.lang.AFn.invoke" (:restartable nil)) (2 "      core.clj:2430 clojure.core/map[fn]" (:restartable nil)) (3 "    LazySeq.java:42 clojure.lang.LazySeq.sval" (:restartable nil)) (4 "    LazySeq.java:60 clojure.lang.LazySeq.seq" (:restartable nil)) (5 "        RT.java:466 clojure.lang.RT.seq" (:restartable nil)) (6 "LazilyPersistentVector.java:31 clojure.lang.LazilyPersistentVector.create" (:restartable nil)) (7 "       core.clj:345 clojure.core/vec" (:restartable nil)) (8 "        core.clj:95 image-processing.core/get-grayscale-values" (:restartable nil)) (9 "       AFn.java:161 clojure.lang.AFn.applyToHelper" (:restartable nil))) (nil))
[-Received-] 1042.76
(:debug-activate 1 1 nil)
[---Sent---] 1047.05
(:emacs-rex (swank:operator-arglist "argb" "image-processing.core") "image-processing.core" t 2364)

[-Received-] 1047.06
(:indentation-update (("with-bindings" . 1)))
[-Received-] 1047.06
(:return (:ok nil) 2364)
[Actionlist] 1047.06
2363: pending  :listener-eval 
2364: finished :operator-arglist 
params: nil
[---Sent---] 1047.31
(:emacs-rex (swank:operator-arglist "argb" "image-processing.core") "image-processing.core" t 2365)

[-Received-] 1047.32
(:indentation-update (("with-bindings" . 0)))
[-Received-] 1047.32
(:return (:ok nil) 2365)
[Actionlist] 1047.32
2363: pending  :listener-eval 
2365: finished :operator-arglist 
params: nil
[---Sent---] 1048.01
(:emacs-rex (swank:throw-to-toplevel) nil 1 2366)

[-Received-] 1048.02
(:return (:abort) 2366)
[Actionlist] 1048.02
2363: pending  :listener-eval 
2366: finished :throw-to-toplevel 
[-Received-] 1048.02
(:debug-return 1 1 nil)
[-Received-] 1048.02
(:return (:abort) 2363)
[Actionlist] 1048.03
2363: finished :listener-eval 
2366: finished :throw-to-toplevel 
[---Sent---] 1051.87
(:emacs-rex (swank:operator-arglist ":points" "image-processing.core") "image-processing.core" t 2367)

[-Received-] 1051.88
(:indentation-update (("with-bindings" . 1)))
[-Received-] 1051.88
(:return (:ok "([map])") 2367)
[Actionlist] 1051.88
2367: finished :operator-arglist 
params: "([map])"
[---Sent---] 1051.89
(:emacs-rex (swank:describe-function ":points") "image-processing.core" t 2368)

[-Received-] 1051.9
(:indentation-update (("with-bindings" . 0)))
[-Received-] 1051.9
(:return (:ok nil) 2368)
[Actionlist] 1051.9
2368: finished :describe-function 
params: nil
[---Sent---] 1052.33
(:emacs-rex (swank:operator-arglist "fn" "image-processing.core") "image-processing.core" t 2369)

[-Received-] 1052.34
(:indentation-update (("with-bindings" . 1)))
[-Received-] 1052.34
(:return (:ok "([& sigs])") 2369)
[Actionlist] 1052.34
2369: finished :operator-arglist 
params: "([& sigs])"
[---Sent---] 1052.34
(:emacs-rex (swank:describe-function "fn") "image-processing.core" t 2370)

[-Received-] 1052.35
(:indentation-update (("with-bindings" . 0)))
[-Received-] 1052.35
(:return (:ok "-------------------------
clojure.core/fn
  (fn name? [params*] exprs*)
  (fn name? ([params*] exprs*) +)
Special Form
  params => positional-params* , or positional-params* & next-param
  positional-param => binding-form
  next-param => binding-form
  name => symbol

  Defines a function

  Please see http://clojure.org/special_forms#fn
") 2370)
[Actionlist] 1052.35
2370: finished :describe-function 
params: "-------------------------
clojure.core/fn
  (fn name? [params*] exprs*)
  (fn name? ([params*] exprs*) +)
Special Form
  params => positional-params* , or positional-params* & next-param
  positional-param => binding-form
  next-param => binding-form
  name => symbol

  Defines a function

  Please see http://clojure.org/special_forms#fn
"
[---Sent---] 1052.44
(:emacs-rex (swank:operator-arglist "img" "image-processing.core") "image-processing.core" t 2371)

[-Received-] 1052.45
(:indentation-update (("with-bindings" . 1)))
[-Received-] 1052.45
(:return (:ok nil) 2371)
[Actionlist] 1052.46
2371: finished :operator-arglist 
params: nil
[---Sent---] 1052.49
(:emacs-rex (swank:operator-arglist ":points" "image-processing.core") "image-processing.core" t 2372)

[-Received-] 1052.49
(:indentation-update (("with-bindings" . 0)))
[-Received-] 1052.49
(:return (:ok "([map])") 2372)
[Actionlist] 1052.49
2372: finished :operator-arglist 
params: "([map])"
[---Sent---] 1052.5
(:emacs-rex (swank:describe-function ":points") "image-processing.core" t 2373)

[-Received-] 1052.51
(:indentation-update (("with-bindings" . 1)))
[-Received-] 1052.51
(:return (:ok nil) 2373)
[Actionlist] 1052.51
2373: finished :describe-function 
params: nil
[---Sent---] 1052.59
(:emacs-rex (swank:operator-arglist "first" "image-processing.core") "image-processing.core" t 2374)

[-Received-] 1052.6
(:indentation-update (("with-bindings" . 0)))
[-Received-] 1052.6
(:return (:ok "([coll])") 2374)
[Actionlist] 1052.6
2374: finished :operator-arglist 
params: "([coll])"
[---Sent---] 1052.6
(:emacs-rex (swank:describe-function "first") "image-processing.core" t 2375)

[-Received-] 1052.61
(:indentation-update (("with-bindings" . 1)))
[-Received-] 1052.61
(:return (:ok "-------------------------
clojure.core/first
([coll])
  Returns the first item in the collection. Calls seq on its
    argument. If coll is nil, returns nil.
") 2375)
[Actionlist] 1052.61
2375: finished :describe-function 
params: "-------------------------
clojure.core/first
([coll])
  Returns the first item in the collection. Calls seq on its
    argument. If coll is nil, returns nil.
"
[---Sent---] 1052.72
(:emacs-rex (swank:operator-arglist ":points" "image-processing.core") "image-processing.core" t 2376)

[-Received-] 1052.73
(:indentation-update (("with-bindings" . 0)))
[-Received-] 1052.73
(:return (:ok "([map])") 2376)
[Actionlist] 1052.73
2376: finished :operator-arglist 
params: "([map])"
[---Sent---] 1052.73
(:emacs-rex (swank:describe-function ":points") "image-processing.core" t 2377)

[-Received-] 1052.73
(:indentation-update (("with-bindings" . 1)))
[-Received-] 1052.74
(:return (:ok nil) 2377)
[Actionlist] 1052.74
2377: finished :describe-function 
params: nil
[---Sent---] 1052.81
(:emacs-rex (swank:operator-arglist "let" "image-processing.core") "image-processing.core" t 2378)

[-Received-] 1052.82
(:indentation-update (("with-bindings" . 0)))
[-Received-] 1052.82
(:return (:ok "([bindings & body])") 2378)
[Actionlist] 1052.82
2378: finished :operator-arglist 
params: "([bindings & body])"
[---Sent---] 1052.82
(:emacs-rex (swank:describe-function "let") "image-processing.core" t 2379)

[-Received-] 1052.83
(:indentation-update (("with-bindings" . 1)))
[-Received-] 1052.83
(:return (:ok "-------------------------
clojure.core/let
  (let [bindings*] exprs*)
Special Form
  binding => binding-form init-expr

  Evaluates the exprs in a lexical context in which the symbols in
  the binding-forms are bound to their respective init-exprs or parts
  therein.

  Please see http://clojure.org/special_forms#let
") 2379)
[Actionlist] 1052.83
2379: finished :describe-function 
params: "-------------------------
clojure.core/let
  (let [bindings*] exprs*)
Special Form
  binding => binding-form init-expr

  Evaluates the exprs in a lexical context in which the symbols in
  the binding-forms are bound to their respective init-exprs or parts
  therein.

  Please see http://clojure.org/special_forms#let
"
[---Sent---] 1052.91
(:emacs-rex (swank:operator-arglist "first" "image-processing.core") "image-processing.core" t 2380)

[-Received-] 1052.91
(:indentation-update (("with-bindings" . 0)))
[-Received-] 1052.91
(:return (:ok "([coll])") 2380)
[Actionlist] 1052.91
2380: finished :operator-arglist 
params: "([coll])"
[---Sent---] 1052.91
(:emacs-rex (swank:describe-function "first") "image-processing.core" t 2381)

[-Received-] 1052.92
(:indentation-update (("with-bindings" . 1)))
[-Received-] 1052.92
(:return (:ok "-------------------------
clojure.core/first
([coll])
  Returns the first item in the collection. Calls seq on its
    argument. If coll is nil, returns nil.
") 2381)
[Actionlist] 1052.92
2381: finished :describe-function 
params: "-------------------------
clojure.core/first
([coll])
  Returns the first item in the collection. Calls seq on its
    argument. If coll is nil, returns nil.
"
[---Sent---] 1053.03
(:emacs-rex (swank:operator-arglist ":points" "image-processing.core") "image-processing.core" t 2382)

[-Received-] 1053.03
(:indentation-update (("with-bindings" . 0)))
[-Received-] 1053.04
(:return (:ok "([map])") 2382)
[Actionlist] 1053.04
2382: finished :operator-arglist 
params: "([map])"
[---Sent---] 1053.04
(:emacs-rex (swank:describe-function ":points") "image-processing.core" t 2383)

[-Received-] 1053.04
(:indentation-update (("with-bindings" . 1)))
[-Received-] 1053.04
(:return (:ok nil) 2383)
[Actionlist] 1053.04
2383: finished :describe-function 
params: nil
[---Sent---] 1053.74
(:emacs-rex (swank:operator-arglist "rest" "image-processing.core") "image-processing.core" t 2384)

[-Received-] 1053.75
(:indentation-update (("with-bindings" . 0)))
[-Received-] 1053.76
(:return (:ok "([coll])") 2384)
[Actionlist] 1053.76
2384: finished :operator-arglist 
params: "([coll])"
[---Sent---] 1053.8
(:emacs-rex (swank:operator-arglist "rest" "image-processing.core") "image-processing.core" t 2385)

[-Received-] 1053.8
(:indentation-update (("with-bindings" . 1)))
[-Received-] 1053.8
(:return (:ok "([coll])") 2385)
[Actionlist] 1053.8
2385: finished :operator-arglist 
params: "([coll])"
[---Sent---] 1053.82
(:emacs-rex (swank:operator-arglist "rest" "image-processing.core") "image-processing.core" t 2386)

[-Received-] 1053.83
(:indentation-update (("with-bindings" . 0)))
[-Received-] 1053.83
(:return (:ok "([coll])") 2386)
[Actionlist] 1053.83
2386: finished :operator-arglist 
params: "([coll])"
[---Sent---] 1053.86
(:emacs-rex (swank:operator-arglist "rest" "image-processing.core") "image-processing.core" t 2387)

[-Received-] 1053.87
(:indentation-update (("with-bindings" . 1)))
[-Received-] 1053.87
(:return (:ok "([coll])") 2387)
[Actionlist] 1053.88
2387: finished :operator-arglist 
params: "([coll])"
[---Sent---] 1053.94
(:emacs-rex (swank:listener-eval "(rest [1 2 3 4])
") "image-processing.core" :repl-thread 2388)

[-Received-] 1053.94
(:write-string "(2 3 4)
" :repl-result)
[-Received-] 1057.96
(:indentation-update (("with-bindings" . 0)))
[-Received-] 1057.96
(:return (:ok nil) 2388)
[Actionlist] 1057.96
2388: finished :listener-eval 
params: nil
[---Sent---] 1061.72
(:emacs-rex (swank:operator-arglist "mean" "image-processing.core") "image-processing.core" t 2389)

[-Received-] 1061.74
(:indentation-update (("with-bindings" . 1)))
[-Received-] 1061.74
(:return (:ok "([coll])") 2389)
[Actionlist] 1061.74
2389: finished :operator-arglist 
params: "([coll])"
[---Sent---] 1061.74
(:emacs-rex (swank:describe-function "mean") "image-processing.core" t 2390)

[-Received-] 1061.75
(:indentation-update (("with-bindings" . 0)))
[-Received-] 1061.75
(:return (:ok "-------------------------
image-processing.basic-math/mean
([coll])
  Returns the mean value of a sequence.
") 2390)
[Actionlist] 1061.75
2390: finished :describe-function 
params: "-------------------------
image-processing.basic-math/mean
([coll])
  Returns the mean value of a sequence.
"
[---Sent---] 1063.19
(:emacs-rex (swank:operator-arglist "threshold" "image-processing.core") "image-processing.core" t 2391)

[-Received-] 1063.2
(:indentation-update (("with-bindings" . 1)))
[-Received-] 1063.2
(:return (:ok nil) 2391)
[Actionlist] 1063.2
2391: finished :operator-arglist 
params: nil
[---Sent---] 1063.25
(:emacs-rex (swank:compile-file-for-emacs "/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj" t) "image-processing.core" t 2392)

[-Received-] 1063.26
(:indentation-update (("with-bindings" . 0)))
[-Received-] 1063.26
(:return (:ok (:compilation-result nil "#'image-processing.core/get-binarized-values" 0.216167058)) 2392)
[Actionlist] 1063.26
2392: finished :compile-file-for-emacs 
params: [':compilation-result', 'nil', '"#\'image-processing.core/get-binarized-values"', '0.216167058']
[---Sent---] 1066.78
(:emacs-rex (swank:compile-file-for-emacs "/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj" t) "image-processing.core" t 2393)

[-Received-] 1066.79
(:indentation-update (("with-bindings" . 1)))
[-Received-] 1066.79
(:return (:ok (:compilation-result nil "#'image-processing.core/get-binarized-values" 0.298664062)) 2393)
[Actionlist] 1066.79
2393: finished :compile-file-for-emacs 
params: [':compilation-result', 'nil', '"#\'image-processing.core/get-binarized-values"', '0.298664062']
[---Sent---] 1071.11
(:emacs-rex (swank:listener-eval "(def y (get-grayscale-values z))
") "image-processing.core" :repl-thread 2394)

[-Received-] 1074.61
(:debug 1 1 ("Wrong number of args (1) passed to: core$get-grayscale-values$fn" "  [Thrown class clojure.lang.ArityException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "       AFn.java:437 clojure.lang.AFn.throwArity" (:restartable nil)) (1 "        AFn.java:39 clojure.lang.AFn.invoke" (:restartable nil)) (2 "      core.clj:2430 clojure.core/map[fn]" (:restartable nil)) (3 "    LazySeq.java:42 clojure.lang.LazySeq.sval" (:restartable nil)) (4 "    LazySeq.java:60 clojure.lang.LazySeq.seq" (:restartable nil)) (5 "        RT.java:466 clojure.lang.RT.seq" (:restartable nil)) (6 "LazilyPersistentVector.java:31 clojure.lang.LazilyPersistentVector.create" (:restartable nil)) (7 "       core.clj:345 clojure.core/vec" (:restartable nil)) (8 "        core.clj:95 image-processing.core/get-grayscale-values" (:restartable nil)) (9 "       AFn.java:161 clojure.lang.AFn.applyToHelper" (:restartable nil))) (nil))
[-Received-] 1074.61
(:debug-activate 1 1 nil)
[---Sent---] 1078.72
(:emacs-rex (swank:throw-to-toplevel) nil 1 2395)

[-Received-] 1078.72
(:return (:abort) 2395)
[Actionlist] 1078.72
2394: pending  :listener-eval 
2395: finished :throw-to-toplevel 
[-Received-] 1078.73
(:debug-return 1 1 nil)
[-Received-] 1078.74
(:return (:abort) 2394)
[Actionlist] 1078.74
2394: finished :listener-eval 
2395: finished :throw-to-toplevel 
[---Sent---] 1082.47
(:emacs-rex (swank:operator-arglist "first" "image-processing.core") "image-processing.core" t 2396)

[-Received-] 1082.47
(:indentation-update (("with-bindings" . 0)))
[-Received-] 1082.48
(:return (:ok "([coll])") 2396)
[Actionlist] 1082.48
2396: finished :operator-arglist 
params: "([coll])"
[---Sent---] 1082.66
(:emacs-rex (swank:operator-arglist ":points" "image-processing.core") "image-processing.core" t 2397)

[-Received-] 1082.66
(:indentation-update (("with-bindings" . 1)))
[-Received-] 1082.66
(:return (:ok "([map])") 2397)
[Actionlist] 1082.66
2397: finished :operator-arglist 
params: "([map])"
[---Sent---] 1082.79
(:emacs-rex (swank:listener-eval "(first (:points z))
") "image-processing.core" :repl-thread 2398)

[-Received-] 1082.8
(:write-string "[255 204 255 204]
" :repl-result)
[-Received-] 1086.82
(:indentation-update (("with-bindings" . 0)))
[-Received-] 1086.82
(:return (:ok nil) 2398)
[Actionlist] 1086.82
2398: finished :listener-eval 
params: nil
[---Sent---] 1090.75
(:emacs-rex (swank:operator-arglist ":points" "image-processing.core") "image-processing.core" t 2399)

[-Received-] 1090.75
(:indentation-update (("with-bindings" . 1)))
[-Received-] 1090.75
(:return (:ok "([map])") 2399)
[Actionlist] 1090.75
2399: finished :operator-arglist 
params: "([map])"
[---Sent---] 1090.75
(:emacs-rex (swank:describe-function ":points") "image-processing.core" t 2400)

[-Received-] 1090.76
(:indentation-update (("with-bindings" . 0)))
[-Received-] 1090.77
(:return (:ok nil) 2400)
[Actionlist] 1090.77
2400: finished :describe-function 
params: nil
[---Sent---] 1091.22
(:emacs-rex (swank:operator-arglist "first" "image-processing.core") "image-processing.core" t 2401)

[-Received-] 1091.23
(:indentation-update (("with-bindings" . 1)))
[-Received-] 1091.23
(:return (:ok "([coll])") 2401)
[Actionlist] 1091.23
2401: finished :operator-arglist 
params: "([coll])"
[---Sent---] 1091.33
(:emacs-rex (swank:listener-eval "(def y (get-grayscale-values (first x)))
") "image-processing.core" :repl-thread 2402)

[-Received-] 1095.44
(:debug 1 1 ("Assert failed: (image? img)" "  [Thrown class java.lang.AssertionError]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "           core.clj:87 image-processing.core/get-grayscale-values" (:restartable nil)) (1 "          AFn.java:161 clojure.lang.AFn.applyToHelper" (:restartable nil)) (2 "          AFn.java:151 clojure.lang.AFn.applyTo" (:restartable nil)) (3 "    Compiler.java:3337 clojure.lang.Compiler$InvokeExpr.eval" (:restartable nil)) (4 "     Compiler.java:375 clojure.lang.Compiler$DefExpr.eval" (:restartable nil)) (5 "    Compiler.java:6470 clojure.lang.Compiler.eval" (:restartable nil)) (6 "    Compiler.java:6431 clojure.lang.Compiler.eval" (:restartable nil)) (7 "         core.clj:2795 clojure.core/eval" (:restartable nil)) (8 "          core.clj:534 swank.core/eval825[fn]" (:restartable nil)) (9 "      MultiFn.java:163 clojure.lang.MultiFn.invoke" (:restartable nil))) (nil))
[-Received-] 1095.45
(:debug-activate 1 1 nil)
[---Sent---] 1099.64
(:emacs-rex (swank:throw-to-toplevel) nil 1 2403)

[-Received-] 1099.64
(:return (:abort) 2403)
[Actionlist] 1099.64
2402: pending  :listener-eval 
2403: finished :throw-to-toplevel 
[-Received-] 1099.64
(:debug-return 1 1 nil)
[-Received-] 1103.67
(:return (:abort) 2402)
[Actionlist] 1103.67
2402: finished :listener-eval 
[---Sent---] 1107.58
(:emacs-rex (swank:operator-arglist "vec" "image-processing.core") "image-processing.core" t 2404)

[-Received-] 1107.59
(:indentation-update (("with-bindings" . 0)))
[-Received-] 1107.59
(:return (:ok "([coll])") 2404)
[Actionlist] 1107.59
2404: finished :operator-arglist 
params: "([coll])"
[---Sent---] 1107.59
(:emacs-rex (swank:describe-function "vec") "image-processing.core" t 2405)

[-Received-] 1107.59
(:indentation-update (("with-bindings" . 1)))
[-Received-] 1107.59
(:return (:ok "-------------------------
clojure.core/vec
([coll])
  Creates a new vector containing the contents of coll.
") 2405)
[Actionlist] 1107.59
2405: finished :describe-function 
params: "-------------------------
clojure.core/vec
([coll])
  Creates a new vector containing the contents of coll.
"
[---Sent---] 1107.65
(:emacs-rex (swank:operator-arglist "map" "image-processing.core") "image-processing.core" t 2406)

[-Received-] 1107.65
(:indentation-update (("with-bindings" . 0)))
[-Received-] 1107.65
(:return (:ok "([f coll] [f c1 c2] [f c1 c2 c3] [f c1 c2 c3 & colls])") 2406)
[Actionlist] 1107.65
2406: finished :operator-arglist 
params: "([f coll] [f c1 c2] [f c1 c2 c3] [f c1 c2 c3 & colls])"
[---Sent---] 1107.66
(:emacs-rex (swank:describe-function "map") "image-processing.core" t 2407)

[-Received-] 1107.66
(:indentation-update (("with-bindings" . 1)))
[-Received-] 1107.66
(:return (:ok "-------------------------
clojure.core/map
([f coll] [f c1 c2] [f c1 c2 c3] [f c1 c2 c3 & colls])
  Returns a lazy sequence consisting of the result of applying f to the
  set of first items of each coll, followed by applying f to the set
  of second items in each coll, until any one of the colls is
  exhausted.  Any remaining items in other colls are ignored. Function
  f should accept number-of-colls arguments.
") 2407)
[Actionlist] 1107.67
2407: finished :describe-function 
params: "-------------------------
clojure.core/map
([f coll] [f c1 c2] [f c1 c2 c3] [f c1 c2 c3 & colls])
  Returns a lazy sequence consisting of the result of applying f to the
  set of first items of each coll, followed by applying f to the set
  of second items in each coll, until any one of the colls is
  exhausted.  Any remaining items in other colls are ignored. Function
  f should accept number-of-colls arguments.
"
[---Sent---] 1107.72
(:emacs-rex (swank:operator-arglist "map" "image-processing.core") "image-processing.core" t 2408)

[-Received-] 1107.73
(:indentation-update (("with-bindings" . 0)))
[-Received-] 1107.73
(:return (:ok "([f coll] [f c1 c2] [f c1 c2 c3] [f c1 c2 c3 & colls])") 2408)
[Actionlist] 1107.73
2408: finished :operator-arglist 
params: "([f coll] [f c1 c2] [f c1 c2 c3] [f c1 c2 c3 & colls])"
[---Sent---] 1107.74
(:emacs-rex (swank:describe-function "map") "image-processing.core" t 2409)

[-Received-] 1107.74
(:indentation-update (("with-bindings" . 1)))
[-Received-] 1107.75
(:return (:ok "-------------------------
clojure.core/map
([f coll] [f c1 c2] [f c1 c2 c3] [f c1 c2 c3 & colls])
  Returns a lazy sequence consisting of the result of applying f to the
  set of first items of each coll, followed by applying f to the set
  of second items in each coll, until any one of the colls is
  exhausted.  Any remaining items in other colls are ignored. Function
  f should accept number-of-colls arguments.
") 2409)
[Actionlist] 1107.75
2409: finished :describe-function 
params: "-------------------------
clojure.core/map
([f coll] [f c1 c2] [f c1 c2 c3] [f c1 c2 c3 & colls])
  Returns a lazy sequence consisting of the result of applying f to the
  set of first items of each coll, followed by applying f to the set
  of second items in each coll, until any one of the colls is
  exhausted.  Any remaining items in other colls are ignored. Function
  f should accept number-of-colls arguments.
"
[---Sent---] 1107.75
(:emacs-rex (swank:operator-arglist "map" "image-processing.core") "image-processing.core" t 2410)

[-Received-] 1107.76
(:indentation-update (("with-bindings" . 0)))
[-Received-] 1107.76
(:return (:ok "([f coll] [f c1 c2] [f c1 c2 c3] [f c1 c2 c3 & colls])") 2410)
[Actionlist] 1107.76
2410: finished :operator-arglist 
params: "([f coll] [f c1 c2] [f c1 c2 c3] [f c1 c2 c3 & colls])"
[---Sent---] 1107.76
(:emacs-rex (swank:describe-function "map") "image-processing.core" t 2411)

[-Received-] 1107.76
(:indentation-update (("with-bindings" . 1)))
[-Received-] 1107.78
(:return (:ok "-------------------------
clojure.core/map
([f coll] [f c1 c2] [f c1 c2 c3] [f c1 c2 c3 & colls])
  Returns a lazy sequence consisting of the result of applying f to the
  set of first items of each coll, followed by applying f to the set
  of second items in each coll, until any one of the colls is
  exhausted.  Any remaining items in other colls are ignored. Function
  f should accept number-of-colls arguments.
") 2411)
[Actionlist] 1107.78
2411: finished :describe-function 
params: "-------------------------
clojure.core/map
([f coll] [f c1 c2] [f c1 c2 c3] [f c1 c2 c3 & colls])
  Returns a lazy sequence consisting of the result of applying f to the
  set of first items of each coll, followed by applying f to the set
  of second items in each coll, until any one of the colls is
  exhausted.  Any remaining items in other colls are ignored. Function
  f should accept number-of-colls arguments.
"
[---Sent---] 1107.79
(:emacs-rex (swank:operator-arglist "map" "image-processing.core") "image-processing.core" t 2412)

[-Received-] 1107.79
(:indentation-update (("with-bindings" . 0)))
[-Received-] 1107.79
(:return (:ok "([f coll] [f c1 c2] [f c1 c2 c3] [f c1 c2 c3 & colls])") 2412)
[Actionlist] 1107.8
2412: finished :operator-arglist 
params: "([f coll] [f c1 c2] [f c1 c2 c3] [f c1 c2 c3 & colls])"
[---Sent---] 1107.8
(:emacs-rex (swank:describe-function "map") "image-processing.core" t 2413)

[-Received-] 1107.8
(:indentation-update (("with-bindings" . 1)))
[-Received-] 1107.8
(:return (:ok "-------------------------
clojure.core/map
([f coll] [f c1 c2] [f c1 c2 c3] [f c1 c2 c3 & colls])
  Returns a lazy sequence consisting of the result of applying f to the
  set of first items of each coll, followed by applying f to the set
  of second items in each coll, until any one of the colls is
  exhausted.  Any remaining items in other colls are ignored. Function
  f should accept number-of-colls arguments.
") 2413)
[Actionlist] 1107.8
2413: finished :describe-function 
params: "-------------------------
clojure.core/map
([f coll] [f c1 c2] [f c1 c2 c3] [f c1 c2 c3 & colls])
  Returns a lazy sequence consisting of the result of applying f to the
  set of first items of each coll, followed by applying f to the set
  of second items in each coll, until any one of the colls is
  exhausted.  Any remaining items in other colls are ignored. Function
  f should accept number-of-colls arguments.
"
[---Sent---] 1107.96
(:emacs-rex (swank:operator-arglist "argb" "image-processing.core") "image-processing.core" t 2414)

[-Received-] 1107.97
(:indentation-update (("with-bindings" . 0)))
[-Received-] 1107.97
(:return (:ok nil) 2414)
[Actionlist] 1107.97
2414: finished :operator-arglist 
params: nil
[---Sent---] 1108.01
(:emacs-rex (swank:operator-arglist "let" "image-processing.core") "image-processing.core" t 2415)

[-Received-] 1108.01
(:indentation-update (("with-bindings" . 1)))
[-Received-] 1108.01
(:return (:ok "([bindings & body])") 2415)
[Actionlist] 1108.01
2415: finished :operator-arglist 
params: "([bindings & body])"
[---Sent---] 1108.01
(:emacs-rex (swank:describe-function "let") "image-processing.core" t 2416)

[-Received-] 1108.02
(:indentation-update (("with-bindings" . 0)))
[-Received-] 1108.03
(:return (:ok "-------------------------
clojure.core/let
  (let [bindings*] exprs*)
Special Form
  binding => binding-form init-expr

  Evaluates the exprs in a lexical context in which the symbols in
  the binding-forms are bound to their respective init-exprs or parts
  therein.

  Please see http://clojure.org/special_forms#let
") 2416)
[Actionlist] 1108.03
2416: finished :describe-function 
params: "-------------------------
clojure.core/let
  (let [bindings*] exprs*)
Special Form
  binding => binding-form init-expr

  Evaluates the exprs in a lexical context in which the symbols in
  the binding-forms are bound to their respective init-exprs or parts
  therein.

  Please see http://clojure.org/special_forms#let
"
[---Sent---] 1108.99
(:emacs-rex (swank:listener-eval "(subvec (:points z) 10)
") "image-processing.core" :repl-thread 2417)

[-Received-] 1112.96
(:debug 1 1 ("clojure.lang.LazySeq cannot be cast to clojure.lang.IPersistentVector" "  [Thrown class java.lang.ClassCastException]" nil) (("QUIT" "Quit to the SLIME top level")) ((0 "      core.clj:3372 clojure.core/subvec" (:restartable nil)) (1 "      core.clj:3370 clojure.core/subvec" (:restartable nil)) (2 "   NO_SOURCE_FILE:1 image-processing.core/eval3107" (:restartable nil)) (3 " Compiler.java:6465 clojure.lang.Compiler.eval" (:restartable nil)) (4 " Compiler.java:6431 clojure.lang.Compiler.eval" (:restartable nil)) (5 "      core.clj:2795 clojure.core/eval" (:restartable nil)) (6 "       core.clj:534 swank.core/eval825[fn]" (:restartable nil)) (7 "   MultiFn.java:163 clojure.lang.MultiFn.invoke" (:restartable nil)) (8 "       basic.clj:55 swank.commands.basic/eval-region" (:restartable nil)) (9 "       basic.clj:45 swank.commands.basic/eval-region" (:restartable nil))) (nil))
[-Received-] 1112.96
(:debug-activate 1 1 nil)
[---Sent---] 1117.23
(:emacs-rex (swank:throw-to-toplevel) nil 1 2418)

[-Received-] 1117.24
(:return (:abort) 2418)
[Actionlist] 1117.24
2417: pending  :listener-eval 
2418: finished :throw-to-toplevel 
[-Received-] 1117.24
(:debug-return 1 1 nil)
[-Received-] 1120.75
(:return (:abort) 2417)
[Actionlist] 1120.75
2417: finished :listener-eval 
[---Sent---] 1125.27
(:emacs-rex (swank:compile-file-for-emacs "/home/boechat/Dropbox2/Documents/Coding/Image_processing/src/image_processing/core.clj" t) "image-processing.core" t 2419)

[-Received-] 1125.29
(:indentation-update (("with-bindings" . 1)))
[-Received-] 1125.29
(:return (:ok (:compilation-result nil "#'image-processing.core/get-binarized-values" 0.156055235)) 2419)
[Actionlist] 1125.29
2419: finished :compile-file-for-emacs 
params: [':compilation-result', 'nil', '"#\'image-processing.core/get-binarized-values"', '0.156055235']
[---Sent---] 1129.78
(:emacs-rex (swank:listener-eval "(def z (convert-buffImg-to-image (first x)))
") "image-processing.core" :repl-thread 2420)

[-Received-] 1133.2
(:write-string "#'image-processing.core/z
" :repl-result)
[-Received-] 1133.2
(:indentation-update (("with-bindings" . 0)))
[-Received-] 1133.2
(:return (:ok nil) 2420)
[Actionlist] 1133.2
2420: finished :listener-eval 
params: nil
[---Sent---] 1137.11
(:emacs-rex (swank:listener-eval "(subvec (:points z) 10)
") "image-processing.core" :repl-thread 2421)

[-Received-] 1140.67
(:write-string "[[255 255 255 255] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 255] [255 153 204 204] [255 204 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 153 204 204] [255 204 255 204] [255 153 204 153] [255 204 204 204] [255 153 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 204] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 204] [255 255 255 255] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 153 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 153] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 255 255 255] [255 204 204 204] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 255 255] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 102 153 102] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 255 255 255] [255 255 255 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 255 255 255] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 153 204 204] [255 255 255 255] [255 204 255 204] [255 204 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 153 153 153] [255 102 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 102 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 102 153 102] [255 153 204 204] [255 153 204 204] [255 204 255 255] [255 204 255 255] [255 255 255 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 255 255 255] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 153 204 204] [255 204 255 255] [255 204 255 255] [255 204 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 102 153 153] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 255] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 153 204 204] [255 204 255 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 153] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 255 255 255] [255 204 255 255] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 255 255 204] [255 204 255 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 153 153 153] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 153 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 255 255 255] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 204] [255 153 153 153] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 153 204 204] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 153] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 153 204] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 204] [255 153 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 153 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 255 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 153 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 204 255] [255 204 204 204] [255 204 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 153] [255 204 204 204] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 255 255 255] [255 255 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 153 204 204] [255 204 204 255] [255 153 204 204] [255 204 255 255] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 204 204 204] [255 204 255 204] [255 204 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 255 255] [255 204 204 255] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 153 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 255 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 153 153 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 153] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 153 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 204 153 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 102 102 102] [255 153 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 153 204 204] [255 153 204 204] [255 204 204 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 153 153 204] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 153 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 255 204 204] [255 204 204 204] [255 204 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 153 153 204] [255 102 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 153 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 102 102 102] [255 153 204 153] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 153 204 204] [255 204 204 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 102 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 255 255 255] [255 204 204 204] [255 153 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 102 102 102] [255 153 153 153] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 153 204 204] [255 153 153 204] [255 153 204 204] [255 153 153 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 102 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 153 204 204] [255 153 153 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 255 255 255] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 153 204 204] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 255 255] [255 204 204 255] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 153 204 204] [255 153 153 204] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 255 255 255] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 255] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 255 255 255] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 204 204 204] [255 204 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 255 255 255] [255 153 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 255 255 255] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 153 204 153] [255 153 153 153] [255 204 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 204 255 255] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 153] [255 255 255 255] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 153] [255 153 153 102] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 204] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 204 204] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 153 153 204] [255 153 153 204] [255 153 153 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 255 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 153 153 153] [255 204 204 255] [255 204 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 153 204 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 102 153 153] [255 153 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 153 153 204] [255 153 153 153] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 204] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 153 153 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 204 204 255] [255 204 153 204] [255 204 204 255] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 204] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 255] [255 153 204 204] [255 102 153 153] [255 153 153 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 153 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 153] [255 102 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 204] [255 255 204 255] [255 255 255 255] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 255] [255 102 153 153] [255 153 153 153] [255 102 153 153] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 204 255 255] [255 204 204 153] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 153 204 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 204 153 204] [255 204 204 255] [255 153 153 204] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 204 204] [255 102 153 153] [255 153 153 204] [255 153 153 153] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 153 153 204] [255 153 153 204] [255 102 153 153] [255 153 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 153 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 153 153 204] [255 102 102 153] [255 153 204 204] [255 204 204 255] [255 255 204 255] [255 255 204 204] [255 255 255 255] [255 255 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 255 255 255] [255 255 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 153 153 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 153] [255 153 204 204] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 153] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 255 255 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 204 153 204] [255 204 204 255] [255 204 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 102 102 153] [255 153 153 204] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 204 153 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 153 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 153 153 204] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 153 153 153] [255 0 0 0] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 102 153 153] [255 153 204 204] [255 153 153 153] [255 204 255 255] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 204 153 204] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 204] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 153] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 153 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 255 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 153 204] [255 153 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 204 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 255] [255 204 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 102 153 153] [255 153 153 153] [255 102 153 153] [255 204 255 255] [255 153 204 204] [255 153 153 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 204 153 204] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 153 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 255 255 255] [255 204 204 255] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 255 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 153 204 204] [255 153 153 204] [255 102 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 204 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 153 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 153 204] [255 204 204 255] [255 153 153 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 102 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 102 153 153] [255 153 153 153] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 153 153 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 204 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 153 153 204] [255 153 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 153 153 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 153 153 153] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 102 153 153] [255 153 153 153] [255 102 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 255 255 255] [255 204 153 204] [255 204 204 204] [255 204 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 255 255] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 153 153 204] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 255 255] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 153 153 204] [255 102 153 153] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 204] [255 204 255 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 153] [255 204 255 204] [255 204 204 153] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 102 102 102] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 102 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 102 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 204 153 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 102 153 153] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 153 153 204] [255 153 204 204] [255 153 153 204] [255 153 204 204] [255 153 153 153] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 204 153 204] [255 204 153 204] [255 153 153 153] [255 153 153 153] [255 204 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 204] [255 102 153 153] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 153] [255 102 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 0 0 0] [255 102 153 153] [255 153 204 204] [255 102 153 153] [255 153 153 204] [255 204 204 204] [255 204 204 255] [255 153 153 153] [255 153 153 153] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 255 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 153 153 204] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 102 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 204] [255 204 255 255] [255 204 204 255] [255 204 204 255] [255 153 153 153] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 255] [255 153 153 153] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 102 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 0 0 0] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 204] [255 153 153 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 153 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 255 204] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 102 153 153] [255 153 153 204] [255 102 153 153] [255 153 153 204] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 204] [255 153 204 204] [255 204 255 204] [255 153 204 153] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 153 204 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 255 204] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 153 153 204] [255 153 153 204] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 204] [255 204 204 204] [255 204 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 204 255 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 0 0 0] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 153 204 204] [255 153 204 153] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 153 153 204] [255 153 153 204] [255 204 204 255] [255 204 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 204 255 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 204] [255 153 153 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 153 153 204] [255 102 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 204] [255 102 153 153] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 204] [255 153 153 204] [255 153 153 153] [255 204 204 255] [255 204 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 204 204 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 255 255] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 204] [255 153 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 153 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 153 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 255 255] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 102 153 153] [255 153 153 204] [255 204 153 204] [255 204 204 255] [255 204 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 204 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 255 255] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 0 0 0] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 255 255] [255 204 255 255] [255 153 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 153 204 204] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 102 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 153 153 204] [255 102 153 153] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 153 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 255 255] [255 204 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 153 204 204] [255 204 255 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 204 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 153 153 204] [255 153 204 204] [255 204 204 255] [255 204 153 204] [255 204 204 204] [255 204 153 204] [255 204 204 255] [255 204 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 102 153 153] [255 153 153 153] [255 153 153 153] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 153 153 204] [255 153 153 204] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 204 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 204 255 255] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 153 204] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 153 153 204] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 204] [255 204 204 255] [255 204 153 204] [255 204 204 255] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 153 153 204] [255 102 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 102 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 102 102 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 255 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 204] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 204] [255 153 153 204] [255 153 153 153] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 153 204 204] [255 204 255 204] [255 204 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 153 204 204] [255 102 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 204] [255 102 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 102 153 153] [255 153 153 204] [255 153 153 204] [255 153 204 204] [255 102 153 153] [255 204 204 204] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 153 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 153 153 204] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 204] [255 204 204 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 204 255 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 153 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 204] [255 102 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 204] [255 153 153 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 153 153 204] [255 102 153 153] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 153 153 204] [255 153 204 204] [255 204 255 255] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 204 255 255] [255 204 255 255] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 153 204 204] [255 204 255 204] [255 153 204 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 204] [255 204 255 204] [255 153 204 153] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 204 204] [255 153 204 204] [255 153 153 204] [255 153 153 204] [255 102 153 153] [255 153 153 204] [255 102 153 153] [255 153 153 204] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 102 153 153] [255 153 204 204] [255 153 153 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 204 153] [255 204 204 204] [255 153 204 204] [255 204 255 204] [255 153 204 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204]]
" :repl-result)
[-Received-] 1141.23
(:indentation-update (("with-bindings" . 1)))
[-Received-] 1141.23
(:return (:ok nil) 2421)
[Actionlist] 1141.23
2421: finished :listener-eval 
params: nil
[---Sent---] 1151.29
(:emacs-rex (swank:operator-arglist "204" "image-processing.core") "image-processing.core" t 2422)

[-Received-] 1151.3
(:indentation-update (("with-bindings" . 0)))
[-Received-] 1151.3
(:return (:ok nil) 2422)
[Actionlist] 1151.3
2422: finished :operator-arglist 
params: nil
[---Sent---] 1158.31
(:emacs-rex (swank:listener-eval "(subvec (:points z) 2)
") "image-processing.core" :repl-thread 2423)

[-Received-] 1166.32
(:write-string "[[255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 255] [255 153 204 204] [255 204 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 153 204 204] [255 204 255 204] [255 153 204 153] [255 204 204 204] [255 153 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 204] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 204] [255 255 255 255] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 153 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 153] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 255 255 255] [255 204 204 204] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 255 255] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 102 153 102] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 255 255 255] [255 255 255 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 255 255 255] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 153 204 204] [255 255 255 255] [255 204 255 204] [255 204 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 153 153 153] [255 102 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 102 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 102 153 102] [255 153 204 204] [255 153 204 204] [255 204 255 255] [255 204 255 255] [255 255 255 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 255 255 255] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 153 204 204] [255 204 255 255] [255 204 255 255] [255 204 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 102 153 153] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 255] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 153 204 204] [255 204 255 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 153] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 255 255 255] [255 204 255 255] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 255 255 204] [255 204 255 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 153 153 153] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 153 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 255 255 255] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 204] [255 153 153 153] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 153 204 204] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 153] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 153 204] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 204] [255 153 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 153 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 255 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 153 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 204 255] [255 204 204 204] [255 204 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 153] [255 204 204 204] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 255 255 255] [255 255 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 153 204 204] [255 204 204 255] [255 153 204 204] [255 204 255 255] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 204 204 204] [255 204 255 204] [255 204 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 255 255] [255 204 204 255] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 153 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 255 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 153 153 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 153] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 153 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 204 153 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 102 102 102] [255 153 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 153 204 204] [255 153 204 204] [255 204 204 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 153 153 204] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 153 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 255 204 204] [255 204 204 204] [255 204 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 153 153 204] [255 102 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 153 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 102 102 102] [255 153 204 153] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 153 204 204] [255 204 204 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 102 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 255 255 255] [255 204 204 204] [255 153 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 102 102 102] [255 153 153 153] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 153 204 204] [255 153 153 204] [255 153 204 204] [255 153 153 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 102 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 153 204 204] [255 153 153 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 255 255 255] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 153 204 204] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 255 255] [255 204 204 255] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 153 204 204] [255 153 153 204] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 255 255 255] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 255] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 255 255 255] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 204 204 204] [255 204 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 255 255 255] [255 153 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 255 255 255] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 153 204 153] [255 153 153 153] [255 204 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 204 255 255] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 153] [255 255 255 255] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 153] [255 153 153 102] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 204] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 204 204] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 153 153 204] [255 153 153 204] [255 153 153 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 255 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 153 153 153] [255 204 204 255] [255 204 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 153 204 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 102 153 153] [255 153 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 153 153 204] [255 153 153 153] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 204] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 153 153 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 204 204 255] [255 204 153 204] [255 204 204 255] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 204] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 255] [255 153 204 204] [255 102 153 153] [255 153 153 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 153 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 153] [255 102 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 204] [255 255 204 255] [255 255 255 255] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 255] [255 102 153 153] [255 153 153 153] [255 102 153 153] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 204 255 255] [255 204 204 153] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 153 204 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 204 153 204] [255 204 204 255] [255 153 153 204] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 204 204] [255 102 153 153] [255 153 153 204] [255 153 153 153] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 153 153 204] [255 153 153 204] [255 102 153 153] [255 153 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 153 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 153 153 204] [255 102 102 153] [255 153 204 204] [255 204 204 255] [255 255 204 255] [255 255 204 204] [255 255 255 255] [255 255 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 255 255 255] [255 255 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 153 153 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 153] [255 153 204 204] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 153] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 255 255 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 204 153 204] [255 204 204 255] [255 204 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 102 102 153] [255 153 153 204] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 204 153 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 153 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 153 153 204] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 153 153 153] [255 0 0 0] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 102 153 153] [255 153 204 204] [255 153 153 153] [255 204 255 255] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 204 153 204] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 204] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 153] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 153 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 255 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 153 204] [255 153 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 204 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 255] [255 204 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 102 153 153] [255 153 153 153] [255 102 153 153] [255 204 255 255] [255 153 204 204] [255 153 153 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 204 153 204] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 153 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 255 255 255] [255 204 204 255] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 255 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 153 204 204] [255 153 153 204] [255 102 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 204 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 153 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 153 204] [255 204 204 255] [255 153 153 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 102 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 102 153 153] [255 153 153 153] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 153 153 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 204 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 153 153 204] [255 153 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 153 153 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 153 153 153] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 102 153 153] [255 153 153 153] [255 102 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 255 255 255] [255 204 153 204] [255 204 204 204] [255 204 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 255 255] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 153 153 204] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 255 255] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 153 153 204] [255 102 153 153] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 204] [255 204 255 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 153] [255 204 255 204] [255 204 204 153] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 102 102 102] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 102 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 102 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 204 153 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 102 153 153] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 153 153 204] [255 153 204 204] [255 153 153 204] [255 153 204 204] [255 153 153 153] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 204 153 204] [255 204 153 204] [255 153 153 153] [255 153 153 153] [255 204 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 204] [255 102 153 153] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 153] [255 102 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 0 0 0] [255 102 153 153] [255 153 204 204] [255 102 153 153] [255 153 153 204] [255 204 204 204] [255 204 204 255] [255 153 153 153] [255 153 153 153] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 255 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 153 153 204] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 102 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 204] [255 204 255 255] [255 204 204 255] [255 204 204 255] [255 153 153 153] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 255] [255 153 153 153] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 102 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 0 0 0] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 204] [255 153 153 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 153 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 255 204] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 102 153 153] [255 153 153 204] [255 102 153 153] [255 153 153 204] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 204] [255 153 204 204] [255 204 255 204] [255 153 204 153] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 153 204 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 255 204] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 153 153 204] [255 153 153 204] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 204] [255 204 204 204] [255 204 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 204 255 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 0 0 0] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 255 255 255] [255 153 204 204] [255 153 204 153] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 153 153 204] [255 153 153 204] [255 204 204 255] [255 204 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 204 255 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 204] [255 153 153 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 153 153 204] [255 102 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 204] [255 102 153 153] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 204] [255 153 153 204] [255 153 153 153] [255 204 204 255] [255 204 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 204 204 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 255 255] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 204] [255 153 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 153 204 153] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 153 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 255 255] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 102 153 153] [255 153 153 204] [255 204 153 204] [255 204 204 255] [255 204 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 0 0 0] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 204 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 255 255] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 0 0 0] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 255 255] [255 204 255 255] [255 153 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 153 204 204] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 102 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 153 153 204] [255 102 153 153] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 153 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 255 255] [255 204 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 153 204 204] [255 204 255 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 153 204 153] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 204 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 153 153 204] [255 153 204 204] [255 204 204 255] [255 204 153 204] [255 204 204 204] [255 204 153 204] [255 204 204 255] [255 204 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 102 153 153] [255 153 153 153] [255 153 153 153] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 153 153 204] [255 153 153 204] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 204 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 204 255 255] [255 153 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 153 204] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 153 153 204] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 153 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 204 204 153] [255 153 153 153] [255 153 204 153] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 204] [255 204 204 255] [255 204 153 204] [255 204 204 255] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 153 153 204] [255 102 153 153] [255 153 153 153] [255 153 153 153] [255 153 204 204] [255 102 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 102 102 153] [255 153 153 153] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 255 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 204] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 204] [255 153 153 204] [255 153 153 153] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 153 204 204] [255 204 255 204] [255 204 204 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 0 0 0] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 153 204 204] [255 102 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 204] [255 102 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 102 153 153] [255 153 153 204] [255 153 153 204] [255 153 204 204] [255 102 153 153] [255 204 204 204] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 153 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 0 0 0] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 153 153 204] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 204] [255 204 204 255] [255 204 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 204 255 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 153 204] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 153 204 204] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 204] [255 102 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 204] [255 153 153 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 153 204] [255 204 204 255] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 153 153 204] [255 102 153 153] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 153 153 204] [255 153 204 204] [255 204 255 255] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 153 204 153] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 204] [255 204 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 255 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 255 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 255 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 153 204 204] [255 153 153 153] [255 153 204 204] [255 204 204 204] [255 204 204 255] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 153 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 255 255] [255 204 255 255] [255 204 255 255] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 204 204 204] [255 204 255 204] [255 153 204 204] [255 153 204 204] [255 204 255 204] [255 153 204 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204] [255 153 204 204] [255 204 255 204] [255 153 204 153] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 255 255 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 255 255] [255 204 204 204] [255 204 204 255] [255 204 204 204] [255 255 204 255] [255 204 204 204] [255 204 204 255] [255 204 204 255] [255 255 255 255] [255 204 204 204] [255 204 255 255] [255 204 204 204] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 153] [255 102 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 153 153] [255 153 153 204] [255 153 204 204] [255 153 204 204] [255 153 153 204] [255 153 153 204] [255 102 153 153] [255 153 153 204] [255 102 153 153] [255 153 153 204] [255 153 153 204] [255 204 204 255] [255 153 153 204] [255 255 255 255] [255 255 255 255] [255 255 204 255] [255 204 153 204] [255 204 204 204] [255 204 204 204] [255 153 204 204] [255 102 153 153] [255 153 204 204] [255 153 153 204] [255 204 204 255] [255 153 204 204] [255 204 204 204] [255 153 153 153] [255 204 204 204] [255 153 153 204] [255 204 204 204] [255 153 204 204] [255 204 204 255] [255 204 204 255] [255 204 204 255] [255 204 204 204] [255 204 204 255] [255 153 204 153] [255 204 204 204] [255 153 204 204] [255 204 255 204] [255 153 204 153] [255 204 204 204] [255 153 204 204] [255 204 204 204] [255 153 204 153] [255 204 204 204]]
" :repl-result)
[-Received-] 1166.86
(:indentation-update (("with-bindings" . 1)))
[-Received-] 1166.86
(:return (:ok nil) 2423)
[Actionlist] 1166.86
2423: finished :listener-eval 
params: nil
[---Sent---] 1209.7
(:emacs-rex (swank:operator-arglist "255" "(ns") "(ns" t 2424)

[-Received-] 1209.71
(:indentation-update (("with-bindings" . 0)))
[-Received-] 1209.71
(:return (:ok nil) 2424)
[Actionlist] 1209.71
2424: finished :operator-arglist 
params: nil
